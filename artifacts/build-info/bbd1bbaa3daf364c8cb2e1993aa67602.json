{
	"id": "bbd1bbaa3daf364c8cb2e1993aa67602",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Presale.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract CarbonFiPresale is Ownable2Step, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // ======== TOKEN CONFIG ========\n    IERC20 public immutable usdt; // USDT di Arbitrum\n    IERC20 public immutable cafi; // CAFI token\n    address public immutable treasury;\n\n    uint256 public constant TOTAL_PRESALE_SUPPLY = 10_000_000 * 1e18; // 1% dari 999.999.999\n    uint256 public constant MAX_BUY_PER_WALLET = 1_000_000 * 1e18;\n    uint256 public constant PRESALE_DURATION = 90 days;\n\n    // ======== STAGE CONFIG ========\n    struct Stage {\n        uint256 totalAmount;\n        uint256 soldAmount;\n        uint256 price; // USDT per 1 CAFI (18 decimals)\n        bool isActive;\n    }\n\n    Stage[] public stages;\n    uint256 public currentStage;\n    uint256 public presaleStartTime;\n    bool public presaleEnded;\n\n    // ======== TRACKING ========\n    uint256 public totalSold;\n    mapping(address => uint256) public userPurchases;\n\n    // ======== EVENTS ========\n    event TokensPurchased(address indexed buyer, uint256 amount, uint256 usdtAmount);\n    event StageAdvanced(uint256 newStage);\n    event PresaleEnded(uint256 totalSold, uint256 remainingBalance);\n    event TokensClaimed(address indexed user, uint256 amount);\n\n    // ======== MODIFIERS ========\n    modifier onlyActivePresale() {\n        require(!presaleEnded, \"Presale sudah berakhir\");\n        require(block.timestamp >= presaleStartTime, \"Presale belum dimulai\");\n        require(block.timestamp <= presaleStartTime + PRESALE_DURATION, \"Presale sudah berakhir\");\n        _;\n    }\n\n    // ======== CONSTRUCTOR ========\n    constructor(\n        address _usdt,\n        address _cafi,\n        address _treasury,\n        address _initialOwner\n    ) Ownable(_initialOwner) {\n        require(_usdt != address(0) && _cafi != address(0) && _treasury != address(0), \"Alamat tidak valid\");\n        \n        usdt = IERC20(_usdt);\n        cafi = IERC20(_cafi);\n        treasury = _treasury;\n\n        // Setup stages\n        stages.push(Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false)); // $0.05\n        stages.push(Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false)); // $0.075\n        stages.push(Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false)); // $0.10\n    }\n\n    // ======== CORE FUNCTIONS ========\n    function startPresale() external onlyOwner {\n        require(presaleStartTime == 0, \"Presale sudah dimulai\");\n        presaleStartTime = block.timestamp;\n        stages[0].isActive = true;\n    }\n\n    function buyTokens(uint256 amount) external nonReentrant onlyActivePresale {\n        require(amount > 0, \"Jumlah tidak valid\");\n        require(\n            userPurchases[msg.sender] + amount <= MAX_BUY_PER_WALLET,\n            \"Melebihi batas pembelian\"\n        );\n\n        Stage storage current = stages[currentStage];\n        require(current.isActive, \"Stage tidak aktif\");\n        require(current.soldAmount + amount <= current.totalAmount, \"Melebihi kuota stage\");\n\n        uint256 usdtAmount = amount * current.price / 1e18;\n        \n        // Transfer USDT dari pembeli\n        usdt.safeTransferFrom(msg.sender, treasury, usdtAmount);\n\n        // Update records\n        current.soldAmount += amount;\n        totalSold += amount;\n        userPurchases[msg.sender] += amount;\n\n        // Auto-claim jika stage selesai\n        if (current.soldAmount >= current.totalAmount) {\n            _advanceStage();\n        }\n\n        emit TokensPurchased(msg.sender, amount, usdtAmount);\n    }\n\n    function claimTokens() external nonReentrant {\n        require(presaleEnded || block.timestamp > presaleStartTime + PRESALE_DURATION, \"Belum bisa claim\");\n        \n        uint256 amount = userPurchases[msg.sender];\n        require(amount > 0, \"Tidak ada token untuk di-claim\");\n\n        userPurchases[msg.sender] = 0;\n        cafi.safeTransfer(msg.sender, amount);\n\n        emit TokensClaimed(msg.sender, amount);\n    }\n\n    // ======== ADMIN FUNCTIONS ========\n    function endPresale() external onlyOwner {\n        require(!presaleEnded, \"Presale sudah diakhiri\");\n        \n        presaleEnded = true;\n        uint256 remaining = cafi.balanceOf(address(this));\n        \n        if (remaining > 0) {\n            cafi.safeTransfer(owner(), remaining);\n        }\n\n        emit PresaleEnded(totalSold, remaining);\n    }\n\n    // ======== INTERNAL FUNCTIONS ========\n    function _advanceStage() internal {\n        stages[currentStage].isActive = false;\n        \n        if (currentStage < stages.length - 1) {\n            currentStage++;\n            stages[currentStage].isActive = true;\n            emit StageAdvanced(currentStage);\n        } else {\n            presaleEnded = true;\n            emit PresaleEnded(totalSold, cafi.balanceOf(address(this)));\n        }\n    }\n\n    // ======== VIEW FUNCTIONS ========\n    function getCurrentStageInfo() external view returns (\n        uint256 stage,\n        uint256 price,\n        uint256 available,\n        uint256 sold\n    ) {\n        Stage memory current = stages[currentStage];\n        return (\n            currentStage,\n            current.price,\n            current.totalAmount - current.soldAmount,\n            current.soldAmount\n        );\n    }\n\n    function getPresaleTimeLeft() external view returns (uint256) {\n        if (presaleStartTime == 0) return 0;\n        if (block.timestamp >= presaleStartTime + PRESALE_DURATION) return 0;\n        return (presaleStartTime + PRESALE_DURATION) - block.timestamp;\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 334,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Presale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Presale.sol": {
				"CarbonFiPresale": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_usdt",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_cafi",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_treasury",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "totalSold",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "remainingBalance",
									"type": "uint256"
								}
							],
							"name": "PresaleEnded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newStage",
									"type": "uint256"
								}
							],
							"name": "StageAdvanced",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "usdtAmount",
									"type": "uint256"
								}
							],
							"name": "TokensPurchased",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_BUY_PER_WALLET",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PRESALE_DURATION",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_PRESALE_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "buyTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cafi",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "currentStage",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "endPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCurrentStageInfo",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "stage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "available",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "sold",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getPresaleTimeLeft",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleEnded",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "presaleStartTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stages",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "totalAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "soldAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "startPresale",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSold",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "treasury",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdt",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "userPurchases",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Presale.sol\":303:5729  contract CarbonFiPresale is Ownable2Step, ReentrancyGuard {... */\n  mstore(0x40, 0xe0)\n    /* \"Presale.sol\":1899:2520  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Presale.sol\":2029:2042  _initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_8\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_9\n  swap2\n  swap1\n  tag_10\n  jump\t// in\ntag_9:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_11\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_12)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x02\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Presale.sol\":2079:2080  0 */\n  0x00\n    /* \"Presale.sol\":2062:2081  _usdt != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Presale.sol\":2062:2067  _usdt */\n  dup5\n    /* \"Presale.sol\":2062:2081  _usdt != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Presale.sol\":2062:2104  _usdt != address(0) && _cafi != address(0) */\n  dup1\n  iszero\n  tag_15\n  jumpi\n  pop\n    /* \"Presale.sol\":2102:2103  0 */\n  0x00\n    /* \"Presale.sol\":2085:2104  _cafi != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Presale.sol\":2085:2090  _cafi */\n  dup4\n    /* \"Presale.sol\":2085:2104  _cafi != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Presale.sol\":2062:2104  _usdt != address(0) && _cafi != address(0) */\ntag_15:\n    /* \"Presale.sol\":2062:2131  _usdt != address(0) && _cafi != address(0) && _treasury != address(0) */\n  dup1\n  iszero\n  tag_16\n  jumpi\n  pop\n    /* \"Presale.sol\":2129:2130  0 */\n  0x00\n    /* \"Presale.sol\":2108:2131  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Presale.sol\":2108:2117  _treasury */\n  dup3\n    /* \"Presale.sol\":2108:2131  _treasury != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n  iszero\n    /* \"Presale.sol\":2062:2131  _usdt != address(0) && _cafi != address(0) && _treasury != address(0) */\ntag_16:\n    /* \"Presale.sol\":2054:2154  require(_usdt != address(0) && _cafi != address(0) && _treasury != address(0), \"Alamat tidak valid\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"Presale.sol\":2187:2192  _usdt */\n  dup4\n    /* \"Presale.sol\":2173:2193  usdt = IERC20(_usdt) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Presale.sol\":2217:2222  _cafi */\n  dup3\n    /* \"Presale.sol\":2203:2223  cafi = IERC20(_cafi) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xa0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Presale.sol\":2244:2253  _treasury */\n  dup2\n    /* \"Presale.sol\":2233:2253  treasury = _treasury */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xc0\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Presale.sol\":2288:2294  stages */\n  0x03\n    /* \"Presale.sol\":2300:2346  Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false) */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Presale.sol\":2306:2322  4_000_000 * 1e18 */\n  0x034f086f3b33b684000000\n    /* \"Presale.sol\":2300:2346  Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2324:2325  0 */\n  0x00\n    /* \"Presale.sol\":2300:2346  Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2327:2338  0.05 * 1e18 */\n  0xb1a2bc2ec50000\n    /* \"Presale.sol\":2300:2346  Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2340:2345  false */\n  0x00\n    /* \"Presale.sol\":2300:2346  Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false) */\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n    /* \"Presale.sol\":2288:2347  stages.push(Stage(4_000_000 * 1e18, 0, 0.05 * 1e18, false)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"Presale.sol\":2366:2372  stages */\n  0x03\n    /* \"Presale.sol\":2378:2425  Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false) */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Presale.sol\":2384:2400  3_000_000 * 1e18 */\n  0x027b46536c66c8e3000000\n    /* \"Presale.sol\":2378:2425  Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2402:2403  0 */\n  0x00\n    /* \"Presale.sol\":2378:2425  Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2405:2417  0.075 * 1e18 */\n  0x010a741a46278000\n    /* \"Presale.sol\":2378:2425  Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2419:2424  false */\n  0x00\n    /* \"Presale.sol\":2378:2425  Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false) */\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n    /* \"Presale.sol\":2366:2426  stages.push(Stage(3_000_000 * 1e18, 0, 0.075 * 1e18, false)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"Presale.sol\":2446:2452  stages */\n  0x03\n    /* \"Presale.sol\":2458:2503  Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false) */\n  mload(0x40)\n  dup1\n  0x80\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Presale.sol\":2464:2480  3_000_000 * 1e18 */\n  0x027b46536c66c8e3000000\n    /* \"Presale.sol\":2458:2503  Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2482:2483  0 */\n  0x00\n    /* \"Presale.sol\":2458:2503  Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2485:2495  0.1 * 1e18 */\n  0x016345785d8a0000\n    /* \"Presale.sol\":2458:2503  Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false) */\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Presale.sol\":2497:2502  false */\n  0x00\n    /* \"Presale.sol\":2458:2503  Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false) */\n  iszero\n  iszero\n  dup2\n  mstore\n  pop\n    /* \"Presale.sol\":2446:2504  stages.push(Stage(3_000_000 * 1e18, 0, 0.1 * 1e18, false)) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x04\n  mul\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  pop\n  0x00\n  dup3\n  add\n  mload\n  dup2\n  0x00\n  add\n  sstore\n  0x20\n  dup3\n  add\n  mload\n  dup2\n  0x01\n  add\n  sstore\n  0x40\n  dup3\n  add\n  mload\n  dup2\n  0x02\n  add\n  sstore\n  0x60\n  dup3\n  add\n  mload\n  dup2\n  0x03\n  add\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n  pop\n  pop\n    /* \"Presale.sol\":1899:2520  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"Presale.sol\":303:5729  contract CarbonFiPresale is Ownable2Step, ReentrancyGuard {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2100:2113  _pendingOwner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2093:2113  delete _pendingOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n  tag_25\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2148:2156  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2147  super._transferOwnership */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_29:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_31:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_32:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_45\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_31\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_33:\n    /* \"#utility.yul\":641:665   */\n  tag_47\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_32\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_48\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_48:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_34:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_50\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_33\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1665   */\ntag_3:\n    /* \"#utility.yul\":942:948   */\n  0x00\n    /* \"#utility.yul\":950:956   */\n  0x00\n    /* \"#utility.yul\":958:964   */\n  0x00\n    /* \"#utility.yul\":966:972   */\n  0x00\n    /* \"#utility.yul\":1015:1018   */\n  0x80\n    /* \"#utility.yul\":1003:1012   */\n  dup6\n    /* \"#utility.yul\":994:1001   */\n  dup8\n    /* \"#utility.yul\":990:1013   */\n  sub\n    /* \"#utility.yul\":986:1019   */\n  slt\n    /* \"#utility.yul\":983:1103   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":1022:1101   */\n  tag_53\n  tag_29\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":983:1103   */\ntag_52:\n    /* \"#utility.yul\":1142:1143   */\n  0x00\n    /* \"#utility.yul\":1167:1231   */\n  tag_54\n    /* \"#utility.yul\":1223:1230   */\n  dup8\n    /* \"#utility.yul\":1214:1220   */\n  dup3\n    /* \"#utility.yul\":1203:1212   */\n  dup9\n    /* \"#utility.yul\":1199:1221   */\n  add\n    /* \"#utility.yul\":1167:1231   */\n  tag_34\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":1157:1231   */\n  swap5\n  pop\n    /* \"#utility.yul\":1113:1241   */\n  pop\n    /* \"#utility.yul\":1280:1282   */\n  0x20\n    /* \"#utility.yul\":1306:1370   */\n  tag_55\n    /* \"#utility.yul\":1362:1369   */\n  dup8\n    /* \"#utility.yul\":1353:1359   */\n  dup3\n    /* \"#utility.yul\":1342:1351   */\n  dup9\n    /* \"#utility.yul\":1338:1360   */\n  add\n    /* \"#utility.yul\":1306:1370   */\n  tag_34\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1296:1370   */\n  swap4\n  pop\n    /* \"#utility.yul\":1251:1380   */\n  pop\n    /* \"#utility.yul\":1419:1421   */\n  0x40\n    /* \"#utility.yul\":1445:1509   */\n  tag_56\n    /* \"#utility.yul\":1501:1508   */\n  dup8\n    /* \"#utility.yul\":1492:1498   */\n  dup3\n    /* \"#utility.yul\":1481:1490   */\n  dup9\n    /* \"#utility.yul\":1477:1499   */\n  add\n    /* \"#utility.yul\":1445:1509   */\n  tag_34\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1435:1509   */\n  swap3\n  pop\n    /* \"#utility.yul\":1390:1519   */\n  pop\n    /* \"#utility.yul\":1558:1560   */\n  0x60\n    /* \"#utility.yul\":1584:1648   */\n  tag_57\n    /* \"#utility.yul\":1640:1647   */\n  dup8\n    /* \"#utility.yul\":1631:1637   */\n  dup3\n    /* \"#utility.yul\":1620:1629   */\n  dup9\n    /* \"#utility.yul\":1616:1638   */\n  add\n    /* \"#utility.yul\":1584:1648   */\n  tag_34\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1574:1648   */\n  swap2\n  pop\n    /* \"#utility.yul\":1529:1658   */\n  pop\n    /* \"#utility.yul\":845:1665   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1671:1789   */\ntag_35:\n    /* \"#utility.yul\":1758:1782   */\n  tag_59\n    /* \"#utility.yul\":1776:1781   */\n  dup2\n    /* \"#utility.yul\":1758:1782   */\n  tag_32\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1753:1756   */\n  dup3\n    /* \"#utility.yul\":1746:1783   */\n  mstore\n    /* \"#utility.yul\":1671:1789   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1795:2017   */\ntag_10:\n    /* \"#utility.yul\":1888:1892   */\n  0x00\n    /* \"#utility.yul\":1926:1928   */\n  0x20\n    /* \"#utility.yul\":1915:1924   */\n  dup3\n    /* \"#utility.yul\":1911:1929   */\n  add\n    /* \"#utility.yul\":1903:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1939:2010   */\n  tag_61\n    /* \"#utility.yul\":2007:2008   */\n  0x00\n    /* \"#utility.yul\":1996:2005   */\n  dup4\n    /* \"#utility.yul\":1992:2009   */\n  add\n    /* \"#utility.yul\":1983:1989   */\n  dup5\n    /* \"#utility.yul\":1939:2010   */\n  tag_35\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1795:2017   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2023:2192   */\ntag_36:\n    /* \"#utility.yul\":2107:2118   */\n  0x00\n    /* \"#utility.yul\":2141:2147   */\n  dup3\n    /* \"#utility.yul\":2136:2139   */\n  dup3\n    /* \"#utility.yul\":2129:2148   */\n  mstore\n    /* \"#utility.yul\":2181:2185   */\n  0x20\n    /* \"#utility.yul\":2176:2179   */\n  dup3\n    /* \"#utility.yul\":2172:2186   */\n  add\n    /* \"#utility.yul\":2157:2186   */\n  swap1\n  pop\n    /* \"#utility.yul\":2023:2192   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2198:2366   */\ntag_37:\n    /* \"#utility.yul\":2338:2358   */\n  0x416c616d617420746964616b2076616c69640000000000000000000000000000\n    /* \"#utility.yul\":2334:2335   */\n  0x00\n    /* \"#utility.yul\":2326:2332   */\n  dup3\n    /* \"#utility.yul\":2322:2336   */\n  add\n    /* \"#utility.yul\":2315:2359   */\n  mstore\n    /* \"#utility.yul\":2198:2366   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2372:2738   */\ntag_38:\n    /* \"#utility.yul\":2514:2517   */\n  0x00\n    /* \"#utility.yul\":2535:2602   */\n  tag_65\n    /* \"#utility.yul\":2599:2601   */\n  0x12\n    /* \"#utility.yul\":2594:2597   */\n  dup4\n    /* \"#utility.yul\":2535:2602   */\n  tag_36\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2528:2602   */\n  swap2\n  pop\n    /* \"#utility.yul\":2611:2704   */\n  tag_66\n    /* \"#utility.yul\":2700:2703   */\n  dup3\n    /* \"#utility.yul\":2611:2704   */\n  tag_37\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2729:2731   */\n  0x20\n    /* \"#utility.yul\":2724:2727   */\n  dup3\n    /* \"#utility.yul\":2720:2732   */\n  add\n    /* \"#utility.yul\":2713:2732   */\n  swap1\n  pop\n    /* \"#utility.yul\":2372:2738   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2744:3163   */\ntag_19:\n    /* \"#utility.yul\":2910:2914   */\n  0x00\n    /* \"#utility.yul\":2948:2950   */\n  0x20\n    /* \"#utility.yul\":2937:2946   */\n  dup3\n    /* \"#utility.yul\":2933:2951   */\n  add\n    /* \"#utility.yul\":2925:2951   */\n  swap1\n  pop\n    /* \"#utility.yul\":2997:3006   */\n  dup2\n    /* \"#utility.yul\":2991:2995   */\n  dup2\n    /* \"#utility.yul\":2987:3007   */\n  sub\n    /* \"#utility.yul\":2983:2984   */\n  0x00\n    /* \"#utility.yul\":2972:2981   */\n  dup4\n    /* \"#utility.yul\":2968:2985   */\n  add\n    /* \"#utility.yul\":2961:3008   */\n  mstore\n    /* \"#utility.yul\":3025:3156   */\n  tag_68\n    /* \"#utility.yul\":3151:3155   */\n  dup2\n    /* \"#utility.yul\":3025:3156   */\n  tag_38\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":3017:3156   */\n  swap1\n  pop\n    /* \"#utility.yul\":2744:3163   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Presale.sol\":303:5729  contract CarbonFiPresale is Ownable2Step, ReentrancyGuard {... */\ntag_23:\n  mload(0x80)\n  mload(0xa0)\n  mload(0xc0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xa94eb21dc683b2617e70b464660e1d440b88a596ad8df201f6a0560b3aa241c4\")\n  0x00\n  assignImmutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n  0x00\n  assignImmutable(\"0xc0bf3ddb79e7c5faf09af1eaa09640fae848e430edf7a04658ec05be9ade7aab\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Presale.sol\":303:5729  contract CarbonFiPresale is Ownable2Step, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x845ddcb2\n      gt\n      tag_26\n      jumpi\n      dup1\n      0xa82524b2\n      gt\n      tag_27\n      jumpi\n      dup1\n      0xa82524b2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xdb81b278\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xe580b2b0\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xf349b76c\n      eq\n      tag_25\n      jumpi\n      jump(tag_2)\n    tag_27:\n      dup1\n      0x845ddcb2\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x9106d7ba\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x945e4013\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x96713abf\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa43be57b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_26:\n      dup1\n      0x39f65c09\n      gt\n      tag_28\n      jumpi\n      dup1\n      0x39f65c09\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x48c54b9d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5bf5d54c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x61d027b3\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_28:\n      dup1\n      0x04c98b2b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1f9c729d\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x26d07099\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f48ab7d\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x3610724e\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Presale.sol\":2566:2760  function startPresale() external onlyOwner {... */\n    tag_3:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      stop\n        /* \"Presale.sol\":492:520  IERC20 public immutable cafi */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":5076:5457  function getCurrentStageInfo() external view returns (... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":438:466  IERC20 public immutable usdt */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":2766:3753  function buyTokens(uint256 amount) external nonReentrant onlyActivePresale {... */\n    tag_7:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Presale.sol\":1189:1237  mapping(address => uint256) public userPurchases */\n    tag_8:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":3759:4179  function claimTokens() external nonReentrant {... */\n    tag_9:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"Presale.sol\":1024:1051  uint256 public currentStage */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":540:573  address public immutable treasury */\n    tag_11:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      stop\n        /* \"Presale.sol\":997:1018  Stage[] public stages */\n    tag_14:\n      tag_65\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_66\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_66:\n      tag_67\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      tag_68\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_15:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":1159:1183  uint256 public totalSold */\n    tag_16:\n      tag_73\n      tag_74\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      tag_75\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":740:790  uint256 public constant PRESALE_DURATION = 90 days */\n    tag_17:\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_78\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":580:644  uint256 public constant TOTAL_PRESALE_SUPPLY = 10_000_000 * 1e18 */\n    tag_18:\n      tag_79\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":4226:4578  function endPresale() external onlyOwner {... */\n    tag_19:\n      tag_82\n      tag_83\n      jump\t// in\n    tag_82:\n      stop\n        /* \"Presale.sol\":1057:1088  uint256 public presaleStartTime */\n    tag_20:\n      tag_84\n      tag_85\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":673:734  uint256 public constant MAX_BUY_PER_WALLET = 1_000_000 * 1e18 */\n    tag_21:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n    tag_22:\n      tag_90\n      tag_91\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":1094:1118  bool public presaleEnded */\n    tag_23:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_24:\n      tag_97\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_98\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_98:\n      tag_99\n      jump\t// in\n    tag_97:\n      stop\n        /* \"Presale.sol\":5463:5727  function getPresaleTimeLeft() external view returns (uint256) {... */\n    tag_25:\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      tag_102\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Presale.sol\":2566:2760  function startPresale() external onlyOwner {... */\n    tag_30:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_104\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_104:\n        /* \"Presale.sol\":2647:2648  0 */\n      0x00\n        /* \"Presale.sol\":2627:2643  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":2627:2648  presaleStartTime == 0 */\n      eq\n        /* \"Presale.sol\":2619:2674  require(presaleStartTime == 0, \"Presale sudah dimulai\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"Presale.sol\":2703:2718  block.timestamp */\n      timestamp\n        /* \"Presale.sol\":2684:2700  presaleStartTime */\n      0x05\n        /* \"Presale.sol\":2684:2718  presaleStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":2749:2753  true */\n      0x01\n        /* \"Presale.sol\":2728:2734  stages */\n      0x03\n        /* \"Presale.sol\":2735:2736  0 */\n      0x00\n        /* \"Presale.sol\":2728:2737  stages[0] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_110\n      jumpi\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n    tag_110:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Presale.sol\":2728:2746  stages[0].isActive */\n      0x03\n      add\n      0x00\n        /* \"Presale.sol\":2728:2753  stages[0].isActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":2566:2760  function startPresale() external onlyOwner {... */\n      jump\t// out\n        /* \"Presale.sol\":492:520  IERC20 public immutable cafi */\n    tag_32:\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":5076:5457  function getCurrentStageInfo() external view returns (... */\n    tag_36:\n        /* \"Presale.sol\":5139:5152  uint256 stage */\n      0x00\n        /* \"Presale.sol\":5162:5175  uint256 price */\n      0x00\n        /* \"Presale.sol\":5185:5202  uint256 available */\n      0x00\n        /* \"Presale.sol\":5212:5224  uint256 sold */\n      0x00\n        /* \"Presale.sol\":5241:5261  Stage memory current */\n      0x00\n        /* \"Presale.sol\":5264:5270  stages */\n      0x03\n        /* \"Presale.sol\":5271:5283  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":5264:5284  stages[currentStage] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_115\n      jumpi\n      tag_116\n      tag_112\n      jump\t// in\n    tag_116:\n    tag_115:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Presale.sol\":5241:5284  Stage memory current = stages[currentStage] */\n      mload(0x40)\n      dup1\n      0x80\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Presale.sol\":5315:5327  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":5341:5348  current */\n      dup2\n        /* \"Presale.sol\":5341:5354  current.price */\n      0x40\n      add\n      mload\n        /* \"Presale.sol\":5390:5397  current */\n      dup3\n        /* \"Presale.sol\":5390:5408  current.soldAmount */\n      0x20\n      add\n      mload\n        /* \"Presale.sol\":5368:5375  current */\n      dup4\n        /* \"Presale.sol\":5368:5387  current.totalAmount */\n      0x00\n      add\n      mload\n        /* \"Presale.sol\":5368:5408  current.totalAmount - current.soldAmount */\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"Presale.sol\":5422:5429  current */\n      dup4\n        /* \"Presale.sol\":5422:5440  current.soldAmount */\n      0x20\n      add\n      mload\n        /* \"Presale.sol\":5294:5450  return (... */\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      swap5\n      pop\n      pop\n        /* \"Presale.sol\":5076:5457  function getCurrentStageInfo() external view returns (... */\n      swap1\n      swap2\n      swap3\n      swap4\n      jump\t// out\n        /* \"Presale.sol\":438:466  IERC20 public immutable usdt */\n    tag_40:\n      immutable(\"0xc0bf3ddb79e7c5faf09af1eaa09640fae848e430edf7a04658ec05be9ade7aab\")\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":2766:3753  function buyTokens(uint256 amount) external nonReentrant onlyActivePresale {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_121\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_121:\n        /* \"Presale.sol\":1621:1633  presaleEnded */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Presale.sol\":1620:1633  !presaleEnded */\n      iszero\n        /* \"Presale.sol\":1612:1660  require(!presaleEnded, \"Presale sudah berakhir\") */\n      tag_124\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_125\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_124:\n        /* \"Presale.sol\":1697:1713  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":1678:1693  block.timestamp */\n      timestamp\n        /* \"Presale.sol\":1678:1713  block.timestamp >= presaleStartTime */\n      lt\n      iszero\n        /* \"Presale.sol\":1670:1739  require(block.timestamp >= presaleStartTime, \"Presale belum dimulai\") */\n      tag_127\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_128\n      swap1\n      tag_129\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_127:\n        /* \"Presale.sol\":783:790  90 days */\n      0x76a700\n        /* \"Presale.sol\":1776:1792  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":1776:1811  presaleStartTime + PRESALE_DURATION */\n      tag_130\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"Presale.sol\":1757:1772  block.timestamp */\n      timestamp\n        /* \"Presale.sol\":1757:1811  block.timestamp <= presaleStartTime + PRESALE_DURATION */\n      gt\n      iszero\n        /* \"Presale.sol\":1749:1838  require(block.timestamp <= presaleStartTime + PRESALE_DURATION, \"Presale sudah berakhir\") */\n      tag_132\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap1\n      tag_126\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_132:\n        /* \"Presale.sol\":2868:2869  0 */\n      0x00\n        /* \"Presale.sol\":2859:2865  amount */\n      dup2\n        /* \"Presale.sol\":2859:2869  amount > 0 */\n      gt\n        /* \"Presale.sol\":2851:2892  require(amount > 0, \"Jumlah tidak valid\") */\n      tag_135\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_136\n      swap1\n      tag_137\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_135:\n        /* \"Presale.sol\":718:734  1_000_000 * 1e18 */\n      0xd3c21bcecceda1000000\n        /* \"Presale.sol\":2951:2957  amount */\n      dup2\n        /* \"Presale.sol\":2923:2936  userPurchases */\n      0x08\n        /* \"Presale.sol\":2923:2948  userPurchases[msg.sender] */\n      0x00\n        /* \"Presale.sol\":2937:2947  msg.sender */\n      caller\n        /* \"Presale.sol\":2923:2948  userPurchases[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Presale.sol\":2923:2957  userPurchases[msg.sender] + amount */\n      tag_138\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_138:\n        /* \"Presale.sol\":2923:2979  userPurchases[msg.sender] + amount <= MAX_BUY_PER_WALLET */\n      gt\n      iszero\n        /* \"Presale.sol\":2902:3029  require(... */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"Presale.sol\":3040:3061  Stage storage current */\n      0x00\n        /* \"Presale.sol\":3064:3070  stages */\n      0x03\n        /* \"Presale.sol\":3071:3083  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":3064:3084  stages[currentStage] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_142\n      jumpi\n      tag_143\n      tag_112\n      jump\t// in\n    tag_143:\n    tag_142:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Presale.sol\":3040:3084  Stage storage current = stages[currentStage] */\n      swap1\n      pop\n        /* \"Presale.sol\":3102:3109  current */\n      dup1\n        /* \"Presale.sol\":3102:3118  current.isActive */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Presale.sol\":3094:3140  require(current.isActive, \"Stage tidak aktif\") */\n      tag_145\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_146\n      swap1\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_145:\n        /* \"Presale.sol\":3189:3196  current */\n      dup1\n        /* \"Presale.sol\":3189:3208  current.totalAmount */\n      0x00\n      add\n      sload\n        /* \"Presale.sol\":3179:3185  amount */\n      dup3\n        /* \"Presale.sol\":3158:3165  current */\n      dup3\n        /* \"Presale.sol\":3158:3176  current.soldAmount */\n      0x01\n      add\n      sload\n        /* \"Presale.sol\":3158:3185  current.soldAmount + amount */\n      tag_148\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_148:\n        /* \"Presale.sol\":3158:3208  current.soldAmount + amount <= current.totalAmount */\n      gt\n      iszero\n        /* \"Presale.sol\":3150:3233  require(current.soldAmount + amount <= current.totalAmount, \"Melebihi kuota stage\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_150\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_149:\n        /* \"Presale.sol\":3244:3262  uint256 usdtAmount */\n      0x00\n        /* \"Presale.sol\":3290:3294  1e18 */\n      0x0de0b6b3a7640000\n        /* \"Presale.sol\":3274:3281  current */\n      dup3\n        /* \"Presale.sol\":3274:3287  current.price */\n      0x02\n      add\n      sload\n        /* \"Presale.sol\":3265:3271  amount */\n      dup5\n        /* \"Presale.sol\":3265:3287  amount * current.price */\n      tag_152\n      swap2\n      swap1\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"Presale.sol\":3265:3294  amount * current.price / 1e18 */\n      tag_154\n      swap2\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n        /* \"Presale.sol\":3244:3294  uint256 usdtAmount = amount * current.price / 1e18 */\n      swap1\n      pop\n        /* \"Presale.sol\":3351:3406  usdt.safeTransferFrom(msg.sender, treasury, usdtAmount) */\n      tag_156\n        /* \"Presale.sol\":3373:3383  msg.sender */\n      caller\n        /* \"Presale.sol\":3385:3393  treasury */\n      immutable(\"0xa94eb21dc683b2617e70b464660e1d440b88a596ad8df201f6a0560b3aa241c4\")\n        /* \"Presale.sol\":3395:3405  usdtAmount */\n      dup4\n        /* \"Presale.sol\":3351:3355  usdt */\n      immutable(\"0xc0bf3ddb79e7c5faf09af1eaa09640fae848e430edf7a04658ec05be9ade7aab\")\n        /* \"Presale.sol\":3351:3372  usdt.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_157\n      swap1\n        /* \"Presale.sol\":3351:3406  usdt.safeTransferFrom(msg.sender, treasury, usdtAmount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_156:\n        /* \"Presale.sol\":3465:3471  amount */\n      dup3\n        /* \"Presale.sol\":3443:3450  current */\n      dup3\n        /* \"Presale.sol\":3443:3461  current.soldAmount */\n      0x01\n      add\n      0x00\n        /* \"Presale.sol\":3443:3471  current.soldAmount += amount */\n      dup3\n      dup3\n      sload\n      tag_158\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_158:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":3494:3500  amount */\n      dup3\n        /* \"Presale.sol\":3481:3490  totalSold */\n      0x07\n      0x00\n        /* \"Presale.sol\":3481:3500  totalSold += amount */\n      dup3\n      dup3\n      sload\n      tag_159\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_159:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":3539:3545  amount */\n      dup3\n        /* \"Presale.sol\":3510:3523  userPurchases */\n      0x08\n        /* \"Presale.sol\":3510:3535  userPurchases[msg.sender] */\n      0x00\n        /* \"Presale.sol\":3524:3534  msg.sender */\n      caller\n        /* \"Presale.sol\":3510:3535  userPurchases[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Presale.sol\":3510:3545  userPurchases[msg.sender] += amount */\n      dup3\n      dup3\n      sload\n      tag_160\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_160:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":3623:3630  current */\n      dup2\n        /* \"Presale.sol\":3623:3642  current.totalAmount */\n      0x00\n      add\n      sload\n        /* \"Presale.sol\":3601:3608  current */\n      dup3\n        /* \"Presale.sol\":3601:3619  current.soldAmount */\n      0x01\n      add\n      sload\n        /* \"Presale.sol\":3601:3642  current.soldAmount >= current.totalAmount */\n      lt\n        /* \"Presale.sol\":3597:3684  if (current.soldAmount >= current.totalAmount) {... */\n      tag_161\n      jumpi\n        /* \"Presale.sol\":3658:3673  _advanceStage() */\n      tag_162\n        /* \"Presale.sol\":3658:3671  _advanceStage */\n      tag_163\n        /* \"Presale.sol\":3658:3673  _advanceStage() */\n      jump\t// in\n    tag_162:\n        /* \"Presale.sol\":3597:3684  if (current.soldAmount >= current.totalAmount) {... */\n    tag_161:\n        /* \"Presale.sol\":3715:3725  msg.sender */\n      caller\n        /* \"Presale.sol\":3699:3746  TokensPurchased(msg.sender, amount, usdtAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33\n        /* \"Presale.sol\":3727:3733  amount */\n      dup5\n        /* \"Presale.sol\":3735:3745  usdtAmount */\n      dup4\n        /* \"Presale.sol\":3699:3746  TokensPurchased(msg.sender, amount, usdtAmount) */\n      mload(0x40)\n      tag_164\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Presale.sol\":2841:3753  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_166:\n        /* \"Presale.sol\":2766:3753  function buyTokens(uint256 amount) external nonReentrant onlyActivePresale {... */\n      pop\n      jump\t// out\n        /* \"Presale.sol\":1189:1237  mapping(address => uint256) public userPurchases */\n    tag_49:\n      mstore(0x20, 0x08)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":3759:4179  function claimTokens() external nonReentrant {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_169\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_122\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_169:\n        /* \"Presale.sol\":3822:3834  presaleEnded */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Presale.sol\":3822:3891  presaleEnded || block.timestamp > presaleStartTime + PRESALE_DURATION */\n      dup1\n      tag_171\n      jumpi\n      pop\n        /* \"Presale.sol\":783:790  90 days */\n      0x76a700\n        /* \"Presale.sol\":3856:3872  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":3856:3891  presaleStartTime + PRESALE_DURATION */\n      tag_172\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_172:\n        /* \"Presale.sol\":3838:3853  block.timestamp */\n      timestamp\n        /* \"Presale.sol\":3838:3891  block.timestamp > presaleStartTime + PRESALE_DURATION */\n      gt\n        /* \"Presale.sol\":3822:3891  presaleEnded || block.timestamp > presaleStartTime + PRESALE_DURATION */\n    tag_171:\n        /* \"Presale.sol\":3814:3912  require(presaleEnded || block.timestamp > presaleStartTime + PRESALE_DURATION, \"Belum bisa claim\") */\n      tag_173\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap1\n      tag_175\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_173:\n        /* \"Presale.sol\":3931:3945  uint256 amount */\n      0x00\n        /* \"Presale.sol\":3948:3961  userPurchases */\n      0x08\n        /* \"Presale.sol\":3948:3973  userPurchases[msg.sender] */\n      0x00\n        /* \"Presale.sol\":3962:3972  msg.sender */\n      caller\n        /* \"Presale.sol\":3948:3973  userPurchases[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Presale.sol\":3931:3973  uint256 amount = userPurchases[msg.sender] */\n      swap1\n      pop\n        /* \"Presale.sol\":4000:4001  0 */\n      0x00\n        /* \"Presale.sol\":3991:3997  amount */\n      dup2\n        /* \"Presale.sol\":3991:4001  amount > 0 */\n      gt\n        /* \"Presale.sol\":3983:4036  require(amount > 0, \"Tidak ada token untuk di-claim\") */\n      tag_176\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_177\n      swap1\n      tag_178\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_176:\n        /* \"Presale.sol\":4075:4076  0 */\n      0x00\n        /* \"Presale.sol\":4047:4060  userPurchases */\n      0x08\n        /* \"Presale.sol\":4047:4072  userPurchases[msg.sender] */\n      0x00\n        /* \"Presale.sol\":4061:4071  msg.sender */\n      caller\n        /* \"Presale.sol\":4047:4072  userPurchases[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Presale.sol\":4047:4076  userPurchases[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":4086:4123  cafi.safeTransfer(msg.sender, amount) */\n      tag_179\n        /* \"Presale.sol\":4104:4114  msg.sender */\n      caller\n        /* \"Presale.sol\":4116:4122  amount */\n      dup3\n        /* \"Presale.sol\":4086:4090  cafi */\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n        /* \"Presale.sol\":4086:4103  cafi.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"Presale.sol\":4086:4123  cafi.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_179:\n        /* \"Presale.sol\":4153:4163  msg.sender */\n      caller\n        /* \"Presale.sol\":4139:4172  TokensClaimed(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430\n        /* \"Presale.sol\":4165:4171  amount */\n      dup3\n        /* \"Presale.sol\":4139:4172  TokensClaimed(msg.sender, amount) */\n      mload(0x40)\n      tag_181\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_181:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Presale.sol\":3804:4179  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_182\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_167\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_182:\n        /* \"Presale.sol\":3759:4179  function claimTokens() external nonReentrant {... */\n      jump\t// out\n        /* \"Presale.sol\":1024:1051  uint256 public currentStage */\n    tag_55:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":540:573  address public immutable treasury */\n    tag_58:\n      immutable(\"0xa94eb21dc683b2617e70b464660e1d440b88a596ad8df201f6a0560b3aa241c4\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_184\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_186\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_186:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2296:2310  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2325  _msgSender() */\n      tag_189\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2323  _msgSender */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2325  _msgSender() */\n      jump\t// in\n    tag_189:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2296:2325  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2357:2363  sender */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2363  pendingOwner() != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2353  pendingOwner() */\n      tag_191\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2351  pendingOwner */\n      tag_91\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2353  pendingOwner() */\n      jump\t// in\n    tag_191:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2363  pendingOwner() != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2335:2431  if (pendingOwner() != sender) {... */\n      tag_192\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2413:2419  sender */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2386:2420  OwnableUnauthorizedAccount(sender) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_193\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_193:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2335:2431  if (pendingOwner() != sender) {... */\n    tag_192:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2466  _transferOwnership(sender) */\n      tag_194\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2459:2465  sender */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2458  _transferOwnership */\n      tag_187\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2466  _transferOwnership(sender) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2286:2473  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"Presale.sol\":997:1018  Stage[] public stages */\n    tag_67:\n      0x03\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_195\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_195:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Presale.sol\":1159:1183  uint256 public totalSold */\n    tag_74:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":740:790  uint256 public constant PRESALE_DURATION = 90 days */\n    tag_77:\n        /* \"Presale.sol\":783:790  90 days */\n      0x76a700\n        /* \"Presale.sol\":740:790  uint256 public constant PRESALE_DURATION = 90 days */\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":580:644  uint256 public constant TOTAL_PRESALE_SUPPLY = 10_000_000 * 1e18 */\n    tag_80:\n        /* \"Presale.sol\":627:644  10_000_000 * 1e18 */\n      0x084595161401484a000000\n        /* \"Presale.sol\":580:644  uint256 public constant TOTAL_PRESALE_SUPPLY = 10_000_000 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":4226:4578  function endPresale() external onlyOwner {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_199\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_199:\n        /* \"Presale.sol\":4286:4298  presaleEnded */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Presale.sol\":4285:4298  !presaleEnded */\n      iszero\n        /* \"Presale.sol\":4277:4325  require(!presaleEnded, \"Presale sudah diakhiri\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"Presale.sol\":4359:4363  true */\n      0x01\n        /* \"Presale.sol\":4344:4356  presaleEnded */\n      0x06\n      0x00\n        /* \"Presale.sol\":4344:4363  presaleEnded = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":4373:4390  uint256 remaining */\n      0x00\n        /* \"Presale.sol\":4393:4397  cafi */\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n        /* \"Presale.sol\":4393:4407  cafi.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Presale.sol\":4416:4420  this */\n      address\n        /* \"Presale.sol\":4393:4422  cafi.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_204:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"Presale.sol\":4373:4422  uint256 remaining = cafi.balanceOf(address(this)) */\n      swap1\n      pop\n        /* \"Presale.sol\":4457:4458  0 */\n      0x00\n        /* \"Presale.sol\":4445:4454  remaining */\n      dup2\n        /* \"Presale.sol\":4445:4458  remaining > 0 */\n      gt\n        /* \"Presale.sol\":4441:4522  if (remaining > 0) {... */\n      iszero\n      tag_209\n      jumpi\n        /* \"Presale.sol\":4474:4511  cafi.safeTransfer(owner(), remaining) */\n      tag_210\n        /* \"Presale.sol\":4492:4499  owner() */\n      tag_211\n        /* \"Presale.sol\":4492:4497  owner */\n      tag_71\n        /* \"Presale.sol\":4492:4499  owner() */\n      jump\t// in\n    tag_211:\n        /* \"Presale.sol\":4501:4510  remaining */\n      dup3\n        /* \"Presale.sol\":4474:4478  cafi */\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n        /* \"Presale.sol\":4474:4491  cafi.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_180\n      swap1\n        /* \"Presale.sol\":4474:4511  cafi.safeTransfer(owner(), remaining) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_210:\n        /* \"Presale.sol\":4441:4522  if (remaining > 0) {... */\n    tag_209:\n        /* \"Presale.sol\":4537:4571  PresaleEnded(totalSold, remaining) */\n      0xb4e6cb40663c1ac63bcd620dbe3d98c44526baa45e310f545f425ebaab36a293\n        /* \"Presale.sol\":4550:4559  totalSold */\n      sload(0x07)\n        /* \"Presale.sol\":4561:4570  remaining */\n      dup3\n        /* \"Presale.sol\":4537:4571  PresaleEnded(totalSold, remaining) */\n      mload(0x40)\n      tag_212\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Presale.sol\":4267:4578  {... */\n      pop\n        /* \"Presale.sol\":4226:4578  function endPresale() external onlyOwner {... */\n      jump\t// out\n        /* \"Presale.sol\":1057:1088  uint256 public presaleStartTime */\n    tag_85:\n      sload(0x05)\n      dup2\n      jump\t// out\n        /* \"Presale.sol\":673:734  uint256 public constant MAX_BUY_PER_WALLET = 1_000_000 * 1e18 */\n    tag_88:\n        /* \"Presale.sol\":718:734  1_000_000 * 1e18 */\n      0xd3c21bcecceda1000000\n        /* \"Presale.sol\":673:734  uint256 public constant MAX_BUY_PER_WALLET = 1_000_000 * 1e18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1285:1292  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1311:1324  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1304:1324  return _pendingOwner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Presale.sol\":1094:1118  bool public presaleEnded */\n    tag_94:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_215\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_105\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1754:1762  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1738:1751  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1738:1762  _pendingOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1811:1819  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1777:1820  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1809  owner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1807  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1809  owner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1777:1820  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Presale.sol\":5463:5727  function getPresaleTimeLeft() external view returns (uint256) {... */\n    tag_101:\n        /* \"Presale.sol\":5516:5523  uint256 */\n      0x00\n        /* \"Presale.sol\":5559:5560  0 */\n      0x00\n        /* \"Presale.sol\":5539:5555  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":5539:5560  presaleStartTime == 0 */\n      sub\n        /* \"Presale.sol\":5535:5570  if (presaleStartTime == 0) return 0 */\n      tag_219\n      jumpi\n        /* \"Presale.sol\":5569:5570  0 */\n      0x00\n        /* \"Presale.sol\":5562:5570  return 0 */\n      swap1\n      pop\n      jump(tag_218)\n        /* \"Presale.sol\":5535:5570  if (presaleStartTime == 0) return 0 */\n    tag_219:\n        /* \"Presale.sol\":783:790  90 days */\n      0x76a700\n        /* \"Presale.sol\":5603:5619  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":5603:5638  presaleStartTime + PRESALE_DURATION */\n      tag_220\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_220:\n        /* \"Presale.sol\":5584:5599  block.timestamp */\n      timestamp\n        /* \"Presale.sol\":5584:5638  block.timestamp >= presaleStartTime + PRESALE_DURATION */\n      lt\n        /* \"Presale.sol\":5580:5648  if (block.timestamp >= presaleStartTime + PRESALE_DURATION) return 0 */\n      tag_221\n      jumpi\n        /* \"Presale.sol\":5647:5648  0 */\n      0x00\n        /* \"Presale.sol\":5640:5648  return 0 */\n      swap1\n      pop\n      jump(tag_218)\n        /* \"Presale.sol\":5580:5648  if (block.timestamp >= presaleStartTime + PRESALE_DURATION) return 0 */\n    tag_221:\n        /* \"Presale.sol\":5705:5720  block.timestamp */\n      timestamp\n        /* \"Presale.sol\":783:790  90 days */\n      0x76a700\n        /* \"Presale.sol\":5666:5682  presaleStartTime */\n      sload(0x05)\n        /* \"Presale.sol\":5666:5701  presaleStartTime + PRESALE_DURATION */\n      tag_222\n      swap2\n      swap1\n      tag_131\n      jump\t// in\n    tag_222:\n        /* \"Presale.sol\":5665:5720  (presaleStartTime + PRESALE_DURATION) - block.timestamp */\n      tag_223\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_223:\n        /* \"Presale.sol\":5658:5720  return (presaleStartTime + PRESALE_DURATION) - block.timestamp */\n      swap1\n      pop\n        /* \"Presale.sol\":5463:5727  function getPresaleTimeLeft() external view returns (uint256) {... */\n    tag_218:\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_105:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_225\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_226\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_228\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_190\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_228:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_122:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_235\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_236\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_235:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Presale.sol\":4628:5030  function _advanceStage() internal {... */\n    tag_163:\n        /* \"Presale.sol\":4704:4709  false */\n      0x00\n        /* \"Presale.sol\":4672:4678  stages */\n      0x03\n        /* \"Presale.sol\":4679:4691  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":4672:4692  stages[currentStage] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_240\n      jumpi\n      tag_241\n      tag_112\n      jump\t// in\n    tag_241:\n    tag_240:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Presale.sol\":4672:4701  stages[currentStage].isActive */\n      0x03\n      add\n      0x00\n        /* \"Presale.sol\":4672:4709  stages[currentStage].isActive = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":4763:4764  1 */\n      0x01\n        /* \"Presale.sol\":4747:4753  stages */\n      0x03\n        /* \"Presale.sol\":4747:4760  stages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Presale.sol\":4747:4764  stages.length - 1 */\n      tag_243\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_243:\n        /* \"Presale.sol\":4732:4744  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":4732:4764  currentStage < stages.length - 1 */\n      lt\n        /* \"Presale.sol\":4728:5024  if (currentStage < stages.length - 1) {... */\n      iszero\n      tag_244\n      jumpi\n        /* \"Presale.sol\":4780:4792  currentStage */\n      0x04\n      0x00\n        /* \"Presale.sol\":4780:4794  currentStage++ */\n      dup2\n      sload\n      dup1\n      swap3\n      swap2\n      swap1\n      tag_245\n      swap1\n      tag_246\n      jump\t// in\n    tag_245:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"Presale.sol\":4840:4844  true */\n      0x01\n        /* \"Presale.sol\":4808:4814  stages */\n      0x03\n        /* \"Presale.sol\":4815:4827  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":4808:4828  stages[currentStage] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_247\n      jumpi\n      tag_248\n      tag_112\n      jump\t// in\n    tag_248:\n    tag_247:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"Presale.sol\":4808:4837  stages[currentStage].isActive */\n      0x03\n      add\n      0x00\n        /* \"Presale.sol\":4808:4844  stages[currentStage].isActive = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":4863:4890  StageAdvanced(currentStage) */\n      0xd87d457666088f7f0056032aa92e6fd462f4ec64661117a66049cd349a0cae14\n        /* \"Presale.sol\":4877:4889  currentStage */\n      sload(0x04)\n        /* \"Presale.sol\":4863:4890  StageAdvanced(currentStage) */\n      mload(0x40)\n      tag_250\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_250:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Presale.sol\":4728:5024  if (currentStage < stages.length - 1) {... */\n      jump(tag_251)\n    tag_244:\n        /* \"Presale.sol\":4936:4940  true */\n      0x01\n        /* \"Presale.sol\":4921:4933  presaleEnded */\n      0x06\n      0x00\n        /* \"Presale.sol\":4921:4940  presaleEnded = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Presale.sol\":4959:5013  PresaleEnded(totalSold, cafi.balanceOf(address(this))) */\n      0xb4e6cb40663c1ac63bcd620dbe3d98c44526baa45e310f545f425ebaab36a293\n        /* \"Presale.sol\":4972:4981  totalSold */\n      sload(0x07)\n        /* \"Presale.sol\":4983:4987  cafi */\n      immutable(\"0x474e8cbbfd90dba9df5fc054f99b290c4296483a721448990672feaba0c59d72\")\n        /* \"Presale.sol\":4983:4997  cafi.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"Presale.sol\":5006:5010  this */\n      address\n        /* \"Presale.sol\":4983:5012  cafi.balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_252\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_252:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_255\n      swap2\n      swap1\n      tag_208\n      jump\t// in\n    tag_255:\n        /* \"Presale.sol\":4959:5013  PresaleEnded(totalSold, cafi.balanceOf(address(this))) */\n      mload(0x40)\n      tag_256\n      swap3\n      swap2\n      swap1\n      tag_165\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Presale.sol\":4728:5024  if (currentStage < stages.length - 1) {... */\n    tag_251:\n        /* \"Presale.sol\":4628:5030  function _advanceStage() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_167:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_260\n      swap3\n      swap2\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_238\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_187:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2100:2113  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2093:2113  delete _pendingOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2148:2156  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2147  super._transferOwnership */\n      tag_264\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_190:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_238:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_267\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_267:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_268\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_269)\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_270\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_271\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_271:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_264:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_273:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:199   */\n    tag_274:\n        /* \"#utility.yul\":167:170   */\n      0x00\n        /* \"#utility.yul\":188:193   */\n      dup2\n        /* \"#utility.yul\":181:193   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:199   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":205:347   */\n    tag_275:\n        /* \"#utility.yul\":255:264   */\n      0x00\n        /* \"#utility.yul\":288:341   */\n      tag_322\n        /* \"#utility.yul\":306:340   */\n      tag_323\n        /* \"#utility.yul\":315:339   */\n      tag_324\n        /* \"#utility.yul\":333:338   */\n      dup5\n        /* \"#utility.yul\":315:339   */\n      tag_273\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":306:340   */\n      tag_274\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":288:341   */\n      tag_273\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":275:341   */\n      swap1\n      pop\n        /* \"#utility.yul\":205:347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":353:479   */\n    tag_276:\n        /* \"#utility.yul\":403:412   */\n      0x00\n        /* \"#utility.yul\":436:473   */\n      tag_326\n        /* \"#utility.yul\":467:472   */\n      dup3\n        /* \"#utility.yul\":436:473   */\n      tag_275\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":423:473   */\n      swap1\n      pop\n        /* \"#utility.yul\":353:479   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":485:625   */\n    tag_277:\n        /* \"#utility.yul\":549:558   */\n      0x00\n        /* \"#utility.yul\":582:619   */\n      tag_328\n        /* \"#utility.yul\":613:618   */\n      dup3\n        /* \"#utility.yul\":582:619   */\n      tag_276\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":569:619   */\n      swap1\n      pop\n        /* \"#utility.yul\":485:625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":631:790   */\n    tag_278:\n        /* \"#utility.yul\":732:783   */\n      tag_330\n        /* \"#utility.yul\":777:782   */\n      dup2\n        /* \"#utility.yul\":732:783   */\n      tag_277\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":727:730   */\n      dup3\n        /* \"#utility.yul\":720:784   */\n      mstore\n        /* \"#utility.yul\":631:790   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":796:1046   */\n    tag_34:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":941:943   */\n      0x20\n        /* \"#utility.yul\":930:939   */\n      dup3\n        /* \"#utility.yul\":926:944   */\n      add\n        /* \"#utility.yul\":918:944   */\n      swap1\n      pop\n        /* \"#utility.yul\":954:1039   */\n      tag_332\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1025:1034   */\n      dup4\n        /* \"#utility.yul\":1021:1038   */\n      add\n        /* \"#utility.yul\":1012:1018   */\n      dup5\n        /* \"#utility.yul\":954:1039   */\n      tag_278\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":796:1046   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1129   */\n    tag_279:\n        /* \"#utility.yul\":1089:1096   */\n      0x00\n        /* \"#utility.yul\":1118:1123   */\n      dup2\n        /* \"#utility.yul\":1107:1123   */\n      swap1\n      pop\n        /* \"#utility.yul\":1052:1129   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1135:1253   */\n    tag_280:\n        /* \"#utility.yul\":1222:1246   */\n      tag_335\n        /* \"#utility.yul\":1240:1245   */\n      dup2\n        /* \"#utility.yul\":1222:1246   */\n      tag_279\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":1217:1220   */\n      dup3\n        /* \"#utility.yul\":1210:1247   */\n      mstore\n        /* \"#utility.yul\":1135:1253   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1812   */\n    tag_38:\n        /* \"#utility.yul\":1436:1440   */\n      0x00\n        /* \"#utility.yul\":1474:1477   */\n      0x80\n        /* \"#utility.yul\":1463:1472   */\n      dup3\n        /* \"#utility.yul\":1459:1478   */\n      add\n        /* \"#utility.yul\":1451:1478   */\n      swap1\n      pop\n        /* \"#utility.yul\":1488:1559   */\n      tag_337\n        /* \"#utility.yul\":1556:1557   */\n      0x00\n        /* \"#utility.yul\":1545:1554   */\n      dup4\n        /* \"#utility.yul\":1541:1558   */\n      add\n        /* \"#utility.yul\":1532:1538   */\n      dup8\n        /* \"#utility.yul\":1488:1559   */\n      tag_280\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":1569:1641   */\n      tag_338\n        /* \"#utility.yul\":1637:1639   */\n      0x20\n        /* \"#utility.yul\":1626:1635   */\n      dup4\n        /* \"#utility.yul\":1622:1640   */\n      add\n        /* \"#utility.yul\":1613:1619   */\n      dup7\n        /* \"#utility.yul\":1569:1641   */\n      tag_280\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":1651:1723   */\n      tag_339\n        /* \"#utility.yul\":1719:1721   */\n      0x40\n        /* \"#utility.yul\":1708:1717   */\n      dup4\n        /* \"#utility.yul\":1704:1722   */\n      add\n        /* \"#utility.yul\":1695:1701   */\n      dup6\n        /* \"#utility.yul\":1651:1723   */\n      tag_280\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1733:1805   */\n      tag_340\n        /* \"#utility.yul\":1801:1803   */\n      0x60\n        /* \"#utility.yul\":1790:1799   */\n      dup4\n        /* \"#utility.yul\":1786:1804   */\n      add\n        /* \"#utility.yul\":1777:1783   */\n      dup5\n        /* \"#utility.yul\":1733:1805   */\n      tag_280\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":1259:1812   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1899:2016   */\n    tag_282:\n        /* \"#utility.yul\":2008:2009   */\n      0x00\n        /* \"#utility.yul\":2005:2006   */\n      0x00\n        /* \"#utility.yul\":1998:2010   */\n      revert\n        /* \"#utility.yul\":2145:2267   */\n    tag_284:\n        /* \"#utility.yul\":2218:2242   */\n      tag_345\n        /* \"#utility.yul\":2236:2241   */\n      dup2\n        /* \"#utility.yul\":2218:2242   */\n      tag_279\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":2211:2216   */\n      dup2\n        /* \"#utility.yul\":2208:2243   */\n      eq\n        /* \"#utility.yul\":2198:2261   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":2257:2258   */\n      0x00\n        /* \"#utility.yul\":2254:2255   */\n      0x00\n        /* \"#utility.yul\":2247:2259   */\n      revert\n        /* \"#utility.yul\":2198:2261   */\n    tag_346:\n        /* \"#utility.yul\":2145:2267   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2273:2412   */\n    tag_285:\n        /* \"#utility.yul\":2319:2324   */\n      0x00\n        /* \"#utility.yul\":2357:2363   */\n      dup2\n        /* \"#utility.yul\":2344:2364   */\n      calldataload\n        /* \"#utility.yul\":2335:2364   */\n      swap1\n      pop\n        /* \"#utility.yul\":2373:2406   */\n      tag_348\n        /* \"#utility.yul\":2400:2405   */\n      dup2\n        /* \"#utility.yul\":2373:2406   */\n      tag_284\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2273:2412   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2418:2747   */\n    tag_44:\n        /* \"#utility.yul\":2477:2483   */\n      0x00\n        /* \"#utility.yul\":2526:2528   */\n      0x20\n        /* \"#utility.yul\":2514:2523   */\n      dup3\n        /* \"#utility.yul\":2505:2512   */\n      dup5\n        /* \"#utility.yul\":2501:2524   */\n      sub\n        /* \"#utility.yul\":2497:2529   */\n      slt\n        /* \"#utility.yul\":2494:2613   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":2532:2611   */\n      tag_351\n      tag_282\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2494:2613   */\n    tag_350:\n        /* \"#utility.yul\":2652:2653   */\n      0x00\n        /* \"#utility.yul\":2677:2730   */\n      tag_352\n        /* \"#utility.yul\":2722:2729   */\n      dup5\n        /* \"#utility.yul\":2713:2719   */\n      dup3\n        /* \"#utility.yul\":2702:2711   */\n      dup6\n        /* \"#utility.yul\":2698:2720   */\n      add\n        /* \"#utility.yul\":2677:2730   */\n      tag_285\n      jump\t// in\n    tag_352:\n        /* \"#utility.yul\":2667:2730   */\n      swap2\n      pop\n        /* \"#utility.yul\":2623:2740   */\n      pop\n        /* \"#utility.yul\":2418:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2849   */\n    tag_286:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2843   */\n      tag_354\n        /* \"#utility.yul\":2837:2842   */\n      dup3\n        /* \"#utility.yul\":2819:2843   */\n      tag_273\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":2808:2843   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2855:2977   */\n    tag_287:\n        /* \"#utility.yul\":2928:2952   */\n      tag_356\n        /* \"#utility.yul\":2946:2951   */\n      dup2\n        /* \"#utility.yul\":2928:2952   */\n      tag_286\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":2921:2926   */\n      dup2\n        /* \"#utility.yul\":2918:2953   */\n      eq\n        /* \"#utility.yul\":2908:2971   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":2967:2968   */\n      0x00\n        /* \"#utility.yul\":2964:2965   */\n      0x00\n        /* \"#utility.yul\":2957:2969   */\n      revert\n        /* \"#utility.yul\":2908:2971   */\n    tag_357:\n        /* \"#utility.yul\":2855:2977   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2983:3122   */\n    tag_288:\n        /* \"#utility.yul\":3029:3034   */\n      0x00\n        /* \"#utility.yul\":3067:3073   */\n      dup2\n        /* \"#utility.yul\":3054:3074   */\n      calldataload\n        /* \"#utility.yul\":3045:3074   */\n      swap1\n      pop\n        /* \"#utility.yul\":3083:3116   */\n      tag_359\n        /* \"#utility.yul\":3110:3115   */\n      dup2\n        /* \"#utility.yul\":3083:3116   */\n      tag_287\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":2983:3122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3128:3457   */\n    tag_48:\n        /* \"#utility.yul\":3187:3193   */\n      0x00\n        /* \"#utility.yul\":3236:3238   */\n      0x20\n        /* \"#utility.yul\":3224:3233   */\n      dup3\n        /* \"#utility.yul\":3215:3222   */\n      dup5\n        /* \"#utility.yul\":3211:3234   */\n      sub\n        /* \"#utility.yul\":3207:3239   */\n      slt\n        /* \"#utility.yul\":3204:3323   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":3242:3321   */\n      tag_362\n      tag_282\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":3204:3323   */\n    tag_361:\n        /* \"#utility.yul\":3362:3363   */\n      0x00\n        /* \"#utility.yul\":3387:3440   */\n      tag_363\n        /* \"#utility.yul\":3432:3439   */\n      dup5\n        /* \"#utility.yul\":3423:3429   */\n      dup3\n        /* \"#utility.yul\":3412:3421   */\n      dup6\n        /* \"#utility.yul\":3408:3430   */\n      add\n        /* \"#utility.yul\":3387:3440   */\n      tag_288\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":3377:3440   */\n      swap2\n      pop\n        /* \"#utility.yul\":3333:3450   */\n      pop\n        /* \"#utility.yul\":3128:3457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_51:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_365\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_280\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:3809   */\n    tag_289:\n        /* \"#utility.yul\":3778:3802   */\n      tag_367\n        /* \"#utility.yul\":3796:3801   */\n      dup2\n        /* \"#utility.yul\":3778:3802   */\n      tag_286\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":3773:3776   */\n      dup3\n        /* \"#utility.yul\":3766:3803   */\n      mstore\n        /* \"#utility.yul\":3691:3809   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3815:4037   */\n    tag_60:\n        /* \"#utility.yul\":3908:3912   */\n      0x00\n        /* \"#utility.yul\":3946:3948   */\n      0x20\n        /* \"#utility.yul\":3935:3944   */\n      dup3\n        /* \"#utility.yul\":3931:3949   */\n      add\n        /* \"#utility.yul\":3923:3949   */\n      swap1\n      pop\n        /* \"#utility.yul\":3959:4030   */\n      tag_369\n        /* \"#utility.yul\":4027:4028   */\n      0x00\n        /* \"#utility.yul\":4016:4025   */\n      dup4\n        /* \"#utility.yul\":4012:4029   */\n      add\n        /* \"#utility.yul\":4003:4009   */\n      dup5\n        /* \"#utility.yul\":3959:4030   */\n      tag_289\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":3815:4037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4043:4133   */\n    tag_290:\n        /* \"#utility.yul\":4077:4084   */\n      0x00\n        /* \"#utility.yul\":4120:4125   */\n      dup2\n        /* \"#utility.yul\":4113:4126   */\n      iszero\n        /* \"#utility.yul\":4106:4127   */\n      iszero\n        /* \"#utility.yul\":4095:4127   */\n      swap1\n      pop\n        /* \"#utility.yul\":4043:4133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4139:4248   */\n    tag_291:\n        /* \"#utility.yul\":4220:4241   */\n      tag_372\n        /* \"#utility.yul\":4235:4240   */\n      dup2\n        /* \"#utility.yul\":4220:4241   */\n      tag_290\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":4215:4218   */\n      dup3\n        /* \"#utility.yul\":4208:4242   */\n      mstore\n        /* \"#utility.yul\":4139:4248   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4254:4795   */\n    tag_69:\n        /* \"#utility.yul\":4425:4429   */\n      0x00\n        /* \"#utility.yul\":4463:4466   */\n      0x80\n        /* \"#utility.yul\":4452:4461   */\n      dup3\n        /* \"#utility.yul\":4448:4467   */\n      add\n        /* \"#utility.yul\":4440:4467   */\n      swap1\n      pop\n        /* \"#utility.yul\":4477:4548   */\n      tag_374\n        /* \"#utility.yul\":4545:4546   */\n      0x00\n        /* \"#utility.yul\":4534:4543   */\n      dup4\n        /* \"#utility.yul\":4530:4547   */\n      add\n        /* \"#utility.yul\":4521:4527   */\n      dup8\n        /* \"#utility.yul\":4477:4548   */\n      tag_280\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":4558:4630   */\n      tag_375\n        /* \"#utility.yul\":4626:4628   */\n      0x20\n        /* \"#utility.yul\":4615:4624   */\n      dup4\n        /* \"#utility.yul\":4611:4629   */\n      add\n        /* \"#utility.yul\":4602:4608   */\n      dup7\n        /* \"#utility.yul\":4558:4630   */\n      tag_280\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":4640:4712   */\n      tag_376\n        /* \"#utility.yul\":4708:4710   */\n      0x40\n        /* \"#utility.yul\":4697:4706   */\n      dup4\n        /* \"#utility.yul\":4693:4711   */\n      add\n        /* \"#utility.yul\":4684:4690   */\n      dup6\n        /* \"#utility.yul\":4640:4712   */\n      tag_280\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":4722:4788   */\n      tag_377\n        /* \"#utility.yul\":4784:4786   */\n      0x60\n        /* \"#utility.yul\":4773:4782   */\n      dup4\n        /* \"#utility.yul\":4769:4787   */\n      add\n        /* \"#utility.yul\":4760:4766   */\n      dup5\n        /* \"#utility.yul\":4722:4788   */\n      tag_291\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":4254:4795   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4801:5011   */\n    tag_96:\n        /* \"#utility.yul\":4888:4892   */\n      0x00\n        /* \"#utility.yul\":4926:4928   */\n      0x20\n        /* \"#utility.yul\":4915:4924   */\n      dup3\n        /* \"#utility.yul\":4911:4929   */\n      add\n        /* \"#utility.yul\":4903:4929   */\n      swap1\n      pop\n        /* \"#utility.yul\":4939:5004   */\n      tag_379\n        /* \"#utility.yul\":5001:5002   */\n      0x00\n        /* \"#utility.yul\":4990:4999   */\n      dup4\n        /* \"#utility.yul\":4986:5003   */\n      add\n        /* \"#utility.yul\":4977:4983   */\n      dup5\n        /* \"#utility.yul\":4939:5004   */\n      tag_291\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":4801:5011   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5017:5186   */\n    tag_292:\n        /* \"#utility.yul\":5101:5112   */\n      0x00\n        /* \"#utility.yul\":5135:5141   */\n      dup3\n        /* \"#utility.yul\":5130:5133   */\n      dup3\n        /* \"#utility.yul\":5123:5142   */\n      mstore\n        /* \"#utility.yul\":5175:5179   */\n      0x20\n        /* \"#utility.yul\":5170:5173   */\n      dup3\n        /* \"#utility.yul\":5166:5180   */\n      add\n        /* \"#utility.yul\":5151:5180   */\n      swap1\n      pop\n        /* \"#utility.yul\":5017:5186   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5192:5363   */\n    tag_293:\n        /* \"#utility.yul\":5332:5355   */\n      0x50726573616c652073756461682064696d756c61690000000000000000000000\n        /* \"#utility.yul\":5328:5329   */\n      0x00\n        /* \"#utility.yul\":5320:5326   */\n      dup3\n        /* \"#utility.yul\":5316:5330   */\n      add\n        /* \"#utility.yul\":5309:5356   */\n      mstore\n        /* \"#utility.yul\":5192:5363   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5369:5735   */\n    tag_294:\n        /* \"#utility.yul\":5511:5514   */\n      0x00\n        /* \"#utility.yul\":5532:5599   */\n      tag_383\n        /* \"#utility.yul\":5596:5598   */\n      0x15\n        /* \"#utility.yul\":5591:5594   */\n      dup4\n        /* \"#utility.yul\":5532:5599   */\n      tag_292\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":5525:5599   */\n      swap2\n      pop\n        /* \"#utility.yul\":5608:5701   */\n      tag_384\n        /* \"#utility.yul\":5697:5700   */\n      dup3\n        /* \"#utility.yul\":5608:5701   */\n      tag_293\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":5726:5728   */\n      0x20\n        /* \"#utility.yul\":5721:5724   */\n      dup3\n        /* \"#utility.yul\":5717:5729   */\n      add\n        /* \"#utility.yul\":5710:5729   */\n      swap1\n      pop\n        /* \"#utility.yul\":5369:5735   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5741:6160   */\n    tag_109:\n        /* \"#utility.yul\":5907:5911   */\n      0x00\n        /* \"#utility.yul\":5945:5947   */\n      0x20\n        /* \"#utility.yul\":5934:5943   */\n      dup3\n        /* \"#utility.yul\":5930:5948   */\n      add\n        /* \"#utility.yul\":5922:5948   */\n      swap1\n      pop\n        /* \"#utility.yul\":5994:6003   */\n      dup2\n        /* \"#utility.yul\":5988:5992   */\n      dup2\n        /* \"#utility.yul\":5984:6004   */\n      sub\n        /* \"#utility.yul\":5980:5981   */\n      0x00\n        /* \"#utility.yul\":5969:5978   */\n      dup4\n        /* \"#utility.yul\":5965:5982   */\n      add\n        /* \"#utility.yul\":5958:6005   */\n      mstore\n        /* \"#utility.yul\":6022:6153   */\n      tag_386\n        /* \"#utility.yul\":6148:6152   */\n      dup2\n        /* \"#utility.yul\":6022:6153   */\n      tag_294\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6014:6153   */\n      swap1\n      pop\n        /* \"#utility.yul\":5741:6160   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6166:6346   */\n    tag_112:\n        /* \"#utility.yul\":6214:6291   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6211:6212   */\n      0x00\n        /* \"#utility.yul\":6204:6292   */\n      mstore\n        /* \"#utility.yul\":6311:6315   */\n      0x32\n        /* \"#utility.yul\":6308:6309   */\n      0x04\n        /* \"#utility.yul\":6301:6316   */\n      mstore\n        /* \"#utility.yul\":6335:6339   */\n      0x24\n        /* \"#utility.yul\":6332:6333   */\n      0x00\n        /* \"#utility.yul\":6325:6340   */\n      revert\n        /* \"#utility.yul\":6352:6532   */\n    tag_295:\n        /* \"#utility.yul\":6400:6477   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6397:6398   */\n      0x00\n        /* \"#utility.yul\":6390:6478   */\n      mstore\n        /* \"#utility.yul\":6497:6501   */\n      0x11\n        /* \"#utility.yul\":6494:6495   */\n      0x04\n        /* \"#utility.yul\":6487:6502   */\n      mstore\n        /* \"#utility.yul\":6521:6525   */\n      0x24\n        /* \"#utility.yul\":6518:6519   */\n      0x00\n        /* \"#utility.yul\":6511:6526   */\n      revert\n        /* \"#utility.yul\":6538:6732   */\n    tag_119:\n        /* \"#utility.yul\":6578:6582   */\n      0x00\n        /* \"#utility.yul\":6598:6618   */\n      tag_390\n        /* \"#utility.yul\":6616:6617   */\n      dup3\n        /* \"#utility.yul\":6598:6618   */\n      tag_279\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6593:6618   */\n      swap2\n      pop\n        /* \"#utility.yul\":6632:6652   */\n      tag_391\n        /* \"#utility.yul\":6650:6651   */\n      dup4\n        /* \"#utility.yul\":6632:6652   */\n      tag_279\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":6627:6652   */\n      swap3\n      pop\n        /* \"#utility.yul\":6676:6677   */\n      dup3\n        /* \"#utility.yul\":6673:6674   */\n      dup3\n        /* \"#utility.yul\":6669:6678   */\n      sub\n        /* \"#utility.yul\":6661:6678   */\n      swap1\n      pop\n        /* \"#utility.yul\":6700:6701   */\n      dup2\n        /* \"#utility.yul\":6694:6698   */\n      dup2\n        /* \"#utility.yul\":6691:6702   */\n      gt\n        /* \"#utility.yul\":6688:6725   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":6705:6723   */\n      tag_393\n      tag_295\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6688:6725   */\n    tag_392:\n        /* \"#utility.yul\":6538:6732   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6738:6910   */\n    tag_296:\n        /* \"#utility.yul\":6878:6902   */\n      0x50726573616c6520737564616820626572616b68697200000000000000000000\n        /* \"#utility.yul\":6874:6875   */\n      0x00\n        /* \"#utility.yul\":6866:6872   */\n      dup3\n        /* \"#utility.yul\":6862:6876   */\n      add\n        /* \"#utility.yul\":6855:6903   */\n      mstore\n        /* \"#utility.yul\":6738:6910   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6916:7282   */\n    tag_297:\n        /* \"#utility.yul\":7058:7061   */\n      0x00\n        /* \"#utility.yul\":7079:7146   */\n      tag_396\n        /* \"#utility.yul\":7143:7145   */\n      0x16\n        /* \"#utility.yul\":7138:7141   */\n      dup4\n        /* \"#utility.yul\":7079:7146   */\n      tag_292\n      jump\t// in\n    tag_396:\n        /* \"#utility.yul\":7072:7146   */\n      swap2\n      pop\n        /* \"#utility.yul\":7155:7248   */\n      tag_397\n        /* \"#utility.yul\":7244:7247   */\n      dup3\n        /* \"#utility.yul\":7155:7248   */\n      tag_296\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7273:7275   */\n      0x20\n        /* \"#utility.yul\":7268:7271   */\n      dup3\n        /* \"#utility.yul\":7264:7276   */\n      add\n        /* \"#utility.yul\":7257:7276   */\n      swap1\n      pop\n        /* \"#utility.yul\":6916:7282   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7288:7707   */\n    tag_126:\n        /* \"#utility.yul\":7454:7458   */\n      0x00\n        /* \"#utility.yul\":7492:7494   */\n      0x20\n        /* \"#utility.yul\":7481:7490   */\n      dup3\n        /* \"#utility.yul\":7477:7495   */\n      add\n        /* \"#utility.yul\":7469:7495   */\n      swap1\n      pop\n        /* \"#utility.yul\":7541:7550   */\n      dup2\n        /* \"#utility.yul\":7535:7539   */\n      dup2\n        /* \"#utility.yul\":7531:7551   */\n      sub\n        /* \"#utility.yul\":7527:7528   */\n      0x00\n        /* \"#utility.yul\":7516:7525   */\n      dup4\n        /* \"#utility.yul\":7512:7529   */\n      add\n        /* \"#utility.yul\":7505:7552   */\n      mstore\n        /* \"#utility.yul\":7569:7700   */\n      tag_399\n        /* \"#utility.yul\":7695:7699   */\n      dup2\n        /* \"#utility.yul\":7569:7700   */\n      tag_297\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7561:7700   */\n      swap1\n      pop\n        /* \"#utility.yul\":7288:7707   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7713:7884   */\n    tag_298:\n        /* \"#utility.yul\":7853:7876   */\n      0x50726573616c652062656c756d2064696d756c61690000000000000000000000\n        /* \"#utility.yul\":7849:7850   */\n      0x00\n        /* \"#utility.yul\":7841:7847   */\n      dup3\n        /* \"#utility.yul\":7837:7851   */\n      add\n        /* \"#utility.yul\":7830:7877   */\n      mstore\n        /* \"#utility.yul\":7713:7884   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7890:8256   */\n    tag_299:\n        /* \"#utility.yul\":8032:8035   */\n      0x00\n        /* \"#utility.yul\":8053:8120   */\n      tag_402\n        /* \"#utility.yul\":8117:8119   */\n      0x15\n        /* \"#utility.yul\":8112:8115   */\n      dup4\n        /* \"#utility.yul\":8053:8120   */\n      tag_292\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":8046:8120   */\n      swap2\n      pop\n        /* \"#utility.yul\":8129:8222   */\n      tag_403\n        /* \"#utility.yul\":8218:8221   */\n      dup3\n        /* \"#utility.yul\":8129:8222   */\n      tag_298\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":8247:8249   */\n      0x20\n        /* \"#utility.yul\":8242:8245   */\n      dup3\n        /* \"#utility.yul\":8238:8250   */\n      add\n        /* \"#utility.yul\":8231:8250   */\n      swap1\n      pop\n        /* \"#utility.yul\":7890:8256   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8262:8681   */\n    tag_129:\n        /* \"#utility.yul\":8428:8432   */\n      0x00\n        /* \"#utility.yul\":8466:8468   */\n      0x20\n        /* \"#utility.yul\":8455:8464   */\n      dup3\n        /* \"#utility.yul\":8451:8469   */\n      add\n        /* \"#utility.yul\":8443:8469   */\n      swap1\n      pop\n        /* \"#utility.yul\":8515:8524   */\n      dup2\n        /* \"#utility.yul\":8509:8513   */\n      dup2\n        /* \"#utility.yul\":8505:8525   */\n      sub\n        /* \"#utility.yul\":8501:8502   */\n      0x00\n        /* \"#utility.yul\":8490:8499   */\n      dup4\n        /* \"#utility.yul\":8486:8503   */\n      add\n        /* \"#utility.yul\":8479:8526   */\n      mstore\n        /* \"#utility.yul\":8543:8674   */\n      tag_405\n        /* \"#utility.yul\":8669:8673   */\n      dup2\n        /* \"#utility.yul\":8543:8674   */\n      tag_299\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":8535:8674   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8687:8878   */\n    tag_131:\n        /* \"#utility.yul\":8727:8730   */\n      0x00\n        /* \"#utility.yul\":8746:8766   */\n      tag_407\n        /* \"#utility.yul\":8764:8765   */\n      dup3\n        /* \"#utility.yul\":8746:8766   */\n      tag_279\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8741:8766   */\n      swap2\n      pop\n        /* \"#utility.yul\":8780:8800   */\n      tag_408\n        /* \"#utility.yul\":8798:8799   */\n      dup4\n        /* \"#utility.yul\":8780:8800   */\n      tag_279\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8775:8800   */\n      swap3\n      pop\n        /* \"#utility.yul\":8823:8824   */\n      dup3\n        /* \"#utility.yul\":8820:8821   */\n      dup3\n        /* \"#utility.yul\":8816:8825   */\n      add\n        /* \"#utility.yul\":8809:8825   */\n      swap1\n      pop\n        /* \"#utility.yul\":8844:8847   */\n      dup1\n        /* \"#utility.yul\":8841:8842   */\n      dup3\n        /* \"#utility.yul\":8838:8848   */\n      gt\n        /* \"#utility.yul\":8835:8871   */\n      iszero\n      tag_409\n      jumpi\n        /* \"#utility.yul\":8851:8869   */\n      tag_410\n      tag_295\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8835:8871   */\n    tag_409:\n        /* \"#utility.yul\":8687:8878   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8884:9052   */\n    tag_300:\n        /* \"#utility.yul\":9024:9044   */\n      0x4a756d6c616820746964616b2076616c69640000000000000000000000000000\n        /* \"#utility.yul\":9020:9021   */\n      0x00\n        /* \"#utility.yul\":9012:9018   */\n      dup3\n        /* \"#utility.yul\":9008:9022   */\n      add\n        /* \"#utility.yul\":9001:9045   */\n      mstore\n        /* \"#utility.yul\":8884:9052   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9058:9424   */\n    tag_301:\n        /* \"#utility.yul\":9200:9203   */\n      0x00\n        /* \"#utility.yul\":9221:9288   */\n      tag_413\n        /* \"#utility.yul\":9285:9287   */\n      0x12\n        /* \"#utility.yul\":9280:9283   */\n      dup4\n        /* \"#utility.yul\":9221:9288   */\n      tag_292\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":9214:9288   */\n      swap2\n      pop\n        /* \"#utility.yul\":9297:9390   */\n      tag_414\n        /* \"#utility.yul\":9386:9389   */\n      dup3\n        /* \"#utility.yul\":9297:9390   */\n      tag_300\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":9415:9417   */\n      0x20\n        /* \"#utility.yul\":9410:9413   */\n      dup3\n        /* \"#utility.yul\":9406:9418   */\n      add\n        /* \"#utility.yul\":9399:9418   */\n      swap1\n      pop\n        /* \"#utility.yul\":9058:9424   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9430:9849   */\n    tag_137:\n        /* \"#utility.yul\":9596:9600   */\n      0x00\n        /* \"#utility.yul\":9634:9636   */\n      0x20\n        /* \"#utility.yul\":9623:9632   */\n      dup3\n        /* \"#utility.yul\":9619:9637   */\n      add\n        /* \"#utility.yul\":9611:9637   */\n      swap1\n      pop\n        /* \"#utility.yul\":9683:9692   */\n      dup2\n        /* \"#utility.yul\":9677:9681   */\n      dup2\n        /* \"#utility.yul\":9673:9693   */\n      sub\n        /* \"#utility.yul\":9669:9670   */\n      0x00\n        /* \"#utility.yul\":9658:9667   */\n      dup4\n        /* \"#utility.yul\":9654:9671   */\n      add\n        /* \"#utility.yul\":9647:9694   */\n      mstore\n        /* \"#utility.yul\":9711:9842   */\n      tag_416\n        /* \"#utility.yul\":9837:9841   */\n      dup2\n        /* \"#utility.yul\":9711:9842   */\n      tag_301\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9703:9842   */\n      swap1\n      pop\n        /* \"#utility.yul\":9430:9849   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9855:10029   */\n    tag_302:\n        /* \"#utility.yul\":9995:10021   */\n      0x4d656c65626968692062617461732070656d62656c69616e0000000000000000\n        /* \"#utility.yul\":9991:9992   */\n      0x00\n        /* \"#utility.yul\":9983:9989   */\n      dup3\n        /* \"#utility.yul\":9979:9993   */\n      add\n        /* \"#utility.yul\":9972:10022   */\n      mstore\n        /* \"#utility.yul\":9855:10029   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10035:10401   */\n    tag_303:\n        /* \"#utility.yul\":10177:10180   */\n      0x00\n        /* \"#utility.yul\":10198:10265   */\n      tag_419\n        /* \"#utility.yul\":10262:10264   */\n      0x18\n        /* \"#utility.yul\":10257:10260   */\n      dup4\n        /* \"#utility.yul\":10198:10265   */\n      tag_292\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":10191:10265   */\n      swap2\n      pop\n        /* \"#utility.yul\":10274:10367   */\n      tag_420\n        /* \"#utility.yul\":10363:10366   */\n      dup3\n        /* \"#utility.yul\":10274:10367   */\n      tag_302\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":10392:10394   */\n      0x20\n        /* \"#utility.yul\":10387:10390   */\n      dup3\n        /* \"#utility.yul\":10383:10395   */\n      add\n        /* \"#utility.yul\":10376:10395   */\n      swap1\n      pop\n        /* \"#utility.yul\":10035:10401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10407:10826   */\n    tag_141:\n        /* \"#utility.yul\":10573:10577   */\n      0x00\n        /* \"#utility.yul\":10611:10613   */\n      0x20\n        /* \"#utility.yul\":10600:10609   */\n      dup3\n        /* \"#utility.yul\":10596:10614   */\n      add\n        /* \"#utility.yul\":10588:10614   */\n      swap1\n      pop\n        /* \"#utility.yul\":10660:10669   */\n      dup2\n        /* \"#utility.yul\":10654:10658   */\n      dup2\n        /* \"#utility.yul\":10650:10670   */\n      sub\n        /* \"#utility.yul\":10646:10647   */\n      0x00\n        /* \"#utility.yul\":10635:10644   */\n      dup4\n        /* \"#utility.yul\":10631:10648   */\n      add\n        /* \"#utility.yul\":10624:10671   */\n      mstore\n        /* \"#utility.yul\":10688:10819   */\n      tag_422\n        /* \"#utility.yul\":10814:10818   */\n      dup2\n        /* \"#utility.yul\":10688:10819   */\n      tag_303\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":10680:10819   */\n      swap1\n      pop\n        /* \"#utility.yul\":10407:10826   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10832:10999   */\n    tag_304:\n        /* \"#utility.yul\":10972:10991   */\n      0x537461676520746964616b20616b746966000000000000000000000000000000\n        /* \"#utility.yul\":10968:10969   */\n      0x00\n        /* \"#utility.yul\":10960:10966   */\n      dup3\n        /* \"#utility.yul\":10956:10970   */\n      add\n        /* \"#utility.yul\":10949:10992   */\n      mstore\n        /* \"#utility.yul\":10832:10999   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11005:11371   */\n    tag_305:\n        /* \"#utility.yul\":11147:11150   */\n      0x00\n        /* \"#utility.yul\":11168:11235   */\n      tag_425\n        /* \"#utility.yul\":11232:11234   */\n      0x11\n        /* \"#utility.yul\":11227:11230   */\n      dup4\n        /* \"#utility.yul\":11168:11235   */\n      tag_292\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11161:11235   */\n      swap2\n      pop\n        /* \"#utility.yul\":11244:11337   */\n      tag_426\n        /* \"#utility.yul\":11333:11336   */\n      dup3\n        /* \"#utility.yul\":11244:11337   */\n      tag_304\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":11362:11364   */\n      0x20\n        /* \"#utility.yul\":11357:11360   */\n      dup3\n        /* \"#utility.yul\":11353:11365   */\n      add\n        /* \"#utility.yul\":11346:11365   */\n      swap1\n      pop\n        /* \"#utility.yul\":11005:11371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11377:11796   */\n    tag_147:\n        /* \"#utility.yul\":11543:11547   */\n      0x00\n        /* \"#utility.yul\":11581:11583   */\n      0x20\n        /* \"#utility.yul\":11570:11579   */\n      dup3\n        /* \"#utility.yul\":11566:11584   */\n      add\n        /* \"#utility.yul\":11558:11584   */\n      swap1\n      pop\n        /* \"#utility.yul\":11630:11639   */\n      dup2\n        /* \"#utility.yul\":11624:11628   */\n      dup2\n        /* \"#utility.yul\":11620:11640   */\n      sub\n        /* \"#utility.yul\":11616:11617   */\n      0x00\n        /* \"#utility.yul\":11605:11614   */\n      dup4\n        /* \"#utility.yul\":11601:11618   */\n      add\n        /* \"#utility.yul\":11594:11641   */\n      mstore\n        /* \"#utility.yul\":11658:11789   */\n      tag_428\n        /* \"#utility.yul\":11784:11788   */\n      dup2\n        /* \"#utility.yul\":11658:11789   */\n      tag_305\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":11650:11789   */\n      swap1\n      pop\n        /* \"#utility.yul\":11377:11796   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11802:11972   */\n    tag_306:\n        /* \"#utility.yul\":11942:11964   */\n      0x4d656c6562696869206b756f7461207374616765000000000000000000000000\n        /* \"#utility.yul\":11938:11939   */\n      0x00\n        /* \"#utility.yul\":11930:11936   */\n      dup3\n        /* \"#utility.yul\":11926:11940   */\n      add\n        /* \"#utility.yul\":11919:11965   */\n      mstore\n        /* \"#utility.yul\":11802:11972   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11978:12344   */\n    tag_307:\n        /* \"#utility.yul\":12120:12123   */\n      0x00\n        /* \"#utility.yul\":12141:12208   */\n      tag_431\n        /* \"#utility.yul\":12205:12207   */\n      0x14\n        /* \"#utility.yul\":12200:12203   */\n      dup4\n        /* \"#utility.yul\":12141:12208   */\n      tag_292\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12134:12208   */\n      swap2\n      pop\n        /* \"#utility.yul\":12217:12310   */\n      tag_432\n        /* \"#utility.yul\":12306:12309   */\n      dup3\n        /* \"#utility.yul\":12217:12310   */\n      tag_306\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":12335:12337   */\n      0x20\n        /* \"#utility.yul\":12330:12333   */\n      dup3\n        /* \"#utility.yul\":12326:12338   */\n      add\n        /* \"#utility.yul\":12319:12338   */\n      swap1\n      pop\n        /* \"#utility.yul\":11978:12344   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12350:12769   */\n    tag_151:\n        /* \"#utility.yul\":12516:12520   */\n      0x00\n        /* \"#utility.yul\":12554:12556   */\n      0x20\n        /* \"#utility.yul\":12543:12552   */\n      dup3\n        /* \"#utility.yul\":12539:12557   */\n      add\n        /* \"#utility.yul\":12531:12557   */\n      swap1\n      pop\n        /* \"#utility.yul\":12603:12612   */\n      dup2\n        /* \"#utility.yul\":12597:12601   */\n      dup2\n        /* \"#utility.yul\":12593:12613   */\n      sub\n        /* \"#utility.yul\":12589:12590   */\n      0x00\n        /* \"#utility.yul\":12578:12587   */\n      dup4\n        /* \"#utility.yul\":12574:12591   */\n      add\n        /* \"#utility.yul\":12567:12614   */\n      mstore\n        /* \"#utility.yul\":12631:12762   */\n      tag_434\n        /* \"#utility.yul\":12757:12761   */\n      dup2\n        /* \"#utility.yul\":12631:12762   */\n      tag_307\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":12623:12762   */\n      swap1\n      pop\n        /* \"#utility.yul\":12350:12769   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12775:13185   */\n    tag_153:\n        /* \"#utility.yul\":12815:12822   */\n      0x00\n        /* \"#utility.yul\":12838:12858   */\n      tag_436\n        /* \"#utility.yul\":12856:12857   */\n      dup3\n        /* \"#utility.yul\":12838:12858   */\n      tag_279\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":12833:12858   */\n      swap2\n      pop\n        /* \"#utility.yul\":12872:12892   */\n      tag_437\n        /* \"#utility.yul\":12890:12891   */\n      dup4\n        /* \"#utility.yul\":12872:12892   */\n      tag_279\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":12867:12892   */\n      swap3\n      pop\n        /* \"#utility.yul\":12927:12928   */\n      dup3\n        /* \"#utility.yul\":12924:12925   */\n      dup3\n        /* \"#utility.yul\":12920:12929   */\n      mul\n        /* \"#utility.yul\":12949:12979   */\n      tag_438\n        /* \"#utility.yul\":12967:12978   */\n      dup2\n        /* \"#utility.yul\":12949:12979   */\n      tag_279\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":12938:12979   */\n      swap2\n      pop\n        /* \"#utility.yul\":13128:13129   */\n      dup3\n        /* \"#utility.yul\":13119:13126   */\n      dup3\n        /* \"#utility.yul\":13115:13130   */\n      div\n        /* \"#utility.yul\":13112:13113   */\n      dup5\n        /* \"#utility.yul\":13109:13131   */\n      eq\n        /* \"#utility.yul\":13089:13090   */\n      dup4\n        /* \"#utility.yul\":13082:13091   */\n      iszero\n        /* \"#utility.yul\":13062:13145   */\n      or\n        /* \"#utility.yul\":13039:13178   */\n      tag_439\n      jumpi\n        /* \"#utility.yul\":13158:13176   */\n      tag_440\n      tag_295\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":13039:13178   */\n    tag_439:\n        /* \"#utility.yul\":12823:13185   */\n      pop\n        /* \"#utility.yul\":12775:13185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13191:13371   */\n    tag_308:\n        /* \"#utility.yul\":13239:13316   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13236:13237   */\n      0x00\n        /* \"#utility.yul\":13229:13317   */\n      mstore\n        /* \"#utility.yul\":13336:13340   */\n      0x12\n        /* \"#utility.yul\":13333:13334   */\n      0x04\n        /* \"#utility.yul\":13326:13341   */\n      mstore\n        /* \"#utility.yul\":13360:13364   */\n      0x24\n        /* \"#utility.yul\":13357:13358   */\n      0x00\n        /* \"#utility.yul\":13350:13365   */\n      revert\n        /* \"#utility.yul\":13377:13562   */\n    tag_155:\n        /* \"#utility.yul\":13417:13418   */\n      0x00\n        /* \"#utility.yul\":13434:13454   */\n      tag_443\n        /* \"#utility.yul\":13452:13453   */\n      dup3\n        /* \"#utility.yul\":13434:13454   */\n      tag_279\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13429:13454   */\n      swap2\n      pop\n        /* \"#utility.yul\":13468:13488   */\n      tag_444\n        /* \"#utility.yul\":13486:13487   */\n      dup4\n        /* \"#utility.yul\":13468:13488   */\n      tag_279\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":13463:13488   */\n      swap3\n      pop\n        /* \"#utility.yul\":13507:13508   */\n      dup3\n        /* \"#utility.yul\":13497:13532   */\n      tag_445\n      jumpi\n        /* \"#utility.yul\":13512:13530   */\n      tag_446\n      tag_308\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":13497:13532   */\n    tag_445:\n        /* \"#utility.yul\":13554:13555   */\n      dup3\n        /* \"#utility.yul\":13551:13552   */\n      dup3\n        /* \"#utility.yul\":13547:13556   */\n      div\n        /* \"#utility.yul\":13542:13556   */\n      swap1\n      pop\n        /* \"#utility.yul\":13377:13562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13568:13900   */\n    tag_165:\n        /* \"#utility.yul\":13689:13693   */\n      0x00\n        /* \"#utility.yul\":13727:13729   */\n      0x40\n        /* \"#utility.yul\":13716:13725   */\n      dup3\n        /* \"#utility.yul\":13712:13730   */\n      add\n        /* \"#utility.yul\":13704:13730   */\n      swap1\n      pop\n        /* \"#utility.yul\":13740:13811   */\n      tag_448\n        /* \"#utility.yul\":13808:13809   */\n      0x00\n        /* \"#utility.yul\":13797:13806   */\n      dup4\n        /* \"#utility.yul\":13793:13810   */\n      add\n        /* \"#utility.yul\":13784:13790   */\n      dup6\n        /* \"#utility.yul\":13740:13811   */\n      tag_280\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":13821:13893   */\n      tag_449\n        /* \"#utility.yul\":13889:13891   */\n      0x20\n        /* \"#utility.yul\":13878:13887   */\n      dup4\n        /* \"#utility.yul\":13874:13892   */\n      add\n        /* \"#utility.yul\":13865:13871   */\n      dup5\n        /* \"#utility.yul\":13821:13893   */\n      tag_280\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":13568:13900   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13906:14072   */\n    tag_309:\n        /* \"#utility.yul\":14046:14064   */\n      0x42656c756d206269736120636c61696d00000000000000000000000000000000\n        /* \"#utility.yul\":14042:14043   */\n      0x00\n        /* \"#utility.yul\":14034:14040   */\n      dup3\n        /* \"#utility.yul\":14030:14044   */\n      add\n        /* \"#utility.yul\":14023:14065   */\n      mstore\n        /* \"#utility.yul\":13906:14072   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14078:14444   */\n    tag_310:\n        /* \"#utility.yul\":14220:14223   */\n      0x00\n        /* \"#utility.yul\":14241:14308   */\n      tag_452\n        /* \"#utility.yul\":14305:14307   */\n      0x10\n        /* \"#utility.yul\":14300:14303   */\n      dup4\n        /* \"#utility.yul\":14241:14308   */\n      tag_292\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14234:14308   */\n      swap2\n      pop\n        /* \"#utility.yul\":14317:14410   */\n      tag_453\n        /* \"#utility.yul\":14406:14409   */\n      dup3\n        /* \"#utility.yul\":14317:14410   */\n      tag_309\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":14435:14437   */\n      0x20\n        /* \"#utility.yul\":14430:14433   */\n      dup3\n        /* \"#utility.yul\":14426:14438   */\n      add\n        /* \"#utility.yul\":14419:14438   */\n      swap1\n      pop\n        /* \"#utility.yul\":14078:14444   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14450:14869   */\n    tag_175:\n        /* \"#utility.yul\":14616:14620   */\n      0x00\n        /* \"#utility.yul\":14654:14656   */\n      0x20\n        /* \"#utility.yul\":14643:14652   */\n      dup3\n        /* \"#utility.yul\":14639:14657   */\n      add\n        /* \"#utility.yul\":14631:14657   */\n      swap1\n      pop\n        /* \"#utility.yul\":14703:14712   */\n      dup2\n        /* \"#utility.yul\":14697:14701   */\n      dup2\n        /* \"#utility.yul\":14693:14713   */\n      sub\n        /* \"#utility.yul\":14689:14690   */\n      0x00\n        /* \"#utility.yul\":14678:14687   */\n      dup4\n        /* \"#utility.yul\":14674:14691   */\n      add\n        /* \"#utility.yul\":14667:14714   */\n      mstore\n        /* \"#utility.yul\":14731:14862   */\n      tag_455\n        /* \"#utility.yul\":14857:14861   */\n      dup2\n        /* \"#utility.yul\":14731:14862   */\n      tag_310\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":14723:14862   */\n      swap1\n      pop\n        /* \"#utility.yul\":14450:14869   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14875:15055   */\n    tag_311:\n        /* \"#utility.yul\":15015:15047   */\n      0x546964616b2061646120746f6b656e20756e74756b2064692d636c61696d0000\n        /* \"#utility.yul\":15011:15012   */\n      0x00\n        /* \"#utility.yul\":15003:15009   */\n      dup3\n        /* \"#utility.yul\":14999:15013   */\n      add\n        /* \"#utility.yul\":14992:15048   */\n      mstore\n        /* \"#utility.yul\":14875:15055   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15061:15427   */\n    tag_312:\n        /* \"#utility.yul\":15203:15206   */\n      0x00\n        /* \"#utility.yul\":15224:15291   */\n      tag_458\n        /* \"#utility.yul\":15288:15290   */\n      0x1e\n        /* \"#utility.yul\":15283:15286   */\n      dup4\n        /* \"#utility.yul\":15224:15291   */\n      tag_292\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":15217:15291   */\n      swap2\n      pop\n        /* \"#utility.yul\":15300:15393   */\n      tag_459\n        /* \"#utility.yul\":15389:15392   */\n      dup3\n        /* \"#utility.yul\":15300:15393   */\n      tag_311\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":15418:15420   */\n      0x20\n        /* \"#utility.yul\":15413:15416   */\n      dup3\n        /* \"#utility.yul\":15409:15421   */\n      add\n        /* \"#utility.yul\":15402:15421   */\n      swap1\n      pop\n        /* \"#utility.yul\":15061:15427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15433:15852   */\n    tag_178:\n        /* \"#utility.yul\":15599:15603   */\n      0x00\n        /* \"#utility.yul\":15637:15639   */\n      0x20\n        /* \"#utility.yul\":15626:15635   */\n      dup3\n        /* \"#utility.yul\":15622:15640   */\n      add\n        /* \"#utility.yul\":15614:15640   */\n      swap1\n      pop\n        /* \"#utility.yul\":15686:15695   */\n      dup2\n        /* \"#utility.yul\":15680:15684   */\n      dup2\n        /* \"#utility.yul\":15676:15696   */\n      sub\n        /* \"#utility.yul\":15672:15673   */\n      0x00\n        /* \"#utility.yul\":15661:15670   */\n      dup4\n        /* \"#utility.yul\":15657:15674   */\n      add\n        /* \"#utility.yul\":15650:15697   */\n      mstore\n        /* \"#utility.yul\":15714:15845   */\n      tag_461\n        /* \"#utility.yul\":15840:15844   */\n      dup2\n        /* \"#utility.yul\":15714:15845   */\n      tag_312\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15706:15845   */\n      swap1\n      pop\n        /* \"#utility.yul\":15433:15852   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15858:16030   */\n    tag_313:\n        /* \"#utility.yul\":15998:16022   */\n      0x50726573616c65207375646168206469616b6869726900000000000000000000\n        /* \"#utility.yul\":15994:15995   */\n      0x00\n        /* \"#utility.yul\":15986:15992   */\n      dup3\n        /* \"#utility.yul\":15982:15996   */\n      add\n        /* \"#utility.yul\":15975:16023   */\n      mstore\n        /* \"#utility.yul\":15858:16030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16036:16402   */\n    tag_314:\n        /* \"#utility.yul\":16178:16181   */\n      0x00\n        /* \"#utility.yul\":16199:16266   */\n      tag_464\n        /* \"#utility.yul\":16263:16265   */\n      0x16\n        /* \"#utility.yul\":16258:16261   */\n      dup4\n        /* \"#utility.yul\":16199:16266   */\n      tag_292\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16192:16266   */\n      swap2\n      pop\n        /* \"#utility.yul\":16275:16368   */\n      tag_465\n        /* \"#utility.yul\":16364:16367   */\n      dup3\n        /* \"#utility.yul\":16275:16368   */\n      tag_313\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16393:16395   */\n      0x20\n        /* \"#utility.yul\":16388:16391   */\n      dup3\n        /* \"#utility.yul\":16384:16396   */\n      add\n        /* \"#utility.yul\":16377:16396   */\n      swap1\n      pop\n        /* \"#utility.yul\":16036:16402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16408:16827   */\n    tag_203:\n        /* \"#utility.yul\":16574:16578   */\n      0x00\n        /* \"#utility.yul\":16612:16614   */\n      0x20\n        /* \"#utility.yul\":16601:16610   */\n      dup3\n        /* \"#utility.yul\":16597:16615   */\n      add\n        /* \"#utility.yul\":16589:16615   */\n      swap1\n      pop\n        /* \"#utility.yul\":16661:16670   */\n      dup2\n        /* \"#utility.yul\":16655:16659   */\n      dup2\n        /* \"#utility.yul\":16651:16671   */\n      sub\n        /* \"#utility.yul\":16647:16648   */\n      0x00\n        /* \"#utility.yul\":16636:16645   */\n      dup4\n        /* \"#utility.yul\":16632:16649   */\n      add\n        /* \"#utility.yul\":16625:16672   */\n      mstore\n        /* \"#utility.yul\":16689:16820   */\n      tag_467\n        /* \"#utility.yul\":16815:16819   */\n      dup2\n        /* \"#utility.yul\":16689:16820   */\n      tag_314\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16681:16820   */\n      swap1\n      pop\n        /* \"#utility.yul\":16408:16827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16833:16976   */\n    tag_315:\n        /* \"#utility.yul\":16890:16895   */\n      0x00\n        /* \"#utility.yul\":16921:16927   */\n      dup2\n        /* \"#utility.yul\":16915:16928   */\n      mload\n        /* \"#utility.yul\":16906:16928   */\n      swap1\n      pop\n        /* \"#utility.yul\":16937:16970   */\n      tag_469\n        /* \"#utility.yul\":16964:16969   */\n      dup2\n        /* \"#utility.yul\":16937:16970   */\n      tag_284\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":16833:16976   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16982:17333   */\n    tag_208:\n        /* \"#utility.yul\":17052:17058   */\n      0x00\n        /* \"#utility.yul\":17101:17103   */\n      0x20\n        /* \"#utility.yul\":17089:17098   */\n      dup3\n        /* \"#utility.yul\":17080:17087   */\n      dup5\n        /* \"#utility.yul\":17076:17099   */\n      sub\n        /* \"#utility.yul\":17072:17104   */\n      slt\n        /* \"#utility.yul\":17069:17188   */\n      iszero\n      tag_471\n      jumpi\n        /* \"#utility.yul\":17107:17186   */\n      tag_472\n      tag_282\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":17069:17188   */\n    tag_471:\n        /* \"#utility.yul\":17227:17228   */\n      0x00\n        /* \"#utility.yul\":17252:17316   */\n      tag_473\n        /* \"#utility.yul\":17308:17315   */\n      dup5\n        /* \"#utility.yul\":17299:17305   */\n      dup3\n        /* \"#utility.yul\":17288:17297   */\n      dup6\n        /* \"#utility.yul\":17284:17306   */\n      add\n        /* \"#utility.yul\":17252:17316   */\n      tag_315\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17242:17316   */\n      swap2\n      pop\n        /* \"#utility.yul\":17198:17326   */\n      pop\n        /* \"#utility.yul\":16982:17333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17339:17520   */\n    tag_316:\n        /* \"#utility.yul\":17479:17512   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":17475:17476   */\n      0x00\n        /* \"#utility.yul\":17467:17473   */\n      dup3\n        /* \"#utility.yul\":17463:17477   */\n      add\n        /* \"#utility.yul\":17456:17513   */\n      mstore\n        /* \"#utility.yul\":17339:17520   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17526:17892   */\n    tag_317:\n        /* \"#utility.yul\":17668:17671   */\n      0x00\n        /* \"#utility.yul\":17689:17756   */\n      tag_476\n        /* \"#utility.yul\":17753:17755   */\n      0x1f\n        /* \"#utility.yul\":17748:17751   */\n      dup4\n        /* \"#utility.yul\":17689:17756   */\n      tag_292\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17682:17756   */\n      swap2\n      pop\n        /* \"#utility.yul\":17765:17858   */\n      tag_477\n        /* \"#utility.yul\":17854:17857   */\n      dup3\n        /* \"#utility.yul\":17765:17858   */\n      tag_316\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17883:17885   */\n      0x20\n        /* \"#utility.yul\":17878:17881   */\n      dup3\n        /* \"#utility.yul\":17874:17886   */\n      add\n        /* \"#utility.yul\":17867:17886   */\n      swap1\n      pop\n        /* \"#utility.yul\":17526:17892   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17898:18317   */\n    tag_233:\n        /* \"#utility.yul\":18064:18068   */\n      0x00\n        /* \"#utility.yul\":18102:18104   */\n      0x20\n        /* \"#utility.yul\":18091:18100   */\n      dup3\n        /* \"#utility.yul\":18087:18105   */\n      add\n        /* \"#utility.yul\":18079:18105   */\n      swap1\n      pop\n        /* \"#utility.yul\":18151:18160   */\n      dup2\n        /* \"#utility.yul\":18145:18149   */\n      dup2\n        /* \"#utility.yul\":18141:18161   */\n      sub\n        /* \"#utility.yul\":18137:18138   */\n      0x00\n        /* \"#utility.yul\":18126:18135   */\n      dup4\n        /* \"#utility.yul\":18122:18139   */\n      add\n        /* \"#utility.yul\":18115:18162   */\n      mstore\n        /* \"#utility.yul\":18179:18310   */\n      tag_479\n        /* \"#utility.yul\":18305:18309   */\n      dup2\n        /* \"#utility.yul\":18179:18310   */\n      tag_317\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":18171:18310   */\n      swap1\n      pop\n        /* \"#utility.yul\":17898:18317   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18323:18765   */\n    tag_237:\n        /* \"#utility.yul\":18472:18476   */\n      0x00\n        /* \"#utility.yul\":18510:18512   */\n      0x60\n        /* \"#utility.yul\":18499:18508   */\n      dup3\n        /* \"#utility.yul\":18495:18513   */\n      add\n        /* \"#utility.yul\":18487:18513   */\n      swap1\n      pop\n        /* \"#utility.yul\":18523:18594   */\n      tag_481\n        /* \"#utility.yul\":18591:18592   */\n      0x00\n        /* \"#utility.yul\":18580:18589   */\n      dup4\n        /* \"#utility.yul\":18576:18593   */\n      add\n        /* \"#utility.yul\":18567:18573   */\n      dup7\n        /* \"#utility.yul\":18523:18594   */\n      tag_289\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":18604:18676   */\n      tag_482\n        /* \"#utility.yul\":18672:18674   */\n      0x20\n        /* \"#utility.yul\":18661:18670   */\n      dup4\n        /* \"#utility.yul\":18657:18675   */\n      add\n        /* \"#utility.yul\":18648:18654   */\n      dup6\n        /* \"#utility.yul\":18604:18676   */\n      tag_289\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":18686:18758   */\n      tag_483\n        /* \"#utility.yul\":18754:18756   */\n      0x40\n        /* \"#utility.yul\":18743:18752   */\n      dup4\n        /* \"#utility.yul\":18739:18757   */\n      add\n        /* \"#utility.yul\":18730:18736   */\n      dup5\n        /* \"#utility.yul\":18686:18758   */\n      tag_280\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":18323:18765   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18771:19004   */\n    tag_246:\n        /* \"#utility.yul\":18810:18813   */\n      0x00\n        /* \"#utility.yul\":18833:18857   */\n      tag_485\n        /* \"#utility.yul\":18851:18856   */\n      dup3\n        /* \"#utility.yul\":18833:18857   */\n      tag_279\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18824:18857   */\n      swap2\n      pop\n        /* \"#utility.yul\":18879:18945   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":18872:18877   */\n      dup3\n        /* \"#utility.yul\":18869:18946   */\n      sub\n        /* \"#utility.yul\":18866:18969   */\n      tag_486\n      jumpi\n        /* \"#utility.yul\":18949:18967   */\n      tag_487\n      tag_295\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":18866:18969   */\n    tag_486:\n        /* \"#utility.yul\":18996:18997   */\n      0x01\n        /* \"#utility.yul\":18989:18994   */\n      dup3\n        /* \"#utility.yul\":18985:18998   */\n      add\n        /* \"#utility.yul\":18978:18998   */\n      swap1\n      pop\n        /* \"#utility.yul\":18771:19004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19010:19342   */\n    tag_261:\n        /* \"#utility.yul\":19131:19135   */\n      0x00\n        /* \"#utility.yul\":19169:19171   */\n      0x40\n        /* \"#utility.yul\":19158:19167   */\n      dup3\n        /* \"#utility.yul\":19154:19172   */\n      add\n        /* \"#utility.yul\":19146:19172   */\n      swap1\n      pop\n        /* \"#utility.yul\":19182:19253   */\n      tag_489\n        /* \"#utility.yul\":19250:19251   */\n      0x00\n        /* \"#utility.yul\":19239:19248   */\n      dup4\n        /* \"#utility.yul\":19235:19252   */\n      add\n        /* \"#utility.yul\":19226:19232   */\n      dup6\n        /* \"#utility.yul\":19182:19253   */\n      tag_289\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":19263:19335   */\n      tag_490\n        /* \"#utility.yul\":19331:19333   */\n      0x20\n        /* \"#utility.yul\":19320:19329   */\n      dup4\n        /* \"#utility.yul\":19316:19334   */\n      add\n        /* \"#utility.yul\":19307:19313   */\n      dup5\n        /* \"#utility.yul\":19263:19335   */\n      tag_280\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":19010:19342   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ff3682e92aa8f6b68cfe030c02075f6ea084e70520ff968910dedf7f8b4422e664736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1184": {
									"entryPoint": null,
									"id": 1184,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_342": {
									"entryPoint": null,
									"id": 342,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 1092,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_208": {
									"entryPoint": 1038,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1479,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1609,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1289,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1285,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f": {
									"entryPoint": 1535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3166:11",
										"nodeType": "YulBlock",
										"src": "0:3166:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:11",
													"nodeType": "YulBlock",
													"src": "47:35:11",
													"statements": [
														{
															"nativeSrc": "57:19:11",
															"nodeType": "YulAssignment",
															"src": "57:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:11",
																		"nodeType": "YulLiteral",
																		"src": "73:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:11"
																},
																"nativeSrc": "67:9:11",
																"nodeType": "YulFunctionCall",
																"src": "67:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:11",
														"nodeType": "YulTypedName",
														"src": "40:6:11",
														"type": ""
													}
												],
												"src": "7:75:11"
											},
											{
												"body": {
													"nativeSrc": "177:28:11",
													"nodeType": "YulBlock",
													"src": "177:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:11",
																		"nodeType": "YulLiteral",
																		"src": "194:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:11",
																		"nodeType": "YulLiteral",
																		"src": "197:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:11"
																},
																"nativeSrc": "187:12:11",
																"nodeType": "YulFunctionCall",
																"src": "187:12:11"
															},
															"nativeSrc": "187:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:11"
											},
											{
												"body": {
													"nativeSrc": "300:28:11",
													"nodeType": "YulBlock",
													"src": "300:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:11",
																		"nodeType": "YulLiteral",
																		"src": "317:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:11",
																		"nodeType": "YulLiteral",
																		"src": "320:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:11"
																},
																"nativeSrc": "310:12:11",
																"nodeType": "YulFunctionCall",
																"src": "310:12:11"
															},
															"nativeSrc": "310:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:11"
											},
											{
												"body": {
													"nativeSrc": "379:81:11",
													"nodeType": "YulBlock",
													"src": "379:81:11",
													"statements": [
														{
															"nativeSrc": "389:65:11",
															"nodeType": "YulAssignment",
															"src": "389:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:11",
																		"nodeType": "YulLiteral",
																		"src": "411:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:11"
																},
																"nativeSrc": "400:54:11",
																"nodeType": "YulFunctionCall",
																"src": "400:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:11",
														"nodeType": "YulTypedName",
														"src": "361:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:11",
														"nodeType": "YulTypedName",
														"src": "371:7:11",
														"type": ""
													}
												],
												"src": "334:126:11"
											},
											{
												"body": {
													"nativeSrc": "511:51:11",
													"nodeType": "YulBlock",
													"src": "511:51:11",
													"statements": [
														{
															"nativeSrc": "521:35:11",
															"nodeType": "YulAssignment",
															"src": "521:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:11"
																},
																"nativeSrc": "532:24:11",
																"nodeType": "YulFunctionCall",
																"src": "532:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:11",
														"nodeType": "YulTypedName",
														"src": "493:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:11",
														"nodeType": "YulTypedName",
														"src": "503:7:11",
														"type": ""
													}
												],
												"src": "466:96:11"
											},
											{
												"body": {
													"nativeSrc": "611:79:11",
													"nodeType": "YulBlock",
													"src": "611:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:11",
																"nodeType": "YulBlock",
																"src": "668:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:11",
																					"nodeType": "YulLiteral",
																					"src": "677:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:11",
																					"nodeType": "YulLiteral",
																					"src": "680:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:11"
																			},
																			"nativeSrc": "670:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:11"
																		},
																		"nativeSrc": "670:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:11"
																				},
																				"nativeSrc": "641:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:11"
																		},
																		"nativeSrc": "631:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:11"
																},
																"nativeSrc": "624:43:11",
																"nodeType": "YulFunctionCall",
																"src": "624:43:11"
															},
															"nativeSrc": "621:63:11",
															"nodeType": "YulIf",
															"src": "621:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:11",
														"nodeType": "YulTypedName",
														"src": "604:5:11",
														"type": ""
													}
												],
												"src": "568:122:11"
											},
											{
												"body": {
													"nativeSrc": "759:80:11",
													"nodeType": "YulBlock",
													"src": "759:80:11",
													"statements": [
														{
															"nativeSrc": "769:22:11",
															"nodeType": "YulAssignment",
															"src": "769:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:11"
																},
																"nativeSrc": "778:13:11",
																"nodeType": "YulFunctionCall",
																"src": "778:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:11"
																},
																"nativeSrc": "800:33:11",
																"nodeType": "YulFunctionCall",
																"src": "800:33:11"
															},
															"nativeSrc": "800:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:11"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:11",
														"nodeType": "YulTypedName",
														"src": "737:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:11",
														"nodeType": "YulTypedName",
														"src": "745:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:11",
														"nodeType": "YulTypedName",
														"src": "753:5:11",
														"type": ""
													}
												],
												"src": "696:143:11"
											},
											{
												"body": {
													"nativeSrc": "973:692:11",
													"nodeType": "YulBlock",
													"src": "973:692:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:83:11",
																"nodeType": "YulBlock",
																"src": "1020:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1022:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "1022:77:11"
																			},
																			"nativeSrc": "1022:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:79:11"
																		},
																		"nativeSrc": "1022:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1003:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1003:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "990:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "990:3:11"
																		},
																		"nativeSrc": "990:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "990:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1015:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1015:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "986:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "986:3:11"
																},
																"nativeSrc": "986:33:11",
																"nodeType": "YulFunctionCall",
																"src": "986:33:11"
															},
															"nativeSrc": "983:120:11",
															"nodeType": "YulIf",
															"src": "983:120:11"
														},
														{
															"nativeSrc": "1113:128:11",
															"nodeType": "YulBlock",
															"src": "1113:128:11",
															"statements": [
																{
																	"nativeSrc": "1128:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1128:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1142:1:11",
																		"nodeType": "YulLiteral",
																		"src": "1142:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1132:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1132:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1157:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1157:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1203:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1203:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1214:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1214:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1199:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1199:3:11"
																				},
																				"nativeSrc": "1199:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1199:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1223:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1223:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1167:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1167:31:11"
																		},
																		"nativeSrc": "1167:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1167:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1157:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1157:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1251:129:11",
															"nodeType": "YulBlock",
															"src": "1251:129:11",
															"statements": [
																{
																	"nativeSrc": "1266:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1266:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1280:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1280:2:11",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1270:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1270:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1296:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1296:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1342:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1342:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1353:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1353:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1338:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1338:3:11"
																				},
																				"nativeSrc": "1338:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1338:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1362:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1362:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1306:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1306:31:11"
																		},
																		"nativeSrc": "1306:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1306:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1296:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1296:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1390:129:11",
															"nodeType": "YulBlock",
															"src": "1390:129:11",
															"statements": [
																{
																	"nativeSrc": "1405:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1405:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1419:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1419:2:11",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1409:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1409:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1435:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1435:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1481:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1481:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1492:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1492:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1477:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1477:3:11"
																				},
																				"nativeSrc": "1477:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1477:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1501:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1501:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1445:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1445:31:11"
																		},
																		"nativeSrc": "1445:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1435:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1435:6:11"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1529:129:11",
															"nodeType": "YulBlock",
															"src": "1529:129:11",
															"statements": [
																{
																	"nativeSrc": "1544:16:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1544:16:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1558:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1558:2:11",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1548:6:11",
																			"nodeType": "YulTypedName",
																			"src": "1548:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1574:74:11",
																	"nodeType": "YulAssignment",
																	"src": "1574:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1620:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "1620:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1631:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "1631:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1616:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "1616:3:11"
																				},
																				"nativeSrc": "1616:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "1616:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1640:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "1640:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1584:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "1584:31:11"
																		},
																		"nativeSrc": "1584:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1584:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1574:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "1574:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:820:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "919:9:11",
														"nodeType": "YulTypedName",
														"src": "919:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "930:7:11",
														"nodeType": "YulTypedName",
														"src": "930:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "942:6:11",
														"nodeType": "YulTypedName",
														"src": "942:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "950:6:11",
														"nodeType": "YulTypedName",
														"src": "950:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "958:6:11",
														"nodeType": "YulTypedName",
														"src": "958:6:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "966:6:11",
														"nodeType": "YulTypedName",
														"src": "966:6:11",
														"type": ""
													}
												],
												"src": "845:820:11"
											},
											{
												"body": {
													"nativeSrc": "1736:53:11",
													"nodeType": "YulBlock",
													"src": "1736:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1753:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1753:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1776:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1776:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1758:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1758:17:11"
																		},
																		"nativeSrc": "1758:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1758:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1746:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1746:6:11"
																},
																"nativeSrc": "1746:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1746:37:11"
															},
															"nativeSrc": "1746:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1746:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1671:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1724:5:11",
														"nodeType": "YulTypedName",
														"src": "1724:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1731:3:11",
														"nodeType": "YulTypedName",
														"src": "1731:3:11",
														"type": ""
													}
												],
												"src": "1671:118:11"
											},
											{
												"body": {
													"nativeSrc": "1893:124:11",
													"nodeType": "YulBlock",
													"src": "1893:124:11",
													"statements": [
														{
															"nativeSrc": "1903:26:11",
															"nodeType": "YulAssignment",
															"src": "1903:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1915:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1915:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1926:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1926:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1911:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1911:3:11"
																},
																"nativeSrc": "1911:18:11",
																"nodeType": "YulFunctionCall",
																"src": "1911:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1903:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1903:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1983:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1983:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1996:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1996:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2007:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2007:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1992:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1992:3:11"
																		},
																		"nativeSrc": "1992:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1939:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1939:43:11"
																},
																"nativeSrc": "1939:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1939:71:11"
															},
															"nativeSrc": "1939:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1939:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1795:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1865:9:11",
														"nodeType": "YulTypedName",
														"src": "1865:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1877:6:11",
														"nodeType": "YulTypedName",
														"src": "1877:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1888:4:11",
														"nodeType": "YulTypedName",
														"src": "1888:4:11",
														"type": ""
													}
												],
												"src": "1795:222:11"
											},
											{
												"body": {
													"nativeSrc": "2119:73:11",
													"nodeType": "YulBlock",
													"src": "2119:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2136:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2136:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2141:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2141:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2129:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2129:6:11"
																},
																"nativeSrc": "2129:19:11",
																"nodeType": "YulFunctionCall",
																"src": "2129:19:11"
															},
															"nativeSrc": "2129:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "2129:19:11"
														},
														{
															"nativeSrc": "2157:29:11",
															"nodeType": "YulAssignment",
															"src": "2157:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2176:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2176:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2181:4:11",
																		"nodeType": "YulLiteral",
																		"src": "2181:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2172:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2172:3:11"
																},
																"nativeSrc": "2172:14:11",
																"nodeType": "YulFunctionCall",
																"src": "2172:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2157:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "2157:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2023:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2091:3:11",
														"nodeType": "YulTypedName",
														"src": "2091:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2096:6:11",
														"nodeType": "YulTypedName",
														"src": "2096:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2107:11:11",
														"nodeType": "YulTypedName",
														"src": "2107:11:11",
														"type": ""
													}
												],
												"src": "2023:169:11"
											},
											{
												"body": {
													"nativeSrc": "2304:62:11",
													"nodeType": "YulBlock",
													"src": "2304:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2326:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2326:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2334:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2334:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2322:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:11"
																		},
																		"nativeSrc": "2322:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:14:11"
																	},
																	{
																		"hexValue": "416c616d617420746964616b2076616c6964",
																		"kind": "string",
																		"nativeSrc": "2338:20:11",
																		"nodeType": "YulLiteral",
																		"src": "2338:20:11",
																		"type": "",
																		"value": "Alamat tidak valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2315:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2315:6:11"
																},
																"nativeSrc": "2315:44:11",
																"nodeType": "YulFunctionCall",
																"src": "2315:44:11"
															},
															"nativeSrc": "2315:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "2315:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f",
												"nativeSrc": "2198:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2296:6:11",
														"nodeType": "YulTypedName",
														"src": "2296:6:11",
														"type": ""
													}
												],
												"src": "2198:168:11"
											},
											{
												"body": {
													"nativeSrc": "2518:220:11",
													"nodeType": "YulBlock",
													"src": "2518:220:11",
													"statements": [
														{
															"nativeSrc": "2528:74:11",
															"nodeType": "YulAssignment",
															"src": "2528:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2594:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2594:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2599:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2599:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2535:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "2535:58:11"
																},
																"nativeSrc": "2535:67:11",
																"nodeType": "YulFunctionCall",
																"src": "2535:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2528:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2700:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2700:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f",
																	"nativeSrc": "2611:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "2611:88:11"
																},
																"nativeSrc": "2611:93:11",
																"nodeType": "YulFunctionCall",
																"src": "2611:93:11"
															},
															"nativeSrc": "2611:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "2611:93:11"
														},
														{
															"nativeSrc": "2713:19:11",
															"nodeType": "YulAssignment",
															"src": "2713:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2724:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "2724:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2729:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2729:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2720:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:11"
																},
																"nativeSrc": "2720:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2720:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2713:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2713:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2372:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2506:3:11",
														"nodeType": "YulTypedName",
														"src": "2506:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2514:3:11",
														"nodeType": "YulTypedName",
														"src": "2514:3:11",
														"type": ""
													}
												],
												"src": "2372:366:11"
											},
											{
												"body": {
													"nativeSrc": "2915:248:11",
													"nodeType": "YulBlock",
													"src": "2915:248:11",
													"statements": [
														{
															"nativeSrc": "2925:26:11",
															"nodeType": "YulAssignment",
															"src": "2925:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2937:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "2937:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2948:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2948:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2933:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2933:3:11"
																},
																"nativeSrc": "2933:18:11",
																"nodeType": "YulFunctionCall",
																"src": "2933:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2925:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "2925:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2972:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2972:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2983:1:11",
																				"nodeType": "YulLiteral",
																				"src": "2983:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2968:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:11"
																		},
																		"nativeSrc": "2968:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2968:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2991:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "2991:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2997:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2997:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2987:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2987:3:11"
																		},
																		"nativeSrc": "2987:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2987:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2961:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2961:6:11"
																},
																"nativeSrc": "2961:47:11",
																"nodeType": "YulFunctionCall",
																"src": "2961:47:11"
															},
															"nativeSrc": "2961:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "2961:47:11"
														},
														{
															"nativeSrc": "3017:139:11",
															"nodeType": "YulAssignment",
															"src": "3017:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3151:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "3151:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3025:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "3025:124:11"
																},
																"nativeSrc": "3025:131:11",
																"nodeType": "YulFunctionCall",
																"src": "3025:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3017:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3017:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2744:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2895:9:11",
														"nodeType": "YulTypedName",
														"src": "2895:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2910:4:11",
														"nodeType": "YulTypedName",
														"src": "2910:4:11",
														"type": ""
													}
												],
												"src": "2744:419:11"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Alamat tidak valid\")\n\n    }\n\n    function abi_encode_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2514 CODESIZE SUB DUP1 PUSH2 0x2514 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x563 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x99 SWAP2 SWAP1 PUSH2 0x5D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB1 DUP2 PUSH2 0x40E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x122 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x15A JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST PUSH2 0x199 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x190 SWAP1 PUSH2 0x649 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xA0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC0 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH11 0x34F086F3B33B684000000 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0xB1A2BC2EC50000 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH11 0x27B46536C66C8E3000000 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x10A741A46278000 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 PUSH11 0x27B46536C66C8E3000000 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x16345785D8A0000 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP PUSH2 0x667 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x441 DUP2 PUSH2 0x444 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x532 DUP3 PUSH2 0x509 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x542 DUP2 PUSH2 0x528 JUMP JUMPDEST DUP2 EQ PUSH2 0x54C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x55D DUP2 PUSH2 0x539 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x57B JUMPI PUSH2 0x57A PUSH2 0x505 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x588 DUP8 DUP3 DUP9 ADD PUSH2 0x54F JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x599 DUP8 DUP3 DUP9 ADD PUSH2 0x54F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x5AA DUP8 DUP3 DUP9 ADD PUSH2 0x54F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x5BB DUP8 DUP3 DUP9 ADD PUSH2 0x54F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x5D0 DUP2 PUSH2 0x528 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5E9 PUSH0 DUP4 ADD DUP5 PUSH2 0x5C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416C616D617420746964616B2076616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x633 PUSH1 0x12 DUP4 PUSH2 0x5EF JUMP JUMPDEST SWAP2 POP PUSH2 0x63E DUP3 PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x660 DUP2 PUSH2 0x627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH2 0x1E59 PUSH2 0x6BB PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x7F1 ADD MSTORE PUSH2 0xB47 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x455 ADD MSTORE DUP2 DUP2 PUSH2 0xAA2 ADD MSTORE DUP2 DUP2 PUSH2 0xD08 ADD MSTORE DUP2 DUP2 PUSH2 0xDB6 ADD MSTORE PUSH2 0x1205 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x513 ADD MSTORE PUSH2 0x813 ADD MSTORE PUSH2 0x1E59 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x845DDCB2 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA82524B2 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA82524B2 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xDB81B278 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xE580B2B0 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF349B76C EQ PUSH2 0x3A5 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x845DDCB2 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x9106D7BA EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x945E4013 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x96713ABF EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA43BE57B EQ PUSH2 0x307 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x39F65C09 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x39F65C09 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x5BF5D54C EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x252 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1F9C729D EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x26D07099 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x966 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0xB69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0xB7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AD PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH2 0xF86 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x492 JUMPI PUSH2 0x491 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x53D PUSH2 0x100D JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST GT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F2 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH2 0x711 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x767 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD SLOAD DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST GT ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BC SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST SWAP1 POP PUSH2 0x858 CALLER PUSH32 0x0 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x105A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0x8F4 JUMPI PUSH2 0x8F3 PUSH2 0x10DC JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x94E PUSH2 0x12B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x100D JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x997 JUMPI POP PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST TIMESTAMP GT JUMPDEST PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CD SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAE6 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB3D PUSH2 0x12B4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xB71 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0xB7A PUSH0 PUSH2 0x133D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB85 PUSH2 0x136D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA6 PUSH2 0xE4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC07 DUP2 PUSH2 0x133D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC19 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0xC9C PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0xDB3 PUSH2 0xC51 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH32 0xB4E6CB40663C1AC63BCD620DBE3D98C44526BAA45E310F545F425EBAAB36A293 PUSH1 0x7 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP3 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE8F PUSH2 0xF86 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEEE PUSH2 0xC51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 SLOAD SUB PUSH2 0xF45 JUMPI PUSH0 SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xF64 JUMPI PUSH0 SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST TIMESTAMP PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xF8E PUSH2 0x136D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFAC PUSH2 0xC51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x100B JUMPI PUSH2 0xFCF PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1051 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1048 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x10D6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x108F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1374 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1145 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1162 JUMPI PUSH2 0x1161 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD87D457666088F7F0056032AA92E6FD462F4EC64661117A66049CD349A0CAE14 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x11B8 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xB4E6CB40663C1AC63BCD620DBE3D98C44526BAA45E310F545F425EBAAB36A293 PUSH1 0x7 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A9 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1338 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1374 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x136A DUP2 PUSH2 0x140F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x13AC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x13C7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1409 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1400 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1512 PUSH2 0x150D PUSH2 0x1508 DUP5 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1523 DUP3 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1534 DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1544 DUP2 PUSH2 0x152A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155D PUSH0 DUP4 ADD DUP5 PUSH2 0x153B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1575 DUP2 PUSH2 0x1563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x158E PUSH0 DUP4 ADD DUP8 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x159B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15A8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15B5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15CB DUP2 PUSH2 0x1563 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E6 DUP2 PUSH2 0x15C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x15BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160E DUP5 DUP3 DUP6 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1621 DUP3 PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1631 DUP2 PUSH2 0x1617 JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164C DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1666 PUSH2 0x15BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1674 DUP5 DUP3 DUP6 ADD PUSH2 0x163E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH0 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x1617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D2 DUP2 PUSH2 0x16BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16EB PUSH0 DUP4 ADD DUP8 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x16F8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1705 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1712 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16C9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172E PUSH0 DUP4 ADD DUP5 PUSH2 0x16C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C652073756461682064696D756C61690000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1778 PUSH1 0x15 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1783 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17A5 DUP2 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1810 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x181B DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1833 JUMPI PUSH2 0x1832 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520737564616820626572616B68697200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x186D PUSH1 0x16 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1878 DUP3 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x189A DUP2 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C652062656C756D2064696D756C61690000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 PUSH1 0x15 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E0 DUP3 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1913 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x191E DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4A756D6C616820746964616B2076616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1970 PUSH1 0x12 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x197B DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199D DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656C65626968692062617461732070656D62656C69616E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19D8 PUSH1 0x18 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E3 DUP3 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A05 DUP2 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537461676520746964616B20616B746966000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A40 PUSH1 0x11 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A6D DUP2 PUSH2 0x1A34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656C6562696869206B756F7461207374616765000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA8 PUSH1 0x14 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB3 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD5 DUP2 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE6 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF1 DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AFF DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B16 JUMPI PUSH2 0x1B15 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B54 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5F DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x1B1D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B8D PUSH0 DUP4 ADD DUP6 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1B9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x42656C756D206269736120636C61696D00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD5 PUSH1 0x10 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C02 DUP2 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546964616B2061646120746F6B656E20756E74756B2064692D636C61696D0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3D PUSH1 0x1E DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C48 DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6A DUP2 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65207375646168206469616B6869726900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA5 PUSH1 0x16 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB0 DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD2 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CE7 DUP2 PUSH2 0x15C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x15BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0F DUP5 DUP3 DUP6 ADD PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4C PUSH1 0x1F DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D57 DUP3 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D79 DUP2 PUSH2 0x1D40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D93 PUSH0 DUP4 ADD DUP7 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1DA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1DAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBF DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DF1 JUMPI PUSH2 0x1DF0 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E0F PUSH0 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1E1C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT CALLDATASIZE DUP3 0xE9 0x2A 0xA8 0xF6 0xB6 DUP13 INVALID SUB 0xC MUL SMOD PUSH0 PUSH15 0xA084E70520FF968910DEDF7F8B4422 DUPN 0x64 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "303:5426:10:-:0;;;1899:621;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2029:13;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:5;1821:7;:22;;;;2079:1:10::1;2062:19;;:5;:19;;;;:42;;;;;2102:1;2085:19;;:5;:19;;;;2062:42;:69;;;;;2129:1;2108:23;;:9;:23;;;;2062:69;2054:100;;;;;;;;;;;;:::i;:::-;;;;;;;;;2187:5;2173:20;;;;;;;;::::0;::::1;2217:5;2203:20;;;;;;;;::::0;::::1;2244:9;2233:20;;;;;;;;::::0;::::1;2288:6;2300:46;;;;;;;;2306:16;2300:46;;;;2324:1;2300:46;;;;2327:11;2300:46;;;;2340:5;2300:46;;;;::::0;2288:59:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2366:6;2378:47;;;;;;;;2384:16;2378:47;;;;2402:1;2378:47;;;;2405:12;2378:47;;;;2419:5;2378:47;;;;::::0;2366:60:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2446:6;2458:45;;;;;;;;2464:16;2458:45;;;;2482:1;2458:45;;;;2485:10;2458:45;;;;2497:5;2458:45;;;;::::0;2446:58:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1899:621:::0;;;;303:5426;;2011:153:1;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;;;:34;;:::i;:::-;2011:153;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:11:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:820::-;942:6;950;958;966;1015:3;1003:9;994:7;990:23;986:33;983:120;;;1022:79;;:::i;:::-;983:120;1142:1;1167:64;1223:7;1214:6;1203:9;1199:22;1167:64;:::i;:::-;1157:74;;1113:128;1280:2;1306:64;1362:7;1353:6;1342:9;1338:22;1306:64;:::i;:::-;1296:74;;1251:129;1419:2;1445:64;1501:7;1492:6;1481:9;1477:22;1445:64;:::i;:::-;1435:74;;1390:129;1558:2;1584:64;1640:7;1631:6;1620:9;1616:22;1584:64;:::i;:::-;1574:74;;1529:129;845:820;;;;;;;:::o;1671:118::-;1758:24;1776:5;1758:24;:::i;:::-;1753:3;1746:37;1671:118;;:::o;1795:222::-;1888:4;1926:2;1915:9;1911:18;1903:26;;1939:71;2007:1;1996:9;1992:17;1983:6;1939:71;:::i;:::-;1795:222;;;;:::o;2023:169::-;2107:11;2141:6;2136:3;2129:19;2181:4;2176:3;2172:14;2157:29;;2023:169;;;;:::o;2198:168::-;2338:20;2334:1;2326:6;2322:14;2315:44;2198:168;:::o;2372:366::-;2514:3;2535:67;2599:2;2594:3;2535:67;:::i;:::-;2528:74;;2611:93;2700:3;2611:93;:::i;:::-;2729:2;2724:3;2720:12;2713:19;;2372:366;;;:::o;2744:419::-;2910:4;2948:2;2937:9;2933:18;2925:26;;2997:9;2991:4;2987:20;2983:1;2972:9;2968:17;2961:47;3025:131;3151:4;3025:131;:::i;:::-;3017:139;;2744:419;;;:::o;303:5426:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_BUY_PER_WALLET_1004": {
									"entryPoint": 3647,
									"id": 1004,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PRESALE_DURATION_1007": {
									"entryPoint": 3198,
									"id": 1007,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_PRESALE_SUPPLY_999": {
									"entryPoint": 3205,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_advanceStage_1460": {
									"entryPoint": 4316,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_888": {
									"entryPoint": 4980,
									"id": 888,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 3974,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_942": {
									"entryPoint": 4973,
									"id": 942,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_376": {
									"entryPoint": 4788,
									"id": 376,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_368": {
									"entryPoint": 4109,
									"id": 368,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 5135,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_208": {
									"entryPoint": 4925,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@acceptOwnership_232": {
									"entryPoint": 2940,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@buyTokens_1314": {
									"entryPoint": 1333,
									"id": 1314,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@cafi_992": {
									"entryPoint": 1107,
									"id": 992,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@claimTokens_1367": {
									"entryPoint": 2406,
									"id": 1367,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@currentStage_1022": {
									"entryPoint": 2879,
									"id": 1022,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@endPresale_1411": {
									"entryPoint": 3220,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getCurrentStageInfo_1491": {
									"entryPoint": 1143,
									"id": 1491,
									"parameterSlots": 0,
									"returnSlots": 4
								},
								"@getPresaleTimeLeft_1520": {
									"entryPoint": 3891,
									"id": 1520,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3153,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_171": {
									"entryPoint": 3661,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@presaleEnded_1026": {
									"entryPoint": 3701,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@presaleStartTime_1024": {
									"entryPoint": 3641,
									"id": 1024,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2921,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_538": {
									"entryPoint": 4186,
									"id": 538,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_511": {
									"entryPoint": 4798,
									"id": 511,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stages_1020": {
									"entryPoint": 3082,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@startPresale_1209": {
									"entryPoint": 963,
									"id": 1209,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSold_1028": {
									"entryPoint": 3192,
									"id": 1028,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_191": {
									"entryPoint": 3719,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@treasury_994": {
									"entryPoint": 2885,
									"id": 994,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdt_989": {
									"entryPoint": 1297,
									"id": 989,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@userPurchases_1032": {
									"entryPoint": 2385,
									"id": 1032,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5694,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 7385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5714,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5612,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 7405,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5782,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5833,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$466_to_t_address_fromStack": {
									"entryPoint": 5435,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6604,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7321,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6708,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7113,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6500,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 5996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7488,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5797,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7552,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7676,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$466__to_t_address__fromStack_reversed": {
									"entryPoint": 5450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7355,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6742,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7147,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6534,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 7034,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5499,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6409,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6986,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6876,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 6150,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5328,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5475,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$466_to_t_address": {
									"entryPoint": 5418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5401,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 6105,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6941,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 6060,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5566,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330": {
									"entryPoint": 6564,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e": {
									"entryPoint": 6772,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02": {
									"entryPoint": 7281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e": {
									"entryPoint": 6668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19": {
									"entryPoint": 7073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065": {
									"entryPoint": 6460,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c": {
									"entryPoint": 6201,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3": {
									"entryPoint": 6305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc": {
									"entryPoint": 7177,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6": {
									"entryPoint": 5956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 7448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19345:11",
										"nodeType": "YulBlock",
										"src": "0:19345:11",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:11",
													"nodeType": "YulBlock",
													"src": "52:81:11",
													"statements": [
														{
															"nativeSrc": "62:65:11",
															"nodeType": "YulAssignment",
															"src": "62:65:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:11",
																		"nodeType": "YulLiteral",
																		"src": "84:42:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:11"
																},
																"nativeSrc": "73:54:11",
																"nodeType": "YulFunctionCall",
																"src": "73:54:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:11",
														"nodeType": "YulTypedName",
														"src": "34:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:11",
														"nodeType": "YulTypedName",
														"src": "44:7:11",
														"type": ""
													}
												],
												"src": "7:126:11"
											},
											{
												"body": {
													"nativeSrc": "171:28:11",
													"nodeType": "YulBlock",
													"src": "171:28:11",
													"statements": [
														{
															"nativeSrc": "181:12:11",
															"nodeType": "YulAssignment",
															"src": "181:12:11",
															"value": {
																"name": "value",
																"nativeSrc": "188:5:11",
																"nodeType": "YulIdentifier",
																"src": "188:5:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "181:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "181:3:11"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "139:60:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "157:5:11",
														"nodeType": "YulTypedName",
														"src": "157:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "167:3:11",
														"nodeType": "YulTypedName",
														"src": "167:3:11",
														"type": ""
													}
												],
												"src": "139:60:11"
											},
											{
												"body": {
													"nativeSrc": "265:82:11",
													"nodeType": "YulBlock",
													"src": "265:82:11",
													"statements": [
														{
															"nativeSrc": "275:66:11",
															"nodeType": "YulAssignment",
															"src": "275:66:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "333:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "333:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "315:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "315:17:11"
																				},
																				"nativeSrc": "315:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "315:24:11"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "306:8:11",
																			"nodeType": "YulIdentifier",
																			"src": "306:8:11"
																		},
																		"nativeSrc": "306:34:11",
																		"nodeType": "YulFunctionCall",
																		"src": "306:34:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "288:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "288:17:11"
																},
																"nativeSrc": "288:53:11",
																"nodeType": "YulFunctionCall",
																"src": "288:53:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "275:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "275:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "205:142:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "245:5:11",
														"nodeType": "YulTypedName",
														"src": "245:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "255:9:11",
														"nodeType": "YulTypedName",
														"src": "255:9:11",
														"type": ""
													}
												],
												"src": "205:142:11"
											},
											{
												"body": {
													"nativeSrc": "413:66:11",
													"nodeType": "YulBlock",
													"src": "413:66:11",
													"statements": [
														{
															"nativeSrc": "423:50:11",
															"nodeType": "YulAssignment",
															"src": "423:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "467:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "467:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "436:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "436:30:11"
																},
																"nativeSrc": "436:37:11",
																"nodeType": "YulFunctionCall",
																"src": "436:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "423:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "423:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "353:126:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "393:5:11",
														"nodeType": "YulTypedName",
														"src": "393:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "403:9:11",
														"nodeType": "YulTypedName",
														"src": "403:9:11",
														"type": ""
													}
												],
												"src": "353:126:11"
											},
											{
												"body": {
													"nativeSrc": "559:66:11",
													"nodeType": "YulBlock",
													"src": "559:66:11",
													"statements": [
														{
															"nativeSrc": "569:50:11",
															"nodeType": "YulAssignment",
															"src": "569:50:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "613:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "613:5:11"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "582:30:11",
																	"nodeType": "YulIdentifier",
																	"src": "582:30:11"
																},
																"nativeSrc": "582:37:11",
																"nodeType": "YulFunctionCall",
																"src": "582:37:11"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "569:9:11",
																	"nodeType": "YulIdentifier",
																	"src": "569:9:11"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$466_to_t_address",
												"nativeSrc": "485:140:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "539:5:11",
														"nodeType": "YulTypedName",
														"src": "539:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "549:9:11",
														"nodeType": "YulTypedName",
														"src": "549:9:11",
														"type": ""
													}
												],
												"src": "485:140:11"
											},
											{
												"body": {
													"nativeSrc": "710:80:11",
													"nodeType": "YulBlock",
													"src": "710:80:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "727:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "727:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "777:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "777:5:11"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$466_to_t_address",
																			"nativeSrc": "732:44:11",
																			"nodeType": "YulIdentifier",
																			"src": "732:44:11"
																		},
																		"nativeSrc": "732:51:11",
																		"nodeType": "YulFunctionCall",
																		"src": "732:51:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "720:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "720:6:11"
																},
																"nativeSrc": "720:64:11",
																"nodeType": "YulFunctionCall",
																"src": "720:64:11"
															},
															"nativeSrc": "720:64:11",
															"nodeType": "YulExpressionStatement",
															"src": "720:64:11"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$466_to_t_address_fromStack",
												"nativeSrc": "631:159:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "698:5:11",
														"nodeType": "YulTypedName",
														"src": "698:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "705:3:11",
														"nodeType": "YulTypedName",
														"src": "705:3:11",
														"type": ""
													}
												],
												"src": "631:159:11"
											},
											{
												"body": {
													"nativeSrc": "908:138:11",
													"nodeType": "YulBlock",
													"src": "908:138:11",
													"statements": [
														{
															"nativeSrc": "918:26:11",
															"nodeType": "YulAssignment",
															"src": "918:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:11",
																		"nodeType": "YulLiteral",
																		"src": "941:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:11"
																},
																"nativeSrc": "926:18:11",
																"nodeType": "YulFunctionCall",
																"src": "926:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1012:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1012:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1025:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1025:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1036:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1021:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:11"
																		},
																		"nativeSrc": "1021:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1021:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$466_to_t_address_fromStack",
																	"nativeSrc": "954:57:11",
																	"nodeType": "YulIdentifier",
																	"src": "954:57:11"
																},
																"nativeSrc": "954:85:11",
																"nodeType": "YulFunctionCall",
																"src": "954:85:11"
															},
															"nativeSrc": "954:85:11",
															"nodeType": "YulExpressionStatement",
															"src": "954:85:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$466__to_t_address__fromStack_reversed",
												"nativeSrc": "796:250:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "880:9:11",
														"nodeType": "YulTypedName",
														"src": "880:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "892:6:11",
														"nodeType": "YulTypedName",
														"src": "892:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:11",
														"nodeType": "YulTypedName",
														"src": "903:4:11",
														"type": ""
													}
												],
												"src": "796:250:11"
											},
											{
												"body": {
													"nativeSrc": "1097:32:11",
													"nodeType": "YulBlock",
													"src": "1097:32:11",
													"statements": [
														{
															"nativeSrc": "1107:16:11",
															"nodeType": "YulAssignment",
															"src": "1107:16:11",
															"value": {
																"name": "value",
																"nativeSrc": "1118:5:11",
																"nodeType": "YulIdentifier",
																"src": "1118:5:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1107:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "1107:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1052:77:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1079:5:11",
														"nodeType": "YulTypedName",
														"src": "1079:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1089:7:11",
														"nodeType": "YulTypedName",
														"src": "1089:7:11",
														"type": ""
													}
												],
												"src": "1052:77:11"
											},
											{
												"body": {
													"nativeSrc": "1200:53:11",
													"nodeType": "YulBlock",
													"src": "1200:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1217:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "1217:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1240:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "1240:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1222:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "1222:17:11"
																		},
																		"nativeSrc": "1222:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1222:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1210:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:11"
																},
																"nativeSrc": "1210:37:11",
																"nodeType": "YulFunctionCall",
																"src": "1210:37:11"
															},
															"nativeSrc": "1210:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "1210:37:11"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1135:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1188:5:11",
														"nodeType": "YulTypedName",
														"src": "1188:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1195:3:11",
														"nodeType": "YulTypedName",
														"src": "1195:3:11",
														"type": ""
													}
												],
												"src": "1135:118:11"
											},
											{
												"body": {
													"nativeSrc": "1441:371:11",
													"nodeType": "YulBlock",
													"src": "1441:371:11",
													"statements": [
														{
															"nativeSrc": "1451:27:11",
															"nodeType": "YulAssignment",
															"src": "1451:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1463:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "1463:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1474:3:11",
																		"nodeType": "YulLiteral",
																		"src": "1474:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1459:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "1459:3:11"
																},
																"nativeSrc": "1459:19:11",
																"nodeType": "YulFunctionCall",
																"src": "1459:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1451:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "1451:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1532:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1532:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1545:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1545:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1556:1:11",
																				"nodeType": "YulLiteral",
																				"src": "1556:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1541:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1541:3:11"
																		},
																		"nativeSrc": "1541:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1541:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1488:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1488:43:11"
																},
																"nativeSrc": "1488:71:11",
																"nodeType": "YulFunctionCall",
																"src": "1488:71:11"
															},
															"nativeSrc": "1488:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "1488:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "1613:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1613:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1626:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1626:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1637:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1637:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1622:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1622:3:11"
																		},
																		"nativeSrc": "1622:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1622:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1569:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1569:43:11"
																},
																"nativeSrc": "1569:72:11",
																"nodeType": "YulFunctionCall",
																"src": "1569:72:11"
															},
															"nativeSrc": "1569:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "1569:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "1695:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1695:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1708:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1708:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1719:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1719:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1704:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1704:3:11"
																		},
																		"nativeSrc": "1704:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1704:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1651:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1651:43:11"
																},
																"nativeSrc": "1651:72:11",
																"nodeType": "YulFunctionCall",
																"src": "1651:72:11"
															},
															"nativeSrc": "1651:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "1651:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "1777:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "1777:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1790:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "1790:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1801:2:11",
																				"nodeType": "YulLiteral",
																				"src": "1801:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1786:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "1786:3:11"
																		},
																		"nativeSrc": "1786:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1733:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "1733:43:11"
																},
																"nativeSrc": "1733:72:11",
																"nodeType": "YulFunctionCall",
																"src": "1733:72:11"
															},
															"nativeSrc": "1733:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "1733:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1259:553:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1389:9:11",
														"nodeType": "YulTypedName",
														"src": "1389:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1401:6:11",
														"nodeType": "YulTypedName",
														"src": "1401:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1409:6:11",
														"nodeType": "YulTypedName",
														"src": "1409:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1417:6:11",
														"nodeType": "YulTypedName",
														"src": "1417:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1425:6:11",
														"nodeType": "YulTypedName",
														"src": "1425:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1436:4:11",
														"nodeType": "YulTypedName",
														"src": "1436:4:11",
														"type": ""
													}
												],
												"src": "1259:553:11"
											},
											{
												"body": {
													"nativeSrc": "1858:35:11",
													"nodeType": "YulBlock",
													"src": "1858:35:11",
													"statements": [
														{
															"nativeSrc": "1868:19:11",
															"nodeType": "YulAssignment",
															"src": "1868:19:11",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1884:2:11",
																		"nodeType": "YulLiteral",
																		"src": "1884:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1878:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "1878:5:11"
																},
																"nativeSrc": "1878:9:11",
																"nodeType": "YulFunctionCall",
																"src": "1878:9:11"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1868:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1868:6:11"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1818:75:11",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1851:6:11",
														"nodeType": "YulTypedName",
														"src": "1851:6:11",
														"type": ""
													}
												],
												"src": "1818:75:11"
											},
											{
												"body": {
													"nativeSrc": "1988:28:11",
													"nodeType": "YulBlock",
													"src": "1988:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2008:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2008:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1998:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:11"
																},
																"nativeSrc": "1998:12:11",
																"nodeType": "YulFunctionCall",
																"src": "1998:12:11"
															},
															"nativeSrc": "1998:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "1998:12:11"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1899:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "1899:117:11"
											},
											{
												"body": {
													"nativeSrc": "2111:28:11",
													"nodeType": "YulBlock",
													"src": "2111:28:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2128:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2128:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2131:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2131:1:11",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2121:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2121:6:11"
																},
																"nativeSrc": "2121:12:11",
																"nodeType": "YulFunctionCall",
																"src": "2121:12:11"
															},
															"nativeSrc": "2121:12:11",
															"nodeType": "YulExpressionStatement",
															"src": "2121:12:11"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "2022:117:11",
												"nodeType": "YulFunctionDefinition",
												"src": "2022:117:11"
											},
											{
												"body": {
													"nativeSrc": "2188:79:11",
													"nodeType": "YulBlock",
													"src": "2188:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2245:16:11",
																"nodeType": "YulBlock",
																"src": "2245:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2254:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2254:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2257:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2257:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2247:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2247:6:11"
																			},
																			"nativeSrc": "2247:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2247:12:11"
																		},
																		"nativeSrc": "2247:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2247:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2211:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2211:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2236:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2236:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2218:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2218:17:11"
																				},
																				"nativeSrc": "2218:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2218:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2208:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2208:2:11"
																		},
																		"nativeSrc": "2208:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2208:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2201:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2201:6:11"
																},
																"nativeSrc": "2201:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2201:43:11"
															},
															"nativeSrc": "2198:63:11",
															"nodeType": "YulIf",
															"src": "2198:63:11"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2145:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2181:5:11",
														"nodeType": "YulTypedName",
														"src": "2181:5:11",
														"type": ""
													}
												],
												"src": "2145:122:11"
											},
											{
												"body": {
													"nativeSrc": "2325:87:11",
													"nodeType": "YulBlock",
													"src": "2325:87:11",
													"statements": [
														{
															"nativeSrc": "2335:29:11",
															"nodeType": "YulAssignment",
															"src": "2335:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2357:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "2357:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2344:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "2344:12:11"
																},
																"nativeSrc": "2344:20:11",
																"nodeType": "YulFunctionCall",
																"src": "2344:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2335:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "2335:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2400:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2400:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2373:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "2373:26:11"
																},
																"nativeSrc": "2373:33:11",
																"nodeType": "YulFunctionCall",
																"src": "2373:33:11"
															},
															"nativeSrc": "2373:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "2373:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2273:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2303:6:11",
														"nodeType": "YulTypedName",
														"src": "2303:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2311:3:11",
														"nodeType": "YulTypedName",
														"src": "2311:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2319:5:11",
														"nodeType": "YulTypedName",
														"src": "2319:5:11",
														"type": ""
													}
												],
												"src": "2273:139:11"
											},
											{
												"body": {
													"nativeSrc": "2484:263:11",
													"nodeType": "YulBlock",
													"src": "2484:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2530:83:11",
																"nodeType": "YulBlock",
																"src": "2530:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2532:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "2532:77:11"
																			},
																			"nativeSrc": "2532:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2532:79:11"
																		},
																		"nativeSrc": "2532:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2532:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2505:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2505:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2514:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "2514:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2501:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "2501:3:11"
																		},
																		"nativeSrc": "2501:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2501:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2526:2:11",
																		"nodeType": "YulLiteral",
																		"src": "2526:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2497:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "2497:3:11"
																},
																"nativeSrc": "2497:32:11",
																"nodeType": "YulFunctionCall",
																"src": "2497:32:11"
															},
															"nativeSrc": "2494:119:11",
															"nodeType": "YulIf",
															"src": "2494:119:11"
														},
														{
															"nativeSrc": "2623:117:11",
															"nodeType": "YulBlock",
															"src": "2623:117:11",
															"statements": [
																{
																	"nativeSrc": "2638:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2638:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2652:1:11",
																		"nodeType": "YulLiteral",
																		"src": "2652:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2642:6:11",
																			"nodeType": "YulTypedName",
																			"src": "2642:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2667:63:11",
																	"nodeType": "YulAssignment",
																	"src": "2667:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2702:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "2702:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2713:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "2713:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2698:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "2698:3:11"
																				},
																				"nativeSrc": "2698:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2698:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2722:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "2722:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2677:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "2677:20:11"
																		},
																		"nativeSrc": "2677:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2677:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2667:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "2667:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2418:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2454:9:11",
														"nodeType": "YulTypedName",
														"src": "2454:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2465:7:11",
														"nodeType": "YulTypedName",
														"src": "2465:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2477:6:11",
														"nodeType": "YulTypedName",
														"src": "2477:6:11",
														"type": ""
													}
												],
												"src": "2418:329:11"
											},
											{
												"body": {
													"nativeSrc": "2798:51:11",
													"nodeType": "YulBlock",
													"src": "2798:51:11",
													"statements": [
														{
															"nativeSrc": "2808:35:11",
															"nodeType": "YulAssignment",
															"src": "2808:35:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2837:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "2837:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "2819:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "2819:17:11"
																},
																"nativeSrc": "2819:24:11",
																"nodeType": "YulFunctionCall",
																"src": "2819:24:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2753:96:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:11",
														"nodeType": "YulTypedName",
														"src": "2780:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:11",
														"nodeType": "YulTypedName",
														"src": "2790:7:11",
														"type": ""
													}
												],
												"src": "2753:96:11"
											},
											{
												"body": {
													"nativeSrc": "2898:79:11",
													"nodeType": "YulBlock",
													"src": "2898:79:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "2955:16:11",
																"nodeType": "YulBlock",
																"src": "2955:16:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2964:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2964:1:11",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2967:1:11",
																					"nodeType": "YulLiteral",
																					"src": "2967:1:11",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2957:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "2957:6:11"
																			},
																			"nativeSrc": "2957:12:11",
																			"nodeType": "YulFunctionCall",
																			"src": "2957:12:11"
																		},
																		"nativeSrc": "2957:12:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "2957:12:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2921:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "2921:5:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2946:5:11",
																						"nodeType": "YulIdentifier",
																						"src": "2946:5:11"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "2928:17:11",
																					"nodeType": "YulIdentifier",
																					"src": "2928:17:11"
																				},
																				"nativeSrc": "2928:24:11",
																				"nodeType": "YulFunctionCall",
																				"src": "2928:24:11"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2918:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "2918:2:11"
																		},
																		"nativeSrc": "2918:35:11",
																		"nodeType": "YulFunctionCall",
																		"src": "2918:35:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2911:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:11"
																},
																"nativeSrc": "2911:43:11",
																"nodeType": "YulFunctionCall",
																"src": "2911:43:11"
															},
															"nativeSrc": "2908:63:11",
															"nodeType": "YulIf",
															"src": "2908:63:11"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "2855:122:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2891:5:11",
														"nodeType": "YulTypedName",
														"src": "2891:5:11",
														"type": ""
													}
												],
												"src": "2855:122:11"
											},
											{
												"body": {
													"nativeSrc": "3035:87:11",
													"nodeType": "YulBlock",
													"src": "3035:87:11",
													"statements": [
														{
															"nativeSrc": "3045:29:11",
															"nodeType": "YulAssignment",
															"src": "3045:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3067:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3067:6:11"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3054:12:11",
																	"nodeType": "YulIdentifier",
																	"src": "3054:12:11"
																},
																"nativeSrc": "3054:20:11",
																"nodeType": "YulFunctionCall",
																"src": "3054:20:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3045:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "3045:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3110:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "3110:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3083:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "3083:26:11"
																},
																"nativeSrc": "3083:33:11",
																"nodeType": "YulFunctionCall",
																"src": "3083:33:11"
															},
															"nativeSrc": "3083:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "3083:33:11"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2983:139:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3013:6:11",
														"nodeType": "YulTypedName",
														"src": "3013:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3021:3:11",
														"nodeType": "YulTypedName",
														"src": "3021:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3029:5:11",
														"nodeType": "YulTypedName",
														"src": "3029:5:11",
														"type": ""
													}
												],
												"src": "2983:139:11"
											},
											{
												"body": {
													"nativeSrc": "3194:263:11",
													"nodeType": "YulBlock",
													"src": "3194:263:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "3240:83:11",
																"nodeType": "YulBlock",
																"src": "3240:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3242:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "3242:77:11"
																			},
																			"nativeSrc": "3242:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "3242:79:11"
																		},
																		"nativeSrc": "3242:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "3242:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3215:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3215:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3224:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3224:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3211:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3211:3:11"
																		},
																		"nativeSrc": "3211:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3211:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3236:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3236:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3207:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3207:3:11"
																},
																"nativeSrc": "3207:32:11",
																"nodeType": "YulFunctionCall",
																"src": "3207:32:11"
															},
															"nativeSrc": "3204:119:11",
															"nodeType": "YulIf",
															"src": "3204:119:11"
														},
														{
															"nativeSrc": "3333:117:11",
															"nodeType": "YulBlock",
															"src": "3333:117:11",
															"statements": [
																{
																	"nativeSrc": "3348:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3348:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3362:1:11",
																		"nodeType": "YulLiteral",
																		"src": "3362:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3352:6:11",
																			"nodeType": "YulTypedName",
																			"src": "3352:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3377:63:11",
																	"nodeType": "YulAssignment",
																	"src": "3377:63:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3412:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "3412:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3423:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "3423:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3408:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "3408:3:11"
																				},
																				"nativeSrc": "3408:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "3408:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3432:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "3432:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3387:20:11",
																			"nodeType": "YulIdentifier",
																			"src": "3387:20:11"
																		},
																		"nativeSrc": "3387:53:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3387:53:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3377:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "3377:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "3128:329:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3164:9:11",
														"nodeType": "YulTypedName",
														"src": "3164:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3175:7:11",
														"nodeType": "YulTypedName",
														"src": "3175:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3187:6:11",
														"nodeType": "YulTypedName",
														"src": "3187:6:11",
														"type": ""
													}
												],
												"src": "3128:329:11"
											},
											{
												"body": {
													"nativeSrc": "3561:124:11",
													"nodeType": "YulBlock",
													"src": "3561:124:11",
													"statements": [
														{
															"nativeSrc": "3571:26:11",
															"nodeType": "YulAssignment",
															"src": "3571:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:11"
																},
																"nativeSrc": "3579:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:11",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:11"
																		},
																		"nativeSrc": "3660:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:11"
																},
																"nativeSrc": "3607:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:11"
															},
															"nativeSrc": "3607:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:11",
														"nodeType": "YulTypedName",
														"src": "3533:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:11",
														"nodeType": "YulTypedName",
														"src": "3545:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:11",
														"nodeType": "YulTypedName",
														"src": "3556:4:11",
														"type": ""
													}
												],
												"src": "3463:222:11"
											},
											{
												"body": {
													"nativeSrc": "3756:53:11",
													"nodeType": "YulBlock",
													"src": "3756:53:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3773:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "3773:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3796:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "3796:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3778:17:11",
																			"nodeType": "YulIdentifier",
																			"src": "3778:17:11"
																		},
																		"nativeSrc": "3778:24:11",
																		"nodeType": "YulFunctionCall",
																		"src": "3778:24:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3766:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3766:6:11"
																},
																"nativeSrc": "3766:37:11",
																"nodeType": "YulFunctionCall",
																"src": "3766:37:11"
															},
															"nativeSrc": "3766:37:11",
															"nodeType": "YulExpressionStatement",
															"src": "3766:37:11"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3691:118:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3744:5:11",
														"nodeType": "YulTypedName",
														"src": "3744:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3751:3:11",
														"nodeType": "YulTypedName",
														"src": "3751:3:11",
														"type": ""
													}
												],
												"src": "3691:118:11"
											},
											{
												"body": {
													"nativeSrc": "3913:124:11",
													"nodeType": "YulBlock",
													"src": "3913:124:11",
													"statements": [
														{
															"nativeSrc": "3923:26:11",
															"nodeType": "YulAssignment",
															"src": "3923:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3935:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "3935:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3946:2:11",
																		"nodeType": "YulLiteral",
																		"src": "3946:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3931:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "3931:3:11"
																},
																"nativeSrc": "3931:18:11",
																"nodeType": "YulFunctionCall",
																"src": "3931:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3923:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "3923:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4003:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4003:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4016:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4016:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4027:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4027:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4012:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4012:3:11"
																		},
																		"nativeSrc": "4012:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4012:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3959:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "3959:43:11"
																},
																"nativeSrc": "3959:71:11",
																"nodeType": "YulFunctionCall",
																"src": "3959:71:11"
															},
															"nativeSrc": "3959:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "3959:71:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3815:222:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3885:9:11",
														"nodeType": "YulTypedName",
														"src": "3885:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3897:6:11",
														"nodeType": "YulTypedName",
														"src": "3897:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3908:4:11",
														"nodeType": "YulTypedName",
														"src": "3908:4:11",
														"type": ""
													}
												],
												"src": "3815:222:11"
											},
											{
												"body": {
													"nativeSrc": "4085:48:11",
													"nodeType": "YulBlock",
													"src": "4085:48:11",
													"statements": [
														{
															"nativeSrc": "4095:32:11",
															"nodeType": "YulAssignment",
															"src": "4095:32:11",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4120:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4120:5:11"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4113:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "4113:6:11"
																		},
																		"nativeSrc": "4113:13:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4113:13:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4106:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4106:6:11"
																},
																"nativeSrc": "4106:21:11",
																"nodeType": "YulFunctionCall",
																"src": "4106:21:11"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4095:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "4095:7:11"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4043:90:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4067:5:11",
														"nodeType": "YulTypedName",
														"src": "4067:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4077:7:11",
														"nodeType": "YulTypedName",
														"src": "4077:7:11",
														"type": ""
													}
												],
												"src": "4043:90:11"
											},
											{
												"body": {
													"nativeSrc": "4198:50:11",
													"nodeType": "YulBlock",
													"src": "4198:50:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4215:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "4215:3:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4235:5:11",
																				"nodeType": "YulIdentifier",
																				"src": "4235:5:11"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4220:14:11",
																			"nodeType": "YulIdentifier",
																			"src": "4220:14:11"
																		},
																		"nativeSrc": "4220:21:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4220:21:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4208:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "4208:6:11"
																},
																"nativeSrc": "4208:34:11",
																"nodeType": "YulFunctionCall",
																"src": "4208:34:11"
															},
															"nativeSrc": "4208:34:11",
															"nodeType": "YulExpressionStatement",
															"src": "4208:34:11"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "4139:109:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4186:5:11",
														"nodeType": "YulTypedName",
														"src": "4186:5:11",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4193:3:11",
														"nodeType": "YulTypedName",
														"src": "4193:3:11",
														"type": ""
													}
												],
												"src": "4139:109:11"
											},
											{
												"body": {
													"nativeSrc": "4430:365:11",
													"nodeType": "YulBlock",
													"src": "4430:365:11",
													"statements": [
														{
															"nativeSrc": "4440:27:11",
															"nodeType": "YulAssignment",
															"src": "4440:27:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4452:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4452:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4463:3:11",
																		"nodeType": "YulLiteral",
																		"src": "4463:3:11",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4448:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4448:3:11"
																},
																"nativeSrc": "4448:19:11",
																"nodeType": "YulFunctionCall",
																"src": "4448:19:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4440:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4440:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4521:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4521:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4534:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4545:1:11",
																				"nodeType": "YulLiteral",
																				"src": "4545:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4530:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:11"
																		},
																		"nativeSrc": "4530:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4530:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4477:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4477:43:11"
																},
																"nativeSrc": "4477:71:11",
																"nodeType": "YulFunctionCall",
																"src": "4477:71:11"
															},
															"nativeSrc": "4477:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "4477:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4602:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4602:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4615:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4626:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4626:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4611:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:11"
																		},
																		"nativeSrc": "4611:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4611:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4558:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4558:43:11"
																},
																"nativeSrc": "4558:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4558:72:11"
															},
															"nativeSrc": "4558:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4558:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4684:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4684:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4697:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4697:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4708:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4708:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4693:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4693:3:11"
																		},
																		"nativeSrc": "4693:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4693:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4640:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "4640:43:11"
																},
																"nativeSrc": "4640:72:11",
																"nodeType": "YulFunctionCall",
																"src": "4640:72:11"
															},
															"nativeSrc": "4640:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "4640:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "4760:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4760:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4773:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4773:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4784:2:11",
																				"nodeType": "YulLiteral",
																				"src": "4784:2:11",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4769:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4769:3:11"
																		},
																		"nativeSrc": "4769:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4769:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4722:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "4722:37:11"
																},
																"nativeSrc": "4722:66:11",
																"nodeType": "YulFunctionCall",
																"src": "4722:66:11"
															},
															"nativeSrc": "4722:66:11",
															"nodeType": "YulExpressionStatement",
															"src": "4722:66:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "4254:541:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4378:9:11",
														"nodeType": "YulTypedName",
														"src": "4378:9:11",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4390:6:11",
														"nodeType": "YulTypedName",
														"src": "4390:6:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4398:6:11",
														"nodeType": "YulTypedName",
														"src": "4398:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4406:6:11",
														"nodeType": "YulTypedName",
														"src": "4406:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4414:6:11",
														"nodeType": "YulTypedName",
														"src": "4414:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4425:4:11",
														"nodeType": "YulTypedName",
														"src": "4425:4:11",
														"type": ""
													}
												],
												"src": "4254:541:11"
											},
											{
												"body": {
													"nativeSrc": "4893:118:11",
													"nodeType": "YulBlock",
													"src": "4893:118:11",
													"statements": [
														{
															"nativeSrc": "4903:26:11",
															"nodeType": "YulAssignment",
															"src": "4903:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4915:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "4915:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4926:2:11",
																		"nodeType": "YulLiteral",
																		"src": "4926:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4911:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "4911:3:11"
																},
																"nativeSrc": "4911:18:11",
																"nodeType": "YulFunctionCall",
																"src": "4911:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4903:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "4903:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4977:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "4977:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4990:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "4990:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5001:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4986:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "4986:3:11"
																		},
																		"nativeSrc": "4986:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "4986:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4939:37:11",
																	"nodeType": "YulIdentifier",
																	"src": "4939:37:11"
																},
																"nativeSrc": "4939:65:11",
																"nodeType": "YulFunctionCall",
																"src": "4939:65:11"
															},
															"nativeSrc": "4939:65:11",
															"nodeType": "YulExpressionStatement",
															"src": "4939:65:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4801:210:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4865:9:11",
														"nodeType": "YulTypedName",
														"src": "4865:9:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4877:6:11",
														"nodeType": "YulTypedName",
														"src": "4877:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4888:4:11",
														"nodeType": "YulTypedName",
														"src": "4888:4:11",
														"type": ""
													}
												],
												"src": "4801:210:11"
											},
											{
												"body": {
													"nativeSrc": "5113:73:11",
													"nodeType": "YulBlock",
													"src": "5113:73:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5130:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5130:3:11"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5135:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "5135:6:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5123:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5123:6:11"
																},
																"nativeSrc": "5123:19:11",
																"nodeType": "YulFunctionCall",
																"src": "5123:19:11"
															},
															"nativeSrc": "5123:19:11",
															"nodeType": "YulExpressionStatement",
															"src": "5123:19:11"
														},
														{
															"nativeSrc": "5151:29:11",
															"nodeType": "YulAssignment",
															"src": "5151:29:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5170:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5170:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5175:4:11",
																		"nodeType": "YulLiteral",
																		"src": "5175:4:11",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5166:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5166:3:11"
																},
																"nativeSrc": "5166:14:11",
																"nodeType": "YulFunctionCall",
																"src": "5166:14:11"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "5151:11:11",
																	"nodeType": "YulIdentifier",
																	"src": "5151:11:11"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "5017:169:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5085:3:11",
														"nodeType": "YulTypedName",
														"src": "5085:3:11",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5090:6:11",
														"nodeType": "YulTypedName",
														"src": "5090:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "5101:11:11",
														"nodeType": "YulTypedName",
														"src": "5101:11:11",
														"type": ""
													}
												],
												"src": "5017:169:11"
											},
											{
												"body": {
													"nativeSrc": "5298:65:11",
													"nodeType": "YulBlock",
													"src": "5298:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "5320:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "5320:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5328:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5328:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5316:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5316:3:11"
																		},
																		"nativeSrc": "5316:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5316:14:11"
																	},
																	{
																		"hexValue": "50726573616c652073756461682064696d756c6169",
																		"kind": "string",
																		"nativeSrc": "5332:23:11",
																		"nodeType": "YulLiteral",
																		"src": "5332:23:11",
																		"type": "",
																		"value": "Presale sudah dimulai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5309:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5309:6:11"
																},
																"nativeSrc": "5309:47:11",
																"nodeType": "YulFunctionCall",
																"src": "5309:47:11"
															},
															"nativeSrc": "5309:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "5309:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6",
												"nativeSrc": "5192:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "5290:6:11",
														"nodeType": "YulTypedName",
														"src": "5290:6:11",
														"type": ""
													}
												],
												"src": "5192:171:11"
											},
											{
												"body": {
													"nativeSrc": "5515:220:11",
													"nodeType": "YulBlock",
													"src": "5515:220:11",
													"statements": [
														{
															"nativeSrc": "5525:74:11",
															"nodeType": "YulAssignment",
															"src": "5525:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5591:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5591:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5596:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5596:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "5532:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "5532:58:11"
																},
																"nativeSrc": "5532:67:11",
																"nodeType": "YulFunctionCall",
																"src": "5532:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "5525:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5525:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5697:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5697:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6",
																	"nativeSrc": "5608:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "5608:88:11"
																},
																"nativeSrc": "5608:93:11",
																"nodeType": "YulFunctionCall",
																"src": "5608:93:11"
															},
															"nativeSrc": "5608:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "5608:93:11"
														},
														{
															"nativeSrc": "5710:19:11",
															"nodeType": "YulAssignment",
															"src": "5710:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5721:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "5721:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5726:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5726:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5717:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5717:3:11"
																},
																"nativeSrc": "5717:12:11",
																"nodeType": "YulFunctionCall",
																"src": "5717:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5710:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5710:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "5369:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5503:3:11",
														"nodeType": "YulTypedName",
														"src": "5503:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5511:3:11",
														"nodeType": "YulTypedName",
														"src": "5511:3:11",
														"type": ""
													}
												],
												"src": "5369:366:11"
											},
											{
												"body": {
													"nativeSrc": "5912:248:11",
													"nodeType": "YulBlock",
													"src": "5912:248:11",
													"statements": [
														{
															"nativeSrc": "5922:26:11",
															"nodeType": "YulAssignment",
															"src": "5922:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5934:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "5934:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5945:2:11",
																		"nodeType": "YulLiteral",
																		"src": "5945:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5930:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "5930:3:11"
																},
																"nativeSrc": "5930:18:11",
																"nodeType": "YulFunctionCall",
																"src": "5930:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5922:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "5922:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5969:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5969:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5980:1:11",
																				"nodeType": "YulLiteral",
																				"src": "5980:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5965:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:11"
																		},
																		"nativeSrc": "5965:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5965:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5988:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "5988:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5994:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "5994:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5984:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "5984:3:11"
																		},
																		"nativeSrc": "5984:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "5984:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5958:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "5958:6:11"
																},
																"nativeSrc": "5958:47:11",
																"nodeType": "YulFunctionCall",
																"src": "5958:47:11"
															},
															"nativeSrc": "5958:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "5958:47:11"
														},
														{
															"nativeSrc": "6014:139:11",
															"nodeType": "YulAssignment",
															"src": "6014:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "6148:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6148:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "6022:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "6022:124:11"
																},
																"nativeSrc": "6022:131:11",
																"nodeType": "YulFunctionCall",
																"src": "6022:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6014:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6014:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5741:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5892:9:11",
														"nodeType": "YulTypedName",
														"src": "5892:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5907:4:11",
														"nodeType": "YulTypedName",
														"src": "5907:4:11",
														"type": ""
													}
												],
												"src": "5741:419:11"
											},
											{
												"body": {
													"nativeSrc": "6194:152:11",
													"nodeType": "YulBlock",
													"src": "6194:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6211:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6211:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6214:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6214:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6204:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6204:6:11"
																},
																"nativeSrc": "6204:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6204:88:11"
															},
															"nativeSrc": "6204:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6204:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6308:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6308:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6311:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6311:4:11",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6301:6:11"
																},
																"nativeSrc": "6301:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6301:15:11"
															},
															"nativeSrc": "6301:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6301:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6332:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6332:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6335:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6335:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6325:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6325:6:11"
																},
																"nativeSrc": "6325:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6325:15:11"
															},
															"nativeSrc": "6325:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6325:15:11"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6166:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6166:180:11"
											},
											{
												"body": {
													"nativeSrc": "6380:152:11",
													"nodeType": "YulBlock",
													"src": "6380:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6397:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6397:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6400:77:11",
																		"nodeType": "YulLiteral",
																		"src": "6400:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6390:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6390:6:11"
																},
																"nativeSrc": "6390:88:11",
																"nodeType": "YulFunctionCall",
																"src": "6390:88:11"
															},
															"nativeSrc": "6390:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "6390:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6494:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6494:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6497:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6497:4:11",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6487:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6487:6:11"
																},
																"nativeSrc": "6487:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6487:15:11"
															},
															"nativeSrc": "6487:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6487:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6518:1:11",
																		"nodeType": "YulLiteral",
																		"src": "6518:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6521:4:11",
																		"nodeType": "YulLiteral",
																		"src": "6521:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6511:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6511:6:11"
																},
																"nativeSrc": "6511:15:11",
																"nodeType": "YulFunctionCall",
																"src": "6511:15:11"
															},
															"nativeSrc": "6511:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "6511:15:11"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6352:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "6352:180:11"
											},
											{
												"body": {
													"nativeSrc": "6583:149:11",
													"nodeType": "YulBlock",
													"src": "6583:149:11",
													"statements": [
														{
															"nativeSrc": "6593:25:11",
															"nodeType": "YulAssignment",
															"src": "6593:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6616:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6616:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6598:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6598:17:11"
																},
																"nativeSrc": "6598:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6598:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6593:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "6593:1:11"
																}
															]
														},
														{
															"nativeSrc": "6627:25:11",
															"nodeType": "YulAssignment",
															"src": "6627:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6650:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6650:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6632:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "6632:17:11"
																},
																"nativeSrc": "6632:20:11",
																"nodeType": "YulFunctionCall",
																"src": "6632:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6627:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "6627:1:11"
																}
															]
														},
														{
															"nativeSrc": "6661:17:11",
															"nodeType": "YulAssignment",
															"src": "6661:17:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6673:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6673:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6676:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6676:1:11"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6669:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:11"
																},
																"nativeSrc": "6669:9:11",
																"nodeType": "YulFunctionCall",
																"src": "6669:9:11"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6661:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6703:22:11",
																"nodeType": "YulBlock",
																"src": "6703:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6705:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "6705:16:11"
																			},
																			"nativeSrc": "6705:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "6705:18:11"
																		},
																		"nativeSrc": "6705:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "6705:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6694:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "6694:4:11"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6700:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "6700:1:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6691:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "6691:2:11"
																},
																"nativeSrc": "6691:11:11",
																"nodeType": "YulFunctionCall",
																"src": "6691:11:11"
															},
															"nativeSrc": "6688:37:11",
															"nodeType": "YulIf",
															"src": "6688:37:11"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6538:194:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6569:1:11",
														"nodeType": "YulTypedName",
														"src": "6569:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6572:1:11",
														"nodeType": "YulTypedName",
														"src": "6572:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6578:4:11",
														"nodeType": "YulTypedName",
														"src": "6578:4:11",
														"type": ""
													}
												],
												"src": "6538:194:11"
											},
											{
												"body": {
													"nativeSrc": "6844:66:11",
													"nodeType": "YulBlock",
													"src": "6844:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "6866:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "6866:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6874:1:11",
																				"nodeType": "YulLiteral",
																				"src": "6874:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6862:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "6862:3:11"
																		},
																		"nativeSrc": "6862:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "6862:14:11"
																	},
																	{
																		"hexValue": "50726573616c6520737564616820626572616b686972",
																		"kind": "string",
																		"nativeSrc": "6878:24:11",
																		"nodeType": "YulLiteral",
																		"src": "6878:24:11",
																		"type": "",
																		"value": "Presale sudah berakhir"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6855:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "6855:6:11"
																},
																"nativeSrc": "6855:48:11",
																"nodeType": "YulFunctionCall",
																"src": "6855:48:11"
															},
															"nativeSrc": "6855:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "6855:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c",
												"nativeSrc": "6738:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "6836:6:11",
														"nodeType": "YulTypedName",
														"src": "6836:6:11",
														"type": ""
													}
												],
												"src": "6738:172:11"
											},
											{
												"body": {
													"nativeSrc": "7062:220:11",
													"nodeType": "YulBlock",
													"src": "7062:220:11",
													"statements": [
														{
															"nativeSrc": "7072:74:11",
															"nodeType": "YulAssignment",
															"src": "7072:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7138:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7138:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7143:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7143:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7079:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "7079:58:11"
																},
																"nativeSrc": "7079:67:11",
																"nodeType": "YulFunctionCall",
																"src": "7079:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7072:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7072:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7244:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7244:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c",
																	"nativeSrc": "7155:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "7155:88:11"
																},
																"nativeSrc": "7155:93:11",
																"nodeType": "YulFunctionCall",
																"src": "7155:93:11"
															},
															"nativeSrc": "7155:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "7155:93:11"
														},
														{
															"nativeSrc": "7257:19:11",
															"nodeType": "YulAssignment",
															"src": "7257:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7268:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "7268:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7273:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7273:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7264:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7264:3:11"
																},
																"nativeSrc": "7264:12:11",
																"nodeType": "YulFunctionCall",
																"src": "7264:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7257:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7257:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "6916:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7050:3:11",
														"nodeType": "YulTypedName",
														"src": "7050:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7058:3:11",
														"nodeType": "YulTypedName",
														"src": "7058:3:11",
														"type": ""
													}
												],
												"src": "6916:366:11"
											},
											{
												"body": {
													"nativeSrc": "7459:248:11",
													"nodeType": "YulBlock",
													"src": "7459:248:11",
													"statements": [
														{
															"nativeSrc": "7469:26:11",
															"nodeType": "YulAssignment",
															"src": "7469:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7481:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "7481:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7492:2:11",
																		"nodeType": "YulLiteral",
																		"src": "7492:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7477:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "7477:3:11"
																},
																"nativeSrc": "7477:18:11",
																"nodeType": "YulFunctionCall",
																"src": "7477:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7469:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7469:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7516:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7516:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7527:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7527:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7512:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7512:3:11"
																		},
																		"nativeSrc": "7512:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7512:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7535:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "7535:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7541:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "7541:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7531:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7531:3:11"
																		},
																		"nativeSrc": "7531:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7531:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7505:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7505:6:11"
																},
																"nativeSrc": "7505:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7505:47:11"
															},
															"nativeSrc": "7505:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7505:47:11"
														},
														{
															"nativeSrc": "7561:139:11",
															"nodeType": "YulAssignment",
															"src": "7561:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "7695:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "7695:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7569:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "7569:124:11"
																},
																"nativeSrc": "7569:131:11",
																"nodeType": "YulFunctionCall",
																"src": "7569:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7561:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "7561:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7288:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7439:9:11",
														"nodeType": "YulTypedName",
														"src": "7439:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7454:4:11",
														"nodeType": "YulTypedName",
														"src": "7454:4:11",
														"type": ""
													}
												],
												"src": "7288:419:11"
											},
											{
												"body": {
													"nativeSrc": "7819:65:11",
													"nodeType": "YulBlock",
													"src": "7819:65:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7841:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "7841:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7849:1:11",
																				"nodeType": "YulLiteral",
																				"src": "7849:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7837:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "7837:3:11"
																		},
																		"nativeSrc": "7837:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "7837:14:11"
																	},
																	{
																		"hexValue": "50726573616c652062656c756d2064696d756c6169",
																		"kind": "string",
																		"nativeSrc": "7853:23:11",
																		"nodeType": "YulLiteral",
																		"src": "7853:23:11",
																		"type": "",
																		"value": "Presale belum dimulai"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7830:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "7830:6:11"
																},
																"nativeSrc": "7830:47:11",
																"nodeType": "YulFunctionCall",
																"src": "7830:47:11"
															},
															"nativeSrc": "7830:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "7830:47:11"
														}
													]
												},
												"name": "store_literal_in_memory_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3",
												"nativeSrc": "7713:171:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7811:6:11",
														"nodeType": "YulTypedName",
														"src": "7811:6:11",
														"type": ""
													}
												],
												"src": "7713:171:11"
											},
											{
												"body": {
													"nativeSrc": "8036:220:11",
													"nodeType": "YulBlock",
													"src": "8036:220:11",
													"statements": [
														{
															"nativeSrc": "8046:74:11",
															"nodeType": "YulAssignment",
															"src": "8046:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8112:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8112:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8117:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8117:2:11",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8053:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "8053:58:11"
																},
																"nativeSrc": "8053:67:11",
																"nodeType": "YulFunctionCall",
																"src": "8053:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8046:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8046:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8218:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8218:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3",
																	"nativeSrc": "8129:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "8129:88:11"
																},
																"nativeSrc": "8129:93:11",
																"nodeType": "YulFunctionCall",
																"src": "8129:93:11"
															},
															"nativeSrc": "8129:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "8129:93:11"
														},
														{
															"nativeSrc": "8231:19:11",
															"nodeType": "YulAssignment",
															"src": "8231:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8242:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8242:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8247:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8247:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8238:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8238:3:11"
																},
																"nativeSrc": "8238:12:11",
																"nodeType": "YulFunctionCall",
																"src": "8238:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8231:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8231:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7890:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8024:3:11",
														"nodeType": "YulTypedName",
														"src": "8024:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8032:3:11",
														"nodeType": "YulTypedName",
														"src": "8032:3:11",
														"type": ""
													}
												],
												"src": "7890:366:11"
											},
											{
												"body": {
													"nativeSrc": "8433:248:11",
													"nodeType": "YulBlock",
													"src": "8433:248:11",
													"statements": [
														{
															"nativeSrc": "8443:26:11",
															"nodeType": "YulAssignment",
															"src": "8443:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8455:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "8455:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8466:2:11",
																		"nodeType": "YulLiteral",
																		"src": "8466:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8451:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8451:3:11"
																},
																"nativeSrc": "8451:18:11",
																"nodeType": "YulFunctionCall",
																"src": "8451:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8443:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8443:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8490:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8501:1:11",
																				"nodeType": "YulLiteral",
																				"src": "8501:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8486:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:11"
																		},
																		"nativeSrc": "8486:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8486:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8509:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "8509:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8515:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "8515:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8505:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "8505:3:11"
																		},
																		"nativeSrc": "8505:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8479:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "8479:6:11"
																},
																"nativeSrc": "8479:47:11",
																"nodeType": "YulFunctionCall",
																"src": "8479:47:11"
															},
															"nativeSrc": "8479:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "8479:47:11"
														},
														{
															"nativeSrc": "8535:139:11",
															"nodeType": "YulAssignment",
															"src": "8535:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8669:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "8669:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8543:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "8543:124:11"
																},
																"nativeSrc": "8543:131:11",
																"nodeType": "YulFunctionCall",
																"src": "8543:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8535:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "8535:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8262:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8413:9:11",
														"nodeType": "YulTypedName",
														"src": "8413:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8428:4:11",
														"nodeType": "YulTypedName",
														"src": "8428:4:11",
														"type": ""
													}
												],
												"src": "8262:419:11"
											},
											{
												"body": {
													"nativeSrc": "8731:147:11",
													"nodeType": "YulBlock",
													"src": "8731:147:11",
													"statements": [
														{
															"nativeSrc": "8741:25:11",
															"nodeType": "YulAssignment",
															"src": "8741:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8764:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8764:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8746:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8746:17:11"
																},
																"nativeSrc": "8746:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8746:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8741:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8741:1:11"
																}
															]
														},
														{
															"nativeSrc": "8775:25:11",
															"nodeType": "YulAssignment",
															"src": "8775:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8798:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8798:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8780:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "8780:17:11"
																},
																"nativeSrc": "8780:20:11",
																"nodeType": "YulFunctionCall",
																"src": "8780:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8775:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "8775:1:11"
																}
															]
														},
														{
															"nativeSrc": "8809:16:11",
															"nodeType": "YulAssignment",
															"src": "8809:16:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8820:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8820:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8823:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8823:1:11"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8816:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8816:3:11"
																},
																"nativeSrc": "8816:9:11",
																"nodeType": "YulFunctionCall",
																"src": "8816:9:11"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "8809:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "8809:3:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8849:22:11",
																"nodeType": "YulBlock",
																"src": "8849:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8851:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "8851:16:11"
																			},
																			"nativeSrc": "8851:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "8851:18:11"
																		},
																		"nativeSrc": "8851:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "8851:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8841:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "8841:1:11"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "8844:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "8844:3:11"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8838:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "8838:2:11"
																},
																"nativeSrc": "8838:10:11",
																"nodeType": "YulFunctionCall",
																"src": "8838:10:11"
															},
															"nativeSrc": "8835:36:11",
															"nodeType": "YulIf",
															"src": "8835:36:11"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "8687:191:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8718:1:11",
														"nodeType": "YulTypedName",
														"src": "8718:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8721:1:11",
														"nodeType": "YulTypedName",
														"src": "8721:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "8727:3:11",
														"nodeType": "YulTypedName",
														"src": "8727:3:11",
														"type": ""
													}
												],
												"src": "8687:191:11"
											},
											{
												"body": {
													"nativeSrc": "8990:62:11",
													"nodeType": "YulBlock",
													"src": "8990:62:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9012:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9012:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9020:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9020:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9008:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9008:3:11"
																		},
																		"nativeSrc": "9008:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9008:14:11"
																	},
																	{
																		"hexValue": "4a756d6c616820746964616b2076616c6964",
																		"kind": "string",
																		"nativeSrc": "9024:20:11",
																		"nodeType": "YulLiteral",
																		"src": "9024:20:11",
																		"type": "",
																		"value": "Jumlah tidak valid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9001:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:11"
																},
																"nativeSrc": "9001:44:11",
																"nodeType": "YulFunctionCall",
																"src": "9001:44:11"
															},
															"nativeSrc": "9001:44:11",
															"nodeType": "YulExpressionStatement",
															"src": "9001:44:11"
														}
													]
												},
												"name": "store_literal_in_memory_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065",
												"nativeSrc": "8884:168:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8982:6:11",
														"nodeType": "YulTypedName",
														"src": "8982:6:11",
														"type": ""
													}
												],
												"src": "8884:168:11"
											},
											{
												"body": {
													"nativeSrc": "9204:220:11",
													"nodeType": "YulBlock",
													"src": "9204:220:11",
													"statements": [
														{
															"nativeSrc": "9214:74:11",
															"nodeType": "YulAssignment",
															"src": "9214:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9280:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9280:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9285:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9285:2:11",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9221:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "9221:58:11"
																},
																"nativeSrc": "9221:67:11",
																"nodeType": "YulFunctionCall",
																"src": "9221:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9214:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9214:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9386:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9386:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065",
																	"nativeSrc": "9297:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "9297:88:11"
																},
																"nativeSrc": "9297:93:11",
																"nodeType": "YulFunctionCall",
																"src": "9297:93:11"
															},
															"nativeSrc": "9297:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "9297:93:11"
														},
														{
															"nativeSrc": "9399:19:11",
															"nodeType": "YulAssignment",
															"src": "9399:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9410:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "9410:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9415:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9415:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9406:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9406:3:11"
																},
																"nativeSrc": "9406:12:11",
																"nodeType": "YulFunctionCall",
																"src": "9406:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "9399:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9399:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9058:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "9192:3:11",
														"nodeType": "YulTypedName",
														"src": "9192:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9200:3:11",
														"nodeType": "YulTypedName",
														"src": "9200:3:11",
														"type": ""
													}
												],
												"src": "9058:366:11"
											},
											{
												"body": {
													"nativeSrc": "9601:248:11",
													"nodeType": "YulBlock",
													"src": "9601:248:11",
													"statements": [
														{
															"nativeSrc": "9611:26:11",
															"nodeType": "YulAssignment",
															"src": "9611:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9623:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "9623:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9634:2:11",
																		"nodeType": "YulLiteral",
																		"src": "9634:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9619:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "9619:3:11"
																},
																"nativeSrc": "9619:18:11",
																"nodeType": "YulFunctionCall",
																"src": "9619:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9611:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9611:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9658:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9658:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9669:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9669:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9654:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9654:3:11"
																		},
																		"nativeSrc": "9654:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9654:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9677:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "9677:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9683:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "9683:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9673:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9673:3:11"
																		},
																		"nativeSrc": "9673:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9673:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9647:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9647:6:11"
																},
																"nativeSrc": "9647:47:11",
																"nodeType": "YulFunctionCall",
																"src": "9647:47:11"
															},
															"nativeSrc": "9647:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "9647:47:11"
														},
														{
															"nativeSrc": "9703:139:11",
															"nodeType": "YulAssignment",
															"src": "9703:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9837:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "9837:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9711:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "9711:124:11"
																},
																"nativeSrc": "9711:131:11",
																"nodeType": "YulFunctionCall",
																"src": "9711:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9703:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "9703:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9430:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9581:9:11",
														"nodeType": "YulTypedName",
														"src": "9581:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9596:4:11",
														"nodeType": "YulTypedName",
														"src": "9596:4:11",
														"type": ""
													}
												],
												"src": "9430:419:11"
											},
											{
												"body": {
													"nativeSrc": "9961:68:11",
													"nodeType": "YulBlock",
													"src": "9961:68:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9983:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "9983:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9991:1:11",
																				"nodeType": "YulLiteral",
																				"src": "9991:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9979:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "9979:3:11"
																		},
																		"nativeSrc": "9979:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "9979:14:11"
																	},
																	{
																		"hexValue": "4d656c65626968692062617461732070656d62656c69616e",
																		"kind": "string",
																		"nativeSrc": "9995:26:11",
																		"nodeType": "YulLiteral",
																		"src": "9995:26:11",
																		"type": "",
																		"value": "Melebihi batas pembelian"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9972:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "9972:6:11"
																},
																"nativeSrc": "9972:50:11",
																"nodeType": "YulFunctionCall",
																"src": "9972:50:11"
															},
															"nativeSrc": "9972:50:11",
															"nodeType": "YulExpressionStatement",
															"src": "9972:50:11"
														}
													]
												},
												"name": "store_literal_in_memory_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330",
												"nativeSrc": "9855:174:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9953:6:11",
														"nodeType": "YulTypedName",
														"src": "9953:6:11",
														"type": ""
													}
												],
												"src": "9855:174:11"
											},
											{
												"body": {
													"nativeSrc": "10181:220:11",
													"nodeType": "YulBlock",
													"src": "10181:220:11",
													"statements": [
														{
															"nativeSrc": "10191:74:11",
															"nodeType": "YulAssignment",
															"src": "10191:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10257:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10257:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10262:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10262:2:11",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10198:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "10198:58:11"
																},
																"nativeSrc": "10198:67:11",
																"nodeType": "YulFunctionCall",
																"src": "10198:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10191:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10191:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10363:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10363:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330",
																	"nativeSrc": "10274:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "10274:88:11"
																},
																"nativeSrc": "10274:93:11",
																"nodeType": "YulFunctionCall",
																"src": "10274:93:11"
															},
															"nativeSrc": "10274:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "10274:93:11"
														},
														{
															"nativeSrc": "10376:19:11",
															"nodeType": "YulAssignment",
															"src": "10376:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10387:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "10387:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10392:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10392:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10383:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10383:3:11"
																},
																"nativeSrc": "10383:12:11",
																"nodeType": "YulFunctionCall",
																"src": "10383:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10376:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10376:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10035:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10169:3:11",
														"nodeType": "YulTypedName",
														"src": "10169:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10177:3:11",
														"nodeType": "YulTypedName",
														"src": "10177:3:11",
														"type": ""
													}
												],
												"src": "10035:366:11"
											},
											{
												"body": {
													"nativeSrc": "10578:248:11",
													"nodeType": "YulBlock",
													"src": "10578:248:11",
													"statements": [
														{
															"nativeSrc": "10588:26:11",
															"nodeType": "YulAssignment",
															"src": "10588:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10600:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "10600:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10611:2:11",
																		"nodeType": "YulLiteral",
																		"src": "10611:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10596:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "10596:3:11"
																},
																"nativeSrc": "10596:18:11",
																"nodeType": "YulFunctionCall",
																"src": "10596:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10588:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10588:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10635:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10635:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10646:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10646:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10631:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10631:3:11"
																		},
																		"nativeSrc": "10631:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10631:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10654:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "10654:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10660:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "10660:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10650:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10650:3:11"
																		},
																		"nativeSrc": "10650:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10650:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10624:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10624:6:11"
																},
																"nativeSrc": "10624:47:11",
																"nodeType": "YulFunctionCall",
																"src": "10624:47:11"
															},
															"nativeSrc": "10624:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "10624:47:11"
														},
														{
															"nativeSrc": "10680:139:11",
															"nodeType": "YulAssignment",
															"src": "10680:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10814:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "10814:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10688:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "10688:124:11"
																},
																"nativeSrc": "10688:131:11",
																"nodeType": "YulFunctionCall",
																"src": "10688:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10407:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10558:9:11",
														"nodeType": "YulTypedName",
														"src": "10558:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10573:4:11",
														"nodeType": "YulTypedName",
														"src": "10573:4:11",
														"type": ""
													}
												],
												"src": "10407:419:11"
											},
											{
												"body": {
													"nativeSrc": "10938:61:11",
													"nodeType": "YulBlock",
													"src": "10938:61:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10960:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "10960:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10968:1:11",
																				"nodeType": "YulLiteral",
																				"src": "10968:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10956:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "10956:3:11"
																		},
																		"nativeSrc": "10956:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "10956:14:11"
																	},
																	{
																		"hexValue": "537461676520746964616b20616b746966",
																		"kind": "string",
																		"nativeSrc": "10972:19:11",
																		"nodeType": "YulLiteral",
																		"src": "10972:19:11",
																		"type": "",
																		"value": "Stage tidak aktif"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10949:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "10949:6:11"
																},
																"nativeSrc": "10949:43:11",
																"nodeType": "YulFunctionCall",
																"src": "10949:43:11"
															},
															"nativeSrc": "10949:43:11",
															"nodeType": "YulExpressionStatement",
															"src": "10949:43:11"
														}
													]
												},
												"name": "store_literal_in_memory_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e",
												"nativeSrc": "10832:167:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10930:6:11",
														"nodeType": "YulTypedName",
														"src": "10930:6:11",
														"type": ""
													}
												],
												"src": "10832:167:11"
											},
											{
												"body": {
													"nativeSrc": "11151:220:11",
													"nodeType": "YulBlock",
													"src": "11151:220:11",
													"statements": [
														{
															"nativeSrc": "11161:74:11",
															"nodeType": "YulAssignment",
															"src": "11161:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11227:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11227:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11232:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11232:2:11",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11168:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "11168:58:11"
																},
																"nativeSrc": "11168:67:11",
																"nodeType": "YulFunctionCall",
																"src": "11168:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11161:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11161:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11333:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11333:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e",
																	"nativeSrc": "11244:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "11244:88:11"
																},
																"nativeSrc": "11244:93:11",
																"nodeType": "YulFunctionCall",
																"src": "11244:93:11"
															},
															"nativeSrc": "11244:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "11244:93:11"
														},
														{
															"nativeSrc": "11346:19:11",
															"nodeType": "YulAssignment",
															"src": "11346:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11357:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "11357:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11362:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11362:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11353:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11353:3:11"
																},
																"nativeSrc": "11353:12:11",
																"nodeType": "YulFunctionCall",
																"src": "11353:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11346:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11346:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11005:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11139:3:11",
														"nodeType": "YulTypedName",
														"src": "11139:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11147:3:11",
														"nodeType": "YulTypedName",
														"src": "11147:3:11",
														"type": ""
													}
												],
												"src": "11005:366:11"
											},
											{
												"body": {
													"nativeSrc": "11548:248:11",
													"nodeType": "YulBlock",
													"src": "11548:248:11",
													"statements": [
														{
															"nativeSrc": "11558:26:11",
															"nodeType": "YulAssignment",
															"src": "11558:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11570:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "11570:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11581:2:11",
																		"nodeType": "YulLiteral",
																		"src": "11581:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11566:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "11566:3:11"
																},
																"nativeSrc": "11566:18:11",
																"nodeType": "YulFunctionCall",
																"src": "11566:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11558:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11558:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11605:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11605:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11616:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11616:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11601:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:11"
																		},
																		"nativeSrc": "11601:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11601:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11624:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "11624:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11630:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "11630:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11620:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11620:3:11"
																		},
																		"nativeSrc": "11620:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11620:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11594:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11594:6:11"
																},
																"nativeSrc": "11594:47:11",
																"nodeType": "YulFunctionCall",
																"src": "11594:47:11"
															},
															"nativeSrc": "11594:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "11594:47:11"
														},
														{
															"nativeSrc": "11650:139:11",
															"nodeType": "YulAssignment",
															"src": "11650:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11784:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "11784:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11658:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "11658:124:11"
																},
																"nativeSrc": "11658:131:11",
																"nodeType": "YulFunctionCall",
																"src": "11658:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11650:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "11650:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11377:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11528:9:11",
														"nodeType": "YulTypedName",
														"src": "11528:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11543:4:11",
														"nodeType": "YulTypedName",
														"src": "11543:4:11",
														"type": ""
													}
												],
												"src": "11377:419:11"
											},
											{
												"body": {
													"nativeSrc": "11908:64:11",
													"nodeType": "YulBlock",
													"src": "11908:64:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11930:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "11930:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11938:1:11",
																				"nodeType": "YulLiteral",
																				"src": "11938:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11926:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "11926:3:11"
																		},
																		"nativeSrc": "11926:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "11926:14:11"
																	},
																	{
																		"hexValue": "4d656c6562696869206b756f7461207374616765",
																		"kind": "string",
																		"nativeSrc": "11942:22:11",
																		"nodeType": "YulLiteral",
																		"src": "11942:22:11",
																		"type": "",
																		"value": "Melebihi kuota stage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11919:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "11919:6:11"
																},
																"nativeSrc": "11919:46:11",
																"nodeType": "YulFunctionCall",
																"src": "11919:46:11"
															},
															"nativeSrc": "11919:46:11",
															"nodeType": "YulExpressionStatement",
															"src": "11919:46:11"
														}
													]
												},
												"name": "store_literal_in_memory_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e",
												"nativeSrc": "11802:170:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11900:6:11",
														"nodeType": "YulTypedName",
														"src": "11900:6:11",
														"type": ""
													}
												],
												"src": "11802:170:11"
											},
											{
												"body": {
													"nativeSrc": "12124:220:11",
													"nodeType": "YulBlock",
													"src": "12124:220:11",
													"statements": [
														{
															"nativeSrc": "12134:74:11",
															"nodeType": "YulAssignment",
															"src": "12134:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12200:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12200:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12205:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12205:2:11",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12141:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "12141:58:11"
																},
																"nativeSrc": "12141:67:11",
																"nodeType": "YulFunctionCall",
																"src": "12141:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12134:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12134:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12306:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12306:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e",
																	"nativeSrc": "12217:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "12217:88:11"
																},
																"nativeSrc": "12217:93:11",
																"nodeType": "YulFunctionCall",
																"src": "12217:93:11"
															},
															"nativeSrc": "12217:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "12217:93:11"
														},
														{
															"nativeSrc": "12319:19:11",
															"nodeType": "YulAssignment",
															"src": "12319:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12330:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "12330:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12335:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12335:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12326:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12326:3:11"
																},
																"nativeSrc": "12326:12:11",
																"nodeType": "YulFunctionCall",
																"src": "12326:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12319:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12319:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11978:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12112:3:11",
														"nodeType": "YulTypedName",
														"src": "12112:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12120:3:11",
														"nodeType": "YulTypedName",
														"src": "12120:3:11",
														"type": ""
													}
												],
												"src": "11978:366:11"
											},
											{
												"body": {
													"nativeSrc": "12521:248:11",
													"nodeType": "YulBlock",
													"src": "12521:248:11",
													"statements": [
														{
															"nativeSrc": "12531:26:11",
															"nodeType": "YulAssignment",
															"src": "12531:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12543:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "12543:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12554:2:11",
																		"nodeType": "YulLiteral",
																		"src": "12554:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12539:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12539:3:11"
																},
																"nativeSrc": "12539:18:11",
																"nodeType": "YulFunctionCall",
																"src": "12539:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12531:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12531:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12578:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12578:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12589:1:11",
																				"nodeType": "YulLiteral",
																				"src": "12589:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12574:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12574:3:11"
																		},
																		"nativeSrc": "12574:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12574:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12597:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "12597:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12603:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "12603:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12593:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "12593:3:11"
																		},
																		"nativeSrc": "12593:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "12593:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12567:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "12567:6:11"
																},
																"nativeSrc": "12567:47:11",
																"nodeType": "YulFunctionCall",
																"src": "12567:47:11"
															},
															"nativeSrc": "12567:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "12567:47:11"
														},
														{
															"nativeSrc": "12623:139:11",
															"nodeType": "YulAssignment",
															"src": "12623:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12757:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "12757:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12631:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "12631:124:11"
																},
																"nativeSrc": "12631:131:11",
																"nodeType": "YulFunctionCall",
																"src": "12631:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12623:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "12623:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12350:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12501:9:11",
														"nodeType": "YulTypedName",
														"src": "12501:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12516:4:11",
														"nodeType": "YulTypedName",
														"src": "12516:4:11",
														"type": ""
													}
												],
												"src": "12350:419:11"
											},
											{
												"body": {
													"nativeSrc": "12823:362:11",
													"nodeType": "YulBlock",
													"src": "12823:362:11",
													"statements": [
														{
															"nativeSrc": "12833:25:11",
															"nodeType": "YulAssignment",
															"src": "12833:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12856:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12856:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12838:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12838:17:11"
																},
																"nativeSrc": "12838:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12838:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "12833:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12833:1:11"
																}
															]
														},
														{
															"nativeSrc": "12867:25:11",
															"nodeType": "YulAssignment",
															"src": "12867:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "12890:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12890:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12872:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12872:17:11"
																},
																"nativeSrc": "12872:20:11",
																"nodeType": "YulFunctionCall",
																"src": "12872:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "12867:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "12867:1:11"
																}
															]
														},
														{
															"nativeSrc": "12901:28:11",
															"nodeType": "YulVariableDeclaration",
															"src": "12901:28:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "12924:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12924:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "12927:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "12927:1:11"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "12920:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "12920:3:11"
																},
																"nativeSrc": "12920:9:11",
																"nodeType": "YulFunctionCall",
																"src": "12920:9:11"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "12905:11:11",
																	"nodeType": "YulTypedName",
																	"src": "12905:11:11",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12938:41:11",
															"nodeType": "YulAssignment",
															"src": "12938:41:11",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "12967:11:11",
																		"nodeType": "YulIdentifier",
																		"src": "12967:11:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12949:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "12949:17:11"
																},
																"nativeSrc": "12949:30:11",
																"nodeType": "YulFunctionCall",
																"src": "12949:30:11"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "12938:7:11",
																	"nodeType": "YulIdentifier",
																	"src": "12938:7:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13156:22:11",
																"nodeType": "YulBlock",
																"src": "13156:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "13158:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13158:16:11"
																			},
																			"nativeSrc": "13158:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13158:18:11"
																		},
																		"nativeSrc": "13158:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13158:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "13089:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13089:1:11"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "13082:6:11",
																					"nodeType": "YulIdentifier",
																					"src": "13082:6:11"
																				},
																				"nativeSrc": "13082:9:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13082:9:11"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "13112:1:11",
																						"nodeType": "YulIdentifier",
																						"src": "13112:1:11"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "13119:7:11",
																								"nodeType": "YulIdentifier",
																								"src": "13119:7:11"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "13128:1:11",
																								"nodeType": "YulIdentifier",
																								"src": "13128:1:11"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "13115:3:11",
																							"nodeType": "YulIdentifier",
																							"src": "13115:3:11"
																						},
																						"nativeSrc": "13115:15:11",
																						"nodeType": "YulFunctionCall",
																						"src": "13115:15:11"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "13109:2:11",
																					"nodeType": "YulIdentifier",
																					"src": "13109:2:11"
																				},
																				"nativeSrc": "13109:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "13109:22:11"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "13062:2:11",
																			"nodeType": "YulIdentifier",
																			"src": "13062:2:11"
																		},
																		"nativeSrc": "13062:83:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13062:83:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13042:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13042:6:11"
																},
																"nativeSrc": "13042:113:11",
																"nodeType": "YulFunctionCall",
																"src": "13042:113:11"
															},
															"nativeSrc": "13039:139:11",
															"nodeType": "YulIf",
															"src": "13039:139:11"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "12775:410:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "12806:1:11",
														"nodeType": "YulTypedName",
														"src": "12806:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "12809:1:11",
														"nodeType": "YulTypedName",
														"src": "12809:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "12815:7:11",
														"nodeType": "YulTypedName",
														"src": "12815:7:11",
														"type": ""
													}
												],
												"src": "12775:410:11"
											},
											{
												"body": {
													"nativeSrc": "13219:152:11",
													"nodeType": "YulBlock",
													"src": "13219:152:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13236:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13236:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13239:77:11",
																		"nodeType": "YulLiteral",
																		"src": "13239:77:11",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13229:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13229:6:11"
																},
																"nativeSrc": "13229:88:11",
																"nodeType": "YulFunctionCall",
																"src": "13229:88:11"
															},
															"nativeSrc": "13229:88:11",
															"nodeType": "YulExpressionStatement",
															"src": "13229:88:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13333:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13333:1:11",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13336:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13336:4:11",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13326:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13326:6:11"
																},
																"nativeSrc": "13326:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13326:15:11"
															},
															"nativeSrc": "13326:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13326:15:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13357:1:11",
																		"nodeType": "YulLiteral",
																		"src": "13357:1:11",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13360:4:11",
																		"nodeType": "YulLiteral",
																		"src": "13360:4:11",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13350:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13350:6:11"
																},
																"nativeSrc": "13350:15:11",
																"nodeType": "YulFunctionCall",
																"src": "13350:15:11"
															},
															"nativeSrc": "13350:15:11",
															"nodeType": "YulExpressionStatement",
															"src": "13350:15:11"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "13191:180:11",
												"nodeType": "YulFunctionDefinition",
												"src": "13191:180:11"
											},
											{
												"body": {
													"nativeSrc": "13419:143:11",
													"nodeType": "YulBlock",
													"src": "13419:143:11",
													"statements": [
														{
															"nativeSrc": "13429:25:11",
															"nodeType": "YulAssignment",
															"src": "13429:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13452:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13452:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13434:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13434:17:11"
																},
																"nativeSrc": "13434:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13434:20:11"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13429:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13429:1:11"
																}
															]
														},
														{
															"nativeSrc": "13463:25:11",
															"nodeType": "YulAssignment",
															"src": "13463:25:11",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13486:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13486:1:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13468:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "13468:17:11"
																},
																"nativeSrc": "13468:20:11",
																"nodeType": "YulFunctionCall",
																"src": "13468:20:11"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "13463:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13463:1:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "13510:22:11",
																"nodeType": "YulBlock",
																"src": "13510:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "13512:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "13512:16:11"
																			},
																			"nativeSrc": "13512:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "13512:18:11"
																		},
																		"nativeSrc": "13512:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "13512:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "13507:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13507:1:11"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "13500:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "13500:6:11"
																},
																"nativeSrc": "13500:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13500:9:11"
															},
															"nativeSrc": "13497:35:11",
															"nodeType": "YulIf",
															"src": "13497:35:11"
														},
														{
															"nativeSrc": "13542:14:11",
															"nodeType": "YulAssignment",
															"src": "13542:14:11",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "13551:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13551:1:11"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "13554:1:11",
																		"nodeType": "YulIdentifier",
																		"src": "13554:1:11"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "13547:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13547:3:11"
																},
																"nativeSrc": "13547:9:11",
																"nodeType": "YulFunctionCall",
																"src": "13547:9:11"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "13542:1:11",
																	"nodeType": "YulIdentifier",
																	"src": "13542:1:11"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "13377:185:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13408:1:11",
														"nodeType": "YulTypedName",
														"src": "13408:1:11",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13411:1:11",
														"nodeType": "YulTypedName",
														"src": "13411:1:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "13417:1:11",
														"nodeType": "YulTypedName",
														"src": "13417:1:11",
														"type": ""
													}
												],
												"src": "13377:185:11"
											},
											{
												"body": {
													"nativeSrc": "13694:206:11",
													"nodeType": "YulBlock",
													"src": "13694:206:11",
													"statements": [
														{
															"nativeSrc": "13704:26:11",
															"nodeType": "YulAssignment",
															"src": "13704:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13716:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "13716:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13727:2:11",
																		"nodeType": "YulLiteral",
																		"src": "13727:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13712:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "13712:3:11"
																},
																"nativeSrc": "13712:18:11",
																"nodeType": "YulFunctionCall",
																"src": "13712:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13704:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "13704:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13784:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13784:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13797:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13797:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13808:1:11",
																				"nodeType": "YulLiteral",
																				"src": "13808:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13793:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13793:3:11"
																		},
																		"nativeSrc": "13793:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13793:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13740:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13740:43:11"
																},
																"nativeSrc": "13740:71:11",
																"nodeType": "YulFunctionCall",
																"src": "13740:71:11"
															},
															"nativeSrc": "13740:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "13740:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13865:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "13865:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13878:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "13878:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13889:2:11",
																				"nodeType": "YulLiteral",
																				"src": "13889:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13874:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "13874:3:11"
																		},
																		"nativeSrc": "13874:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "13874:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13821:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "13821:43:11"
																},
																"nativeSrc": "13821:72:11",
																"nodeType": "YulFunctionCall",
																"src": "13821:72:11"
															},
															"nativeSrc": "13821:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "13821:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "13568:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13658:9:11",
														"nodeType": "YulTypedName",
														"src": "13658:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13670:6:11",
														"nodeType": "YulTypedName",
														"src": "13670:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13678:6:11",
														"nodeType": "YulTypedName",
														"src": "13678:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13689:4:11",
														"nodeType": "YulTypedName",
														"src": "13689:4:11",
														"type": ""
													}
												],
												"src": "13568:332:11"
											},
											{
												"body": {
													"nativeSrc": "14012:60:11",
													"nodeType": "YulBlock",
													"src": "14012:60:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14034:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "14034:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14042:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14042:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14030:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14030:3:11"
																		},
																		"nativeSrc": "14030:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14030:14:11"
																	},
																	{
																		"hexValue": "42656c756d206269736120636c61696d",
																		"kind": "string",
																		"nativeSrc": "14046:18:11",
																		"nodeType": "YulLiteral",
																		"src": "14046:18:11",
																		"type": "",
																		"value": "Belum bisa claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14023:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14023:6:11"
																},
																"nativeSrc": "14023:42:11",
																"nodeType": "YulFunctionCall",
																"src": "14023:42:11"
															},
															"nativeSrc": "14023:42:11",
															"nodeType": "YulExpressionStatement",
															"src": "14023:42:11"
														}
													]
												},
												"name": "store_literal_in_memory_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19",
												"nativeSrc": "13906:166:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14004:6:11",
														"nodeType": "YulTypedName",
														"src": "14004:6:11",
														"type": ""
													}
												],
												"src": "13906:166:11"
											},
											{
												"body": {
													"nativeSrc": "14224:220:11",
													"nodeType": "YulBlock",
													"src": "14224:220:11",
													"statements": [
														{
															"nativeSrc": "14234:74:11",
															"nodeType": "YulAssignment",
															"src": "14234:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14300:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14300:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14305:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14305:2:11",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14241:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "14241:58:11"
																},
																"nativeSrc": "14241:67:11",
																"nodeType": "YulFunctionCall",
																"src": "14241:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14234:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14234:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14406:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14406:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19",
																	"nativeSrc": "14317:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "14317:88:11"
																},
																"nativeSrc": "14317:93:11",
																"nodeType": "YulFunctionCall",
																"src": "14317:93:11"
															},
															"nativeSrc": "14317:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "14317:93:11"
														},
														{
															"nativeSrc": "14419:19:11",
															"nodeType": "YulAssignment",
															"src": "14419:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14430:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "14430:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14435:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14435:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14426:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14426:3:11"
																},
																"nativeSrc": "14426:12:11",
																"nodeType": "YulFunctionCall",
																"src": "14426:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14419:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14419:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14078:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14212:3:11",
														"nodeType": "YulTypedName",
														"src": "14212:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14220:3:11",
														"nodeType": "YulTypedName",
														"src": "14220:3:11",
														"type": ""
													}
												],
												"src": "14078:366:11"
											},
											{
												"body": {
													"nativeSrc": "14621:248:11",
													"nodeType": "YulBlock",
													"src": "14621:248:11",
													"statements": [
														{
															"nativeSrc": "14631:26:11",
															"nodeType": "YulAssignment",
															"src": "14631:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14643:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "14643:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14654:2:11",
																		"nodeType": "YulLiteral",
																		"src": "14654:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14639:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "14639:3:11"
																},
																"nativeSrc": "14639:18:11",
																"nodeType": "YulFunctionCall",
																"src": "14639:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14631:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14631:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14678:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14678:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14689:1:11",
																				"nodeType": "YulLiteral",
																				"src": "14689:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14674:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14674:3:11"
																		},
																		"nativeSrc": "14674:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14674:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14697:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "14697:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14703:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "14703:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14693:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14693:3:11"
																		},
																		"nativeSrc": "14693:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14693:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14667:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14667:6:11"
																},
																"nativeSrc": "14667:47:11",
																"nodeType": "YulFunctionCall",
																"src": "14667:47:11"
															},
															"nativeSrc": "14667:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "14667:47:11"
														},
														{
															"nativeSrc": "14723:139:11",
															"nodeType": "YulAssignment",
															"src": "14723:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14857:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "14857:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14731:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "14731:124:11"
																},
																"nativeSrc": "14731:131:11",
																"nodeType": "YulFunctionCall",
																"src": "14731:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14723:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "14723:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14450:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14601:9:11",
														"nodeType": "YulTypedName",
														"src": "14601:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14616:4:11",
														"nodeType": "YulTypedName",
														"src": "14616:4:11",
														"type": ""
													}
												],
												"src": "14450:419:11"
											},
											{
												"body": {
													"nativeSrc": "14981:74:11",
													"nodeType": "YulBlock",
													"src": "14981:74:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15003:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15003:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15011:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15011:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14999:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "14999:3:11"
																		},
																		"nativeSrc": "14999:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "14999:14:11"
																	},
																	{
																		"hexValue": "546964616b2061646120746f6b656e20756e74756b2064692d636c61696d",
																		"kind": "string",
																		"nativeSrc": "15015:32:11",
																		"nodeType": "YulLiteral",
																		"src": "15015:32:11",
																		"type": "",
																		"value": "Tidak ada token untuk di-claim"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14992:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "14992:6:11"
																},
																"nativeSrc": "14992:56:11",
																"nodeType": "YulFunctionCall",
																"src": "14992:56:11"
															},
															"nativeSrc": "14992:56:11",
															"nodeType": "YulExpressionStatement",
															"src": "14992:56:11"
														}
													]
												},
												"name": "store_literal_in_memory_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc",
												"nativeSrc": "14875:180:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14973:6:11",
														"nodeType": "YulTypedName",
														"src": "14973:6:11",
														"type": ""
													}
												],
												"src": "14875:180:11"
											},
											{
												"body": {
													"nativeSrc": "15207:220:11",
													"nodeType": "YulBlock",
													"src": "15207:220:11",
													"statements": [
														{
															"nativeSrc": "15217:74:11",
															"nodeType": "YulAssignment",
															"src": "15217:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15283:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15283:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15288:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15288:2:11",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15224:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "15224:58:11"
																},
																"nativeSrc": "15224:67:11",
																"nodeType": "YulFunctionCall",
																"src": "15224:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15217:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15217:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15389:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15389:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc",
																	"nativeSrc": "15300:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "15300:88:11"
																},
																"nativeSrc": "15300:93:11",
																"nodeType": "YulFunctionCall",
																"src": "15300:93:11"
															},
															"nativeSrc": "15300:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "15300:93:11"
														},
														{
															"nativeSrc": "15402:19:11",
															"nodeType": "YulAssignment",
															"src": "15402:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15413:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "15413:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15418:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15418:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15409:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15409:3:11"
																},
																"nativeSrc": "15409:12:11",
																"nodeType": "YulFunctionCall",
																"src": "15409:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15402:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15402:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15061:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15195:3:11",
														"nodeType": "YulTypedName",
														"src": "15195:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15203:3:11",
														"nodeType": "YulTypedName",
														"src": "15203:3:11",
														"type": ""
													}
												],
												"src": "15061:366:11"
											},
											{
												"body": {
													"nativeSrc": "15604:248:11",
													"nodeType": "YulBlock",
													"src": "15604:248:11",
													"statements": [
														{
															"nativeSrc": "15614:26:11",
															"nodeType": "YulAssignment",
															"src": "15614:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15626:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "15626:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15637:2:11",
																		"nodeType": "YulLiteral",
																		"src": "15637:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15622:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "15622:3:11"
																},
																"nativeSrc": "15622:18:11",
																"nodeType": "YulFunctionCall",
																"src": "15622:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15614:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15614:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15661:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15661:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15672:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15672:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15657:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15657:3:11"
																		},
																		"nativeSrc": "15657:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15657:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15680:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "15680:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15686:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "15686:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15676:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15676:3:11"
																		},
																		"nativeSrc": "15676:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15676:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15650:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15650:6:11"
																},
																"nativeSrc": "15650:47:11",
																"nodeType": "YulFunctionCall",
																"src": "15650:47:11"
															},
															"nativeSrc": "15650:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "15650:47:11"
														},
														{
															"nativeSrc": "15706:139:11",
															"nodeType": "YulAssignment",
															"src": "15706:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15840:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "15840:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15714:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "15714:124:11"
																},
																"nativeSrc": "15714:131:11",
																"nodeType": "YulFunctionCall",
																"src": "15714:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15706:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "15706:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15433:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15584:9:11",
														"nodeType": "YulTypedName",
														"src": "15584:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15599:4:11",
														"nodeType": "YulTypedName",
														"src": "15599:4:11",
														"type": ""
													}
												],
												"src": "15433:419:11"
											},
											{
												"body": {
													"nativeSrc": "15964:66:11",
													"nodeType": "YulBlock",
													"src": "15964:66:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15986:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "15986:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15994:1:11",
																				"nodeType": "YulLiteral",
																				"src": "15994:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15982:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "15982:3:11"
																		},
																		"nativeSrc": "15982:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "15982:14:11"
																	},
																	{
																		"hexValue": "50726573616c65207375646168206469616b68697269",
																		"kind": "string",
																		"nativeSrc": "15998:24:11",
																		"nodeType": "YulLiteral",
																		"src": "15998:24:11",
																		"type": "",
																		"value": "Presale sudah diakhiri"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15975:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "15975:6:11"
																},
																"nativeSrc": "15975:48:11",
																"nodeType": "YulFunctionCall",
																"src": "15975:48:11"
															},
															"nativeSrc": "15975:48:11",
															"nodeType": "YulExpressionStatement",
															"src": "15975:48:11"
														}
													]
												},
												"name": "store_literal_in_memory_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02",
												"nativeSrc": "15858:172:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15956:6:11",
														"nodeType": "YulTypedName",
														"src": "15956:6:11",
														"type": ""
													}
												],
												"src": "15858:172:11"
											},
											{
												"body": {
													"nativeSrc": "16182:220:11",
													"nodeType": "YulBlock",
													"src": "16182:220:11",
													"statements": [
														{
															"nativeSrc": "16192:74:11",
															"nodeType": "YulAssignment",
															"src": "16192:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16258:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16258:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16263:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16263:2:11",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16199:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "16199:58:11"
																},
																"nativeSrc": "16199:67:11",
																"nodeType": "YulFunctionCall",
																"src": "16199:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16192:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16192:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16364:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16364:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02",
																	"nativeSrc": "16275:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "16275:88:11"
																},
																"nativeSrc": "16275:93:11",
																"nodeType": "YulFunctionCall",
																"src": "16275:93:11"
															},
															"nativeSrc": "16275:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "16275:93:11"
														},
														{
															"nativeSrc": "16377:19:11",
															"nodeType": "YulAssignment",
															"src": "16377:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16388:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "16388:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16393:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16393:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16384:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16384:3:11"
																},
																"nativeSrc": "16384:12:11",
																"nodeType": "YulFunctionCall",
																"src": "16384:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16377:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16377:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16036:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16170:3:11",
														"nodeType": "YulTypedName",
														"src": "16170:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16178:3:11",
														"nodeType": "YulTypedName",
														"src": "16178:3:11",
														"type": ""
													}
												],
												"src": "16036:366:11"
											},
											{
												"body": {
													"nativeSrc": "16579:248:11",
													"nodeType": "YulBlock",
													"src": "16579:248:11",
													"statements": [
														{
															"nativeSrc": "16589:26:11",
															"nodeType": "YulAssignment",
															"src": "16589:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16601:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "16601:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16612:2:11",
																		"nodeType": "YulLiteral",
																		"src": "16612:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16597:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "16597:3:11"
																},
																"nativeSrc": "16597:18:11",
																"nodeType": "YulFunctionCall",
																"src": "16597:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16589:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16589:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16636:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16636:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16647:1:11",
																				"nodeType": "YulLiteral",
																				"src": "16647:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16632:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16632:3:11"
																		},
																		"nativeSrc": "16632:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16632:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16655:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "16655:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16661:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "16661:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16651:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "16651:3:11"
																		},
																		"nativeSrc": "16651:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "16651:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16625:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "16625:6:11"
																},
																"nativeSrc": "16625:47:11",
																"nodeType": "YulFunctionCall",
																"src": "16625:47:11"
															},
															"nativeSrc": "16625:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "16625:47:11"
														},
														{
															"nativeSrc": "16681:139:11",
															"nodeType": "YulAssignment",
															"src": "16681:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16815:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "16815:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16689:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "16689:124:11"
																},
																"nativeSrc": "16689:131:11",
																"nodeType": "YulFunctionCall",
																"src": "16689:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16681:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "16681:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16408:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16559:9:11",
														"nodeType": "YulTypedName",
														"src": "16559:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16574:4:11",
														"nodeType": "YulTypedName",
														"src": "16574:4:11",
														"type": ""
													}
												],
												"src": "16408:419:11"
											},
											{
												"body": {
													"nativeSrc": "16896:80:11",
													"nodeType": "YulBlock",
													"src": "16896:80:11",
													"statements": [
														{
															"nativeSrc": "16906:22:11",
															"nodeType": "YulAssignment",
															"src": "16906:22:11",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "16921:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "16921:6:11"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "16915:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "16915:5:11"
																},
																"nativeSrc": "16915:13:11",
																"nodeType": "YulFunctionCall",
																"src": "16915:13:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16906:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "16906:5:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16964:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "16964:5:11"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "16937:26:11",
																	"nodeType": "YulIdentifier",
																	"src": "16937:26:11"
																},
																"nativeSrc": "16937:33:11",
																"nodeType": "YulFunctionCall",
																"src": "16937:33:11"
															},
															"nativeSrc": "16937:33:11",
															"nodeType": "YulExpressionStatement",
															"src": "16937:33:11"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "16833:143:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "16874:6:11",
														"nodeType": "YulTypedName",
														"src": "16874:6:11",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "16882:3:11",
														"nodeType": "YulTypedName",
														"src": "16882:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "16890:5:11",
														"nodeType": "YulTypedName",
														"src": "16890:5:11",
														"type": ""
													}
												],
												"src": "16833:143:11"
											},
											{
												"body": {
													"nativeSrc": "17059:274:11",
													"nodeType": "YulBlock",
													"src": "17059:274:11",
													"statements": [
														{
															"body": {
																"nativeSrc": "17105:83:11",
																"nodeType": "YulBlock",
																"src": "17105:83:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17107:77:11",
																				"nodeType": "YulIdentifier",
																				"src": "17107:77:11"
																			},
																			"nativeSrc": "17107:79:11",
																			"nodeType": "YulFunctionCall",
																			"src": "17107:79:11"
																		},
																		"nativeSrc": "17107:79:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "17107:79:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17080:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "17080:7:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17089:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "17089:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17076:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17076:3:11"
																		},
																		"nativeSrc": "17076:23:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17076:23:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17101:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17101:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17072:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17072:3:11"
																},
																"nativeSrc": "17072:32:11",
																"nodeType": "YulFunctionCall",
																"src": "17072:32:11"
															},
															"nativeSrc": "17069:119:11",
															"nodeType": "YulIf",
															"src": "17069:119:11"
														},
														{
															"nativeSrc": "17198:128:11",
															"nodeType": "YulBlock",
															"src": "17198:128:11",
															"statements": [
																{
																	"nativeSrc": "17213:15:11",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17213:15:11",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17227:1:11",
																		"nodeType": "YulLiteral",
																		"src": "17227:1:11",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17217:6:11",
																			"nodeType": "YulTypedName",
																			"src": "17217:6:11",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "17242:74:11",
																	"nodeType": "YulAssignment",
																	"src": "17242:74:11",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "17288:9:11",
																						"nodeType": "YulIdentifier",
																						"src": "17288:9:11"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "17299:6:11",
																						"nodeType": "YulIdentifier",
																						"src": "17299:6:11"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "17284:3:11",
																					"nodeType": "YulIdentifier",
																					"src": "17284:3:11"
																				},
																				"nativeSrc": "17284:22:11",
																				"nodeType": "YulFunctionCall",
																				"src": "17284:22:11"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17308:7:11",
																				"nodeType": "YulIdentifier",
																				"src": "17308:7:11"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "17252:31:11",
																			"nodeType": "YulIdentifier",
																			"src": "17252:31:11"
																		},
																		"nativeSrc": "17252:64:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17252:64:11"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "17242:6:11",
																			"nodeType": "YulIdentifier",
																			"src": "17242:6:11"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "16982:351:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17029:9:11",
														"nodeType": "YulTypedName",
														"src": "17029:9:11",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17040:7:11",
														"nodeType": "YulTypedName",
														"src": "17040:7:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17052:6:11",
														"nodeType": "YulTypedName",
														"src": "17052:6:11",
														"type": ""
													}
												],
												"src": "16982:351:11"
											},
											{
												"body": {
													"nativeSrc": "17445:75:11",
													"nodeType": "YulBlock",
													"src": "17445:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17467:6:11",
																				"nodeType": "YulIdentifier",
																				"src": "17467:6:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17475:1:11",
																				"nodeType": "YulLiteral",
																				"src": "17475:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17463:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "17463:3:11"
																		},
																		"nativeSrc": "17463:14:11",
																		"nodeType": "YulFunctionCall",
																		"src": "17463:14:11"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "17479:33:11",
																		"nodeType": "YulLiteral",
																		"src": "17479:33:11",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17456:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "17456:6:11"
																},
																"nativeSrc": "17456:57:11",
																"nodeType": "YulFunctionCall",
																"src": "17456:57:11"
															},
															"nativeSrc": "17456:57:11",
															"nodeType": "YulExpressionStatement",
															"src": "17456:57:11"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "17339:181:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17437:6:11",
														"nodeType": "YulTypedName",
														"src": "17437:6:11",
														"type": ""
													}
												],
												"src": "17339:181:11"
											},
											{
												"body": {
													"nativeSrc": "17672:220:11",
													"nodeType": "YulBlock",
													"src": "17672:220:11",
													"statements": [
														{
															"nativeSrc": "17682:74:11",
															"nodeType": "YulAssignment",
															"src": "17682:74:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17748:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17748:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17753:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17753:2:11",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17689:58:11",
																	"nodeType": "YulIdentifier",
																	"src": "17689:58:11"
																},
																"nativeSrc": "17689:67:11",
																"nodeType": "YulFunctionCall",
																"src": "17689:67:11"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17682:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17682:3:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17854:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17854:3:11"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "17765:88:11",
																	"nodeType": "YulIdentifier",
																	"src": "17765:88:11"
																},
																"nativeSrc": "17765:93:11",
																"nodeType": "YulFunctionCall",
																"src": "17765:93:11"
															},
															"nativeSrc": "17765:93:11",
															"nodeType": "YulExpressionStatement",
															"src": "17765:93:11"
														},
														{
															"nativeSrc": "17867:19:11",
															"nodeType": "YulAssignment",
															"src": "17867:19:11",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17878:3:11",
																		"nodeType": "YulIdentifier",
																		"src": "17878:3:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17883:2:11",
																		"nodeType": "YulLiteral",
																		"src": "17883:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17874:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17874:3:11"
																},
																"nativeSrc": "17874:12:11",
																"nodeType": "YulFunctionCall",
																"src": "17874:12:11"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17867:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "17867:3:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17526:366:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17660:3:11",
														"nodeType": "YulTypedName",
														"src": "17660:3:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17668:3:11",
														"nodeType": "YulTypedName",
														"src": "17668:3:11",
														"type": ""
													}
												],
												"src": "17526:366:11"
											},
											{
												"body": {
													"nativeSrc": "18069:248:11",
													"nodeType": "YulBlock",
													"src": "18069:248:11",
													"statements": [
														{
															"nativeSrc": "18079:26:11",
															"nodeType": "YulAssignment",
															"src": "18079:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18091:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18091:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18102:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18102:2:11",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18087:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18087:3:11"
																},
																"nativeSrc": "18087:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18087:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18079:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18079:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18126:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18126:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18137:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18137:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18122:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18122:3:11"
																		},
																		"nativeSrc": "18122:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18122:17:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18145:4:11",
																				"nodeType": "YulIdentifier",
																				"src": "18145:4:11"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18151:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18151:9:11"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18141:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18141:3:11"
																		},
																		"nativeSrc": "18141:20:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18141:20:11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18115:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "18115:6:11"
																},
																"nativeSrc": "18115:47:11",
																"nodeType": "YulFunctionCall",
																"src": "18115:47:11"
															},
															"nativeSrc": "18115:47:11",
															"nodeType": "YulExpressionStatement",
															"src": "18115:47:11"
														},
														{
															"nativeSrc": "18171:139:11",
															"nodeType": "YulAssignment",
															"src": "18171:139:11",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18305:4:11",
																		"nodeType": "YulIdentifier",
																		"src": "18305:4:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18179:124:11",
																	"nodeType": "YulIdentifier",
																	"src": "18179:124:11"
																},
																"nativeSrc": "18179:131:11",
																"nodeType": "YulFunctionCall",
																"src": "18179:131:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18171:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18171:4:11"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17898:419:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18049:9:11",
														"nodeType": "YulTypedName",
														"src": "18049:9:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18064:4:11",
														"nodeType": "YulTypedName",
														"src": "18064:4:11",
														"type": ""
													}
												],
												"src": "17898:419:11"
											},
											{
												"body": {
													"nativeSrc": "18477:288:11",
													"nodeType": "YulBlock",
													"src": "18477:288:11",
													"statements": [
														{
															"nativeSrc": "18487:26:11",
															"nodeType": "YulAssignment",
															"src": "18487:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18499:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "18499:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18510:2:11",
																		"nodeType": "YulLiteral",
																		"src": "18510:2:11",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18495:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18495:3:11"
																},
																"nativeSrc": "18495:18:11",
																"nodeType": "YulFunctionCall",
																"src": "18495:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18487:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "18487:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18567:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18567:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18580:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18580:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18591:1:11",
																				"nodeType": "YulLiteral",
																				"src": "18591:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18576:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18576:3:11"
																		},
																		"nativeSrc": "18576:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18576:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18523:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18523:43:11"
																},
																"nativeSrc": "18523:71:11",
																"nodeType": "YulFunctionCall",
																"src": "18523:71:11"
															},
															"nativeSrc": "18523:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "18523:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18648:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18648:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18661:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18661:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18672:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18672:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18657:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18657:3:11"
																		},
																		"nativeSrc": "18657:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18657:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "18604:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18604:43:11"
																},
																"nativeSrc": "18604:72:11",
																"nodeType": "YulFunctionCall",
																"src": "18604:72:11"
															},
															"nativeSrc": "18604:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "18604:72:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18730:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "18730:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18743:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "18743:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18754:2:11",
																				"nodeType": "YulLiteral",
																				"src": "18754:2:11",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18739:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "18739:3:11"
																		},
																		"nativeSrc": "18739:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "18739:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18686:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "18686:43:11"
																},
																"nativeSrc": "18686:72:11",
																"nodeType": "YulFunctionCall",
																"src": "18686:72:11"
															},
															"nativeSrc": "18686:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "18686:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "18323:442:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18433:9:11",
														"nodeType": "YulTypedName",
														"src": "18433:9:11",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18445:6:11",
														"nodeType": "YulTypedName",
														"src": "18445:6:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18453:6:11",
														"nodeType": "YulTypedName",
														"src": "18453:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18461:6:11",
														"nodeType": "YulTypedName",
														"src": "18461:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18472:4:11",
														"nodeType": "YulTypedName",
														"src": "18472:4:11",
														"type": ""
													}
												],
												"src": "18323:442:11"
											},
											{
												"body": {
													"nativeSrc": "18814:190:11",
													"nodeType": "YulBlock",
													"src": "18814:190:11",
													"statements": [
														{
															"nativeSrc": "18824:33:11",
															"nodeType": "YulAssignment",
															"src": "18824:33:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18851:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18851:5:11"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "18833:17:11",
																	"nodeType": "YulIdentifier",
																	"src": "18833:17:11"
																},
																"nativeSrc": "18833:24:11",
																"nodeType": "YulFunctionCall",
																"src": "18833:24:11"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "18824:5:11",
																	"nodeType": "YulIdentifier",
																	"src": "18824:5:11"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18947:22:11",
																"nodeType": "YulBlock",
																"src": "18947:22:11",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "18949:16:11",
																				"nodeType": "YulIdentifier",
																				"src": "18949:16:11"
																			},
																			"nativeSrc": "18949:18:11",
																			"nodeType": "YulFunctionCall",
																			"src": "18949:18:11"
																		},
																		"nativeSrc": "18949:18:11",
																		"nodeType": "YulExpressionStatement",
																		"src": "18949:18:11"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18872:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18872:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18879:66:11",
																		"nodeType": "YulLiteral",
																		"src": "18879:66:11",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "18869:2:11",
																	"nodeType": "YulIdentifier",
																	"src": "18869:2:11"
																},
																"nativeSrc": "18869:77:11",
																"nodeType": "YulFunctionCall",
																"src": "18869:77:11"
															},
															"nativeSrc": "18866:103:11",
															"nodeType": "YulIf",
															"src": "18866:103:11"
														},
														{
															"nativeSrc": "18978:20:11",
															"nodeType": "YulAssignment",
															"src": "18978:20:11",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18989:5:11",
																		"nodeType": "YulIdentifier",
																		"src": "18989:5:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18996:1:11",
																		"nodeType": "YulLiteral",
																		"src": "18996:1:11",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18985:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18985:3:11"
																},
																"nativeSrc": "18985:13:11",
																"nodeType": "YulFunctionCall",
																"src": "18985:13:11"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "18978:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "18978:3:11"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "18771:233:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18800:5:11",
														"nodeType": "YulTypedName",
														"src": "18800:5:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "18810:3:11",
														"nodeType": "YulTypedName",
														"src": "18810:3:11",
														"type": ""
													}
												],
												"src": "18771:233:11"
											},
											{
												"body": {
													"nativeSrc": "19136:206:11",
													"nodeType": "YulBlock",
													"src": "19136:206:11",
													"statements": [
														{
															"nativeSrc": "19146:26:11",
															"nodeType": "YulAssignment",
															"src": "19146:26:11",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19158:9:11",
																		"nodeType": "YulIdentifier",
																		"src": "19158:9:11"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19169:2:11",
																		"nodeType": "YulLiteral",
																		"src": "19169:2:11",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19154:3:11",
																	"nodeType": "YulIdentifier",
																	"src": "19154:3:11"
																},
																"nativeSrc": "19154:18:11",
																"nodeType": "YulFunctionCall",
																"src": "19154:18:11"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19146:4:11",
																	"nodeType": "YulIdentifier",
																	"src": "19146:4:11"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19226:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19226:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19239:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19239:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19250:1:11",
																				"nodeType": "YulLiteral",
																				"src": "19250:1:11",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19235:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19235:3:11"
																		},
																		"nativeSrc": "19235:17:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19235:17:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "19182:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19182:43:11"
																},
																"nativeSrc": "19182:71:11",
																"nodeType": "YulFunctionCall",
																"src": "19182:71:11"
															},
															"nativeSrc": "19182:71:11",
															"nodeType": "YulExpressionStatement",
															"src": "19182:71:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "19307:6:11",
																		"nodeType": "YulIdentifier",
																		"src": "19307:6:11"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19320:9:11",
																				"nodeType": "YulIdentifier",
																				"src": "19320:9:11"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19331:2:11",
																				"nodeType": "YulLiteral",
																				"src": "19331:2:11",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19316:3:11",
																			"nodeType": "YulIdentifier",
																			"src": "19316:3:11"
																		},
																		"nativeSrc": "19316:18:11",
																		"nodeType": "YulFunctionCall",
																		"src": "19316:18:11"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "19263:43:11",
																	"nodeType": "YulIdentifier",
																	"src": "19263:43:11"
																},
																"nativeSrc": "19263:72:11",
																"nodeType": "YulFunctionCall",
																"src": "19263:72:11"
															},
															"nativeSrc": "19263:72:11",
															"nodeType": "YulExpressionStatement",
															"src": "19263:72:11"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "19010:332:11",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19100:9:11",
														"nodeType": "YulTypedName",
														"src": "19100:9:11",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "19112:6:11",
														"nodeType": "YulTypedName",
														"src": "19112:6:11",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19120:6:11",
														"nodeType": "YulTypedName",
														"src": "19120:6:11",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19131:4:11",
														"nodeType": "YulTypedName",
														"src": "19131:4:11",
														"type": ""
													}
												],
												"src": "19010:332:11"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$466_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$466_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$466_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$466__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$466_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale sudah dimulai\")\n\n    }\n\n    function abi_encode_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale sudah berakhir\")\n\n    }\n\n    function abi_encode_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale belum dimulai\")\n\n    }\n\n    function abi_encode_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065(memPtr) {\n\n        mstore(add(memPtr, 0), \"Jumlah tidak valid\")\n\n    }\n\n    function abi_encode_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330(memPtr) {\n\n        mstore(add(memPtr, 0), \"Melebihi batas pembelian\")\n\n    }\n\n    function abi_encode_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stage tidak aktif\")\n\n    }\n\n    function abi_encode_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e(memPtr) {\n\n        mstore(add(memPtr, 0), \"Melebihi kuota stage\")\n\n    }\n\n    function abi_encode_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19(memPtr) {\n\n        mstore(add(memPtr, 0), \"Belum bisa claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tidak ada token untuk di-claim\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02(memPtr) {\n\n        mstore(add(memPtr, 0), \"Presale sudah diakhiri\")\n\n    }\n\n    function abi_encode_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 11,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"989": [
									{
										"length": 32,
										"start": 1299
									},
									{
										"length": 32,
										"start": 2067
									}
								],
								"992": [
									{
										"length": 32,
										"start": 1109
									},
									{
										"length": 32,
										"start": 2722
									},
									{
										"length": 32,
										"start": 3336
									},
									{
										"length": 32,
										"start": 3510
									},
									{
										"length": 32,
										"start": 4613
									}
								],
								"994": [
									{
										"length": 32,
										"start": 2033
									},
									{
										"length": 32,
										"start": 2887
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061014b575f3560e01c8063845ddcb2116100c1578063a82524b21161007a578063a82524b214610311578063db81b2781461032f578063e30c39781461034d578063e580b2b01461036b578063f2fde38b14610389578063f349b76c146103a55761014b565b8063845ddcb21461025c5780638da5cb5b1461028f5780639106d7ba146102ad578063945e4013146102cb57806396713abf146102e9578063a43be57b146103075761014b565b806339f65c091161011357806339f65c09146101d257806348c54b9d146102025780635bf5d54c1461020c57806361d027b31461022a578063715018a61461024857806379ba5097146102525761014b565b806304c98b2b1461014f5780631f9c729d1461015957806326d07099146101775780632f48ab7d146101985780633610724e146101b6575b5f5ffd5b6101576103c3565b005b610161610453565b60405161016e919061154a565b60405180910390f35b61017f610477565b60405161018f949392919061157b565b60405180910390f35b6101a0610511565b6040516101ad919061154a565b60405180910390f35b6101d060048036038101906101cb91906115ec565b610535565b005b6101ec60048036038101906101e79190611652565b610951565b6040516101f9919061167d565b60405180910390f35b61020a610966565b005b610214610b3f565b604051610221919061167d565b60405180910390f35b610232610b45565b60405161023f91906116a5565b60405180910390f35b610250610b69565b005b61025a610b7c565b005b610276600480360381019061027191906115ec565b610c0a565b60405161028694939291906116d8565b60405180910390f35b610297610c51565b6040516102a491906116a5565b60405180910390f35b6102b5610c78565b6040516102c2919061167d565b60405180910390f35b6102d3610c7e565b6040516102e0919061167d565b60405180910390f35b6102f1610c85565b6040516102fe919061167d565b60405180910390f35b61030f610c94565b005b610319610e39565b604051610326919061167d565b60405180910390f35b610337610e3f565b604051610344919061167d565b60405180910390f35b610355610e4d565b60405161036291906116a5565b60405180910390f35b610373610e75565b604051610380919061171b565b60405180910390f35b6103a3600480360381019061039e9190611652565b610e87565b005b6103ad610f33565b6040516103ba919061167d565b60405180910390f35b6103cb610f86565b5f6005541461040f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104069061178e565b60405180910390fd5b42600581905550600160035f8154811061042c5761042b6117ac565b5b905f5260205f2090600402016003015f6101000a81548160ff021916908315150217905550565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f5f5f5f5f600360045481548110610492576104916117ac565b5b905f5260205f2090600402016040518060800160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581525050905060045481604001518260200151835f01516104fd9190611806565b836020015194509450945094505090919293565b7f000000000000000000000000000000000000000000000000000000000000000081565b61053d61100d565b60065f9054906101000a900460ff161561058c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161058390611883565b60405180910390fd5b6005544210156105d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c8906118eb565b60405180910390fd5b6276a7006005546105e29190611909565b421115610624576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161061b90611883565b60405180910390fd5b5f8111610666576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161065d90611986565b60405180910390fd5b69d3c21bcecceda10000008160085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546106ba9190611909565b11156106fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106f2906119ee565b60405180910390fd5b5f600360045481548110610712576107116117ac565b5b905f5260205f2090600402019050806003015f9054906101000a900460ff16610770576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076790611a56565b60405180910390fd5b805f01548282600101546107849190611909565b11156107c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107bc90611abe565b60405180910390fd5b5f670de0b6b3a76400008260020154846107df9190611adc565b6107e99190611b4a565b9050610858337f0000000000000000000000000000000000000000000000000000000000000000837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1661105a909392919063ffffffff16565b82826001015f82825461086b9190611909565b925050819055508260075f8282546108839190611909565b925050819055508260085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8282546108d69190611909565b92505081905550815f01548260010154106108f4576108f36110dc565b5b3373ffffffffffffffffffffffffffffffffffffffff167f8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33848360405161093c929190611b7a565b60405180910390a2505061094e6112b4565b50565b6008602052805f5260405f205f915090505481565b61096e61100d565b60065f9054906101000a900460ff168061099757506276a7006005546109949190611909565b42115b6109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd90611beb565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090611c53565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550610ae633827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166112be9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e43082604051610b2c919061167d565b60405180910390a250610b3d6112b4565b565b60045481565b7f000000000000000000000000000000000000000000000000000000000000000081565b610b71610f86565b610b7a5f61133d565b565b5f610b8561136d565b90508073ffffffffffffffffffffffffffffffffffffffff16610ba6610e4d565b73ffffffffffffffffffffffffffffffffffffffff1614610bfe57806040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610bf591906116a5565b60405180910390fd5b610c078161133d565b50565b60038181548110610c19575f80fd5b905f5260205f2090600402015f91509050805f015490806001015490806002015490806003015f9054906101000a900460ff16905084565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60075481565b6276a70081565b6a084595161401484a00000081565b610c9c610f86565b60065f9054906101000a900460ff1615610ceb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce290611cbb565b60405180910390fd5b600160065f6101000a81548160ff0219169083151502179055505f7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610d5f91906116a5565b602060405180830381865afa158015610d7a573d5f5f3e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d9e9190611ced565b90505f811115610dfb57610dfa610db3610c51565b827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166112be9092919063ffffffff16565b5b7fb4e6cb40663c1ac63bcd620dbe3d98c44526baa45e310f545f425ebaab36a29360075482604051610e2e929190611b7a565b60405180910390a150565b60055481565b69d3c21bcecceda100000081565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065f9054906101000a900460ff1681565b610e8f610f86565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16610eee610c51565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b5f5f60055403610f45575f9050610f83565b6276a700600554610f569190611909565b4210610f64575f9050610f83565b426276a700600554610f769190611909565b610f809190611806565b90505b90565b610f8e61136d565b73ffffffffffffffffffffffffffffffffffffffff16610fac610c51565b73ffffffffffffffffffffffffffffffffffffffff161461100b57610fcf61136d565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161100291906116a5565b60405180910390fd5b565b6002805403611051576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161104890611d62565b60405180910390fd5b60028081905550565b6110d6848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161108f93929190611d80565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611374565b50505050565b5f6003600454815481106110f3576110f26117ac565b5b905f5260205f2090600402016003015f6101000a81548160ff021916908315150217905550600160038054905061112a9190611806565b60045410156111c55760045f81548092919061114590611db5565b91905055506001600360045481548110611162576111616117ac565b5b905f5260205f2090600402016003015f6101000a81548160ff0219169083151502179055507fd87d457666088f7f0056032aa92e6fd462f4ec64661117a66049cd349a0cae146004546040516111b8919061167d565b60405180910390a16112b2565b600160065f6101000a81548160ff0219169083151502179055507fb4e6cb40663c1ac63bcd620dbe3d98c44526baa45e310f545f425ebaab36a2936007547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161125c91906116a5565b602060405180830381865afa158015611277573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061129b9190611ced565b6040516112a9929190611b7a565b60405180910390a15b565b6001600281905550565b611338838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb85856040516024016112f1929190611dfc565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611374565b505050565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905561136a8161140f565b50565b5f33905090565b5f5f60205f8451602086015f885af180611393576040513d5f823e3d81fd5b3d92505f519150505f82146113ac5760018114156113c7565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561140957836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161140091906116a5565b60405180910390fd5b50505050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f819050919050565b5f61151261150d611508846114d0565b6114ef565b6114d0565b9050919050565b5f611523826114f8565b9050919050565b5f61153482611519565b9050919050565b6115448161152a565b82525050565b5f60208201905061155d5f83018461153b565b92915050565b5f819050919050565b61157581611563565b82525050565b5f60808201905061158e5f83018761156c565b61159b602083018661156c565b6115a8604083018561156c565b6115b5606083018461156c565b95945050505050565b5f5ffd5b6115cb81611563565b81146115d5575f5ffd5b50565b5f813590506115e6816115c2565b92915050565b5f60208284031215611601576116006115be565b5b5f61160e848285016115d8565b91505092915050565b5f611621826114d0565b9050919050565b61163181611617565b811461163b575f5ffd5b50565b5f8135905061164c81611628565b92915050565b5f60208284031215611667576116666115be565b5b5f6116748482850161163e565b91505092915050565b5f6020820190506116905f83018461156c565b92915050565b61169f81611617565b82525050565b5f6020820190506116b85f830184611696565b92915050565b5f8115159050919050565b6116d2816116be565b82525050565b5f6080820190506116eb5f83018761156c565b6116f8602083018661156c565b611705604083018561156c565b61171260608301846116c9565b95945050505050565b5f60208201905061172e5f8301846116c9565b92915050565b5f82825260208201905092915050565b7f50726573616c652073756461682064696d756c616900000000000000000000005f82015250565b5f611778601583611734565b915061178382611744565b602082019050919050565b5f6020820190508181035f8301526117a58161176c565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61181082611563565b915061181b83611563565b9250828203905081811115611833576118326117d9565b5b92915050565b7f50726573616c6520737564616820626572616b686972000000000000000000005f82015250565b5f61186d601683611734565b915061187882611839565b602082019050919050565b5f6020820190508181035f83015261189a81611861565b9050919050565b7f50726573616c652062656c756d2064696d756c616900000000000000000000005f82015250565b5f6118d5601583611734565b91506118e0826118a1565b602082019050919050565b5f6020820190508181035f830152611902816118c9565b9050919050565b5f61191382611563565b915061191e83611563565b9250828201905080821115611936576119356117d9565b5b92915050565b7f4a756d6c616820746964616b2076616c696400000000000000000000000000005f82015250565b5f611970601283611734565b915061197b8261193c565b602082019050919050565b5f6020820190508181035f83015261199d81611964565b9050919050565b7f4d656c65626968692062617461732070656d62656c69616e00000000000000005f82015250565b5f6119d8601883611734565b91506119e3826119a4565b602082019050919050565b5f6020820190508181035f830152611a05816119cc565b9050919050565b7f537461676520746964616b20616b7469660000000000000000000000000000005f82015250565b5f611a40601183611734565b9150611a4b82611a0c565b602082019050919050565b5f6020820190508181035f830152611a6d81611a34565b9050919050565b7f4d656c6562696869206b756f74612073746167650000000000000000000000005f82015250565b5f611aa8601483611734565b9150611ab382611a74565b602082019050919050565b5f6020820190508181035f830152611ad581611a9c565b9050919050565b5f611ae682611563565b9150611af183611563565b9250828202611aff81611563565b91508282048414831517611b1657611b156117d9565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f611b5482611563565b9150611b5f83611563565b925082611b6f57611b6e611b1d565b5b828204905092915050565b5f604082019050611b8d5f83018561156c565b611b9a602083018461156c565b9392505050565b7f42656c756d206269736120636c61696d000000000000000000000000000000005f82015250565b5f611bd5601083611734565b9150611be082611ba1565b602082019050919050565b5f6020820190508181035f830152611c0281611bc9565b9050919050565b7f546964616b2061646120746f6b656e20756e74756b2064692d636c61696d00005f82015250565b5f611c3d601e83611734565b9150611c4882611c09565b602082019050919050565b5f6020820190508181035f830152611c6a81611c31565b9050919050565b7f50726573616c65207375646168206469616b68697269000000000000000000005f82015250565b5f611ca5601683611734565b9150611cb082611c71565b602082019050919050565b5f6020820190508181035f830152611cd281611c99565b9050919050565b5f81519050611ce7816115c2565b92915050565b5f60208284031215611d0257611d016115be565b5b5f611d0f84828501611cd9565b91505092915050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f611d4c601f83611734565b9150611d5782611d18565b602082019050919050565b5f6020820190508181035f830152611d7981611d40565b9050919050565b5f606082019050611d935f830186611696565b611da06020830185611696565b611dad604083018461156c565b949350505050565b5f611dbf82611563565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611df157611df06117d9565b5b600182019050919050565b5f604082019050611e0f5f830185611696565b611e1c602083018461156c565b939250505056fea2646970667358221220ff3682e92aa8f6b68cfe030c02075f6ea084e70520ff968910dedf7f8b4422e664736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x14B JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x845DDCB2 GT PUSH2 0xC1 JUMPI DUP1 PUSH4 0xA82524B2 GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xA82524B2 EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0xDB81B278 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x34D JUMPI DUP1 PUSH4 0xE580B2B0 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0xF349B76C EQ PUSH2 0x3A5 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x845DDCB2 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x9106D7BA EQ PUSH2 0x2AD JUMPI DUP1 PUSH4 0x945E4013 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x96713ABF EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xA43BE57B EQ PUSH2 0x307 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x39F65C09 GT PUSH2 0x113 JUMPI DUP1 PUSH4 0x39F65C09 EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x48C54B9D EQ PUSH2 0x202 JUMPI DUP1 PUSH4 0x5BF5D54C EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x61D027B3 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x252 JUMPI PUSH2 0x14B JUMP JUMPDEST DUP1 PUSH4 0x4C98B2B EQ PUSH2 0x14F JUMPI DUP1 PUSH4 0x1F9C729D EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x26D07099 EQ PUSH2 0x177 JUMPI DUP1 PUSH4 0x2F48AB7D EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x3610724E EQ PUSH2 0x1B6 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x157 PUSH2 0x3C3 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x453 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16E SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17F PUSH2 0x477 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x157B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A0 PUSH2 0x511 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0x154A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CB SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0x535 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0x951 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH2 0x966 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x214 PUSH2 0xB3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x232 PUSH2 0xB45 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23F SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x250 PUSH2 0xB69 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x25A PUSH2 0xB7C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x276 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x271 SWAP2 SWAP1 PUSH2 0x15EC JUMP JUMPDEST PUSH2 0xC0A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x286 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16D8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x297 PUSH2 0xC51 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A4 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B5 PUSH2 0xC78 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C2 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D3 PUSH2 0xC7E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F1 PUSH2 0xC85 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30F PUSH2 0xC94 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x319 PUSH2 0xE39 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x326 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x337 PUSH2 0xE3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0xE75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x171B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x1652 JUMP JUMPDEST PUSH2 0xE87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3AD PUSH2 0xF33 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BA SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CB PUSH2 0xF86 JUMP JUMPDEST PUSH0 PUSH1 0x5 SLOAD EQ PUSH2 0x40F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x406 SWAP1 PUSH2 0x178E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH0 DUP2 SLOAD DUP2 LT PUSH2 0x42C JUMPI PUSH2 0x42B PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x492 JUMPI PUSH2 0x491 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH1 0x4 SLOAD DUP2 PUSH1 0x40 ADD MLOAD DUP3 PUSH1 0x20 ADD MLOAD DUP4 PUSH0 ADD MLOAD PUSH2 0x4FD SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST DUP4 PUSH1 0x20 ADD MLOAD SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP POP SWAP1 SWAP2 SWAP3 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x53D PUSH2 0x100D JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x58C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x583 SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 SLOAD TIMESTAMP LT ISZERO PUSH2 0x5D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5C8 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0x5E2 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST TIMESTAMP GT ISZERO PUSH2 0x624 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x61B SWAP1 PUSH2 0x1883 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 GT PUSH2 0x666 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x65D SWAP1 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x6BA SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST GT ISZERO PUSH2 0x6FB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6F2 SWAP1 PUSH2 0x19EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x712 JUMPI PUSH2 0x711 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x770 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x767 SWAP1 PUSH2 0x1A56 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH0 ADD SLOAD DUP3 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0x784 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST GT ISZERO PUSH2 0x7C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7BC SWAP1 PUSH2 0x1ABE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH8 0xDE0B6B3A7640000 DUP3 PUSH1 0x2 ADD SLOAD DUP5 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x1ADC JUMP JUMPDEST PUSH2 0x7E9 SWAP2 SWAP1 PUSH2 0x1B4A JUMP JUMPDEST SWAP1 POP PUSH2 0x858 CALLER PUSH32 0x0 DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x105A SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x86B SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x883 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8D6 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH0 ADD SLOAD DUP3 PUSH1 0x1 ADD SLOAD LT PUSH2 0x8F4 JUMPI PUSH2 0x8F3 PUSH2 0x10DC JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33 DUP5 DUP4 PUSH1 0x40 MLOAD PUSH2 0x93C SWAP3 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x94E PUSH2 0x12B4 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x96E PUSH2 0x100D JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0x997 JUMPI POP PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0x994 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST TIMESTAMP GT JUMPDEST PUSH2 0x9D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9CD SWAP1 PUSH2 0x1BEB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xA59 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA50 SWAP1 PUSH2 0x1C53 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0xAE6 CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430 DUP3 PUSH1 0x40 MLOAD PUSH2 0xB2C SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xB3D PUSH2 0x12B4 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0xB71 PUSH2 0xF86 JUMP JUMPDEST PUSH2 0xB7A PUSH0 PUSH2 0x133D JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0xB85 PUSH2 0x136D JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xBA6 PUSH2 0xE4D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xBFE JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF5 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC07 DUP2 PUSH2 0x133D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xC19 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH3 0x76A700 DUP2 JUMP JUMPDEST PUSH11 0x84595161401484A000000 DUP2 JUMP JUMPDEST PUSH2 0xC9C PUSH2 0xF86 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xCEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE2 SWAP1 PUSH2 0x1CBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5F SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD7A JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9E SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0xDFB JUMPI PUSH2 0xDFA PUSH2 0xDB3 PUSH2 0xC51 JUMP JUMPDEST DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x12BE SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH32 0xB4E6CB40663C1AC63BCD620DBE3D98C44526BAA45E310F545F425EBAAB36A293 PUSH1 0x7 SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xE2E SWAP3 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xE8F PUSH2 0xF86 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xEEE PUSH2 0xC51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x5 SLOAD SUB PUSH2 0xF45 JUMPI PUSH0 SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0xF56 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST TIMESTAMP LT PUSH2 0xF64 JUMPI PUSH0 SWAP1 POP PUSH2 0xF83 JUMP JUMPDEST TIMESTAMP PUSH3 0x76A700 PUSH1 0x5 SLOAD PUSH2 0xF76 SWAP2 SWAP1 PUSH2 0x1909 JUMP JUMPDEST PUSH2 0xF80 SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0xF8E PUSH2 0x136D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xFAC PUSH2 0xC51 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x100B JUMPI PUSH2 0xFCF PUSH2 0x136D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1002 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1051 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1048 SWAP1 PUSH2 0x1D62 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x10D6 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x108F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D80 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1374 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x10F3 JUMPI PUSH2 0x10F2 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x3 DUP1 SLOAD SWAP1 POP PUSH2 0x112A SWAP2 SWAP1 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x4 SLOAD LT ISZERO PUSH2 0x11C5 JUMPI PUSH1 0x4 PUSH0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1145 SWAP1 PUSH2 0x1DB5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x1 PUSH1 0x3 PUSH1 0x4 SLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1162 JUMPI PUSH2 0x1161 PUSH2 0x17AC JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD87D457666088F7F0056032AA92E6FD462F4EC64661117A66049CD349A0CAE14 PUSH1 0x4 SLOAD PUSH1 0x40 MLOAD PUSH2 0x11B8 SWAP2 SWAP1 PUSH2 0x167D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x12B2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xB4E6CB40663C1AC63BCD620DBE3D98C44526BAA45E310F545F425EBAAB36A293 PUSH1 0x7 SLOAD PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x125C SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x1CED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A9 SWAP3 SWAP2 SWAP1 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1338 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x12F1 SWAP3 SWAP2 SWAP1 PUSH2 0x1DFC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1374 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x136A DUP2 PUSH2 0x140F JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x1393 JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x13AC JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x13C7 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1409 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1400 SWAP2 SWAP1 PUSH2 0x16A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1512 PUSH2 0x150D PUSH2 0x1508 DUP5 PUSH2 0x14D0 JUMP JUMPDEST PUSH2 0x14EF JUMP JUMPDEST PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1523 DUP3 PUSH2 0x14F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1534 DUP3 PUSH2 0x1519 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1544 DUP2 PUSH2 0x152A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x155D PUSH0 DUP4 ADD DUP5 PUSH2 0x153B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1575 DUP2 PUSH2 0x1563 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x158E PUSH0 DUP4 ADD DUP8 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x159B PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15A8 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x15B5 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x15CB DUP2 PUSH2 0x1563 JUMP JUMPDEST DUP2 EQ PUSH2 0x15D5 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x15E6 DUP2 PUSH2 0x15C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1601 JUMPI PUSH2 0x1600 PUSH2 0x15BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x160E DUP5 DUP3 DUP6 ADD PUSH2 0x15D8 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1621 DUP3 PUSH2 0x14D0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1631 DUP2 PUSH2 0x1617 JUMP JUMPDEST DUP2 EQ PUSH2 0x163B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x164C DUP2 PUSH2 0x1628 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1667 JUMPI PUSH2 0x1666 PUSH2 0x15BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1674 DUP5 DUP3 DUP6 ADD PUSH2 0x163E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1690 PUSH0 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x169F DUP2 PUSH2 0x1617 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x16B8 PUSH0 DUP4 ADD DUP5 PUSH2 0x1696 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16D2 DUP2 PUSH2 0x16BE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x16EB PUSH0 DUP4 ADD DUP8 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x16F8 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1705 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1712 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x16C9 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x172E PUSH0 DUP4 ADD DUP5 PUSH2 0x16C9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C652073756461682064696D756C61690000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1778 PUSH1 0x15 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1783 DUP3 PUSH2 0x1744 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17A5 DUP2 PUSH2 0x176C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1810 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x181B DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1833 JUMPI PUSH2 0x1832 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x50726573616C6520737564616820626572616B68697200000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x186D PUSH1 0x16 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1878 DUP3 PUSH2 0x1839 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x189A DUP2 PUSH2 0x1861 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C652062656C756D2064696D756C61690000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18D5 PUSH1 0x15 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x18E0 DUP3 PUSH2 0x18A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1902 DUP2 PUSH2 0x18C9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1913 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x191E DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1936 JUMPI PUSH2 0x1935 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4A756D6C616820746964616B2076616C69640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1970 PUSH1 0x12 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x197B DUP3 PUSH2 0x193C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x199D DUP2 PUSH2 0x1964 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656C65626968692062617461732070656D62656C69616E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19D8 PUSH1 0x18 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x19E3 DUP3 PUSH2 0x19A4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A05 DUP2 PUSH2 0x19CC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537461676520746964616B20616B746966000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A40 PUSH1 0x11 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A4B DUP3 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A6D DUP2 PUSH2 0x1A34 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D656C6562696869206B756F7461207374616765000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1AA8 PUSH1 0x14 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AB3 DUP3 PUSH2 0x1A74 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1AD5 DUP2 PUSH2 0x1A9C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AE6 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF1 DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1AFF DUP2 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x1B16 JUMPI PUSH2 0x1B15 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1B54 DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B5F DUP4 PUSH2 0x1563 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B6F JUMPI PUSH2 0x1B6E PUSH2 0x1B1D JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1B8D PUSH0 DUP4 ADD DUP6 PUSH2 0x156C JUMP JUMPDEST PUSH2 0x1B9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x42656C756D206269736120636C61696D00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1BD5 PUSH1 0x10 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1BE0 DUP3 PUSH2 0x1BA1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C02 DUP2 PUSH2 0x1BC9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x546964616B2061646120746F6B656E20756E74756B2064692D636C61696D0000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C3D PUSH1 0x1E DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C48 DUP3 PUSH2 0x1C09 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C6A DUP2 PUSH2 0x1C31 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x50726573616C65207375646168206469616B6869726900000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1CA5 PUSH1 0x16 DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1CB0 DUP3 PUSH2 0x1C71 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1CD2 DUP2 PUSH2 0x1C99 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1CE7 DUP2 PUSH2 0x15C2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D02 JUMPI PUSH2 0x1D01 PUSH2 0x15BE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D0F DUP5 DUP3 DUP6 ADD PUSH2 0x1CD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1D4C PUSH1 0x1F DUP4 PUSH2 0x1734 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D57 DUP3 PUSH2 0x1D18 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1D79 DUP2 PUSH2 0x1D40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1D93 PUSH0 DUP4 ADD DUP7 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1DA0 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1DAD PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBF DUP3 PUSH2 0x1563 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DF1 JUMPI PUSH2 0x1DF0 PUSH2 0x17D9 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1E0F PUSH0 DUP4 ADD DUP6 PUSH2 0x1696 JUMP JUMPDEST PUSH2 0x1E1C PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x156C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SELFDESTRUCT CALLDATASIZE DUP3 0xE9 0x2A 0xA8 0xF6 0xB6 DUP13 INVALID SUB 0xC MUL SMOD PUSH0 PUSH15 0xA084E70520FF968910DEDF7F8B4422 DUPN 0x64 PUSH20 0x6F6C634300081E00330000000000000000000000 ",
							"sourceMap": "303:5426:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2566:194;;;:::i;:::-;;492:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5076:381;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;438:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2766:987;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1189:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3759:420;;;:::i;:::-;;1024:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;540:33;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2244:229:1;;;:::i;:::-;;997:21:10;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1159:24:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;740:50;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;580:64;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4226:352;;;:::i;:::-;;1057:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;673:61;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:99:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1094:24:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1649:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5463:264:10;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2566:194;1531:13:0;:11;:13::i;:::-;2647:1:10::1;2627:16;;:21;2619:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2703:15;2684:16;:34;;;;2749:4;2728:6;2735:1;2728:9;;;;;;;;:::i;:::-;;;;;;;;;;;;:18;;;:25;;;;;;;;;;;;;;;;;;2566:194::o:0;492:28::-;;;:::o;5076:381::-;5139:13;5162;5185:17;5212:12;5241:20;5264:6;5271:12;;5264:20;;;;;;;;:::i;:::-;;;;;;;;;;;;5241:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5315:12;;5341:7;:13;;;5390:7;:18;;;5368:7;:19;;;:40;;;;:::i;:::-;5422:7;:18;;;5294:156;;;;;;;;;5076:381;;;;:::o;438:28::-;;;:::o;2766:987::-;2261:21:5;:19;:21::i;:::-;1621:12:10::1;;;;;;;;;;;1620:13;1612:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;1697:16;;1678:15;:35;;1670:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;783:7;1776:16;;:35;;;;:::i;:::-;1757:15;:54;;1749:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;2868:1:::2;2859:6;:10;2851:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;718:16;2951:6;2923:13;:25;2937:10;2923:25;;;;;;;;;;;;;;;;:34;;;;:::i;:::-;:56;;2902:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;3040:21;3064:6;3071:12;;3064:20;;;;;;;;:::i;:::-;;;;;;;;;;;;3040:44;;3102:7;:16;;;;;;;;;;;;3094:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3189:7;:19;;;3179:6;3158:7;:18;;;:27;;;;:::i;:::-;:50;;3150:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3244:18;3290:4;3274:7;:13;;;3265:6;:22;;;;:::i;:::-;:29;;;;:::i;:::-;3244:50;;3351:55;3373:10;3385:8;3395:10;3351:4;:21;;;;:55;;;;;;:::i;:::-;3465:6;3443:7;:18;;;:28;;;;;;;:::i;:::-;;;;;;;;3494:6;3481:9;;:19;;;;;;;:::i;:::-;;;;;;;;3539:6;3510:13;:25;3524:10;3510:25;;;;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;;;;;3623:7;:19;;;3601:7;:18;;;:41;3597:87;;3658:15;:13;:15::i;:::-;3597:87;3715:10;3699:47;;;3727:6;3735:10;3699:47;;;;;;;:::i;:::-;;;;;;;;2841:912;;2303:20:5::0;:18;:20::i;:::-;2766:987:10;:::o;1189:48::-;;;;;;;;;;;;;;;;;:::o;3759:420::-;2261:21:5;:19;:21::i;:::-;3822:12:10::1;;;;;;;;;;;:69;;;;783:7;3856:16;;:35;;;;:::i;:::-;3838:15;:53;3822:69;3814:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;3931:14;3948:13;:25;3962:10;3948:25;;;;;;;;;;;;;;;;3931:42;;4000:1;3991:6;:10;3983:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;4075:1;4047:13;:25;4061:10;4047:25;;;;;;;;;;;;;;;:29;;;;4086:37;4104:10;4116:6;4086:4;:17;;;;:37;;;;;:::i;:::-;4153:10;4139:33;;;4165:6;4139:33;;;;;;:::i;:::-;;;;;;;;3804:375;2303:20:5::0;:18;:20::i;:::-;3759:420:10:o;1024:27::-;;;;:::o;540:33::-;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2244:229:1:-;2296:14;2313:12;:10;:12::i;:::-;2296:29;;2357:6;2339:24;;:14;:12;:14::i;:::-;:24;;;2335:96;;2413:6;2386:34;;;;;;;;;;;:::i;:::-;;;;;;;;2335:96;2440:26;2459:6;2440:18;:26::i;:::-;2286:187;2244:229::o;997:21:10:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;1159:24:10:-;;;;:::o;740:50::-;783:7;740:50;:::o;580:64::-;627:17;580:64;:::o;4226:352::-;1531:13:0;:11;:13::i;:::-;4286:12:10::1;;;;;;;;;;;4285:13;4277:48;;;;;;;;;;;;:::i;:::-;;;;;;;;;4359:4;4344:12;;:19;;;;;;;;;;;;;;;;;;4373:17;4393:4;:14;;;4416:4;4393:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4373:49;;4457:1;4445:9;:13;4441:81;;;4474:37;4492:7;:5;:7::i;:::-;4501:9;4474:4;:17;;;;:37;;;;;:::i;:::-;4441:81;4537:34;4550:9;;4561;4537:34;;;;;;;:::i;:::-;;;;;;;;4267:311;4226:352::o:0;1057:31::-;;;;:::o;673:61::-;718:16;673:61;:::o;1232:99:1:-;1285:7;1311:13;;;;;;;;;;;1304:20;;1232:99;:::o;1094:24:10:-;;;;;;;;;;;;;:::o;1649:178:1:-;1531:13:0;:11;:13::i;:::-;1754:8:1::1;1738:13;;:24;;;;;;;;;;;;;;;;;;1811:8;1777:43;;1802:7;:5;:7::i;:::-;1777:43;;;;;;;;;;;;1649:178:::0;:::o;5463:264:10:-;5516:7;5559:1;5539:16;;:21;5535:35;;5569:1;5562:8;;;;5535:35;783:7;5603:16;;:35;;;;:::i;:::-;5584:15;:54;5580:68;;5647:1;5640:8;;;;5580:68;5705:15;783:7;5666:16;;:35;;;;:::i;:::-;5665:55;;;;:::i;:::-;5658:62;;5463:264;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:5:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1618:188:7:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;4628:402:10:-;4704:5;4672:6;4679:12;;4672:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;:37;;;;;;;;;;;;;;;;;;4763:1;4747:6;:13;;;;:17;;;;:::i;:::-;4732:12;;:32;4728:296;;;4780:12;;:14;;;;;;;;;:::i;:::-;;;;;;4840:4;4808:6;4815:12;;4808:20;;;;;;;;:::i;:::-;;;;;;;;;;;;:29;;;:36;;;;;;;;;;;;;;;;;;4863:27;4877:12;;4863:27;;;;;;:::i;:::-;;;;;;;;4728:296;;;4936:4;4921:12;;:19;;;;;;;;;;;;;;;;;;4959:54;4972:9;;4983:4;:14;;;5006:4;4983:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4959:54;;;;;;;:::i;:::-;;;;;;;;4728:296;4628:402::o;2629:209:5:-;1716:1;2809:7;:22;;;;2629:209::o;1219:160:7:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2011:153:1:-;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;:34::i;:::-;2011:153;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8370:720:7:-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7:126:11:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:60::-;167:3;188:5;181:12;;139:60;;;:::o;205:142::-;255:9;288:53;306:34;315:24;333:5;315:24;:::i;:::-;306:34;:::i;:::-;288:53;:::i;:::-;275:66;;205:142;;;:::o;353:126::-;403:9;436:37;467:5;436:37;:::i;:::-;423:50;;353:126;;;:::o;485:140::-;549:9;582:37;613:5;582:37;:::i;:::-;569:50;;485:140;;;:::o;631:159::-;732:51;777:5;732:51;:::i;:::-;727:3;720:64;631:159;;:::o;796:250::-;903:4;941:2;930:9;926:18;918:26;;954:85;1036:1;1025:9;1021:17;1012:6;954:85;:::i;:::-;796:250;;;;:::o;1052:77::-;1089:7;1118:5;1107:16;;1052:77;;;:::o;1135:118::-;1222:24;1240:5;1222:24;:::i;:::-;1217:3;1210:37;1135:118;;:::o;1259:553::-;1436:4;1474:3;1463:9;1459:19;1451:27;;1488:71;1556:1;1545:9;1541:17;1532:6;1488:71;:::i;:::-;1569:72;1637:2;1626:9;1622:18;1613:6;1569:72;:::i;:::-;1651;1719:2;1708:9;1704:18;1695:6;1651:72;:::i;:::-;1733;1801:2;1790:9;1786:18;1777:6;1733:72;:::i;:::-;1259:553;;;;;;;:::o;1899:117::-;2008:1;2005;1998:12;2145:122;2218:24;2236:5;2218:24;:::i;:::-;2211:5;2208:35;2198:63;;2257:1;2254;2247:12;2198:63;2145:122;:::o;2273:139::-;2319:5;2357:6;2344:20;2335:29;;2373:33;2400:5;2373:33;:::i;:::-;2273:139;;;;:::o;2418:329::-;2477:6;2526:2;2514:9;2505:7;2501:23;2497:32;2494:119;;;2532:79;;:::i;:::-;2494:119;2652:1;2677:53;2722:7;2713:6;2702:9;2698:22;2677:53;:::i;:::-;2667:63;;2623:117;2418:329;;;;:::o;2753:96::-;2790:7;2819:24;2837:5;2819:24;:::i;:::-;2808:35;;2753:96;;;:::o;2855:122::-;2928:24;2946:5;2928:24;:::i;:::-;2921:5;2918:35;2908:63;;2967:1;2964;2957:12;2908:63;2855:122;:::o;2983:139::-;3029:5;3067:6;3054:20;3045:29;;3083:33;3110:5;3083:33;:::i;:::-;2983:139;;;;:::o;3128:329::-;3187:6;3236:2;3224:9;3215:7;3211:23;3207:32;3204:119;;;3242:79;;:::i;:::-;3204:119;3362:1;3387:53;3432:7;3423:6;3412:9;3408:22;3387:53;:::i;:::-;3377:63;;3333:117;3128:329;;;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:118::-;3778:24;3796:5;3778:24;:::i;:::-;3773:3;3766:37;3691:118;;:::o;3815:222::-;3908:4;3946:2;3935:9;3931:18;3923:26;;3959:71;4027:1;4016:9;4012:17;4003:6;3959:71;:::i;:::-;3815:222;;;;:::o;4043:90::-;4077:7;4120:5;4113:13;4106:21;4095:32;;4043:90;;;:::o;4139:109::-;4220:21;4235:5;4220:21;:::i;:::-;4215:3;4208:34;4139:109;;:::o;4254:541::-;4425:4;4463:3;4452:9;4448:19;4440:27;;4477:71;4545:1;4534:9;4530:17;4521:6;4477:71;:::i;:::-;4558:72;4626:2;4615:9;4611:18;4602:6;4558:72;:::i;:::-;4640;4708:2;4697:9;4693:18;4684:6;4640:72;:::i;:::-;4722:66;4784:2;4773:9;4769:18;4760:6;4722:66;:::i;:::-;4254:541;;;;;;;:::o;4801:210::-;4888:4;4926:2;4915:9;4911:18;4903:26;;4939:65;5001:1;4990:9;4986:17;4977:6;4939:65;:::i;:::-;4801:210;;;;:::o;5017:169::-;5101:11;5135:6;5130:3;5123:19;5175:4;5170:3;5166:14;5151:29;;5017:169;;;;:::o;5192:171::-;5332:23;5328:1;5320:6;5316:14;5309:47;5192:171;:::o;5369:366::-;5511:3;5532:67;5596:2;5591:3;5532:67;:::i;:::-;5525:74;;5608:93;5697:3;5608:93;:::i;:::-;5726:2;5721:3;5717:12;5710:19;;5369:366;;;:::o;5741:419::-;5907:4;5945:2;5934:9;5930:18;5922:26;;5994:9;5988:4;5984:20;5980:1;5969:9;5965:17;5958:47;6022:131;6148:4;6022:131;:::i;:::-;6014:139;;5741:419;;;:::o;6166:180::-;6214:77;6211:1;6204:88;6311:4;6308:1;6301:15;6335:4;6332:1;6325:15;6352:180;6400:77;6397:1;6390:88;6497:4;6494:1;6487:15;6521:4;6518:1;6511:15;6538:194;6578:4;6598:20;6616:1;6598:20;:::i;:::-;6593:25;;6632:20;6650:1;6632:20;:::i;:::-;6627:25;;6676:1;6673;6669:9;6661:17;;6700:1;6694:4;6691:11;6688:37;;;6705:18;;:::i;:::-;6688:37;6538:194;;;;:::o;6738:172::-;6878:24;6874:1;6866:6;6862:14;6855:48;6738:172;:::o;6916:366::-;7058:3;7079:67;7143:2;7138:3;7079:67;:::i;:::-;7072:74;;7155:93;7244:3;7155:93;:::i;:::-;7273:2;7268:3;7264:12;7257:19;;6916:366;;;:::o;7288:419::-;7454:4;7492:2;7481:9;7477:18;7469:26;;7541:9;7535:4;7531:20;7527:1;7516:9;7512:17;7505:47;7569:131;7695:4;7569:131;:::i;:::-;7561:139;;7288:419;;;:::o;7713:171::-;7853:23;7849:1;7841:6;7837:14;7830:47;7713:171;:::o;7890:366::-;8032:3;8053:67;8117:2;8112:3;8053:67;:::i;:::-;8046:74;;8129:93;8218:3;8129:93;:::i;:::-;8247:2;8242:3;8238:12;8231:19;;7890:366;;;:::o;8262:419::-;8428:4;8466:2;8455:9;8451:18;8443:26;;8515:9;8509:4;8505:20;8501:1;8490:9;8486:17;8479:47;8543:131;8669:4;8543:131;:::i;:::-;8535:139;;8262:419;;;:::o;8687:191::-;8727:3;8746:20;8764:1;8746:20;:::i;:::-;8741:25;;8780:20;8798:1;8780:20;:::i;:::-;8775:25;;8823:1;8820;8816:9;8809:16;;8844:3;8841:1;8838:10;8835:36;;;8851:18;;:::i;:::-;8835:36;8687:191;;;;:::o;8884:168::-;9024:20;9020:1;9012:6;9008:14;9001:44;8884:168;:::o;9058:366::-;9200:3;9221:67;9285:2;9280:3;9221:67;:::i;:::-;9214:74;;9297:93;9386:3;9297:93;:::i;:::-;9415:2;9410:3;9406:12;9399:19;;9058:366;;;:::o;9430:419::-;9596:4;9634:2;9623:9;9619:18;9611:26;;9683:9;9677:4;9673:20;9669:1;9658:9;9654:17;9647:47;9711:131;9837:4;9711:131;:::i;:::-;9703:139;;9430:419;;;:::o;9855:174::-;9995:26;9991:1;9983:6;9979:14;9972:50;9855:174;:::o;10035:366::-;10177:3;10198:67;10262:2;10257:3;10198:67;:::i;:::-;10191:74;;10274:93;10363:3;10274:93;:::i;:::-;10392:2;10387:3;10383:12;10376:19;;10035:366;;;:::o;10407:419::-;10573:4;10611:2;10600:9;10596:18;10588:26;;10660:9;10654:4;10650:20;10646:1;10635:9;10631:17;10624:47;10688:131;10814:4;10688:131;:::i;:::-;10680:139;;10407:419;;;:::o;10832:167::-;10972:19;10968:1;10960:6;10956:14;10949:43;10832:167;:::o;11005:366::-;11147:3;11168:67;11232:2;11227:3;11168:67;:::i;:::-;11161:74;;11244:93;11333:3;11244:93;:::i;:::-;11362:2;11357:3;11353:12;11346:19;;11005:366;;;:::o;11377:419::-;11543:4;11581:2;11570:9;11566:18;11558:26;;11630:9;11624:4;11620:20;11616:1;11605:9;11601:17;11594:47;11658:131;11784:4;11658:131;:::i;:::-;11650:139;;11377:419;;;:::o;11802:170::-;11942:22;11938:1;11930:6;11926:14;11919:46;11802:170;:::o;11978:366::-;12120:3;12141:67;12205:2;12200:3;12141:67;:::i;:::-;12134:74;;12217:93;12306:3;12217:93;:::i;:::-;12335:2;12330:3;12326:12;12319:19;;11978:366;;;:::o;12350:419::-;12516:4;12554:2;12543:9;12539:18;12531:26;;12603:9;12597:4;12593:20;12589:1;12578:9;12574:17;12567:47;12631:131;12757:4;12631:131;:::i;:::-;12623:139;;12350:419;;;:::o;12775:410::-;12815:7;12838:20;12856:1;12838:20;:::i;:::-;12833:25;;12872:20;12890:1;12872:20;:::i;:::-;12867:25;;12927:1;12924;12920:9;12949:30;12967:11;12949:30;:::i;:::-;12938:41;;13128:1;13119:7;13115:15;13112:1;13109:22;13089:1;13082:9;13062:83;13039:139;;13158:18;;:::i;:::-;13039:139;12823:362;12775:410;;;;:::o;13191:180::-;13239:77;13236:1;13229:88;13336:4;13333:1;13326:15;13360:4;13357:1;13350:15;13377:185;13417:1;13434:20;13452:1;13434:20;:::i;:::-;13429:25;;13468:20;13486:1;13468:20;:::i;:::-;13463:25;;13507:1;13497:35;;13512:18;;:::i;:::-;13497:35;13554:1;13551;13547:9;13542:14;;13377:185;;;;:::o;13568:332::-;13689:4;13727:2;13716:9;13712:18;13704:26;;13740:71;13808:1;13797:9;13793:17;13784:6;13740:71;:::i;:::-;13821:72;13889:2;13878:9;13874:18;13865:6;13821:72;:::i;:::-;13568:332;;;;;:::o;13906:166::-;14046:18;14042:1;14034:6;14030:14;14023:42;13906:166;:::o;14078:366::-;14220:3;14241:67;14305:2;14300:3;14241:67;:::i;:::-;14234:74;;14317:93;14406:3;14317:93;:::i;:::-;14435:2;14430:3;14426:12;14419:19;;14078:366;;;:::o;14450:419::-;14616:4;14654:2;14643:9;14639:18;14631:26;;14703:9;14697:4;14693:20;14689:1;14678:9;14674:17;14667:47;14731:131;14857:4;14731:131;:::i;:::-;14723:139;;14450:419;;;:::o;14875:180::-;15015:32;15011:1;15003:6;14999:14;14992:56;14875:180;:::o;15061:366::-;15203:3;15224:67;15288:2;15283:3;15224:67;:::i;:::-;15217:74;;15300:93;15389:3;15300:93;:::i;:::-;15418:2;15413:3;15409:12;15402:19;;15061:366;;;:::o;15433:419::-;15599:4;15637:2;15626:9;15622:18;15614:26;;15686:9;15680:4;15676:20;15672:1;15661:9;15657:17;15650:47;15714:131;15840:4;15714:131;:::i;:::-;15706:139;;15433:419;;;:::o;15858:172::-;15998:24;15994:1;15986:6;15982:14;15975:48;15858:172;:::o;16036:366::-;16178:3;16199:67;16263:2;16258:3;16199:67;:::i;:::-;16192:74;;16275:93;16364:3;16275:93;:::i;:::-;16393:2;16388:3;16384:12;16377:19;;16036:366;;;:::o;16408:419::-;16574:4;16612:2;16601:9;16597:18;16589:26;;16661:9;16655:4;16651:20;16647:1;16636:9;16632:17;16625:47;16689:131;16815:4;16689:131;:::i;:::-;16681:139;;16408:419;;;:::o;16833:143::-;16890:5;16921:6;16915:13;16906:22;;16937:33;16964:5;16937:33;:::i;:::-;16833:143;;;;:::o;16982:351::-;17052:6;17101:2;17089:9;17080:7;17076:23;17072:32;17069:119;;;17107:79;;:::i;:::-;17069:119;17227:1;17252:64;17308:7;17299:6;17288:9;17284:22;17252:64;:::i;:::-;17242:74;;17198:128;16982:351;;;;:::o;17339:181::-;17479:33;17475:1;17467:6;17463:14;17456:57;17339:181;:::o;17526:366::-;17668:3;17689:67;17753:2;17748:3;17689:67;:::i;:::-;17682:74;;17765:93;17854:3;17765:93;:::i;:::-;17883:2;17878:3;17874:12;17867:19;;17526:366;;;:::o;17898:419::-;18064:4;18102:2;18091:9;18087:18;18079:26;;18151:9;18145:4;18141:20;18137:1;18126:9;18122:17;18115:47;18179:131;18305:4;18179:131;:::i;:::-;18171:139;;17898:419;;;:::o;18323:442::-;18472:4;18510:2;18499:9;18495:18;18487:26;;18523:71;18591:1;18580:9;18576:17;18567:6;18523:71;:::i;:::-;18604:72;18672:2;18661:9;18657:18;18648:6;18604:72;:::i;:::-;18686;18754:2;18743:9;18739:18;18730:6;18686:72;:::i;:::-;18323:442;;;;;;:::o;18771:233::-;18810:3;18833:24;18851:5;18833:24;:::i;:::-;18824:33;;18879:66;18872:5;18869:77;18866:103;;18949:18;;:::i;:::-;18866:103;18996:1;18989:5;18985:13;18978:20;;18771:233;;;:::o;19010:332::-;19131:4;19169:2;19158:9;19154:18;19146:26;;19182:71;19250:1;19239:9;19235:17;19226:6;19182:71;:::i;:::-;19263:72;19331:2;19320:9;19316:18;19307:6;19263:72;:::i;:::-;19010:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1553800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_BUY_PER_WALLET()": "369",
								"PRESALE_DURATION()": "414",
								"TOTAL_PRESALE_SUPPLY()": "436",
								"acceptOwnership()": "54780",
								"buyTokens(uint256)": "infinite",
								"cafi()": "infinite",
								"claimTokens()": "infinite",
								"currentStage()": "2492",
								"endPresale()": "infinite",
								"getCurrentStageInfo()": "infinite",
								"getPresaleTimeLeft()": "infinite",
								"owner()": "2559",
								"pendingOwner()": "2581",
								"presaleEnded()": "2554",
								"presaleStartTime()": "2447",
								"renounceOwnership()": "infinite",
								"stages(uint256)": "infinite",
								"startPresale()": "infinite",
								"totalSold()": "2492",
								"transferOwnership(address)": "infinite",
								"treasury()": "infinite",
								"usdt()": "infinite",
								"userPurchases(address)": "2825"
							},
							"internal": {
								"_advanceStage()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "E0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "CALLVALUE",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "CODESIZE",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSHSIZE",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 1899,
									"end": 2520,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "tag",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2029,
									"end": 2042,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 5,
									"value": "2"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 2079,
									"end": 2080,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2062,
									"end": 2081,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2062,
									"end": 2081,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2067,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2081,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2062,
									"end": 2081,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2081,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2081,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2102,
									"end": 2103,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2104,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2085,
									"end": 2104,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2090,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2104,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2085,
									"end": 2104,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2104,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2085,
									"end": 2104,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2062,
									"end": 2104,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2129,
									"end": 2130,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2108,
									"end": 2131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2108,
									"end": 2131,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2117,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2131,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2108,
									"end": 2131,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2131,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 2108,
									"end": 2131,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 2062,
									"end": 2131,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 2054,
									"end": 2154,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "tag",
									"source": 10,
									"value": "17"
								},
								{
									"begin": 2054,
									"end": 2154,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2187,
									"end": 2192,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2173,
									"end": 2193,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2217,
									"end": 2222,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2203,
									"end": 2223,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2244,
									"end": 2253,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2233,
									"end": 2253,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2294,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2306,
									"end": 2322,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "34F086F3B33B684000000"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2324,
									"end": 2325,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2327,
									"end": 2338,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "B1A2BC2EC50000"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2340,
									"end": 2345,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2288,
									"end": 2347,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2372,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2384,
									"end": 2400,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2402,
									"end": 2403,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2405,
									"end": 2417,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "10A741A46278000"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2419,
									"end": 2424,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2378,
									"end": 2425,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2366,
									"end": 2426,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2452,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2464,
									"end": 2480,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "27B46536C66C8E3000000"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2482,
									"end": 2483,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2485,
									"end": 2495,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "16345785D8A0000"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2497,
									"end": 2502,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2458,
									"end": 2503,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "100"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 10,
									"value": "FF"
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2446,
									"end": 2504,
									"modifierDepth": 1,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1899,
									"end": 2520,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2148,
									"end": 2156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 11,
									"value": "45"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 11,
									"value": "47"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 11,
									"value": "48"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 11,
									"value": "50"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "tag",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 942,
									"end": 948,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 956,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 958,
									"end": 964,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 966,
									"end": 972,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1015,
									"end": 1018,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1003,
									"end": 1012,
									"name": "DUP6",
									"source": 11
								},
								{
									"begin": 994,
									"end": 1001,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 990,
									"end": 1013,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 986,
									"end": 1019,
									"name": "SLT",
									"source": 11
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1022,
									"end": 1101,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "tag",
									"source": 11,
									"value": "53"
								},
								{
									"begin": 1022,
									"end": 1101,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "tag",
									"source": 11,
									"value": "52"
								},
								{
									"begin": 983,
									"end": 1103,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1142,
									"end": 1143,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1223,
									"end": 1230,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1214,
									"end": 1220,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1203,
									"end": 1212,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1199,
									"end": 1221,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1167,
									"end": 1231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "tag",
									"source": 11,
									"value": "54"
								},
								{
									"begin": 1167,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1157,
									"end": 1231,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 1157,
									"end": 1231,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1113,
									"end": 1241,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1280,
									"end": 1282,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1362,
									"end": 1369,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1353,
									"end": 1359,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1342,
									"end": 1351,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1338,
									"end": 1360,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1306,
									"end": 1370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "tag",
									"source": 11,
									"value": "55"
								},
								{
									"begin": 1306,
									"end": 1370,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "SWAP4",
									"source": 11
								},
								{
									"begin": 1296,
									"end": 1370,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1251,
									"end": 1380,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1419,
									"end": 1421,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1501,
									"end": 1508,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1492,
									"end": 1498,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1481,
									"end": 1490,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1477,
									"end": 1499,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1445,
									"end": 1509,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "tag",
									"source": 11,
									"value": "56"
								},
								{
									"begin": 1445,
									"end": 1509,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1435,
									"end": 1509,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1390,
									"end": 1519,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1558,
									"end": 1560,
									"name": "PUSH",
									"source": 11,
									"value": "60"
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1640,
									"end": 1647,
									"name": "DUP8",
									"source": 11
								},
								{
									"begin": 1631,
									"end": 1637,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1620,
									"end": 1629,
									"name": "DUP9",
									"source": 11
								},
								{
									"begin": 1616,
									"end": 1638,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "34"
								},
								{
									"begin": 1584,
									"end": 1648,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "tag",
									"source": 11,
									"value": "57"
								},
								{
									"begin": 1584,
									"end": 1648,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1648,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1574,
									"end": 1648,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1529,
									"end": 1658,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP6",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP5",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 845,
									"end": 1665,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "tag",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1776,
									"end": 1781,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1758,
									"end": 1782,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "tag",
									"source": 11,
									"value": "59"
								},
								{
									"begin": 1758,
									"end": 1782,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1753,
									"end": 1756,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1746,
									"end": 1783,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1671,
									"end": 1789,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1671,
									"end": 1789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "tag",
									"source": 11,
									"value": "10"
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1888,
									"end": 1892,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1928,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1915,
									"end": 1924,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1911,
									"end": 1929,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1929,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1903,
									"end": 1929,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 2007,
									"end": 2008,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1996,
									"end": 2005,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1992,
									"end": 2009,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1983,
									"end": 1989,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "35"
								},
								{
									"begin": 1939,
									"end": 2010,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "tag",
									"source": 11,
									"value": "61"
								},
								{
									"begin": 1939,
									"end": 2010,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 2017,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1795,
									"end": 2017,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "tag",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2107,
									"end": 2118,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2141,
									"end": 2147,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2136,
									"end": 2139,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2129,
									"end": 2148,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2181,
									"end": 2185,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2176,
									"end": 2179,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2172,
									"end": 2186,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2157,
									"end": 2186,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2157,
									"end": 2186,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2192,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2023,
									"end": 2192,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2198,
									"end": 2366,
									"name": "tag",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2198,
									"end": 2366,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2338,
									"end": 2358,
									"name": "PUSH",
									"source": 11,
									"value": "416C616D617420746964616B2076616C69640000000000000000000000000000"
								},
								{
									"begin": 2334,
									"end": 2335,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2326,
									"end": 2332,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2322,
									"end": 2336,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2315,
									"end": 2359,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 2198,
									"end": 2366,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2198,
									"end": 2366,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2372,
									"end": 2738,
									"name": "tag",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 2372,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2514,
									"end": 2517,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2535,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2599,
									"end": 2601,
									"name": "PUSH",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2594,
									"end": 2597,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2535,
									"end": 2602,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "36"
								},
								{
									"begin": 2535,
									"end": 2602,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2535,
									"end": 2602,
									"name": "tag",
									"source": 11,
									"value": "65"
								},
								{
									"begin": 2535,
									"end": 2602,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2528,
									"end": 2602,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2528,
									"end": 2602,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2611,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2700,
									"end": 2703,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2611,
									"end": 2704,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "37"
								},
								{
									"begin": 2611,
									"end": 2704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2611,
									"end": 2704,
									"name": "tag",
									"source": 11,
									"value": "66"
								},
								{
									"begin": 2611,
									"end": 2704,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2729,
									"end": 2731,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2724,
									"end": 2727,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2720,
									"end": 2732,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2713,
									"end": 2732,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2713,
									"end": 2732,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2372,
									"end": 2738,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2372,
									"end": 2738,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2372,
									"end": 2738,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2372,
									"end": 2738,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2744,
									"end": 3163,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 2744,
									"end": 3163,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2910,
									"end": 2914,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2948,
									"end": 2950,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 2937,
									"end": 2946,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 2933,
									"end": 2951,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2925,
									"end": 2951,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2925,
									"end": 2951,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2997,
									"end": 3006,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2991,
									"end": 2995,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 2987,
									"end": 3007,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 2983,
									"end": 2984,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 2972,
									"end": 2981,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 2968,
									"end": 2985,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 2961,
									"end": 3008,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3025,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3151,
									"end": 3155,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3025,
									"end": 3156,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "38"
								},
								{
									"begin": 3025,
									"end": 3156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3025,
									"end": 3156,
									"name": "tag",
									"source": 11,
									"value": "68"
								},
								{
									"begin": 3025,
									"end": 3156,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3017,
									"end": 3156,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3017,
									"end": 3156,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2744,
									"end": 3163,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 2744,
									"end": 3163,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 2744,
									"end": 3163,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 2744,
									"end": 3163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "A0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "C0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "994"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "992"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "ASSIGNIMMUTABLE",
									"source": 10,
									"value": "989"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 303,
									"end": 5729,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ff3682e92aa8f6b68cfe030c02075f6ea084e70520ff968910dedf7f8b4422e664736f6c634300081e0033",
									".code": [
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "CALLVALUE",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "tag",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "SHR",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "845DDCB2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "A82524B2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "A82524B2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "DB81B278"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "E30C3978"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "E580B2B0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "F2FDE38B"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "F349B76C"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "tag",
											"source": 10,
											"value": "27"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "845DDCB2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "8DA5CB5B"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "9106D7BA"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "945E4013"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "96713ABF"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "A43BE57B"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "tag",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "39F65C09"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "39F65C09"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "48C54B9D"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "5BF5D54C"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "61D027B3"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "715018A6"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "79BA5097"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "tag",
											"source": 10,
											"value": "28"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "4C98B2B"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "1F9C729D"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "26D07099"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "2F48AB7D"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "3610724E"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "tag",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 303,
											"end": 5729,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "tag",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2566,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "tag",
											"source": 10,
											"value": "29"
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 492,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 492,
											"end": 520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 10,
											"value": "33"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "tag",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5076,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "tag",
											"source": 10,
											"value": "35"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "38"
										},
										{
											"begin": 5076,
											"end": 5457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "tag",
											"source": 10,
											"value": "37"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "tag",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "tag",
											"source": 10,
											"value": "39"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "34"
										},
										{
											"begin": 438,
											"end": 466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "tag",
											"source": 10,
											"value": "41"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "tag",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 2766,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2766,
											"end": 3753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "tag",
											"source": 10,
											"value": "42"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "48"
										},
										{
											"begin": 1189,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1189,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1189,
											"end": 1237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "50"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "tag",
											"source": 10,
											"value": "9"
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3759,
											"end": 4179,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1024,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "54"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1024,
											"end": 1051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "56"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "tag",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 540,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 540,
											"end": 573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "tag",
											"source": 10,
											"value": "59"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2244,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "CALLDATASIZE",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 997,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 997,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "65"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 997,
											"end": 1018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "68"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1159,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1159,
											"end": 1183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 10,
											"value": "75"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 740,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "76"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 740,
											"end": 790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "78"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "tag",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 580,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 580,
											"end": 644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "tag",
											"source": 10,
											"value": "81"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "82"
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "STOP",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "tag",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1057,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 1057,
											"end": 1088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "tag",
											"source": 10,
											"value": "86"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "tag",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 673,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "tag",
											"source": 10,
											"value": "87"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 673,
											"end": 734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "tag",
											"source": 10,
											"value": "89"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "90"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "tag",
											"source": 10,
											"value": "23"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "tag",
											"source": 10,
											"value": "93"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 1094,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "tag",
											"source": 10,
											"value": "95"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "tag",
											"source": 10,
											"value": "25"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5463,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "tag",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 5463,
											"end": 5727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "tag",
											"source": 10,
											"value": "102"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "RETURN",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "tag",
											"source": 10,
											"value": "30"
										},
										{
											"begin": 2566,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2643,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2627,
											"end": 2643,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2627,
											"end": 2648,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "109"
										},
										{
											"begin": 2619,
											"end": 2674,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "108"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "107"
										},
										{
											"begin": 2619,
											"end": 2674,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2703,
											"end": 2718,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2700,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 2684,
											"end": 2718,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2718,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2718,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2684,
											"end": 2718,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2749,
											"end": 2753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 2728,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2735,
											"end": 2736,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 2728,
											"end": 2737,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "110"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2737,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 2728,
											"end": 2746,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 2728,
											"end": 2753,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2566,
											"end": 2760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "tag",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 492,
											"end": 520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 492,
											"end": 520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "tag",
											"source": 10,
											"value": "36"
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5139,
											"end": 5152,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5162,
											"end": 5175,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5185,
											"end": 5202,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5212,
											"end": 5224,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5270,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 5264,
											"end": 5284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "tag",
											"source": 10,
											"value": "116"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "tag",
											"source": 10,
											"value": "115"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 5264,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5315,
											"end": 5327,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5348,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5354,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5341,
											"end": 5354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5354,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5397,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5390,
											"end": 5408,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5375,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5368,
											"end": 5387,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5387,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5368,
											"end": 5408,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5408,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 5368,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5368,
											"end": 5408,
											"name": "tag",
											"source": 10,
											"value": "118"
										},
										{
											"begin": 5368,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5429,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5422,
											"end": 5440,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5294,
											"end": 5450,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5076,
											"end": 5457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "989"
										},
										{
											"begin": 438,
											"end": 466,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 438,
											"end": 466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "tag",
											"source": 10,
											"value": "45"
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1621,
											"end": 1633,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1620,
											"end": 1633,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1612,
											"end": 1660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "125"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "124"
										},
										{
											"begin": 1612,
											"end": 1660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1697,
											"end": 1713,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1693,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1713,
											"modifierDepth": 1,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 1678,
											"end": 1713,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "129"
										},
										{
											"begin": 1670,
											"end": 1739,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "128"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "127"
										},
										{
											"begin": 1670,
											"end": 1739,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 783,
											"end": 790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 1776,
											"end": 1792,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1776,
											"end": 1792,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 1776,
											"end": 1811,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "130"
										},
										{
											"begin": 1776,
											"end": 1811,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1772,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1811,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1811,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "126"
										},
										{
											"begin": 1749,
											"end": 1838,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "133"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "132"
										},
										{
											"begin": 1749,
											"end": 1838,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 2869,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2865,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2859,
											"end": 2869,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "137"
										},
										{
											"begin": 2851,
											"end": 2892,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "136"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "135"
										},
										{
											"begin": 2851,
											"end": 2892,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 718,
											"end": 734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 2951,
											"end": 2957,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2936,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2937,
											"end": 2947,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2948,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2923,
											"end": 2957,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2957,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2957,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 2923,
											"end": 2957,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2957,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 2923,
											"end": 2957,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2979,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 2923,
											"end": 2979,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "141"
										},
										{
											"begin": 2902,
											"end": 3029,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "140"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "139"
										},
										{
											"begin": 2902,
											"end": 3029,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3061,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3070,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3071,
											"end": 3083,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3071,
											"end": 3083,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 3064,
											"end": 3084,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "142"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 3064,
											"end": 3084,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3084,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3040,
											"end": 3084,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3109,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3102,
											"end": 3118,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "147"
										},
										{
											"begin": 3094,
											"end": 3140,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "146"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "145"
										},
										{
											"begin": 3094,
											"end": 3140,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3196,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3208,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3189,
											"end": 3208,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3189,
											"end": 3208,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3179,
											"end": 3185,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3165,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3176,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3158,
											"end": 3176,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3176,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3185,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3158,
											"end": 3185,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3185,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3185,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3158,
											"end": 3185,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3185,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "148"
										},
										{
											"begin": 3158,
											"end": 3185,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3208,
											"modifierDepth": 2,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3158,
											"end": 3208,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "151"
										},
										{
											"begin": 3150,
											"end": 3233,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "149"
										},
										{
											"begin": 3150,
											"end": 3233,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3262,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3290,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "DE0B6B3A7640000"
										},
										{
											"begin": 3274,
											"end": 3281,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3287,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 3274,
											"end": 3287,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3274,
											"end": 3287,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3271,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3287,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3265,
											"end": 3287,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3287,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3287,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "153"
										},
										{
											"begin": 3265,
											"end": 3287,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3287,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 3265,
											"end": 3287,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3265,
											"end": 3294,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3294,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3294,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "155"
										},
										{
											"begin": 3265,
											"end": 3294,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3265,
											"end": 3294,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 3265,
											"end": 3294,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3294,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3244,
											"end": 3294,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3373,
											"end": 3383,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3385,
											"end": 3393,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "994"
										},
										{
											"begin": 3395,
											"end": 3405,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3355,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "989"
										},
										{
											"begin": 3351,
											"end": 3372,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3351,
											"end": 3372,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3372,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "157"
										},
										{
											"begin": 3351,
											"end": 3372,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "156"
										},
										{
											"begin": 3351,
											"end": 3406,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3465,
											"end": 3471,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3450,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3443,
											"end": 3461,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3461,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3443,
											"end": 3471,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3443,
											"end": 3471,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3494,
											"end": 3500,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3490,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 3481,
											"end": 3490,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3481,
											"end": 3500,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "159"
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3481,
											"end": 3500,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3539,
											"end": 3545,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3523,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3524,
											"end": 3534,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3510,
											"end": 3545,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 3510,
											"end": 3545,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3630,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3642,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3642,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3623,
											"end": 3642,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3608,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 3601,
											"end": 3619,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3619,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3601,
											"end": 3642,
											"modifierDepth": 2,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3684,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3597,
											"end": 3684,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3673,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3658,
											"end": 3671,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 3658,
											"end": 3673,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3673,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "162"
										},
										{
											"begin": 3658,
											"end": 3673,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3597,
											"end": 3684,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "161"
										},
										{
											"begin": 3597,
											"end": 3684,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3715,
											"end": 3725,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "8FAFEBCAF9D154343DAD25669BFA277F4FBACD7AC6B0C4FED522580E040A0F33"
										},
										{
											"begin": 3727,
											"end": 3733,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3735,
											"end": 3745,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 3699,
											"end": 3746,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "tag",
											"source": 10,
											"value": "164"
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3699,
											"end": 3746,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 3753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2841,
											"end": 3753,
											"modifierDepth": 2,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2766,
											"end": 3753,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2766,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1189,
											"end": 1237,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3759,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 3822,
											"end": 3834,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3891,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3822,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3891,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 783,
											"end": 790,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 3856,
											"end": 3872,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 3856,
											"end": 3872,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 3856,
											"end": 3891,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "172"
										},
										{
											"begin": 3856,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3853,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 3838,
											"end": 3891,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3822,
											"end": 3891,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "171"
										},
										{
											"begin": 3822,
											"end": 3891,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "175"
										},
										{
											"begin": 3814,
											"end": 3912,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "173"
										},
										{
											"begin": 3814,
											"end": 3912,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3961,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3962,
											"end": 3972,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 3948,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3973,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3931,
											"end": 3973,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4000,
											"end": 4001,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3991,
											"end": 3997,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3991,
											"end": 4001,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "178"
										},
										{
											"begin": 3983,
											"end": 4036,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "177"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "176"
										},
										{
											"begin": 3983,
											"end": 4036,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4075,
											"end": 4076,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4060,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8"
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4061,
											"end": 4071,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4047,
											"end": 4072,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4076,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4076,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4047,
											"end": 4076,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 4104,
											"end": 4114,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4116,
											"end": 4122,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4090,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 4086,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4086,
											"end": 4103,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4103,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4086,
											"end": 4103,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 4086,
											"end": 4123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4153,
											"end": 4163,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "896E034966EAAF1ADC54ACC0F257056FEBBD300C9E47182CF761982CF1F5E430"
										},
										{
											"begin": 4165,
											"end": 4171,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4139,
											"end": 4172,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4139,
											"end": 4172,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 4179,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 4179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1024,
											"end": 1051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "994"
										},
										{
											"begin": 540,
											"end": 573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 540,
											"end": 573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2313,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 2313,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 2339,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2440,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "67"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 997,
											"end": 1018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1159,
											"end": 1183,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"name": "tag",
											"source": 10,
											"value": "77"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 783,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 740,
											"end": 790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 740,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 627,
											"end": 644,
											"name": "PUSH",
											"source": 10,
											"value": "84595161401484A000000"
										},
										{
											"begin": 580,
											"end": 644,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 580,
											"end": 644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 4226,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4286,
											"end": 4298,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4285,
											"end": 4298,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "203"
										},
										{
											"begin": 4277,
											"end": 4325,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "202"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 4277,
											"end": 4325,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4359,
											"end": 4363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4344,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4344,
											"end": 4356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4344,
											"end": 4363,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4397,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4407,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 4416,
											"end": 4420,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4393,
											"end": 4422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "204"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "206"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4393,
											"end": 4422,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "207"
										},
										{
											"begin": 4393,
											"end": 4422,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4422,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4373,
											"end": 4422,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4457,
											"end": 4458,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4445,
											"end": 4454,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4445,
											"end": 4458,
											"modifierDepth": 1,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4522,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4441,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4492,
											"end": 4499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4492,
											"end": 4497,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "71"
										},
										{
											"begin": 4492,
											"end": 4499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4492,
											"end": 4499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 4492,
											"end": 4499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4501,
											"end": 4510,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4478,
											"modifierDepth": 1,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 4474,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4474,
											"end": 4491,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "180"
										},
										{
											"begin": 4474,
											"end": 4491,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 4474,
											"end": 4511,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4441,
											"end": 4522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "209"
										},
										{
											"begin": 4441,
											"end": 4522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "B4E6CB40663C1AC63BCD620DBE3D98C44526BAA45E310F545F425EBAAB36A293"
										},
										{
											"begin": 4550,
											"end": 4559,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4550,
											"end": 4559,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4561,
											"end": 4570,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4537,
											"end": 4571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4537,
											"end": 4571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4267,
											"end": 4578,
											"modifierDepth": 1,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4226,
											"end": 4578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1057,
											"end": 1088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 718,
											"end": 734,
											"name": "PUSH",
											"source": 10,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 673,
											"end": 734,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 673,
											"end": 734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "tag",
											"source": 10,
											"value": "94"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1094,
											"end": 1118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1802,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 1802,
											"end": 1809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "tag",
											"source": 10,
											"value": "101"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5516,
											"end": 5523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5560,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5555,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5539,
											"end": 5555,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5539,
											"end": 5560,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5535,
											"end": 5570,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5569,
											"end": 5570,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5562,
											"end": 5570,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5570,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5562,
											"end": 5570,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5562,
											"end": 5570,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5535,
											"end": 5570,
											"name": "tag",
											"source": 10,
											"value": "219"
										},
										{
											"begin": 5535,
											"end": 5570,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 783,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 5603,
											"end": 5619,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5603,
											"end": 5619,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5603,
											"end": 5638,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5638,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5638,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5603,
											"end": 5638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5603,
											"end": 5638,
											"name": "tag",
											"source": 10,
											"value": "220"
										},
										{
											"begin": 5603,
											"end": 5638,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5599,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 5584,
											"end": 5638,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5580,
											"end": 5648,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5647,
											"end": 5648,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5648,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5648,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5640,
											"end": 5648,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5640,
											"end": 5648,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5580,
											"end": 5648,
											"name": "tag",
											"source": 10,
											"value": "221"
										},
										{
											"begin": 5580,
											"end": 5648,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5705,
											"end": 5720,
											"name": "TIMESTAMP",
											"source": 10
										},
										{
											"begin": 783,
											"end": 790,
											"name": "PUSH",
											"source": 10,
											"value": "76A700"
										},
										{
											"begin": 5666,
											"end": 5682,
											"name": "PUSH",
											"source": 10,
											"value": "5"
										},
										{
											"begin": 5666,
											"end": 5682,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5666,
											"end": 5701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "131"
										},
										{
											"begin": 5666,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5666,
											"end": 5701,
											"name": "tag",
											"source": 10,
											"value": "222"
										},
										{
											"begin": 5666,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5665,
											"end": 5720,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5720,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 5665,
											"end": 5720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5665,
											"end": 5720,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 5665,
											"end": 5720,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5720,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5658,
											"end": 5720,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "tag",
											"source": 10,
											"value": "218"
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5463,
											"end": 5727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 7,
											"value": "157"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 7,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "237"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 7,
											"value": "236"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 7,
											"value": "235"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4628,
											"end": 5030,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 4628,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4704,
											"end": 4709,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4678,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4679,
											"end": 4691,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4679,
											"end": 4691,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4672,
											"end": 4692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "tag",
											"source": 10,
											"value": "241"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "tag",
											"source": 10,
											"value": "240"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4701,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4672,
											"end": 4701,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4701,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4672,
											"end": 4709,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4763,
											"end": 4764,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4747,
											"end": 4753,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4747,
											"end": 4760,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4760,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4760,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4760,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "119"
										},
										{
											"begin": 4747,
											"end": 4764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "243"
										},
										{
											"begin": 4747,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4732,
											"end": 4744,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4732,
											"end": 4764,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4792,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4780,
											"end": 4792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "246"
										},
										{
											"begin": 4780,
											"end": 4794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "tag",
											"source": 10,
											"value": "245"
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4780,
											"end": 4794,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4840,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4808,
											"end": 4814,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4815,
											"end": 4827,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4815,
											"end": 4827,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "112"
										},
										{
											"begin": 4808,
											"end": 4828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "tag",
											"source": 10,
											"value": "248"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "tag",
											"source": 10,
											"value": "247"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "KECCAK256",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4837,
											"name": "PUSH",
											"source": 10,
											"value": "3"
										},
										{
											"begin": 4808,
											"end": 4837,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4837,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4808,
											"end": 4844,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "PUSH",
											"source": 10,
											"value": "D87D457666088F7F0056032AA92E6FD462F4EC64661117A66049CD349A0CAE14"
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4877,
											"end": 4889,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "51"
										},
										{
											"begin": 4863,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4890,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "tag",
											"source": 10,
											"value": "244"
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4936,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 10,
											"value": "6"
										},
										{
											"begin": 4921,
											"end": 4933,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "100"
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "EXP",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "SSTORE",
											"source": 10
										},
										{
											"begin": 4921,
											"end": 4940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "PUSH",
											"source": 10,
											"value": "B4E6CB40663C1AC63BCD620DBE3D98C44526BAA45E310F545F425EBAAB36A293"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "PUSH",
											"source": 10,
											"value": "7"
										},
										{
											"begin": 4972,
											"end": 4981,
											"name": "SLOAD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSHIMMUTABLE",
											"source": 10,
											"value": "992"
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 4997,
											"name": "PUSH",
											"source": 10,
											"value": "70A08231"
										},
										{
											"begin": 5006,
											"end": 5010,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "E0"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SHL",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4983,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "STATICCALL",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "tag",
											"source": 10,
											"value": "254"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 4983,
											"end": 5012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "tag",
											"source": 10,
											"value": "255"
										},
										{
											"begin": 4983,
											"end": 5012,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "165"
										},
										{
											"begin": 4959,
											"end": 5013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "tag",
											"source": 10,
											"value": "256"
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4959,
											"end": 5013,
											"name": "LOG1",
											"source": 10
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "tag",
											"source": 10,
											"value": "251"
										},
										{
											"begin": 4728,
											"end": 5024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4628,
											"end": 5030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 7,
											"value": "180"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 7,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 7,
											"value": "259"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2148,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 2123,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 7,
											"value": "238"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 7
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "268"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 7,
											"value": "269"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 7,
											"value": "270"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "tag",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 139,
											"end": 199,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 167,
											"end": 170,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 188,
											"end": 193,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 181,
											"end": 193,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 181,
											"end": 193,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 139,
											"end": 199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 205,
											"end": 347,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 255,
											"end": 264,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 333,
											"end": 338,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 315,
											"end": 339,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 315,
											"end": 339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 315,
											"end": 339,
											"name": "tag",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 315,
											"end": 339,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 306,
											"end": 340,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "274"
										},
										{
											"begin": 306,
											"end": 340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 306,
											"end": 340,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 306,
											"end": 340,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 288,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 288,
											"end": 341,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 288,
											"end": 341,
											"name": "tag",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 288,
											"end": 341,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 275,
											"end": 341,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 275,
											"end": 341,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 205,
											"end": 347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 353,
											"end": 479,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 403,
											"end": 412,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 467,
											"end": 472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 436,
											"end": 473,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 436,
											"end": 473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 436,
											"end": 473,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 436,
											"end": 473,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 423,
											"end": 473,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 423,
											"end": 473,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 353,
											"end": 479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "tag",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 485,
											"end": 625,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 549,
											"end": 558,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 613,
											"end": 618,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 582,
											"end": 619,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 582,
											"end": 619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 582,
											"end": 619,
											"name": "tag",
											"source": 11,
											"value": "328"
										},
										{
											"begin": 582,
											"end": 619,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 569,
											"end": 619,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 569,
											"end": 619,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 485,
											"end": 625,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 631,
											"end": 790,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 777,
											"end": 782,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 732,
											"end": 783,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "277"
										},
										{
											"begin": 732,
											"end": 783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 732,
											"end": 783,
											"name": "tag",
											"source": 11,
											"value": "330"
										},
										{
											"begin": 732,
											"end": 783,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 727,
											"end": 730,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 720,
											"end": 784,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 631,
											"end": 790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 941,
											"end": 943,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 930,
											"end": 939,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 926,
											"end": 944,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 918,
											"end": 944,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 918,
											"end": 944,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1025,
											"end": 1034,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1021,
											"end": 1038,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1012,
											"end": 1018,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 954,
											"end": 1039,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 954,
											"end": 1039,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 796,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1089,
											"end": 1096,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1118,
											"end": 1123,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1107,
											"end": 1123,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1129,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1052,
											"end": 1129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "tag",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 1240,
											"end": 1245,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 1222,
											"end": 1246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "tag",
											"source": 11,
											"value": "335"
										},
										{
											"begin": 1222,
											"end": 1246,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1217,
											"end": 1220,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1210,
											"end": 1247,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1253,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1135,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1436,
											"end": 1440,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1474,
											"end": 1477,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1463,
											"end": 1472,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1459,
											"end": 1478,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1478,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1451,
											"end": 1478,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 1556,
											"end": 1557,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1554,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1541,
											"end": 1558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1532,
											"end": 1538,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1488,
											"end": 1559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1488,
											"end": 1559,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 1488,
											"end": 1559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1626,
											"end": 1635,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1622,
											"end": 1640,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1613,
											"end": 1619,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1569,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1569,
											"end": 1641,
											"name": "tag",
											"source": 11,
											"value": "338"
										},
										{
											"begin": 1569,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 1719,
											"end": 1721,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1717,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1704,
											"end": 1722,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1651,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1651,
											"end": 1723,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 1651,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1733,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 1790,
											"end": 1799,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1786,
											"end": 1804,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1777,
											"end": 1783,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1733,
											"end": 1805,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 1733,
											"end": 1805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1733,
											"end": 1805,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 1733,
											"end": 1805,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1259,
											"end": 1812,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1899,
											"end": 2016,
											"name": "tag",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 1899,
											"end": 2016,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2005,
											"end": 2006,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1998,
											"end": 2010,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2267,
											"name": "tag",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2145,
											"end": 2267,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2218,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 2236,
											"end": 2241,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2218,
											"end": 2242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 2218,
											"end": 2242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2218,
											"end": 2242,
											"name": "tag",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 2218,
											"end": 2242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2211,
											"end": 2216,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2208,
											"end": 2243,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2198,
											"end": 2261,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2198,
											"end": 2261,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2257,
											"end": 2258,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2254,
											"end": 2255,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2247,
											"end": 2259,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2198,
											"end": 2261,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 2198,
											"end": 2261,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2267,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2145,
											"end": 2267,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2412,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 2273,
											"end": 2412,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2319,
											"end": 2324,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2344,
											"end": 2364,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2335,
											"end": 2364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 2400,
											"end": 2405,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 2373,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 2373,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2412,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2412,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2412,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2273,
											"end": 2412,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2747,
											"name": "tag",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 2418,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2483,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2526,
											"end": 2528,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2514,
											"end": 2523,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2505,
											"end": 2512,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2501,
											"end": 2524,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2497,
											"end": 2529,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2613,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 2494,
											"end": 2613,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2532,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 2532,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2532,
											"end": 2611,
											"name": "tag",
											"source": 11,
											"value": "351"
										},
										{
											"begin": 2532,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2494,
											"end": 2613,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 2494,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2652,
											"end": 2653,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 2722,
											"end": 2729,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 2713,
											"end": 2719,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2702,
											"end": 2711,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 2698,
											"end": 2720,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2730,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 2677,
											"end": 2730,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2677,
											"end": 2730,
											"name": "tag",
											"source": 11,
											"value": "352"
										},
										{
											"begin": 2677,
											"end": 2730,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2667,
											"end": 2730,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2667,
											"end": 2730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2623,
											"end": 2740,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2747,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2747,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2747,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2418,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2849,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 2753,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 2837,
											"end": 2842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 2819,
											"end": 2843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "tag",
											"source": 11,
											"value": "354"
										},
										{
											"begin": 2819,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2808,
											"end": 2843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 2977,
											"name": "tag",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 2855,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2928,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2946,
											"end": 2951,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2928,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 2928,
											"end": 2952,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2928,
											"end": 2952,
											"name": "tag",
											"source": 11,
											"value": "356"
										},
										{
											"begin": 2928,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2921,
											"end": 2926,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2918,
											"end": 2953,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 2908,
											"end": 2971,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2968,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2964,
											"end": 2965,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2969,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2908,
											"end": 2971,
											"name": "tag",
											"source": 11,
											"value": "357"
										},
										{
											"begin": 2908,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 2977,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2855,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3122,
											"name": "tag",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 2983,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3034,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3067,
											"end": 3073,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3054,
											"end": 3074,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3074,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3045,
											"end": 3074,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3110,
											"end": 3115,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3116,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "287"
										},
										{
											"begin": 3083,
											"end": 3116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3083,
											"end": 3116,
											"name": "tag",
											"source": 11,
											"value": "359"
										},
										{
											"begin": 3083,
											"end": 3116,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3122,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3122,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3122,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2983,
											"end": 3122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3457,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 3128,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3187,
											"end": 3193,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3236,
											"end": 3238,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3224,
											"end": 3233,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3215,
											"end": 3222,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3211,
											"end": 3234,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3207,
											"end": 3239,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3323,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3204,
											"end": 3323,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3242,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3242,
											"end": 3321,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 3242,
											"end": 3321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3242,
											"end": 3321,
											"name": "tag",
											"source": 11,
											"value": "362"
										},
										{
											"begin": 3242,
											"end": 3321,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3204,
											"end": 3323,
											"name": "tag",
											"source": 11,
											"value": "361"
										},
										{
											"begin": 3204,
											"end": 3323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3362,
											"end": 3363,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3432,
											"end": 3439,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3423,
											"end": 3429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3412,
											"end": 3421,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3408,
											"end": 3430,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "288"
										},
										{
											"begin": 3387,
											"end": 3440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "tag",
											"source": 11,
											"value": "363"
										},
										{
											"begin": 3387,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3377,
											"end": 3440,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3333,
											"end": 3450,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3457,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3457,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3457,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3128,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 11,
											"value": "365"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "tag",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3796,
											"end": 3801,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 3778,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 3778,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3773,
											"end": 3776,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3766,
											"end": 3803,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3691,
											"end": 3809,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3908,
											"end": 3912,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3946,
											"end": 3948,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3935,
											"end": 3944,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3923,
											"end": 3949,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 4027,
											"end": 4028,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4016,
											"end": 4025,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4012,
											"end": 4029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4003,
											"end": 4009,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 3959,
											"end": 4030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 3959,
											"end": 4030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3815,
											"end": 4037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4133,
											"name": "tag",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4043,
											"end": 4133,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4077,
											"end": 4084,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4120,
											"end": 4125,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4113,
											"end": 4126,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4127,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4095,
											"end": 4127,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4095,
											"end": 4127,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4133,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4133,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4133,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4043,
											"end": 4133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4248,
											"name": "tag",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4139,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 4235,
											"end": 4240,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4241,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "290"
										},
										{
											"begin": 4220,
											"end": 4241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4220,
											"end": 4241,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 4220,
											"end": 4241,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4215,
											"end": 4218,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4208,
											"end": 4242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4248,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4139,
											"end": 4248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4425,
											"end": 4429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4463,
											"end": 4466,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4452,
											"end": 4461,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4448,
											"end": 4467,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4467,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4440,
											"end": 4467,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4530,
											"end": 4547,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4521,
											"end": 4527,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4477,
											"end": 4548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "tag",
											"source": 11,
											"value": "374"
										},
										{
											"begin": 4477,
											"end": 4548,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4626,
											"end": 4628,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4611,
											"end": 4629,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4602,
											"end": 4608,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4630,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4558,
											"end": 4630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4558,
											"end": 4630,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 4558,
											"end": 4630,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4708,
											"end": 4710,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4697,
											"end": 4706,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4693,
											"end": 4711,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4684,
											"end": 4690,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4712,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 4640,
											"end": 4712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4640,
											"end": 4712,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 4640,
											"end": 4712,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 4784,
											"end": 4786,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4773,
											"end": 4782,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4787,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4760,
											"end": 4766,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4788,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4722,
											"end": 4788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4722,
											"end": 4788,
											"name": "tag",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 4722,
											"end": 4788,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4254,
											"end": 4795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 5011,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 4801,
											"end": 5011,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4888,
											"end": 4892,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4928,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4915,
											"end": 4924,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4911,
											"end": 4929,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4903,
											"end": 4929,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4903,
											"end": 4929,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4939,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 5001,
											"end": 5002,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4990,
											"end": 4999,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4986,
											"end": 5003,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4977,
											"end": 4983,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4939,
											"end": 5004,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "291"
										},
										{
											"begin": 4939,
											"end": 5004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4939,
											"end": 5004,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 4939,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 5011,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 5011,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 5011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 5011,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4801,
											"end": 5011,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5186,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 5017,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5101,
											"end": 5112,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5130,
											"end": 5133,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5123,
											"end": 5142,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5175,
											"end": 5179,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5170,
											"end": 5173,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5166,
											"end": 5180,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5180,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5151,
											"end": 5180,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5186,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5186,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5186,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5017,
											"end": 5186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5192,
											"end": 5363,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 5192,
											"end": 5363,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5332,
											"end": 5355,
											"name": "PUSH",
											"source": 11,
											"value": "50726573616C652073756461682064696D756C61690000000000000000000000"
										},
										{
											"begin": 5328,
											"end": 5329,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5316,
											"end": 5330,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5309,
											"end": 5356,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5192,
											"end": 5363,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5192,
											"end": 5363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "tag",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5511,
											"end": 5514,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5596,
											"end": 5598,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 5591,
											"end": 5594,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 5532,
											"end": 5599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "tag",
											"source": 11,
											"value": "383"
										},
										{
											"begin": 5532,
											"end": 5599,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5599,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5525,
											"end": 5599,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 5697,
											"end": 5700,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 5608,
											"end": 5701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "tag",
											"source": 11,
											"value": "384"
										},
										{
											"begin": 5608,
											"end": 5701,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5726,
											"end": 5728,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5721,
											"end": 5724,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5717,
											"end": 5729,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5710,
											"end": 5729,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5735,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5369,
											"end": 5735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5907,
											"end": 5911,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5947,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5930,
											"end": 5948,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5948,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5922,
											"end": 5948,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5994,
											"end": 6003,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5988,
											"end": 5992,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5984,
											"end": 6004,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5980,
											"end": 5981,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5978,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5965,
											"end": 5982,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5958,
											"end": 6005,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6148,
											"end": 6152,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 6022,
											"end": 6153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "tag",
											"source": 11,
											"value": "386"
										},
										{
											"begin": 6022,
											"end": 6153,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6153,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6014,
											"end": 6153,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 6160,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5741,
											"end": 6160,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6166,
											"end": 6346,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 6166,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6214,
											"end": 6291,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6211,
											"end": 6212,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 6292,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6311,
											"end": 6315,
											"name": "PUSH",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 6308,
											"end": 6309,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6301,
											"end": 6316,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6335,
											"end": 6339,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6332,
											"end": 6333,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6325,
											"end": 6340,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6352,
											"end": 6532,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6352,
											"end": 6532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6400,
											"end": 6477,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6397,
											"end": 6398,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6390,
											"end": 6478,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6497,
											"end": 6501,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 6494,
											"end": 6495,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6487,
											"end": 6502,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6521,
											"end": 6525,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 6518,
											"end": 6519,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6526,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6732,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 6538,
											"end": 6732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6578,
											"end": 6582,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6598,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 6616,
											"end": 6617,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6598,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 6598,
											"end": 6618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6598,
											"end": 6618,
											"name": "tag",
											"source": 11,
											"value": "390"
										},
										{
											"begin": 6598,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6593,
											"end": 6618,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6593,
											"end": 6618,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 6650,
											"end": 6651,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 6652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 6632,
											"end": 6652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6632,
											"end": 6652,
											"name": "tag",
											"source": 11,
											"value": "391"
										},
										{
											"begin": 6632,
											"end": 6652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6627,
											"end": 6652,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6627,
											"end": 6652,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6676,
											"end": 6677,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6673,
											"end": 6674,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6669,
											"end": 6678,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6678,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6661,
											"end": 6678,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6700,
											"end": 6701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6694,
											"end": 6698,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6691,
											"end": 6702,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6725,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6725,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6688,
											"end": 6725,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 6705,
											"end": 6723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "tag",
											"source": 11,
											"value": "393"
										},
										{
											"begin": 6705,
											"end": 6723,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6688,
											"end": 6725,
											"name": "tag",
											"source": 11,
											"value": "392"
										},
										{
											"begin": 6688,
											"end": 6725,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6732,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6732,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6732,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6538,
											"end": 6732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6738,
											"end": 6910,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 6738,
											"end": 6910,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6878,
											"end": 6902,
											"name": "PUSH",
											"source": 11,
											"value": "50726573616C6520737564616820626572616B68697200000000000000000000"
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6866,
											"end": 6872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6862,
											"end": 6876,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6855,
											"end": 6903,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6738,
											"end": 6910,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6738,
											"end": 6910,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "tag",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7058,
											"end": 7061,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 7143,
											"end": 7145,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 7138,
											"end": 7141,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 7079,
											"end": 7146,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "tag",
											"source": 11,
											"value": "396"
										},
										{
											"begin": 7079,
											"end": 7146,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7146,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7072,
											"end": 7146,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 7244,
											"end": 7247,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 7155,
											"end": 7248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "tag",
											"source": 11,
											"value": "397"
										},
										{
											"begin": 7155,
											"end": 7248,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7273,
											"end": 7275,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7268,
											"end": 7271,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7264,
											"end": 7276,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7276,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7257,
											"end": 7276,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 7282,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6916,
											"end": 7282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7454,
											"end": 7458,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7492,
											"end": 7494,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7481,
											"end": 7490,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7477,
											"end": 7495,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7469,
											"end": 7495,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7541,
											"end": 7550,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7535,
											"end": 7539,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7551,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7527,
											"end": 7528,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7516,
											"end": 7525,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7512,
											"end": 7529,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7505,
											"end": 7552,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 7695,
											"end": 7699,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 7569,
											"end": 7700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "tag",
											"source": 11,
											"value": "399"
										},
										{
											"begin": 7569,
											"end": 7700,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7700,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7561,
											"end": 7700,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7707,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7288,
											"end": 7707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7713,
											"end": 7884,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 7713,
											"end": 7884,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7853,
											"end": 7876,
											"name": "PUSH",
											"source": 11,
											"value": "50726573616C652062656C756D2064696D756C61690000000000000000000000"
										},
										{
											"begin": 7849,
											"end": 7850,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7847,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7837,
											"end": 7851,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7830,
											"end": 7877,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7713,
											"end": 7884,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7713,
											"end": 7884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 8256,
											"name": "tag",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 7890,
											"end": 8256,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8032,
											"end": 8035,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8053,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8117,
											"end": 8119,
											"name": "PUSH",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 8112,
											"end": 8115,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8120,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 8053,
											"end": 8120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8053,
											"end": 8120,
											"name": "tag",
											"source": 11,
											"value": "402"
										},
										{
											"begin": 8053,
											"end": 8120,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8120,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8046,
											"end": 8120,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8129,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 8218,
											"end": 8221,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8129,
											"end": 8222,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 8129,
											"end": 8222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8129,
											"end": 8222,
											"name": "tag",
											"source": 11,
											"value": "403"
										},
										{
											"begin": 8129,
											"end": 8222,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8249,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8242,
											"end": 8245,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8238,
											"end": 8250,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8250,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8231,
											"end": 8250,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 8256,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 8256,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 8256,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7890,
											"end": 8256,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8681,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 8262,
											"end": 8681,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8428,
											"end": 8432,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8466,
											"end": 8468,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8455,
											"end": 8464,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8451,
											"end": 8469,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8443,
											"end": 8469,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8443,
											"end": 8469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8515,
											"end": 8524,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8509,
											"end": 8513,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8505,
											"end": 8525,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8501,
											"end": 8502,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8486,
											"end": 8503,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8479,
											"end": 8526,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 8669,
											"end": 8673,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8674,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 8543,
											"end": 8674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8543,
											"end": 8674,
											"name": "tag",
											"source": 11,
											"value": "405"
										},
										{
											"begin": 8543,
											"end": 8674,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8535,
											"end": 8674,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8535,
											"end": 8674,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8681,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8681,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8681,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8262,
											"end": 8681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8878,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 8687,
											"end": 8878,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8727,
											"end": 8730,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 8764,
											"end": 8765,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8746,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 8746,
											"end": 8766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8746,
											"end": 8766,
											"name": "tag",
											"source": 11,
											"value": "407"
										},
										{
											"begin": 8746,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8741,
											"end": 8766,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 8798,
											"end": 8799,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8800,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 8780,
											"end": 8800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8780,
											"end": 8800,
											"name": "tag",
											"source": 11,
											"value": "408"
										},
										{
											"begin": 8780,
											"end": 8800,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8775,
											"end": 8800,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8775,
											"end": 8800,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8823,
											"end": 8824,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8820,
											"end": 8821,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8816,
											"end": 8825,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8825,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8809,
											"end": 8825,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8844,
											"end": 8847,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8841,
											"end": 8842,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8838,
											"end": 8848,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8835,
											"end": 8871,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8835,
											"end": 8871,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 8835,
											"end": 8871,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 8851,
											"end": 8869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "tag",
											"source": 11,
											"value": "410"
										},
										{
											"begin": 8851,
											"end": 8869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8835,
											"end": 8871,
											"name": "tag",
											"source": 11,
											"value": "409"
										},
										{
											"begin": 8835,
											"end": 8871,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8878,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8878,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8878,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8687,
											"end": 8878,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8884,
											"end": 9052,
											"name": "tag",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 8884,
											"end": 9052,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9024,
											"end": 9044,
											"name": "PUSH",
											"source": 11,
											"value": "4A756D6C616820746964616B2076616C69640000000000000000000000000000"
										},
										{
											"begin": 9020,
											"end": 9021,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9012,
											"end": 9018,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9008,
											"end": 9022,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9001,
											"end": 9045,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8884,
											"end": 9052,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8884,
											"end": 9052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9424,
											"name": "tag",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 9058,
											"end": 9424,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9200,
											"end": 9203,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9221,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9285,
											"end": 9287,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 9280,
											"end": 9283,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9221,
											"end": 9288,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9221,
											"end": 9288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9221,
											"end": 9288,
											"name": "tag",
											"source": 11,
											"value": "413"
										},
										{
											"begin": 9221,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9288,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9214,
											"end": 9288,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 9386,
											"end": 9389,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9390,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "300"
										},
										{
											"begin": 9297,
											"end": 9390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9297,
											"end": 9390,
											"name": "tag",
											"source": 11,
											"value": "414"
										},
										{
											"begin": 9297,
											"end": 9390,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9415,
											"end": 9417,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9410,
											"end": 9413,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9406,
											"end": 9418,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9418,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9418,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9424,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9424,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9424,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9058,
											"end": 9424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9596,
											"end": 9600,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9634,
											"end": 9636,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9623,
											"end": 9632,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9619,
											"end": 9637,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9611,
											"end": 9637,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9611,
											"end": 9637,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9683,
											"end": 9692,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9677,
											"end": 9681,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9673,
											"end": 9693,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9667,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9654,
											"end": 9671,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9647,
											"end": 9694,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 9837,
											"end": 9841,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "301"
										},
										{
											"begin": 9711,
											"end": 9842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "tag",
											"source": 11,
											"value": "416"
										},
										{
											"begin": 9711,
											"end": 9842,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9703,
											"end": 9842,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9703,
											"end": 9842,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9849,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9430,
											"end": 9849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9855,
											"end": 10029,
											"name": "tag",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 9855,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9995,
											"end": 10021,
											"name": "PUSH",
											"source": 11,
											"value": "4D656C65626968692062617461732070656D62656C69616E0000000000000000"
										},
										{
											"begin": 9991,
											"end": 9992,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 9989,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9979,
											"end": 9993,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9972,
											"end": 10022,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9855,
											"end": 10029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9855,
											"end": 10029,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10035,
											"end": 10401,
											"name": "tag",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10035,
											"end": 10401,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10177,
											"end": 10180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10198,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10262,
											"end": 10264,
											"name": "PUSH",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 10257,
											"end": 10260,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10198,
											"end": 10265,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 10198,
											"end": 10265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10198,
											"end": 10265,
											"name": "tag",
											"source": 11,
											"value": "419"
										},
										{
											"begin": 10198,
											"end": 10265,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10265,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10191,
											"end": 10265,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 10363,
											"end": 10366,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "302"
										},
										{
											"begin": 10274,
											"end": 10367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10274,
											"end": 10367,
											"name": "tag",
											"source": 11,
											"value": "420"
										},
										{
											"begin": 10274,
											"end": 10367,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10392,
											"end": 10394,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10387,
											"end": 10390,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10383,
											"end": 10395,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10395,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10376,
											"end": 10395,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10035,
											"end": 10401,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10035,
											"end": 10401,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10035,
											"end": 10401,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10035,
											"end": 10401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10573,
											"end": 10577,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10611,
											"end": 10613,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 10600,
											"end": 10609,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10596,
											"end": 10614,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10588,
											"end": 10614,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10588,
											"end": 10614,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10660,
											"end": 10669,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10654,
											"end": 10658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10650,
											"end": 10670,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10646,
											"end": 10647,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10644,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10631,
											"end": 10648,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10624,
											"end": 10671,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 10814,
											"end": 10818,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "303"
										},
										{
											"begin": 10688,
											"end": 10819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "tag",
											"source": 11,
											"value": "422"
										},
										{
											"begin": 10688,
											"end": 10819,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10819,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10680,
											"end": 10819,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10407,
											"end": 10826,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10407,
											"end": 10826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10832,
											"end": 10999,
											"name": "tag",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 10832,
											"end": 10999,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10972,
											"end": 10991,
											"name": "PUSH",
											"source": 11,
											"value": "537461676520746964616B20616B746966000000000000000000000000000000"
										},
										{
											"begin": 10968,
											"end": 10969,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10960,
											"end": 10966,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10956,
											"end": 10970,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10949,
											"end": 10992,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10832,
											"end": 10999,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10832,
											"end": 10999,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11005,
											"end": 11371,
											"name": "tag",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 11005,
											"end": 11371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11147,
											"end": 11150,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11168,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 11232,
											"end": 11234,
											"name": "PUSH",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 11227,
											"end": 11230,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11168,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 11168,
											"end": 11235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11168,
											"end": 11235,
											"name": "tag",
											"source": 11,
											"value": "425"
										},
										{
											"begin": 11168,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11161,
											"end": 11235,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11161,
											"end": 11235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11244,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11333,
											"end": 11336,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11244,
											"end": 11337,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "304"
										},
										{
											"begin": 11244,
											"end": 11337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11244,
											"end": 11337,
											"name": "tag",
											"source": 11,
											"value": "426"
										},
										{
											"begin": 11244,
											"end": 11337,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11362,
											"end": 11364,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11357,
											"end": 11360,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11353,
											"end": 11365,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11346,
											"end": 11365,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11346,
											"end": 11365,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11005,
											"end": 11371,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11005,
											"end": 11371,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11005,
											"end": 11371,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11005,
											"end": 11371,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11377,
											"end": 11796,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 11377,
											"end": 11796,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11543,
											"end": 11547,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11581,
											"end": 11583,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11570,
											"end": 11579,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11566,
											"end": 11584,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11584,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11558,
											"end": 11584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11630,
											"end": 11639,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11624,
											"end": 11628,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11620,
											"end": 11640,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11616,
											"end": 11617,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11605,
											"end": 11614,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11601,
											"end": 11618,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11594,
											"end": 11641,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11658,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 11784,
											"end": 11788,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11658,
											"end": 11789,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "305"
										},
										{
											"begin": 11658,
											"end": 11789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11658,
											"end": 11789,
											"name": "tag",
											"source": 11,
											"value": "428"
										},
										{
											"begin": 11658,
											"end": 11789,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11650,
											"end": 11789,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11650,
											"end": 11789,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11377,
											"end": 11796,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11377,
											"end": 11796,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11377,
											"end": 11796,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11377,
											"end": 11796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11802,
											"end": 11972,
											"name": "tag",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 11802,
											"end": 11972,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11942,
											"end": 11964,
											"name": "PUSH",
											"source": 11,
											"value": "4D656C6562696869206B756F7461207374616765000000000000000000000000"
										},
										{
											"begin": 11938,
											"end": 11939,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11930,
											"end": 11936,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11926,
											"end": 11940,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11919,
											"end": 11965,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11802,
											"end": 11972,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11802,
											"end": 11972,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12344,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 11978,
											"end": 12344,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12120,
											"end": 12123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12141,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 12205,
											"end": 12207,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 12200,
											"end": 12203,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12141,
											"end": 12208,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 12141,
											"end": 12208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12141,
											"end": 12208,
											"name": "tag",
											"source": 11,
											"value": "431"
										},
										{
											"begin": 12141,
											"end": 12208,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12134,
											"end": 12208,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12134,
											"end": 12208,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12217,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 12306,
											"end": 12309,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12217,
											"end": 12310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "306"
										},
										{
											"begin": 12217,
											"end": 12310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12217,
											"end": 12310,
											"name": "tag",
											"source": 11,
											"value": "432"
										},
										{
											"begin": 12217,
											"end": 12310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12335,
											"end": 12337,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12330,
											"end": 12333,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12326,
											"end": 12338,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12319,
											"end": 12338,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12319,
											"end": 12338,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12344,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12344,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12344,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11978,
											"end": 12344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12350,
											"end": 12769,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 12350,
											"end": 12769,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12516,
											"end": 12520,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12554,
											"end": 12556,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12543,
											"end": 12552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12539,
											"end": 12557,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12531,
											"end": 12557,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12531,
											"end": 12557,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12603,
											"end": 12612,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12597,
											"end": 12601,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12593,
											"end": 12613,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12589,
											"end": 12590,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12578,
											"end": 12587,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12574,
											"end": 12591,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12567,
											"end": 12614,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 12757,
											"end": 12761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 12762,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 12631,
											"end": 12762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12631,
											"end": 12762,
											"name": "tag",
											"source": 11,
											"value": "434"
										},
										{
											"begin": 12631,
											"end": 12762,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12623,
											"end": 12762,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12623,
											"end": 12762,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12350,
											"end": 12769,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12350,
											"end": 12769,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12350,
											"end": 12769,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12350,
											"end": 12769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 13185,
											"name": "tag",
											"source": 11,
											"value": "153"
										},
										{
											"begin": 12775,
											"end": 13185,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12815,
											"end": 12822,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 12856,
											"end": 12857,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 12838,
											"end": 12858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "tag",
											"source": 11,
											"value": "436"
										},
										{
											"begin": 12838,
											"end": 12858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 12858,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12833,
											"end": 12858,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12872,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 12890,
											"end": 12891,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12872,
											"end": 12892,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 12872,
											"end": 12892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12872,
											"end": 12892,
											"name": "tag",
											"source": 11,
											"value": "437"
										},
										{
											"begin": 12872,
											"end": 12892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12867,
											"end": 12892,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12867,
											"end": 12892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12927,
											"end": 12928,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12924,
											"end": 12925,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12920,
											"end": 12929,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 12967,
											"end": 12978,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12979,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 12949,
											"end": 12979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12979,
											"name": "tag",
											"source": 11,
											"value": "438"
										},
										{
											"begin": 12949,
											"end": 12979,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12938,
											"end": 12979,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12938,
											"end": 12979,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13128,
											"end": 13129,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13119,
											"end": 13126,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13115,
											"end": 13130,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13112,
											"end": 13113,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13109,
											"end": 13131,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13089,
											"end": 13090,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13082,
											"end": 13091,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13062,
											"end": 13145,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13039,
											"end": 13178,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 13039,
											"end": 13178,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 13158,
											"end": 13176,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "tag",
											"source": 11,
											"value": "440"
										},
										{
											"begin": 13158,
											"end": 13176,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13039,
											"end": 13178,
											"name": "tag",
											"source": 11,
											"value": "439"
										},
										{
											"begin": 13039,
											"end": 13178,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12823,
											"end": 13185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 13185,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 13185,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 13185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 13185,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12775,
											"end": 13185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13191,
											"end": 13371,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 13191,
											"end": 13371,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13239,
											"end": 13316,
											"name": "PUSH",
											"source": 11,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13236,
											"end": 13237,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13229,
											"end": 13317,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13336,
											"end": 13340,
											"name": "PUSH",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 13333,
											"end": 13334,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13326,
											"end": 13341,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13360,
											"end": 13364,
											"name": "PUSH",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 13357,
											"end": 13358,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13350,
											"end": 13365,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13377,
											"end": 13562,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 13377,
											"end": 13562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13417,
											"end": 13418,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13434,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 13452,
											"end": 13453,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13454,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 13434,
											"end": 13454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13434,
											"end": 13454,
											"name": "tag",
											"source": 11,
											"value": "443"
										},
										{
											"begin": 13434,
											"end": 13454,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13429,
											"end": 13454,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13429,
											"end": 13454,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 13486,
											"end": 13487,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13488,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 13468,
											"end": 13488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13468,
											"end": 13488,
											"name": "tag",
											"source": 11,
											"value": "444"
										},
										{
											"begin": 13468,
											"end": 13488,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13488,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13463,
											"end": 13488,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13507,
											"end": 13508,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13532,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 13497,
											"end": 13532,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13512,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 13512,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 13512,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13512,
											"end": 13530,
											"name": "tag",
											"source": 11,
											"value": "446"
										},
										{
											"begin": 13512,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13497,
											"end": 13532,
											"name": "tag",
											"source": 11,
											"value": "445"
										},
										{
											"begin": 13497,
											"end": 13532,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13554,
											"end": 13555,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13551,
											"end": 13552,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13547,
											"end": 13556,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13542,
											"end": 13556,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13377,
											"end": 13562,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13377,
											"end": 13562,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13377,
											"end": 13562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13377,
											"end": 13562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13377,
											"end": 13562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13689,
											"end": 13693,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13727,
											"end": 13729,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13716,
											"end": 13725,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13712,
											"end": 13730,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13704,
											"end": 13730,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13704,
											"end": 13730,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13808,
											"end": 13809,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13797,
											"end": 13806,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13793,
											"end": 13810,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13784,
											"end": 13790,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13811,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 13740,
											"end": 13811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13740,
											"end": 13811,
											"name": "tag",
											"source": 11,
											"value": "448"
										},
										{
											"begin": 13740,
											"end": 13811,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13821,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 13889,
											"end": 13891,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13874,
											"end": 13892,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13865,
											"end": 13871,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 13821,
											"end": 13893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 13821,
											"end": 13893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13821,
											"end": 13893,
											"name": "tag",
											"source": 11,
											"value": "449"
										},
										{
											"begin": 13821,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13568,
											"end": 13900,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 14072,
											"name": "tag",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 13906,
											"end": 14072,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14046,
											"end": 14064,
											"name": "PUSH",
											"source": 11,
											"value": "42656C756D206269736120636C61696D00000000000000000000000000000000"
										},
										{
											"begin": 14042,
											"end": 14043,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14034,
											"end": 14040,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14030,
											"end": 14044,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14023,
											"end": 14065,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 14072,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13906,
											"end": 14072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14444,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 14078,
											"end": 14444,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14220,
											"end": 14223,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14241,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 14305,
											"end": 14307,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 14300,
											"end": 14303,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14241,
											"end": 14308,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 14241,
											"end": 14308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14241,
											"end": 14308,
											"name": "tag",
											"source": 11,
											"value": "452"
										},
										{
											"begin": 14241,
											"end": 14308,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14234,
											"end": 14308,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14234,
											"end": 14308,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14317,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 14406,
											"end": 14409,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14317,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "309"
										},
										{
											"begin": 14317,
											"end": 14410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14317,
											"end": 14410,
											"name": "tag",
											"source": 11,
											"value": "453"
										},
										{
											"begin": 14317,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14435,
											"end": 14437,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14430,
											"end": 14433,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14426,
											"end": 14438,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14419,
											"end": 14438,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14419,
											"end": 14438,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14444,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14444,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14444,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14078,
											"end": 14444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14450,
											"end": 14869,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 14450,
											"end": 14869,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14616,
											"end": 14620,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14654,
											"end": 14656,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14643,
											"end": 14652,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14639,
											"end": 14657,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14631,
											"end": 14657,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14631,
											"end": 14657,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14703,
											"end": 14712,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14697,
											"end": 14701,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14693,
											"end": 14713,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14689,
											"end": 14690,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14678,
											"end": 14687,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14674,
											"end": 14691,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14667,
											"end": 14714,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 14857,
											"end": 14861,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 14731,
											"end": 14862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "tag",
											"source": 11,
											"value": "455"
										},
										{
											"begin": 14731,
											"end": 14862,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14862,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14862,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14450,
											"end": 14869,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14450,
											"end": 14869,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14450,
											"end": 14869,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14450,
											"end": 14869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14875,
											"end": 15055,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 14875,
											"end": 15055,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15015,
											"end": 15047,
											"name": "PUSH",
											"source": 11,
											"value": "546964616B2061646120746F6B656E20756E74756B2064692D636C61696D0000"
										},
										{
											"begin": 15011,
											"end": 15012,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15009,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14999,
											"end": 15013,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14992,
											"end": 15048,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14875,
											"end": 15055,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14875,
											"end": 15055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15061,
											"end": 15427,
											"name": "tag",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 15061,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15203,
											"end": 15206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15224,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 15288,
											"end": 15290,
											"name": "PUSH",
											"source": 11,
											"value": "1E"
										},
										{
											"begin": 15283,
											"end": 15286,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15224,
											"end": 15291,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 15224,
											"end": 15291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15224,
											"end": 15291,
											"name": "tag",
											"source": 11,
											"value": "458"
										},
										{
											"begin": 15224,
											"end": 15291,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15217,
											"end": 15291,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15217,
											"end": 15291,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15300,
											"end": 15393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 15389,
											"end": 15392,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15300,
											"end": 15393,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 15300,
											"end": 15393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15300,
											"end": 15393,
											"name": "tag",
											"source": 11,
											"value": "459"
										},
										{
											"begin": 15300,
											"end": 15393,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15418,
											"end": 15420,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15413,
											"end": 15416,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15409,
											"end": 15421,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15402,
											"end": 15421,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15402,
											"end": 15421,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15061,
											"end": 15427,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15061,
											"end": 15427,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15061,
											"end": 15427,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15061,
											"end": 15427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15433,
											"end": 15852,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 15433,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15599,
											"end": 15603,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15637,
											"end": 15639,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15626,
											"end": 15635,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15622,
											"end": 15640,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15614,
											"end": 15640,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15614,
											"end": 15640,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15686,
											"end": 15695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15680,
											"end": 15684,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15676,
											"end": 15696,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15672,
											"end": 15673,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15661,
											"end": 15670,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15657,
											"end": 15674,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15650,
											"end": 15697,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15714,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 15840,
											"end": 15844,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15714,
											"end": 15845,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 15714,
											"end": 15845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15714,
											"end": 15845,
											"name": "tag",
											"source": 11,
											"value": "461"
										},
										{
											"begin": 15714,
											"end": 15845,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15706,
											"end": 15845,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15706,
											"end": 15845,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15433,
											"end": 15852,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15433,
											"end": 15852,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15433,
											"end": 15852,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15433,
											"end": 15852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 16030,
											"name": "tag",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 15858,
											"end": 16030,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15998,
											"end": 16022,
											"name": "PUSH",
											"source": 11,
											"value": "50726573616C65207375646168206469616B6869726900000000000000000000"
										},
										{
											"begin": 15994,
											"end": 15995,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15986,
											"end": 15992,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15982,
											"end": 15996,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15975,
											"end": 16023,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 16030,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 16030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16178,
											"end": 16181,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 16263,
											"end": 16265,
											"name": "PUSH",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 16258,
											"end": 16261,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 16199,
											"end": 16266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "tag",
											"source": 11,
											"value": "464"
										},
										{
											"begin": 16199,
											"end": 16266,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16192,
											"end": 16266,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16192,
											"end": 16266,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 16364,
											"end": 16367,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "313"
										},
										{
											"begin": 16275,
											"end": 16368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "tag",
											"source": 11,
											"value": "465"
										},
										{
											"begin": 16275,
											"end": 16368,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16393,
											"end": 16395,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16388,
											"end": 16391,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16384,
											"end": 16396,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16377,
											"end": 16396,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16377,
											"end": 16396,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16402,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16036,
											"end": 16402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16574,
											"end": 16578,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16612,
											"end": 16614,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16610,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16597,
											"end": 16615,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16589,
											"end": 16615,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16589,
											"end": 16615,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16661,
											"end": 16670,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16651,
											"end": 16671,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16647,
											"end": 16648,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16636,
											"end": 16645,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16632,
											"end": 16649,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16625,
											"end": 16672,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 16815,
											"end": 16819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 16689,
											"end": 16820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "tag",
											"source": 11,
											"value": "467"
										},
										{
											"begin": 16689,
											"end": 16820,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16820,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16681,
											"end": 16820,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16408,
											"end": 16827,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16408,
											"end": 16827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16833,
											"end": 16976,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 16833,
											"end": 16976,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16890,
											"end": 16895,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16921,
											"end": 16927,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16915,
											"end": 16928,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16906,
											"end": 16928,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16906,
											"end": 16928,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16937,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 16964,
											"end": 16969,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16937,
											"end": 16970,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "284"
										},
										{
											"begin": 16937,
											"end": 16970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16937,
											"end": 16970,
											"name": "tag",
											"source": 11,
											"value": "469"
										},
										{
											"begin": 16937,
											"end": 16970,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16833,
											"end": 16976,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16833,
											"end": 16976,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16833,
											"end": 16976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16833,
											"end": 16976,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16833,
											"end": 16976,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 17333,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 16982,
											"end": 17333,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17052,
											"end": 17058,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17101,
											"end": 17103,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17089,
											"end": 17098,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17080,
											"end": 17087,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17076,
											"end": 17099,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 17072,
											"end": 17104,
											"name": "SLT",
											"source": 11
										},
										{
											"begin": 17069,
											"end": 17188,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 17069,
											"end": 17188,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 17069,
											"end": 17188,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 17107,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 17107,
											"end": 17186,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "282"
										},
										{
											"begin": 17107,
											"end": 17186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17107,
											"end": 17186,
											"name": "tag",
											"source": 11,
											"value": "472"
										},
										{
											"begin": 17107,
											"end": 17186,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17069,
											"end": 17188,
											"name": "tag",
											"source": 11,
											"value": "471"
										},
										{
											"begin": 17069,
											"end": 17188,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17227,
											"end": 17228,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17252,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 17308,
											"end": 17315,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 17299,
											"end": 17305,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17288,
											"end": 17297,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 17284,
											"end": 17306,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17252,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 17252,
											"end": 17316,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17252,
											"end": 17316,
											"name": "tag",
											"source": 11,
											"value": "473"
										},
										{
											"begin": 17252,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17242,
											"end": 17316,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17242,
											"end": 17316,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17198,
											"end": 17326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 17333,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 17333,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 17333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 17333,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16982,
											"end": 17333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17520,
											"name": "tag",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 17339,
											"end": 17520,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17479,
											"end": 17512,
											"name": "PUSH",
											"source": 11,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 17475,
											"end": 17476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17467,
											"end": 17473,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17463,
											"end": 17477,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17456,
											"end": 17513,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17520,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17339,
											"end": 17520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17892,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 17526,
											"end": 17892,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17668,
											"end": 17671,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 17689,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 17753,
											"end": 17755,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 17748,
											"end": 17751,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 17689,
											"end": 17756,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 17689,
											"end": 17756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17689,
											"end": 17756,
											"name": "tag",
											"source": 11,
											"value": "476"
										},
										{
											"begin": 17689,
											"end": 17756,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17682,
											"end": 17756,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17682,
											"end": 17756,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 17854,
											"end": 17857,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17858,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "316"
										},
										{
											"begin": 17765,
											"end": 17858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17765,
											"end": 17858,
											"name": "tag",
											"source": 11,
											"value": "477"
										},
										{
											"begin": 17765,
											"end": 17858,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 17883,
											"end": 17885,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 17878,
											"end": 17881,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 17874,
											"end": 17886,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 17867,
											"end": 17886,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17867,
											"end": 17886,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17892,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17892,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17892,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17526,
											"end": 17892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 18317,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 17898,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18064,
											"end": 18068,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18102,
											"end": 18104,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18091,
											"end": 18100,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18087,
											"end": 18105,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18079,
											"end": 18105,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18079,
											"end": 18105,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18151,
											"end": 18160,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18145,
											"end": 18149,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18141,
											"end": 18161,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18137,
											"end": 18138,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18126,
											"end": 18135,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18122,
											"end": 18139,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18115,
											"end": 18162,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 18179,
											"end": 18310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 18305,
											"end": 18309,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 18179,
											"end": 18310,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 18179,
											"end": 18310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18179,
											"end": 18310,
											"name": "tag",
											"source": 11,
											"value": "479"
										},
										{
											"begin": 18179,
											"end": 18310,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18171,
											"end": 18310,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18171,
											"end": 18310,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 18317,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 18317,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 18317,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 17898,
											"end": 18317,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "tag",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18472,
											"end": 18476,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18510,
											"end": 18512,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 18499,
											"end": 18508,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18495,
											"end": 18513,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18487,
											"end": 18513,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18487,
											"end": 18513,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18523,
											"end": 18594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 18591,
											"end": 18592,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18580,
											"end": 18589,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18576,
											"end": 18593,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18567,
											"end": 18573,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 18523,
											"end": 18594,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 18523,
											"end": 18594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18523,
											"end": 18594,
											"name": "tag",
											"source": 11,
											"value": "481"
										},
										{
											"begin": 18523,
											"end": 18594,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18604,
											"end": 18676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 18672,
											"end": 18674,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 18661,
											"end": 18670,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18657,
											"end": 18675,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18648,
											"end": 18654,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 18604,
											"end": 18676,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 18604,
											"end": 18676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18604,
											"end": 18676,
											"name": "tag",
											"source": 11,
											"value": "482"
										},
										{
											"begin": 18604,
											"end": 18676,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18686,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 18754,
											"end": 18756,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 18743,
											"end": 18752,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 18739,
											"end": 18757,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18730,
											"end": 18736,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 18686,
											"end": 18758,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 18686,
											"end": 18758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18686,
											"end": 18758,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 18686,
											"end": 18758,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18323,
											"end": 18765,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18771,
											"end": 19004,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 18771,
											"end": 19004,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18810,
											"end": 18813,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 18833,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 18851,
											"end": 18856,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18833,
											"end": 18857,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 18833,
											"end": 18857,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18833,
											"end": 18857,
											"name": "tag",
											"source": 11,
											"value": "485"
										},
										{
											"begin": 18833,
											"end": 18857,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18824,
											"end": 18857,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18824,
											"end": 18857,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18879,
											"end": 18945,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18872,
											"end": 18877,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18869,
											"end": 18946,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 18866,
											"end": 18969,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 18866,
											"end": 18969,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 18949,
											"end": 18967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 18949,
											"end": 18967,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 18949,
											"end": 18967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 18949,
											"end": 18967,
											"name": "tag",
											"source": 11,
											"value": "487"
										},
										{
											"begin": 18949,
											"end": 18967,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18866,
											"end": 18969,
											"name": "tag",
											"source": 11,
											"value": "486"
										},
										{
											"begin": 18866,
											"end": 18969,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 18996,
											"end": 18997,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 18989,
											"end": 18994,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 18985,
											"end": 18998,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 18978,
											"end": 18998,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18978,
											"end": 18998,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18771,
											"end": 19004,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 18771,
											"end": 19004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 18771,
											"end": 19004,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 18771,
											"end": 19004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "tag",
											"source": 11,
											"value": "261"
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19131,
											"end": 19135,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19169,
											"end": 19171,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 19158,
											"end": 19167,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 19154,
											"end": 19172,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19146,
											"end": 19172,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 19146,
											"end": 19172,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19182,
											"end": 19253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 19250,
											"end": 19251,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19248,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19235,
											"end": 19252,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19226,
											"end": 19232,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 19182,
											"end": 19253,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "289"
										},
										{
											"begin": 19182,
											"end": 19253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19182,
											"end": 19253,
											"name": "tag",
											"source": 11,
											"value": "489"
										},
										{
											"begin": 19182,
											"end": 19253,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19263,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 19331,
											"end": 19333,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 19320,
											"end": 19329,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 19316,
											"end": 19334,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 19307,
											"end": 19313,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 19263,
											"end": 19335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "280"
										},
										{
											"begin": 19263,
											"end": 19335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 19263,
											"end": 19335,
											"name": "tag",
											"source": 11,
											"value": "490"
										},
										{
											"begin": 19263,
											"end": 19335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 19010,
											"end": 19342,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Presale.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_BUY_PER_WALLET()": "db81b278",
							"PRESALE_DURATION()": "945e4013",
							"TOTAL_PRESALE_SUPPLY()": "96713abf",
							"acceptOwnership()": "79ba5097",
							"buyTokens(uint256)": "3610724e",
							"cafi()": "1f9c729d",
							"claimTokens()": "48c54b9d",
							"currentStage()": "5bf5d54c",
							"endPresale()": "a43be57b",
							"getCurrentStageInfo()": "26d07099",
							"getPresaleTimeLeft()": "f349b76c",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"presaleEnded()": "e580b2b0",
							"presaleStartTime()": "a82524b2",
							"renounceOwnership()": "715018a6",
							"stages(uint256)": "845ddcb2",
							"startPresale()": "04c98b2b",
							"totalSold()": "9106d7ba",
							"transferOwnership(address)": "f2fde38b",
							"treasury()": "61d027b3",
							"usdt()": "2f48ab7d",
							"userPurchases(address)": "39f65c09"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdt\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_cafi\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"remainingBalance\",\"type\":\"uint256\"}],\"name\":\"PresaleEnded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newStage\",\"type\":\"uint256\"}],\"name\":\"StageAdvanced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"usdtAmount\",\"type\":\"uint256\"}],\"name\":\"TokensPurchased\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_BUY_PER_WALLET\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PRESALE_DURATION\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_PRESALE_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cafi\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentStage\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentStageInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"stage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"available\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPresaleTimeLeft\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleEnded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stages\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"soldAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdt\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userPurchases\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Presale.sol\":\"CarbonFiPresale\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Presale.sol\":{\"keccak256\":\"0xed8c1ec671023f7cb56b1c984b22cad47e0478f511c2374da2f7c36d44192082\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ae33378d18c6633c75ed7e9ed8f02ec6693a4f78d60c782f3ecd1f135c861dd\",\"dweb:/ipfs/QmRUV1PgyX9rsaTNRu3HGbHWiYtw3zJEAowG8AHNVJ7fgo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 334,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 1020,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "stages",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_struct(Stage)1016_storage)dyn_storage"
							},
							{
								"astId": 1022,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "currentStage",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							},
							{
								"astId": 1024,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "presaleStartTime",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1026,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "presaleEnded",
								"offset": 0,
								"slot": "6",
								"type": "t_bool"
							},
							{
								"astId": 1028,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "totalSold",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1032,
								"contract": "Presale.sol:CarbonFiPresale",
								"label": "userPurchases",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Stage)1016_storage)dyn_storage": {
								"base": "t_struct(Stage)1016_storage",
								"encoding": "dynamic_array",
								"label": "struct CarbonFiPresale.Stage[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stage)1016_storage": {
								"encoding": "inplace",
								"label": "struct CarbonFiPresale.Stage",
								"members": [
									{
										"astId": 1009,
										"contract": "Presale.sol:CarbonFiPresale",
										"label": "totalAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1011,
										"contract": "Presale.sol:CarbonFiPresale",
										"label": "soldAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1013,
										"contract": "Presale.sol:CarbonFiPresale",
										"label": "price",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1015,
										"contract": "Presale.sol:CarbonFiPresale",
										"label": "isActive",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							960
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 961,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 960,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 960,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								960
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 942,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 942,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
					"exportedSymbols": {
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 148,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "Ownable",
										"nameLocations": [
											"1018:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1018:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "1018:7:1"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "173:810:1",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								147,
								960
							],
							"name": "Ownable2Step",
							"nameLocation": "1002:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "1048:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "1032:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 162,
									"name": "OwnershipTransferStarted",
									"nameLocation": "1074:24:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1115:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1099:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1146:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1130:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:57:1"
									},
									"src": "1068:88:1"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1294:37:1",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "1311:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "1304:20:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1162:65:1",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "1241:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:9:1"
									},
									"scope": 233,
									"src": "1232:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										126
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1728:99:1",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1738:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1754:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1738:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1738:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1802:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1802:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1811:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1777:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "EmitStatement",
												"src": "1772:48:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1337:307:1",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
									},
									"functionSelector": "f2fde38b",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nameLocations": [
													"1718:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1718:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1718:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1658:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1709:8:1"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1684:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1676:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:18:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:1"
									},
									"scope": 233,
									"src": "1649:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										146
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2083:81:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2093:20:1",
													"subExpression": {
														"id": 198,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2100:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2093:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2148:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 201,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$233_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:18:1",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "2123:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2123:34:1"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1833:173:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2020:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 196,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2074:8:1"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2047:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2039:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:18:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:1"
									},
									"scope": 233,
									"src": "2011:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2286:187:1",
										"statements": [
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2304:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "2296:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2296:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 214,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 942,
														"src": "2313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2296:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 217,
															"name": "pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2339:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 219,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2357:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2339:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "2335:96:1",
												"trueBody": {
													"id": 225,
													"nodeType": "Block",
													"src": "2365:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 222,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2413:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 221,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "2386:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2386:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 224,
															"nodeType": "RevertStatement",
															"src": "2379:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 227,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															208
														],
														"referencedDeclaration": 208,
														"src": "2440:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2440:26:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2170:69:1",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "2253:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:0:1"
									},
									"scope": 233,
									"src": "2244:229:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 234,
							"src": "984:1491:1",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								162
							]
						}
					],
					"src": "107:2369:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							315
						],
						"IERC165": [
							972
						],
						"IERC20": [
							466
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 324,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 466,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 320,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 238,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 972,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 241,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 466,
										"src": "590:6:2"
									},
									"id": 242,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 243,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "598:7:2"
									},
									"id": 244,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								972,
								466
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 315,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 315,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 315,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 315,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 315,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 315,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								400,
								409
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							972
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 973,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 972,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							466
						]
					},
					"id": 324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 467,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 322,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 466,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:5"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 326,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:5",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 329,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:5",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "1676:41:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 327,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 328,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 332,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "1723:37:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 330,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 331,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 334,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 388,
									"src": "1767:23:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 333,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 341,
										"nodeType": "Block",
										"src": "1811:39:5",
										"statements": [
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 337,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "1821:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 338,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1831:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:5"
											}
										]
									},
									"id": 342,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:5"
									},
									"scope": 388,
									"src": "1797:53:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "2251:79:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 345,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 368,
														"src": "2261:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:5"
											},
											{
												"id": 348,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:5"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 349,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 376,
														"src": "2303:18:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 351,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:5"
											}
										]
									},
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:5",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 353,
									"name": "nonReentrant",
									"nameLocation": "2236:12:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:5"
									},
									"src": "2227:103:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 367,
										"nodeType": "Block",
										"src": "2375:248:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "2468:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 358,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 332,
																"src": "2479:8:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 356,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:5"
											},
											{
												"expression": {
													"id": 365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 363,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2598:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 364,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "2608:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 366,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:5"
											}
										]
									},
									"id": 368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:5"
									},
									"returnParameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:5"
									},
									"scope": 388,
									"src": "2336:287:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 375,
										"nodeType": "Block",
										"src": "2667:171:5",
										"statements": [
											{
												"expression": {
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 371,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2809:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 372,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "2819:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:5"
											}
										]
									},
									"id": 376,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:5"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:5"
									},
									"scope": 388,
									"src": "2629:209:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3081:43:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 382,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "3098:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 383,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "3109:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 381,
												"id": 385,
												"nodeType": "Return",
												"src": "3091:26:5"
											}
										]
									},
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:5",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:5"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3075:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 379,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:5"
									},
									"scope": 388,
									"src": "3017:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 389,
							"src": "888:2238:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							466
						]
					},
					"id": 467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 391,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:6",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 466,
							"linearizedBaseContracts": [
								466
							],
							"name": "IERC20",
							"nameLocation": "214:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:6",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 400,
									"name": "Transfer",
									"nameLocation": "396:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "405:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "427:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 395,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 400,
												"src": "447:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 397,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:6"
									},
									"src": "390:72:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 401,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:6",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 409,
									"name": "Approval",
									"nameLocation": "627:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "636:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 405,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "659:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 409,
												"src": "684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:6"
									},
									"src": "621:78:6"
								},
								{
									"documentation": {
										"id": 410,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:6",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 415,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:6"
									},
									"returnParameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "821:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 412,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:6"
									},
									"scope": 466,
									"src": "775:55:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:6",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "931:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:6"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "971:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:6"
									},
									"scope": 466,
									"src": "912:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:6",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 433,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1222:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1234:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:6"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "1267:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 430,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:6"
									},
									"scope": 466,
									"src": "1204:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:6",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 443,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1567:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1582:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:6"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "1622:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:6"
									},
									"scope": 466,
									"src": "1548:83:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:6",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2326:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2343:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:6"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 453,
												"src": "2376:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 450,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:6"
									},
									"scope": 466,
									"src": "2309:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 454,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:6",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2712:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2726:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2738:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 465,
												"src": "2771:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:6"
									},
									"scope": 466,
									"src": "2690:87:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 467,
							"src": "204:2575:6",
							"usedErrors": [],
							"usedEvents": [
								400,
								409
							]
						}
					],
					"src": "106:2674:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							315
						],
						"IERC20": [
							466
						],
						"SafeERC20": [
							930
						]
					},
					"id": 931,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 470,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 931,
							"sourceUnit": 467,
							"src": "141:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 469,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 466,
										"src": "149:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 472,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 931,
							"sourceUnit": 316,
							"src": "179:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 471,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "187:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 473,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:7",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 930,
							"linearizedBaseContracts": [
								930
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 474,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:7",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 478,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 476,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "823:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:7"
									},
									"src": "792:46:7"
								},
								{
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:7",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 487,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "959:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:7",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "976:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1002:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:7"
									},
									"src": "920:109:7"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "1291:88:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 499,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "1321:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 502,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 491,
																		"src": "1343:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 433,
																	"src": "1343:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 504,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 493,
																			"src": "1360:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 505,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 495,
																			"src": "1364:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 500,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 498,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "1301:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:7"
											}
										]
									},
									"documentation": {
										"id": 488,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:7",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1241:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 490,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 489,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "1241:6:7"
													},
													"referencedDeclaration": 466,
													"src": "1241:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 493,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1255:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "1267:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:7"
									},
									"returnParameters": {
										"id": 497,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:7"
									},
									"scope": 930,
									"src": "1219:160:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "1708:98:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 525,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 515,
															"src": "1738:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 528,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 515,
																		"src": "1760:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 465,
																	"src": "1760:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 530,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 517,
																			"src": "1781:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 531,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 519,
																			"src": "1787:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 532,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 521,
																			"src": "1791:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 533,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 526,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 527,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 524,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "1718:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:7"
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:7",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1644:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 514,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 513,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "1644:6:7"
													},
													"referencedDeclaration": 466,
													"src": "1644:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 517,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1658:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 519,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1672:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "1684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:7"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:7"
									},
									"scope": 930,
									"src": "1618:188:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 563,
										"nodeType": "Block",
										"src": "2033:99:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 552,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 542,
															"src": "2074:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 555,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 542,
																		"src": "2096:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:7",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 433,
																	"src": "2096:14:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 557,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 544,
																			"src": "2113:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 558,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "2117:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 559,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 553,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 554,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 551,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2050:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 550,
												"id": 562,
												"nodeType": "Return",
												"src": "2043:82:7"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:7",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1968:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "1968:6:7"
													},
													"referencedDeclaration": 466,
													"src": "1968:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1982:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "1994:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:7"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 564,
												"src": "2027:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 548,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:7"
									},
									"scope": 930,
									"src": "1943:189:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 592,
										"nodeType": "Block",
										"src": "2381:109:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 568,
															"src": "2422:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 583,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 568,
																		"src": "2444:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:7",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 465,
																	"src": "2444:18:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 585,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 570,
																			"src": "2465:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 586,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 572,
																			"src": "2471:2:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 587,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 574,
																			"src": "2475:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 588,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 581,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:7",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 589,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 579,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "2398:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 578,
												"id": 591,
												"nodeType": "Return",
												"src": "2391:92:7"
											}
										]
									},
									"documentation": {
										"id": 565,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:7",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 593,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2302:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 567,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 566,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "2302:6:7"
													},
													"referencedDeclaration": 466,
													"src": "2302:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2316:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2330:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 571,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2342:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 573,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:7"
									},
									"returnParameters": {
										"id": 578,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 577,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "2375:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 576,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:7"
									},
									"scope": 930,
									"src": "2273:217:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 623,
										"nodeType": "Block",
										"src": "3232:139:7",
										"statements": [
											{
												"assignments": [
													605
												],
												"declarations": [
													{
														"constant": false,
														"id": 605,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 623,
														"src": "3242:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 604,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 614,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 610,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$930",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$930",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 608,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 612,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3296:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 606,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3265:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														"id": 607,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:7",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 443,
														"src": "3265:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 616,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 597,
															"src": "3327:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 617,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "3334:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 618,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 605,
																"src": "3343:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 619,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 601,
																"src": "3358:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 615,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 714,
														"src": "3314:12:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 622,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:7"
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:7",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 597,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3177:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 596,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 595,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "3177:6:7"
													},
													"referencedDeclaration": 466,
													"src": "3177:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3191:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 598,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 624,
												"src": "3208:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 600,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:7"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:7"
									},
									"scope": 930,
									"src": "3146:225:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "4137:370:7",
										"statements": [
											{
												"id": 665,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:7",
												"statements": [
													{
														"assignments": [
															636
														],
														"declarations": [
															{
																"constant": false,
																"id": 636,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:7",
																"nodeType": "VariableDeclaration",
																"scope": 665,
																"src": "4171:24:7",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 635,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 645,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 641,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$930",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$930",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 640,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 639,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 643,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "4229:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 637,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "4198:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$466",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:7",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 443,
																"src": "4198:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:7"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 646,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 636,
																"src": "4255:16:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 647,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 632,
																"src": "4274:17:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 656,
														"nodeType": "IfStatement",
														"src": "4251:160:7",
														"trueBody": {
															"id": 655,
															"nodeType": "Block",
															"src": "4293:118:7",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 650,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 630,
																				"src": "4351:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 651,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 636,
																				"src": "4360:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 652,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 632,
																				"src": "4378:17:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 649,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 487,
																			"src": "4318:32:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 654,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:7"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 658,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "4437:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$466",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 659,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 630,
																	"src": "4444:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 662,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 660,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "4453:16:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 661,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "4472:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$466",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 657,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "4424:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 664,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:7"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 625,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:7",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4070:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 627,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 626,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "4070:6:7"
													},
													"referencedDeclaration": 466,
													"src": "4070:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4084:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 629,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:7",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "4101:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 631,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:7"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:7"
									},
									"scope": 930,
									"src": "4039:468:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 713,
										"nodeType": "Block",
										"src": "5161:303:7",
										"statements": [
											{
												"assignments": [
													679
												],
												"declarations": [
													{
														"constant": false,
														"id": 679,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:7",
														"nodeType": "VariableDeclaration",
														"scope": 713,
														"src": "5171:25:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 678,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 688,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 682,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5214:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$466",
																	"typeString": "contract IERC20"
																}
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:7",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 453,
															"src": "5214:13:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 684,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 673,
																	"src": "5230:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 685,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "5239:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 686,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:7",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 680,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:7",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 681,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:7",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 687,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:7"
											},
											{
												"condition": {
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:7",
													"subExpression": {
														"arguments": [
															{
																"id": 690,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 671,
																"src": "5286:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$466",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 691,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "5293:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$466",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 689,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 929,
															"src": "5262:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 712,
												"nodeType": "IfStatement",
												"src": "5257:201:7",
												"trueBody": {
													"id": 711,
													"nodeType": "Block",
													"src": "5308:150:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 695,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "5342:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 698,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "5364:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$466",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 699,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:7",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 453,
																				"src": "5364:13:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 700,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 673,
																						"src": "5380:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 701,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 702,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 696,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:7",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 694,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "5322:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 704,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 705,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:7"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 707,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 671,
																		"src": "5427:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 708,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "5434:12:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 706,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "5407:19:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 710,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:7",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 714,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5106:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 670,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 669,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "5106:6:7"
													},
													"referencedDeclaration": 466,
													"src": "5106:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5120:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 672,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 714,
												"src": "5137:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 674,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:7"
									},
									"returnParameters": {
										"id": 677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:7"
									},
									"scope": 930,
									"src": "5084:380:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "5911:219:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 727,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 720,
																"src": "5925:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 730,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 745,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 741,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 720,
																	"src": "6034:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 742,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "6038:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 743,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6045:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 739,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 718,
																	"src": "6012:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$315",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:7",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 266,
																"src": "6012:21:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 754,
													"nodeType": "IfStatement",
													"src": "6007:117:7",
													"trueBody": {
														"id": 753,
														"nodeType": "Block",
														"src": "6052:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 749,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 718,
																					"src": "6106:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 747,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 746,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6073:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 751,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 752,
																"nodeType": "RevertStatement",
																"src": "6066:47:7"
															}
														]
													}
												},
												"id": 755,
												"nodeType": "IfStatement",
												"src": "5921:203:7",
												"trueBody": {
													"id": 738,
													"nodeType": "Block",
													"src": "5946:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 733,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 718,
																		"src": "5973:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 734,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 720,
																		"src": "5980:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 735,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "5984:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 732,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "5960:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 736,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 737,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 715,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:7",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5840:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$315",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 717,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 716,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5840:8:7"
													},
													"referencedDeclaration": 315,
													"src": "5840:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$315",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5856:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 721,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "5883:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 723,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:7"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:7"
									},
									"scope": 930,
									"src": "5808:322:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 803,
										"nodeType": "Block",
										"src": "6649:239:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 772,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 765,
																"src": "6663:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 775,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 792,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 787,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 763,
																	"src": "6786:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 788,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 765,
																	"src": "6792:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 789,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 767,
																	"src": "6796:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 790,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 769,
																	"src": "6803:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 785,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 761,
																	"src": "6760:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$315",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:7",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "6760:25:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 801,
													"nodeType": "IfStatement",
													"src": "6755:127:7",
													"trueBody": {
														"id": 800,
														"nodeType": "Block",
														"src": "6810:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 796,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 761,
																					"src": "6864:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 795,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 794,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 793,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "6831:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 798,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 799,
																"nodeType": "RevertStatement",
																"src": "6824:47:7"
															}
														]
													}
												},
												"id": 802,
												"nodeType": "IfStatement",
												"src": "6659:223:7",
												"trueBody": {
													"id": 784,
													"nodeType": "Block",
													"src": "6684:65:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 778,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 761,
																		"src": "6715:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 779,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 763,
																		"src": "6722:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 780,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 765,
																		"src": "6728:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 781,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 767,
																		"src": "6732:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 777,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 538,
																	"src": "6698:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 783,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:7",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 804,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6527:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$315",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 760,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 759,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "6527:8:7"
													},
													"referencedDeclaration": 315,
													"src": "6527:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$315",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6551:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6573:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6593:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 804,
												"src": "6616:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:7"
									},
									"returnParameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:7"
									},
									"scope": 930,
									"src": "6482:406:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 846,
										"nodeType": "Block",
										"src": "7655:218:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 821,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 817,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 810,
																"src": "7669:2:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:7",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 820,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:7",
														"subExpression": {
															"arguments": [
																{
																	"id": 831,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 810,
																	"src": "7777:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 832,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 812,
																	"src": "7781:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 833,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 814,
																	"src": "7788:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 829,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 808,
																	"src": "7756:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$315",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 830,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:7",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "7756:20:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 834,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 844,
													"nodeType": "IfStatement",
													"src": "7751:116:7",
													"trueBody": {
														"id": 843,
														"nodeType": "Block",
														"src": "7795:72:7",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 839,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 808,
																					"src": "7849:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 838,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 837,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:7",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 840,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 836,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 478,
																		"src": "7816:24:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 842,
																"nodeType": "RevertStatement",
																"src": "7809:47:7"
															}
														]
													}
												},
												"id": 845,
												"nodeType": "IfStatement",
												"src": "7665:202:7",
												"trueBody": {
													"id": 828,
													"nodeType": "Block",
													"src": "7690:55:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 823,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 808,
																		"src": "7717:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 824,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 810,
																		"src": "7724:2:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 825,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 812,
																		"src": "7728:5:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 822,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 714,
																	"src": "7704:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 827,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 805,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:7",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 847,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "7584:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$315",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 807,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 806,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7584:8:7"
													},
													"referencedDeclaration": 315,
													"src": "7584:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$315",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 810,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "7600:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 809,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "7612:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "7627:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:7"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:7"
									},
									"scope": 930,
									"src": "7553:320:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "8440:650:7",
										"statements": [
											{
												"assignments": [
													857
												],
												"declarations": [
													{
														"constant": false,
														"id": 857,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "8450:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 856,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 858,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:7"
											},
											{
												"assignments": [
													860
												],
												"declarations": [
													{
														"constant": false,
														"id": 860,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 887,
														"src": "8478:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 859,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 861,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:7"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:7",
													"nodeType": "YulBlock",
													"src": "8532:396:7",
													"statements": [
														{
															"nativeSrc": "8546:75:7",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:7"
																		},
																		"nativeSrc": "8566:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:7",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:7"
																		},
																		"nativeSrc": "8583:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:7"
																		},
																		"nativeSrc": "8600:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:7",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:7"
																},
																"nativeSrc": "8561:60:7",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:7"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:7",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:7",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:7",
																"nodeType": "YulBlock",
																"src": "8682:157:7",
																"statements": [
																	{
																		"nativeSrc": "8700:22:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:7",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:7",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:7",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:7"
																			},
																			"nativeSrc": "8711:11:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:7"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:7",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:7"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:7",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:7",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:7"
																					},
																					"nativeSrc": "8762:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:7"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:7",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:7"
																			},
																			"nativeSrc": "8739:40:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:7"
																		},
																		"nativeSrc": "8739:40:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:7"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:7",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:7"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:7",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:7"
																					},
																					"nativeSrc": "8808:16:7",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:7"
																			},
																			"nativeSrc": "8796:29:7",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:7"
																		},
																		"nativeSrc": "8796:29:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:7"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:7",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:7"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:7",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:7"
																},
																"nativeSrc": "8666:15:7",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:7"
															},
															"nativeSrc": "8663:176:7",
															"nodeType": "YulIf",
															"src": "8663:176:7"
														},
														{
															"nativeSrc": "8852:30:7",
															"nodeType": "YulAssignment",
															"src": "8852:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:7"
																},
																"nativeSrc": "8866:16:7",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:7"
																}
															]
														},
														{
															"nativeSrc": "8895:23:7",
															"nodeType": "YulAssignment",
															"src": "8895:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:7",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:7"
																},
																"nativeSrc": "8910:8:7",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 853,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:7",
														"valueSize": 1
													},
													{
														"declaration": 853,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:7",
														"valueSize": 1
													},
													{
														"declaration": 857,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:7",
														"valueSize": 1
													},
													{
														"declaration": 860,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:7",
														"valueSize": 1
													},
													{
														"declaration": 851,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 862,
												"nodeType": "InlineAssembly",
												"src": "8507:421:7"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 865,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 863,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 857,
															"src": "8942:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 864,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 876,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 874,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 860,
															"src": "8994:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 875,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:7",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 873,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 868,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 851,
																			"src": "8968:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$466",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$466",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 866,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 869,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 870,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:7",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:7",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 886,
												"nodeType": "IfStatement",
												"src": "8938:146:7",
												"trueBody": {
													"id": 885,
													"nodeType": "Block",
													"src": "9012:72:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 881,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 851,
																				"src": "9066:5:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$466",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$466",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 880,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 879,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 882,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 878,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 478,
																	"src": "9033:24:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 884,
															"nodeType": "RevertStatement",
															"src": "9026:47:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8399:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 850,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 849,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "8399:6:7"
													},
													"referencedDeclaration": 466,
													"src": "8399:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "8413:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 852,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:7"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:7"
									},
									"scope": 930,
									"src": "8370:720:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "9681:391:7",
										"statements": [
											{
												"assignments": [
													900
												],
												"declarations": [
													{
														"constant": false,
														"id": 900,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "9691:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 899,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 901,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:7"
											},
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "9713:18:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 902,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:7"
											},
											{
												"assignments": [
													906
												],
												"declarations": [
													{
														"constant": false,
														"id": 906,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:7",
														"nodeType": "VariableDeclaration",
														"scope": 928,
														"src": "9741:19:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 905,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 907,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:7"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:7",
													"nodeType": "YulBlock",
													"src": "9795:174:7",
													"statements": [
														{
															"nativeSrc": "9809:71:7",
															"nodeType": "YulAssignment",
															"src": "9809:71:7",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:7"
																		},
																		"nativeSrc": "9825:5:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:7"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:7",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:7"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:7",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:7",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:7",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:7"
																		},
																		"nativeSrc": "9842:15:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:7",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:7"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:7",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:7"
																		},
																		"nativeSrc": "9859:11:7",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:7"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:7",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:7",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:7",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:7",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:7"
																},
																"nativeSrc": "9820:60:7",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:7"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:7",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:7"
																}
															]
														},
														{
															"nativeSrc": "9893:30:7",
															"nodeType": "YulAssignment",
															"src": "9893:30:7",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:7",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:7"
																},
																"nativeSrc": "9907:16:7",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:7"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:7",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:7"
																}
															]
														},
														{
															"nativeSrc": "9936:23:7",
															"nodeType": "YulAssignment",
															"src": "9936:23:7",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:7",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:7",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:7",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:7"
																},
																"nativeSrc": "9951:8:7",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:7"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:7",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:7"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 894,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:7",
														"valueSize": 1
													},
													{
														"declaration": 894,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:7",
														"valueSize": 1
													},
													{
														"declaration": 903,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:7",
														"valueSize": 1
													},
													{
														"declaration": 906,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:7",
														"valueSize": 1
													},
													{
														"declaration": 900,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:7",
														"valueSize": 1
													},
													{
														"declaration": 892,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:7",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 908,
												"nodeType": "InlineAssembly",
												"src": "9770:199:7"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 909,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 900,
														"src": "9985:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 910,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 903,
																		"src": "9997:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 911,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 921,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 906,
																		"src": "10048:11:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 924,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:7",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 915,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 892,
																						"src": "10023:5:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$466",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$466",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 914,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 913,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:7",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:7",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 925,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 898,
												"id": 927,
												"nodeType": "Return",
												"src": "9978:87:7"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "9625:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$466",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 891,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 890,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:7"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 466,
														"src": "9625:6:7"
													},
													"referencedDeclaration": 466,
													"src": "9625:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 894,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "9639:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 893,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:7"
									},
									"returnParameters": {
										"id": 898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "9675:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 896,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:7"
									},
									"scope": 930,
									"src": "9592:480:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 931,
							"src": "698:9376:7",
							"usedErrors": [
								478,
								487
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							960
						]
					},
					"id": 961,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 932,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 933,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 960,
							"linearizedBaseContracts": [
								960
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 941,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 938,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 937,
												"id": 940,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 942,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 942,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 935,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 960,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 947,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 946,
												"id": 949,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 960,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 958,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 956,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 955,
												"id": 957,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 952,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 959,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 960,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 961,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							972
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 962,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 963,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:9",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 972,
							"linearizedBaseContracts": [
								972
							],
							"name": "IERC165",
							"nameLocation": "432:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 964,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 971,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 966,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "818:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 965,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:9"
									},
									"returnParameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "861:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:9"
									},
									"scope": 972,
									"src": "791:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 973,
							"src": "422:447:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:9"
				},
				"id": 9
			},
			"Presale.sol": {
				"ast": {
					"absolutePath": "Presale.sol",
					"exportedSymbols": {
						"CarbonFiPresale": [
							1521
						],
						"IERC1363": [
							315
						],
						"IERC20": [
							466
						],
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						],
						"ReentrancyGuard": [
							388
						],
						"SafeERC20": [
							930
						]
					},
					"id": 1522,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 975,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1522,
							"sourceUnit": 467,
							"src": "58:56:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 976,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1522,
							"sourceUnit": 931,
							"src": "115:65:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"file": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"id": 977,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1522,
							"sourceUnit": 234,
							"src": "181:57:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 978,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1522,
							"sourceUnit": 389,
							"src": "239:62:10",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 979,
										"name": "Ownable2Step",
										"nameLocations": [
											"331:12:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "331:12:10"
									},
									"id": 980,
									"nodeType": "InheritanceSpecifier",
									"src": "331:12:10"
								},
								{
									"baseName": {
										"id": 981,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"345:15:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "345:15:10"
									},
									"id": 982,
									"nodeType": "InheritanceSpecifier",
									"src": "345:15:10"
								}
							],
							"canonicalName": "CarbonFiPresale",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1521,
							"linearizedBaseContracts": [
								1521,
								388,
								233,
								147,
								960
							],
							"name": "CarbonFiPresale",
							"nameLocation": "312:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 986,
									"libraryName": {
										"id": 983,
										"name": "SafeERC20",
										"nameLocations": [
											"373:9:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 930,
										"src": "373:9:10"
									},
									"nodeType": "UsingForDirective",
									"src": "367:27:10",
									"typeName": {
										"id": 985,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 984,
											"name": "IERC20",
											"nameLocations": [
												"387:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 466,
											"src": "387:6:10"
										},
										"referencedDeclaration": 466,
										"src": "387:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$466",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "2f48ab7d",
									"id": 989,
									"mutability": "immutable",
									"name": "usdt",
									"nameLocation": "462:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "438:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$466",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 988,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 987,
											"name": "IERC20",
											"nameLocations": [
												"438:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 466,
											"src": "438:6:10"
										},
										"referencedDeclaration": 466,
										"src": "438:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$466",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f9c729d",
									"id": 992,
									"mutability": "immutable",
									"name": "cafi",
									"nameLocation": "516:4:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "492:28:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$466",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 991,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 990,
											"name": "IERC20",
											"nameLocations": [
												"492:6:10"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 466,
											"src": "492:6:10"
										},
										"referencedDeclaration": 466,
										"src": "492:6:10",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$466",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "61d027b3",
									"id": 994,
									"mutability": "immutable",
									"name": "treasury",
									"nameLocation": "565:8:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "540:33:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 993,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "540:7:10",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "96713abf",
									"id": 999,
									"mutability": "constant",
									"name": "TOTAL_PRESALE_SUPPLY",
									"nameLocation": "604:20:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "580:64:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 995,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "580:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										},
										"id": 998,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31305f3030305f303030",
											"id": 996,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "627:10:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_10000000_by_1",
												"typeString": "int_const 10000000"
											},
											"value": "10_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 997,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "640:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "627:17:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000000000000000000000000_by_1",
											"typeString": "int_const 10000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "db81b278",
									"id": 1004,
									"mutability": "constant",
									"name": "MAX_BUY_PER_WALLET",
									"nameLocation": "697:18:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "673:61:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1000,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "673:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1003,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1001,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "718:9:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"hexValue": "31653138",
											"id": 1002,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "730:4:10",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"value": "1e18"
										},
										"src": "718:16:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "945e4013",
									"id": 1007,
									"mutability": "constant",
									"name": "PRESALE_DURATION",
									"nameLocation": "764:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "740:50:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1005,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "740:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3930",
										"id": 1006,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "783:7:10",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_7776000_by_1",
											"typeString": "int_const 7776000"
										},
										"value": "90"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CarbonFiPresale.Stage",
									"id": 1016,
									"members": [
										{
											"constant": false,
											"id": 1009,
											"mutability": "mutable",
											"name": "totalAmount",
											"nameLocation": "866:11:10",
											"nodeType": "VariableDeclaration",
											"scope": 1016,
											"src": "858:19:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1008,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "858:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1011,
											"mutability": "mutable",
											"name": "soldAmount",
											"nameLocation": "895:10:10",
											"nodeType": "VariableDeclaration",
											"scope": 1016,
											"src": "887:18:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1010,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "887:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1013,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "923:5:10",
											"nodeType": "VariableDeclaration",
											"scope": 1016,
											"src": "915:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "915:7:10",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1015,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "976:8:10",
											"nodeType": "VariableDeclaration",
											"scope": 1016,
											"src": "971:13:10",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1014,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "971:4:10",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stage",
									"nameLocation": "842:5:10",
									"nodeType": "StructDefinition",
									"scope": 1521,
									"src": "835:156:10",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "845ddcb2",
									"id": 1020,
									"mutability": "mutable",
									"name": "stages",
									"nameLocation": "1012:6:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "997:21:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
										"typeString": "struct CarbonFiPresale.Stage[]"
									},
									"typeName": {
										"baseType": {
											"id": 1018,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1017,
												"name": "Stage",
												"nameLocations": [
													"997:5:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1016,
												"src": "997:5:10"
											},
											"referencedDeclaration": 1016,
											"src": "997:5:10",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
												"typeString": "struct CarbonFiPresale.Stage"
											}
										},
										"id": 1019,
										"nodeType": "ArrayTypeName",
										"src": "997:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr",
											"typeString": "struct CarbonFiPresale.Stage[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5bf5d54c",
									"id": 1022,
									"mutability": "mutable",
									"name": "currentStage",
									"nameLocation": "1039:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "1024:27:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1021,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1024:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a82524b2",
									"id": 1024,
									"mutability": "mutable",
									"name": "presaleStartTime",
									"nameLocation": "1072:16:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "1057:31:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1023,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1057:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e580b2b0",
									"id": 1026,
									"mutability": "mutable",
									"name": "presaleEnded",
									"nameLocation": "1106:12:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "1094:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1025,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1094:4:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9106d7ba",
									"id": 1028,
									"mutability": "mutable",
									"name": "totalSold",
									"nameLocation": "1174:9:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "1159:24:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1027,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1159:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "39f65c09",
									"id": 1032,
									"mutability": "mutable",
									"name": "userPurchases",
									"nameLocation": "1224:13:10",
									"nodeType": "VariableDeclaration",
									"scope": 1521,
									"src": "1189:48:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1031,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1029,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1197:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1189:27:10",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1030,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1208:7:10",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "8fafebcaf9d154343dad25669bfa277f4fbacd7ac6b0c4fed522580e040a0f33",
									"id": 1040,
									"name": "TokensPurchased",
									"nameLocation": "1282:15:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"indexed": true,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1314:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1298:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1298:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1329:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1321:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1038,
												"indexed": false,
												"mutability": "mutable",
												"name": "usdtAmount",
												"nameLocation": "1345:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1040,
												"src": "1337:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1037,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1337:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:59:10"
									},
									"src": "1276:81:10"
								},
								{
									"anonymous": false,
									"eventSelector": "d87d457666088f7f0056032aa92e6fd462f4ec64661117a66049cd349a0cae14",
									"id": 1044,
									"name": "StageAdvanced",
									"nameLocation": "1368:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1043,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1042,
												"indexed": false,
												"mutability": "mutable",
												"name": "newStage",
												"nameLocation": "1390:8:10",
												"nodeType": "VariableDeclaration",
												"scope": 1044,
												"src": "1382:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1041,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1382:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1381:18:10"
									},
									"src": "1362:38:10"
								},
								{
									"anonymous": false,
									"eventSelector": "b4e6cb40663c1ac63bcd620dbe3d98c44526baa45e310f545f425ebaab36a293",
									"id": 1050,
									"name": "PresaleEnded",
									"nameLocation": "1411:12:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"indexed": false,
												"mutability": "mutable",
												"name": "totalSold",
												"nameLocation": "1432:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1424:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1045,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1424:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1048,
												"indexed": false,
												"mutability": "mutable",
												"name": "remainingBalance",
												"nameLocation": "1451:16:10",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "1443:24:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1047,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1443:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1423:45:10"
									},
									"src": "1405:64:10"
								},
								{
									"anonymous": false,
									"eventSelector": "896e034966eaaf1adc54acc0f257056febbd300c9e47182cf761982cf1f5e430",
									"id": 1056,
									"name": "TokensClaimed",
									"nameLocation": "1480:13:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1510:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1494:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1494:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1524:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1056,
												"src": "1516:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1516:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1493:38:10"
									},
									"src": "1474:58:10"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "1602:254:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1620:13:10",
															"subExpression": {
																"id": 1059,
																"name": "presaleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "1621:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520737564616820626572616b686972",
															"id": 1061,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1635:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c",
																"typeString": "literal_string \"Presale sudah berakhir\""
															},
															"value": "Presale sudah berakhir"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c",
																"typeString": "literal_string \"Presale sudah berakhir\""
															}
														],
														"id": 1058,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1612:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1062,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1612:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1063,
												"nodeType": "ExpressionStatement",
												"src": "1612:48:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1065,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1678:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1684:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1678:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1067,
																"name": "presaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "1697:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1678:35:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c652062656c756d2064696d756c6169",
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1715:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3",
																"typeString": "literal_string \"Presale belum dimulai\""
															},
															"value": "Presale belum dimulai"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c2482bc06f2611d9f14b34090ae85f6e05adcb6654acd76a6e085d8dd1b39be3",
																"typeString": "literal_string \"Presale belum dimulai\""
															}
														],
														"id": 1064,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1670:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1670:69:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1071,
												"nodeType": "ExpressionStatement",
												"src": "1670:69:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1073,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1757:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1763:9:10",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1757:15:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1075,
																	"name": "presaleStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "1776:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1076,
																	"name": "PRESALE_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "1795:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1776:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1757:54:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c6520737564616820626572616b686972",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1813:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c",
																"typeString": "literal_string \"Presale sudah berakhir\""
															},
															"value": "Presale sudah berakhir"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_93fa759067e68ca27322466126cb2894fc78b070ff505b7e363f64eaa281a83c",
																"typeString": "literal_string \"Presale sudah berakhir\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1749:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1749:89:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "1749:89:10"
											},
											{
												"id": 1082,
												"nodeType": "PlaceholderStatement",
												"src": "1848:1:10"
											}
										]
									},
									"id": 1084,
									"name": "onlyActivePresale",
									"nameLocation": "1582:17:10",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1599:2:10"
									},
									"src": "1573:283:10",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1183,
										"nodeType": "Block",
										"src": "2044:476:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1099,
																		"name": "_usdt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "2062:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1102,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2079:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2071:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1100,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2071:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1103,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2071:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2062:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 1110,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1105,
																		"name": "_cafi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1088,
																		"src": "2085:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1108,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2102:1:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2094:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1106,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2094:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1109,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2094:10:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "2085:19:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "2062:42:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1112,
																	"name": "_treasury",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1090,
																	"src": "2108:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2129:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2121:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1113,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2121:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2121:10:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "2108:23:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2062:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c616d617420746964616b2076616c6964",
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2133:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f",
																"typeString": "literal_string \"Alamat tidak valid\""
															},
															"value": "Alamat tidak valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c08c11703e25502196f9a4daa0e0e641b14d466816760f2a2cecd012b8c9767f",
																"typeString": "literal_string \"Alamat tidak valid\""
															}
														],
														"id": 1098,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2054:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2054:100:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2054:100:10"
											},
											{
												"expression": {
													"id": 1126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1122,
														"name": "usdt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "2173:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$466",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1124,
																"name": "_usdt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1086,
																"src": "2187:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1123,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2180:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$466_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1125,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2180:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$466",
															"typeString": "contract IERC20"
														}
													},
													"src": "2173:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"id": 1127,
												"nodeType": "ExpressionStatement",
												"src": "2173:20:10"
											},
											{
												"expression": {
													"id": 1132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1128,
														"name": "cafi",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 992,
														"src": "2203:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$466",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1130,
																"name": "_cafi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1088,
																"src": "2217:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1129,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "2210:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$466_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2210:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$466",
															"typeString": "contract IERC20"
														}
													},
													"src": "2203:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$466",
														"typeString": "contract IERC20"
													}
												},
												"id": 1133,
												"nodeType": "ExpressionStatement",
												"src": "2203:20:10"
											},
											{
												"expression": {
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1134,
														"name": "treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 994,
														"src": "2233:8:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1135,
														"name": "_treasury",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2244:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2233:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1137,
												"nodeType": "ExpressionStatement",
												"src": "2233:20:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_4000000000000000000000000_by_1",
																		"typeString": "int_const 4000000000000000000000000"
																	},
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "345f3030305f303030",
																		"id": 1142,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2306:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_4000000_by_1",
																			"typeString": "int_const 4000000"
																		},
																		"value": "4_000_000"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2318:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2306:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4000000000000000000000000_by_1",
																		"typeString": "int_const 4000000000000000000000000"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2324:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_50000000000000000_by_1",
																		"typeString": "int_const 50000000000000000"
																	},
																	"id": 1148,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "302e3035",
																		"id": 1146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2327:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_20",
																			"typeString": "rational_const 1 / 20"
																		},
																		"value": "0.05"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2334:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2327:11:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_50000000000000000_by_1",
																		"typeString": "int_const 50000000000000000"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2340:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_4000000000000000000000000_by_1",
																		"typeString": "int_const 4000000000000000000000000"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_50000000000000000_by_1",
																		"typeString": "int_const 50000000000000000"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1141,
																"name": "Stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2300:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stage_$1016_storage_ptr_$",
																	"typeString": "type(struct CarbonFiPresale.Stage storage pointer)"
																}
															},
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2300:46:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																"typeString": "struct CarbonFiPresale.Stage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																"typeString": "struct CarbonFiPresale.Stage memory"
															}
														],
														"expression": {
															"id": 1138,
															"name": "stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2288:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
															}
														},
														"id": 1140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2295:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2288:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr_$_t_struct$_Stage_$1016_storage_$returns$__$attached_to$_t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CarbonFiPresale.Stage storage ref[] storage pointer,struct CarbonFiPresale.Stage storage ref)"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2288:59:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "2288:59:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
																		"typeString": "int_const 3000000000000000000000000"
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "335f3030305f303030",
																		"id": 1157,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2384:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3000000_by_1",
																			"typeString": "int_const 3000000"
																		},
																		"value": "3_000_000"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1158,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2396:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2384:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
																		"typeString": "int_const 3000000000000000000000000"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2402:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_75000000000000000_by_1",
																		"typeString": "int_const 75000000000000000"
																	},
																	"id": 1163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "302e303735",
																		"id": 1161,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2405:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3_by_40",
																			"typeString": "rational_const 3 / 40"
																		},
																		"value": "0.075"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2413:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2405:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_75000000000000000_by_1",
																		"typeString": "int_const 75000000000000000"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1164,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2419:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
																		"typeString": "int_const 3000000000000000000000000"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_75000000000000000_by_1",
																		"typeString": "int_const 75000000000000000"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1156,
																"name": "Stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2378:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stage_$1016_storage_ptr_$",
																	"typeString": "type(struct CarbonFiPresale.Stage storage pointer)"
																}
															},
															"id": 1165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2378:47:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																"typeString": "struct CarbonFiPresale.Stage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																"typeString": "struct CarbonFiPresale.Stage memory"
															}
														],
														"expression": {
															"id": 1153,
															"name": "stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2366:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
															}
														},
														"id": 1155,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2373:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2366:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr_$_t_struct$_Stage_$1016_storage_$returns$__$attached_to$_t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CarbonFiPresale.Stage storage ref[] storage pointer,struct CarbonFiPresale.Stage storage ref)"
														}
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2366:60:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1167,
												"nodeType": "ExpressionStatement",
												"src": "2366:60:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
																		"typeString": "int_const 3000000000000000000000000"
																	},
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "335f3030305f303030",
																		"id": 1172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2464:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_3000000_by_1",
																			"typeString": "int_const 3000000"
																		},
																		"value": "3_000_000"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2476:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2464:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
																		"typeString": "int_const 3000000000000000000000000"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1175,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2482:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_rational_100000000000000000_by_1",
																		"typeString": "int_const 100000000000000000"
																	},
																	"id": 1178,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"leftExpression": {
																		"hexValue": "302e31",
																		"id": 1176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2485:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_10",
																			"typeString": "rational_const 1 / 10"
																		},
																		"value": "0.1"
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"hexValue": "31653138",
																		"id": 1177,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2491:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000000000000000000_by_1",
																			"typeString": "int_const 1000000000000000000"
																		},
																		"value": "1e18"
																	},
																	"src": "2485:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_100000000000000000_by_1",
																		"typeString": "int_const 100000000000000000"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2497:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_3000000000000000000000000_by_1",
																		"typeString": "int_const 3000000000000000000000000"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	{
																		"typeIdentifier": "t_rational_100000000000000000_by_1",
																		"typeString": "int_const 100000000000000000"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1171,
																"name": "Stage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1016,
																"src": "2458:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Stage_$1016_storage_ptr_$",
																	"typeString": "type(struct CarbonFiPresale.Stage storage pointer)"
																}
															},
															"id": 1180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2458:45:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																"typeString": "struct CarbonFiPresale.Stage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																"typeString": "struct CarbonFiPresale.Stage memory"
															}
														],
														"expression": {
															"id": 1168,
															"name": "stages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "2446:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
															}
														},
														"id": 1170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2453:4:10",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2446:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr_$_t_struct$_Stage_$1016_storage_$returns$__$attached_to$_t_array$_t_struct$_Stage_$1016_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CarbonFiPresale.Stage storage ref[] storage pointer,struct CarbonFiPresale.Stage storage ref)"
														}
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2446:58:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "2446:58:10"
											}
										]
									},
									"id": 1184,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1095,
													"name": "_initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "2029:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1096,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1094,
												"name": "Ownable",
												"nameLocations": [
													"2021:7:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2021:7:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2021:22:10"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "_usdt",
												"nameLocation": "1928:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1920:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "_cafi",
												"nameLocation": "1951:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1943:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1087,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1943:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1090,
												"mutability": "mutable",
												"name": "_treasury",
												"nameLocation": "1974:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1966:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1089,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1966:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "_initialOwner",
												"nameLocation": "2001:13:10",
												"nodeType": "VariableDeclaration",
												"scope": 1184,
												"src": "1993:21:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1091,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1993:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1910:110:10"
									},
									"returnParameters": {
										"id": 1097,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2044:0:10"
									},
									"scope": 1521,
									"src": "1899:621:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1208,
										"nodeType": "Block",
										"src": "2609:151:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1190,
																"name": "presaleStartTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1024,
																"src": "2627:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2627:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c652073756461682064696d756c6169",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2650:23:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6",
																"typeString": "literal_string \"Presale sudah dimulai\""
															},
															"value": "Presale sudah dimulai"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e76e4eab4227e8e9a19f4870f3a4d2824ccdad55d7e200d50a699d9491f433e6",
																"typeString": "literal_string \"Presale sudah dimulai\""
															}
														],
														"id": 1189,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2619:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1194,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2619:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1195,
												"nodeType": "ExpressionStatement",
												"src": "2619:55:10"
											},
											{
												"expression": {
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1196,
														"name": "presaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "2684:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1197,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2703:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2709:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2703:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2684:34:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1200,
												"nodeType": "ExpressionStatement",
												"src": "2684:34:10"
											},
											{
												"expression": {
													"id": 1206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1201,
																"name": "stages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "2728:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																	"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
																}
															},
															"id": 1203,
															"indexExpression": {
																"hexValue": "30",
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2735:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2728:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage",
																"typeString": "struct CarbonFiPresale.Stage storage ref"
															}
														},
														"id": 1204,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2738:8:10",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1015,
														"src": "2728:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1205,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2749:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2728:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1207,
												"nodeType": "ExpressionStatement",
												"src": "2728:25:10"
											}
										]
									},
									"functionSelector": "04c98b2b",
									"id": 1209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1187,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1186,
												"name": "onlyOwner",
												"nameLocations": [
													"2599:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2599:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2599:9:10"
										}
									],
									"name": "startPresale",
									"nameLocation": "2575:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2587:2:10"
									},
									"returnParameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2609:0:10"
									},
									"scope": 1521,
									"src": "2566:194:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1313,
										"nodeType": "Block",
										"src": "2841:912:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1219,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1211,
																"src": "2859:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1220,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2868:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2859:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4a756d6c616820746964616b2076616c6964",
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2871:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065",
																"typeString": "literal_string \"Jumlah tidak valid\""
															},
															"value": "Jumlah tidak valid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8a636db4e4875c896c46ec5c02c9e052bb67a4e6b309d3a0953efa7b253e9065",
																"typeString": "literal_string \"Jumlah tidak valid\""
															}
														],
														"id": 1218,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2851:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2851:41:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1224,
												"nodeType": "ExpressionStatement",
												"src": "2851:41:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1231,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1226,
																		"name": "userPurchases",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1032,
																		"src": "2923:13:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1229,
																	"indexExpression": {
																		"expression": {
																			"id": 1227,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2937:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2941:6:10",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2937:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2923:25:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1230,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "2951:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2923:34:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1232,
																"name": "MAX_BUY_PER_WALLET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1004,
																"src": "2961:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2923:56:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d656c65626968692062617461732070656d62656c69616e",
															"id": 1234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2993:26:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330",
																"typeString": "literal_string \"Melebihi batas pembelian\""
															},
															"value": "Melebihi batas pembelian"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24eab8c7c6d1dc8701a43ed25c7b4b23db384c5825cb9c2448b3c6c6b8022330",
																"typeString": "literal_string \"Melebihi batas pembelian\""
															}
														],
														"id": 1225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2902:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2902:127:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1236,
												"nodeType": "ExpressionStatement",
												"src": "2902:127:10"
											},
											{
												"assignments": [
													1239
												],
												"declarations": [
													{
														"constant": false,
														"id": 1239,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "3054:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "3040:21:10",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
															"typeString": "struct CarbonFiPresale.Stage"
														},
														"typeName": {
															"id": 1238,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1237,
																"name": "Stage",
																"nameLocations": [
																	"3040:5:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1016,
																"src": "3040:5:10"
															},
															"referencedDeclaration": 1016,
															"src": "3040:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																"typeString": "struct CarbonFiPresale.Stage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"baseExpression": {
														"id": 1240,
														"name": "stages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "3064:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
															"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
														}
													},
													"id": 1242,
													"indexExpression": {
														"id": 1241,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "3071:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3064:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stage_$1016_storage",
														"typeString": "struct CarbonFiPresale.Stage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3040:44:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1245,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3102:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																	"typeString": "struct CarbonFiPresale.Stage storage pointer"
																}
															},
															"id": 1246,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3110:8:10",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1015,
															"src": "3102:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537461676520746964616b20616b746966",
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3120:19:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e",
																"typeString": "literal_string \"Stage tidak aktif\""
															},
															"value": "Stage tidak aktif"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fd3cc96fb4c51785ec8271b939922e853c48f1fa2ccedc4351762141d81045e",
																"typeString": "literal_string \"Stage tidak aktif\""
															}
														],
														"id": 1244,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3094:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:46:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1249,
												"nodeType": "ExpressionStatement",
												"src": "3094:46:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1251,
																		"name": "current",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1239,
																		"src": "3158:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																			"typeString": "struct CarbonFiPresale.Stage storage pointer"
																		}
																	},
																	"id": 1252,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3166:10:10",
																	"memberName": "soldAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1011,
																	"src": "3158:18:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1253,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1211,
																	"src": "3179:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3158:27:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"expression": {
																	"id": 1255,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1239,
																	"src": "3189:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																		"typeString": "struct CarbonFiPresale.Stage storage pointer"
																	}
																},
																"id": 1256,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3197:11:10",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1009,
																"src": "3189:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3158:50:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d656c6562696869206b756f7461207374616765",
															"id": 1258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3210:22:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e",
																"typeString": "literal_string \"Melebihi kuota stage\""
															},
															"value": "Melebihi kuota stage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3cd696e37386ae8e02a74cfb2704469472074af5ec83b291b10e0c248677e14e",
																"typeString": "literal_string \"Melebihi kuota stage\""
															}
														],
														"id": 1250,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3150:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3150:83:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1260,
												"nodeType": "ExpressionStatement",
												"src": "3150:83:10"
											},
											{
												"assignments": [
													1262
												],
												"declarations": [
													{
														"constant": false,
														"id": 1262,
														"mutability": "mutable",
														"name": "usdtAmount",
														"nameLocation": "3252:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1313,
														"src": "3244:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1261,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3244:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1269,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1263,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3265:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"expression": {
																"id": 1264,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1239,
																"src": "3274:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																	"typeString": "struct CarbonFiPresale.Stage storage pointer"
																}
															},
															"id": 1265,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3282:5:10",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1013,
															"src": "3274:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3265:22:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31653138",
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3290:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1e18"
													},
													"src": "3265:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3244:50:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1273,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3373:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1274,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3377:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3373:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1275,
															"name": "treasury",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 994,
															"src": "3385:8:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1276,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3395:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1270,
															"name": "usdt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "3351:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														"id": 1272,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3356:16:10",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 538,
														"src": "3351:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$466_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3351:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "3351:55:10"
											},
											{
												"expression": {
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1279,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3443:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																"typeString": "struct CarbonFiPresale.Stage storage pointer"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3451:10:10",
														"memberName": "soldAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1011,
														"src": "3443:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1282,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3465:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3443:28:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1284,
												"nodeType": "ExpressionStatement",
												"src": "3443:28:10"
											},
											{
												"expression": {
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1285,
														"name": "totalSold",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1028,
														"src": "3481:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1286,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3494:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3481:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1288,
												"nodeType": "ExpressionStatement",
												"src": "3481:19:10"
											},
											{
												"expression": {
													"id": 1294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1289,
															"name": "userPurchases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "3510:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1292,
														"indexExpression": {
															"expression": {
																"id": 1290,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3524:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3528:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3524:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3510:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1293,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "3539:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3510:35:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1295,
												"nodeType": "ExpressionStatement",
												"src": "3510:35:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1296,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3601:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																"typeString": "struct CarbonFiPresale.Stage storage pointer"
															}
														},
														"id": 1297,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3609:10:10",
														"memberName": "soldAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1011,
														"src": "3601:18:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"expression": {
															"id": 1298,
															"name": "current",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1239,
															"src": "3623:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																"typeString": "struct CarbonFiPresale.Stage storage pointer"
															}
														},
														"id": 1299,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3631:11:10",
														"memberName": "totalAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1009,
														"src": "3623:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3601:41:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1305,
												"nodeType": "IfStatement",
												"src": "3597:87:10",
												"trueBody": {
													"id": 1304,
													"nodeType": "Block",
													"src": "3644:40:10",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1301,
																	"name": "_advanceStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "3658:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3658:15:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1303,
															"nodeType": "ExpressionStatement",
															"src": "3658:15:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1307,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3715:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3719:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3715:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1309,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "3727:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1310,
															"name": "usdtAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1262,
															"src": "3735:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1306,
														"name": "TokensPurchased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1040,
														"src": "3699:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3699:47:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1312,
												"nodeType": "EmitStatement",
												"src": "3694:52:10"
											}
										]
									},
									"functionSelector": "3610724e",
									"id": 1314,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1214,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1213,
												"name": "nonReentrant",
												"nameLocations": [
													"2810:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 353,
												"src": "2810:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2810:12:10"
										},
										{
											"id": 1216,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1215,
												"name": "onlyActivePresale",
												"nameLocations": [
													"2823:17:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1084,
												"src": "2823:17:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "2823:17:10"
										}
									],
									"name": "buyTokens",
									"nameLocation": "2775:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2793:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "2785:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2785:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2784:16:10"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2841:0:10"
									},
									"scope": 1521,
									"src": "2766:987:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1366,
										"nodeType": "Block",
										"src": "3804:375:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1320,
																"name": "presaleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "3822:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1321,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3838:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1322,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3844:9:10",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3838:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1323,
																		"name": "presaleStartTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1024,
																		"src": "3856:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 1324,
																		"name": "PRESALE_DURATION",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1007,
																		"src": "3875:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3856:35:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3838:53:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3822:69:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "42656c756d206269736120636c61696d",
															"id": 1328,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3893:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19",
																"typeString": "literal_string \"Belum bisa claim\""
															},
															"value": "Belum bisa claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8041374d274b9fc8d2f591853a0e9b344b8f8253fc0d9ad39e48a5f2c3a1ed19",
																"typeString": "literal_string \"Belum bisa claim\""
															}
														],
														"id": 1319,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3814:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3814:98:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "3814:98:10"
											},
											{
												"assignments": [
													1332
												],
												"declarations": [
													{
														"constant": false,
														"id": 1332,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "3939:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1366,
														"src": "3931:14:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1331,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3931:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1337,
												"initialValue": {
													"baseExpression": {
														"id": 1333,
														"name": "userPurchases",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1032,
														"src": "3948:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1336,
													"indexExpression": {
														"expression": {
															"id": 1334,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3962:3:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1335,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3966:6:10",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3962:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3948:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3931:42:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1332,
																"src": "3991:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4000:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3991:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546964616b2061646120746f6b656e20756e74756b2064692d636c61696d",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4003:32:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc",
																"typeString": "literal_string \"Tidak ada token untuk di-claim\""
															},
															"value": "Tidak ada token untuk di-claim"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3621827aec88c81295b4bbc9c355f27adca297bfe3ccf53b1f3ce0cd68dfdfc",
																"typeString": "literal_string \"Tidak ada token untuk di-claim\""
															}
														],
														"id": 1338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3983:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3983:53:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "3983:53:10"
											},
											{
												"expression": {
													"id": 1350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1345,
															"name": "userPurchases",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "4047:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1348,
														"indexExpression": {
															"expression": {
																"id": 1346,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4061:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4065:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4061:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4047:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1349,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4075:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4047:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1351,
												"nodeType": "ExpressionStatement",
												"src": "4047:29:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1355,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4104:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4108:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4104:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1357,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4116:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1352,
															"name": "cafi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "4086:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														"id": 1354,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4091:12:10",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 511,
														"src": "4086:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$466_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4086:37:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1359,
												"nodeType": "ExpressionStatement",
												"src": "4086:37:10"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1361,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4153:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4157:6:10",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4153:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1332,
															"src": "4165:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1360,
														"name": "TokensClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "4139:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4139:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "EmitStatement",
												"src": "4134:38:10"
											}
										]
									},
									"functionSelector": "48c54b9d",
									"id": 1367,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1317,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1316,
												"name": "nonReentrant",
												"nameLocations": [
													"3791:12:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 353,
												"src": "3791:12:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "3791:12:10"
										}
									],
									"name": "claimTokens",
									"nameLocation": "3768:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3779:2:10"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3804:0:10"
									},
									"scope": 1521,
									"src": "3759:420:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "4267:311:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4285:13:10",
															"subExpression": {
																"id": 1373,
																"name": "presaleEnded",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1026,
																"src": "4286:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50726573616c65207375646168206469616b68697269",
															"id": 1375,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4300:24:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02",
																"typeString": "literal_string \"Presale sudah diakhiri\""
															},
															"value": "Presale sudah diakhiri"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7cdaf8d878139f70d6523a6d0520d938fe2d8db4e720c8e38c6c7ce2236bfd02",
																"typeString": "literal_string \"Presale sudah diakhiri\""
															}
														],
														"id": 1372,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4277:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4277:48:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "4277:48:10"
											},
											{
												"expression": {
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1378,
														"name": "presaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "4344:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1379,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4359:4:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4344:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1381,
												"nodeType": "ExpressionStatement",
												"src": "4344:19:10"
											},
											{
												"assignments": [
													1383
												],
												"declarations": [
													{
														"constant": false,
														"id": 1383,
														"mutability": "mutable",
														"name": "remaining",
														"nameLocation": "4381:9:10",
														"nodeType": "VariableDeclaration",
														"scope": 1410,
														"src": "4373:17:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1382,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4373:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1391,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1388,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4416:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CarbonFiPresale_$1521",
																		"typeString": "contract CarbonFiPresale"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CarbonFiPresale_$1521",
																		"typeString": "contract CarbonFiPresale"
																	}
																],
																"id": 1387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4408:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1386,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4408:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4408:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1384,
															"name": "cafi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "4393:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$466",
																"typeString": "contract IERC20"
															}
														},
														"id": 1385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4398:9:10",
														"memberName": "balanceOf",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 423,
														"src": "4393:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view external returns (uint256)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4393:29:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4373:49:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1392,
														"name": "remaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1383,
														"src": "4445:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4457:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4445:13:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1404,
												"nodeType": "IfStatement",
												"src": "4441:81:10",
												"trueBody": {
													"id": 1403,
													"nodeType": "Block",
													"src": "4460:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1398,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "4492:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4492:7:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1400,
																		"name": "remaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1383,
																		"src": "4501:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1395,
																		"name": "cafi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 992,
																		"src": "4474:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$466",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1397,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4479:12:10",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 511,
																	"src": "4474:17:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$466_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$466_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4474:37:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1402,
															"nodeType": "ExpressionStatement",
															"src": "4474:37:10"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1406,
															"name": "totalSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "4550:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1407,
															"name": "remaining",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "4561:9:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1405,
														"name": "PresaleEnded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "4537:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4537:34:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1409,
												"nodeType": "EmitStatement",
												"src": "4532:39:10"
											}
										]
									},
									"functionSelector": "a43be57b",
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1370,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1369,
												"name": "onlyOwner",
												"nameLocations": [
													"4257:9:10"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4257:9:10"
											},
											"nodeType": "ModifierInvocation",
											"src": "4257:9:10"
										}
									],
									"name": "endPresale",
									"nameLocation": "4235:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4245:2:10"
									},
									"returnParameters": {
										"id": 1371,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4267:0:10"
									},
									"scope": 1521,
									"src": "4226:352:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "4662:368:10",
										"statements": [
											{
												"expression": {
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1414,
																"name": "stages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "4672:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																	"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
																}
															},
															"id": 1416,
															"indexExpression": {
																"id": 1415,
																"name": "currentStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "4679:12:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4672:20:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage",
																"typeString": "struct CarbonFiPresale.Stage storage ref"
															}
														},
														"id": 1417,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4693:8:10",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1015,
														"src": "4672:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1418,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4704:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4672:37:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "4672:37:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1421,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "4732:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1422,
																"name": "stages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "4747:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																	"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
																}
															},
															"id": 1423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4754:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4747:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"hexValue": "31",
															"id": 1424,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4763:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4747:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4732:32:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1457,
													"nodeType": "Block",
													"src": "4907:117:10",
													"statements": [
														{
															"expression": {
																"id": 1444,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1442,
																	"name": "presaleEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1026,
																	"src": "4921:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4936:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4921:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1445,
															"nodeType": "ExpressionStatement",
															"src": "4921:19:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1447,
																		"name": "totalSold",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1028,
																		"src": "4972:9:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 1452,
																						"name": "this",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967268,
																						"src": "5006:4:10",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_CarbonFiPresale_$1521",
																							"typeString": "contract CarbonFiPresale"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_CarbonFiPresale_$1521",
																							"typeString": "contract CarbonFiPresale"
																						}
																					],
																					"id": 1451,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "4998:7:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1450,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "4998:7:10",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1453,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4998:13:10",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 1448,
																				"name": "cafi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 992,
																				"src": "4983:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$466",
																					"typeString": "contract IERC20"
																				}
																			},
																			"id": 1449,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4988:9:10",
																			"memberName": "balanceOf",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 423,
																			"src": "4983:14:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																				"typeString": "function (address) view external returns (uint256)"
																			}
																		},
																		"id": 1454,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4983:29:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1446,
																	"name": "PresaleEnded",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1050,
																	"src": "4959:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256)"
																	}
																},
																"id": 1455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4959:54:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1456,
															"nodeType": "EmitStatement",
															"src": "4954:59:10"
														}
													]
												},
												"id": 1458,
												"nodeType": "IfStatement",
												"src": "4728:296:10",
												"trueBody": {
													"id": 1441,
													"nodeType": "Block",
													"src": "4766:135:10",
													"statements": [
														{
															"expression": {
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "4780:14:10",
																"subExpression": {
																	"id": 1427,
																	"name": "currentStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "4780:12:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "4780:14:10"
														},
														{
															"expression": {
																"id": 1435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 1430,
																			"name": "stages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "4808:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
																				"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
																			}
																		},
																		"id": 1432,
																		"indexExpression": {
																			"id": 1431,
																			"name": "currentStage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1022,
																			"src": "4815:12:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4808:20:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stage_$1016_storage",
																			"typeString": "struct CarbonFiPresale.Stage storage ref"
																		}
																	},
																	"id": 1433,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "4829:8:10",
																	"memberName": "isActive",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1015,
																	"src": "4808:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 1434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4840:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "4808:36:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1436,
															"nodeType": "ExpressionStatement",
															"src": "4808:36:10"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 1438,
																		"name": "currentStage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "4877:12:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1437,
																	"name": "StageAdvanced",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1044,
																	"src": "4863:13:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4863:27:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1440,
															"nodeType": "EmitStatement",
															"src": "4858:32:10"
														}
													]
												}
											}
										]
									},
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_advanceStage",
									"nameLocation": "4637:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4650:2:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4662:0:10"
									},
									"scope": 1521,
									"src": "4628:402:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1490,
										"nodeType": "Block",
										"src": "5231:226:10",
										"statements": [
											{
												"assignments": [
													1473
												],
												"declarations": [
													{
														"constant": false,
														"id": 1473,
														"mutability": "mutable",
														"name": "current",
														"nameLocation": "5254:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1490,
														"src": "5241:20:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
															"typeString": "struct CarbonFiPresale.Stage"
														},
														"typeName": {
															"id": 1472,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1471,
																"name": "Stage",
																"nameLocations": [
																	"5241:5:10"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1016,
																"src": "5241:5:10"
															},
															"referencedDeclaration": 1016,
															"src": "5241:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stage_$1016_storage_ptr",
																"typeString": "struct CarbonFiPresale.Stage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1477,
												"initialValue": {
													"baseExpression": {
														"id": 1474,
														"name": "stages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1020,
														"src": "5264:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Stage_$1016_storage_$dyn_storage",
															"typeString": "struct CarbonFiPresale.Stage storage ref[] storage ref"
														}
													},
													"id": 1476,
													"indexExpression": {
														"id": 1475,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1022,
														"src": "5271:12:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5264:20:10",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stage_$1016_storage",
														"typeString": "struct CarbonFiPresale.Stage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5241:43:10"
											},
											{
												"expression": {
													"components": [
														{
															"id": 1478,
															"name": "currentStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "5315:12:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1479,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "5341:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																	"typeString": "struct CarbonFiPresale.Stage memory"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5349:5:10",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1013,
															"src": "5341:13:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1481,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "5368:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																		"typeString": "struct CarbonFiPresale.Stage memory"
																	}
																},
																"id": 1482,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5376:11:10",
																"memberName": "totalAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1009,
																"src": "5368:19:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 1483,
																	"name": "current",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "5390:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																		"typeString": "struct CarbonFiPresale.Stage memory"
																	}
																},
																"id": 1484,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5398:10:10",
																"memberName": "soldAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1011,
																"src": "5390:18:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5368:40:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1486,
																"name": "current",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1473,
																"src": "5422:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stage_$1016_memory_ptr",
																	"typeString": "struct CarbonFiPresale.Stage memory"
																}
															},
															"id": 1487,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5430:10:10",
															"memberName": "soldAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1011,
															"src": "5422:18:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1488,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "5301:149:10",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256,uint256,uint256)"
													}
												},
												"functionReturnParameters": 1470,
												"id": 1489,
												"nodeType": "Return",
												"src": "5294:156:10"
											}
										]
									},
									"functionSelector": "26d07099",
									"id": 1491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCurrentStageInfo",
									"nameLocation": "5085:19:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5104:2:10"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "stage",
												"nameLocation": "5147:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "5139:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1462,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5139:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1465,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "5170:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "5162:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5162:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1467,
												"mutability": "mutable",
												"name": "available",
												"nameLocation": "5193:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "5185:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5185:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "sold",
												"nameLocation": "5220:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1491,
												"src": "5212:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1468,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5212:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5129:101:10"
									},
									"scope": 1521,
									"src": "5076:381:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1519,
										"nodeType": "Block",
										"src": "5525:202:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1496,
														"name": "presaleStartTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1024,
														"src": "5539:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5559:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5539:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1501,
												"nodeType": "IfStatement",
												"src": "5535:35:10",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5569:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1495,
													"id": 1500,
													"nodeType": "Return",
													"src": "5562:8:10"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1507,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1502,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5584:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5590:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5584:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1504,
															"name": "presaleStartTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "5603:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 1505,
															"name": "PRESALE_DURATION",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1007,
															"src": "5622:16:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "5603:35:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5584:54:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "5580:68:10",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5647:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1495,
													"id": 1509,
													"nodeType": "Return",
													"src": "5640:8:10"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1511,
																	"name": "presaleStartTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1024,
																	"src": "5666:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1512,
																	"name": "PRESALE_DURATION",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1007,
																	"src": "5685:16:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5666:35:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1514,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5665:37:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1515,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5705:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5711:9:10",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5705:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5665:55:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1495,
												"id": 1518,
												"nodeType": "Return",
												"src": "5658:62:10"
											}
										]
									},
									"functionSelector": "f349b76c",
									"id": 1520,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPresaleTimeLeft",
									"nameLocation": "5472:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5490:2:10"
									},
									"returnParameters": {
										"id": 1495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1494,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1520,
												"src": "5516:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5516:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5515:9:10"
									},
									"scope": 1521,
									"src": "5463:264:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1522,
							"src": "303:5426:10",
							"usedErrors": [
								13,
								18,
								478
							],
							"usedEvents": [
								24,
								162,
								1040,
								1044,
								1050,
								1056
							]
						}
					],
					"src": "32:5697:10"
				},
				"id": 10
			}
		}
	}
}