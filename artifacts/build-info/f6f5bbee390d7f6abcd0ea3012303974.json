{
	"id": "f6f5bbee390d7f6abcd0ea3012303974",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Farming.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable2Step.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\n\n/**\n * @title CAFIFarming - Secure Staking Platform\n * @notice Implements time-locked staking with auto-compounding rewards\n * @dev Features adjustable APY packages with strict security controls\n */\ncontract CAFIFarming is Ownable2Step, ReentrancyGuard, Pausable {\n    using SafeERC20 for IERC20;\n\n    // ========== STRUCT DECLARATIONS ==========\n    struct FarmPackage {\n        address stakeTokenAddress;\n        uint256 lockDuration;\n        uint256 apyBps; // APY in basis points (1% = 100bps)\n        uint256 minimumStakeAmount;\n        bool isActive;\n    }\n\n    struct UserStake {\n        uint256 packageId;\n        uint256 stakedAmount;\n        uint256 stakeStartTimestamp;\n        uint256 lastRewardClaimTimestamp;\n        bool isAutoCompounding;\n    }\n\n    // ========== CONSTANTS ==========\n    uint256 public constant MAX_FEE_BPS = 1000; // 10% maximum fee\n    uint256 public constant SECONDS_PER_YEAR = 365 days;\n    uint256 public constant BPS_DENOMINATOR = 10000; // Basis points denominator\n\n    // ========== IMMUTABLE STATE ==========\n    IERC20 public immutable rewardToken;\n\n    // ========== MUTABLE STATE ==========\n    FarmPackage[] private farmPackages;\n    address public feeCollector;\n    uint256 public autoCompoundFeeBps = 50; // 0.5% fee\n    uint256 public feePoolBalance;\n\n    // ========== MAPPINGS ==========\n    mapping(address => UserStake[]) private userStakes;\n\n    // ========== EVENTS ==========\n    event StakeCreated(\n        address indexed user,\n        uint256 indexed packageId,\n        uint256 amount,\n        uint256 startTime\n    );\n    event StakeWithdrawn(\n        address indexed user,\n        uint256 indexed stakeId,\n        uint256 principal,\n        uint256 reward\n    );\n    event RewardClaimed(\n        address indexed user,\n        uint256 indexed stakeId,\n        uint256 amount\n    );\n    event AutoCompoundToggled(\n        address indexed user,\n        uint256 indexed stakeId,\n        bool isEnabled\n    );\n    event PackageConfigured(\n        uint256 indexed packageId,\n        address stakeToken,\n        uint256 duration,\n        uint256 apyBps,\n        uint256 minStake\n    );\n    event PackageStatusChanged(uint256 indexed packageId, bool isActive);\n    event FeeParametersUpdated(uint256 newFeeBps, address newCollector);\n    event FeesWithdrawn(address collector, uint256 amount);\n\n    // ========== MODIFIERS ==========\n    modifier validPackage(uint256 packageId) {\n        require(packageId < farmPackages.length, \"Invalid package ID\");\n        _;\n    }\n\n    modifier validStake(address user, uint256 stakeId) {\n        require(stakeId < userStakes[user].length, \"Invalid stake ID\");\n        require(userStakes[user][stakeId].stakedAmount > 0, \"Inactive stake\");\n        _;\n    }\n\n    modifier positiveAmount(uint256 amount) {\n        require(amount > 0, \"Amount must be positive\");\n        _;\n    }\n\n    // ========== CONSTRUCTOR ==========\n    constructor(\n        address rewardTokenAddress,\n        address initialFeeCollector,\n        address initialOwner\n    ) Ownable(initialOwner) {\n        require(rewardTokenAddress != address(0), \"Invalid reward token\");\n        require(initialFeeCollector != address(0), \"Invalid fee collector\");\n\n        rewardToken = IERC20(rewardTokenAddress);\n        feeCollector = initialFeeCollector;\n    }\n\n    // ========== USER FUNCTIONS ==========\n    function createStake(uint256 packageId, uint256 amount)\n        external\n        nonReentrant\n        whenNotPaused\n        validPackage(packageId)\n        positiveAmount(amount)\n    {\n        FarmPackage storage package = farmPackages[packageId];\n        require(package.isActive, \"Package inactive\");\n        require(amount >= package.minimumStakeAmount, \"Insufficient stake amount\");\n\n        IERC20(package.stakeTokenAddress).safeTransferFrom(\n            msg.sender,\n            address(this),\n            amount\n        );\n\n        userStakes[msg.sender].push(\n            UserStake({\n                packageId: packageId,\n                stakedAmount: amount,\n                stakeStartTimestamp: block.timestamp,\n                lastRewardClaimTimestamp: block.timestamp,\n                isAutoCompounding: false\n            })\n        );\n\n        emit StakeCreated(msg.sender, packageId, amount, block.timestamp);\n    }\n\n    function claimStakeRewards(uint256 stakeId)\n        external\n        nonReentrant\n        validStake(msg.sender, stakeId)\n    {\n        UserStake storage stakeInfo = userStakes[msg.sender][stakeId];\n        uint256 rewardAmount = _calculateAccruedRewards(msg.sender, stakeId);\n        require(rewardAmount > 0, \"No rewards available\");\n\n        stakeInfo.lastRewardClaimTimestamp = block.timestamp;\n\n        if (stakeInfo.isAutoCompounding) {\n            stakeInfo.stakedAmount += rewardAmount;\n        } else {\n            rewardToken.safeTransfer(msg.sender, rewardAmount);\n        }\n\n        emit RewardClaimed(msg.sender, stakeId, rewardAmount);\n    }\n\n    function withdrawStake(uint256 stakeId)\n        external\n        nonReentrant\n        validStake(msg.sender, stakeId)\n    {\n        UserStake memory stakeInfo = userStakes[msg.sender][stakeId];\n        FarmPackage memory package = farmPackages[stakeInfo.packageId];\n\n        require(\n            block.timestamp >= stakeInfo.stakeStartTimestamp + package.lockDuration,\n            \"Stake still locked\"\n        );\n\n        uint256 rewardAmount = _calculateAccruedRewards(msg.sender, stakeId);\n        uint256 principalAmount = stakeInfo.stakedAmount;\n\n        // Clear stake before transfers to prevent reentrancy\n        delete userStakes[msg.sender][stakeId];\n\n        // Transfer principal\n        IERC20(package.stakeTokenAddress).safeTransfer(msg.sender, principalAmount);\n\n        // Transfer rewards if any\n        if (rewardAmount > 0) {\n            rewardToken.safeTransfer(msg.sender, rewardAmount);\n        }\n\n        emit StakeWithdrawn(msg.sender, stakeId, principalAmount, rewardAmount);\n    }\n\n    function toggleAutoCompound(uint256 stakeId)\n        external\n        nonReentrant\n        validStake(msg.sender, stakeId)\n    {\n        UserStake storage stakeInfo = userStakes[msg.sender][stakeId];\n        stakeInfo.isAutoCompounding = !stakeInfo.isAutoCompounding;\n        emit AutoCompoundToggled(msg.sender, stakeId, stakeInfo.isAutoCompounding);\n    }\n\n    // ========== VIEW FUNCTIONS ==========\n    function calculatePendingRewards(address user, uint256 stakeId)\n        external\n        view\n        returns (uint256)\n    {\n        return _calculateAccruedRewards(user, stakeId);\n    }\n\n    function _calculateAccruedRewards(address user, uint256 stakeId)\n        internal\n        view\n        returns (uint256)\n    {\n        UserStake memory stakeInfo = userStakes[user][stakeId];\n        if (stakeInfo.stakedAmount == 0) return 0;\n\n        FarmPackage memory package = farmPackages[stakeInfo.packageId];\n        uint256 elapsedTime = block.timestamp - stakeInfo.lastRewardClaimTimestamp;\n        \n        return (stakeInfo.stakedAmount * package.apyBps * elapsedTime) / \n               (SECONDS_PER_YEAR * BPS_DENOMINATOR);\n    }\n\n    function getActivePackageCount() external view returns (uint256) {\n        return farmPackages.length;\n    }\n\n    function getPackageDetails(uint256 packageId)\n        external\n        view\n        validPackage(packageId)\n        returns (FarmPackage memory)\n    {\n        return farmPackages[packageId];\n    }\n\n    function getUserStakes(address user) external view returns (UserStake[] memory) {\n        return userStakes[user];\n    }\n\n    // ========== ADMIN FUNCTIONS ==========\n    function configureNewPackage(\n        address stakeToken,\n        uint256 duration,\n        uint256 apyBps,\n        uint256 minStake\n    ) external onlyOwner {\n        require(stakeToken != address(0), \"Invalid stake token\");\n        require(duration > 0, \"Invalid duration\");\n        require(apyBps > 0 && apyBps <= BPS_DENOMINATOR, \"Invalid APY\");\n\n        farmPackages.push(\n            FarmPackage({\n                stakeTokenAddress: stakeToken,\n                lockDuration: duration,\n                apyBps: apyBps,\n                minimumStakeAmount: minStake,\n                isActive: true\n            })\n        );\n\n        emit PackageConfigured(\n            farmPackages.length - 1,\n            stakeToken,\n            duration,\n            apyBps,\n            minStake\n        );\n    }\n\n    function updatePackageStatus(uint256 packageId, bool isActive)\n        external\n        onlyOwner\n        validPackage(packageId)\n    {\n        farmPackages[packageId].isActive = isActive;\n        emit PackageStatusChanged(packageId, isActive);\n    }\n\n    function updatePackageAPY(uint256 packageId, uint256 newApyBps)\n        external\n        onlyOwner\n        validPackage(packageId)\n    {\n        require(newApyBps > 0 && newApyBps <= BPS_DENOMINATOR, \"Invalid APY\");\n        farmPackages[packageId].apyBps = newApyBps;\n        emit PackageConfigured(\n            packageId,\n            farmPackages[packageId].stakeTokenAddress,\n            farmPackages[packageId].lockDuration,\n            newApyBps,\n            farmPackages[packageId].minimumStakeAmount\n        );\n    }\n\n    function updateFeeParameters(uint256 newFeeBps, address newCollector)\n        external\n        onlyOwner\n    {\n        require(newFeeBps <= MAX_FEE_BPS, \"Fee too high\");\n        require(newCollector != address(0), \"Invalid collector\");\n        \n        autoCompoundFeeBps = newFeeBps;\n        feeCollector = newCollector;\n        emit FeeParametersUpdated(newFeeBps, newCollector);\n    }\n\n    function withdrawAccumulatedFees() external {\n        require(msg.sender == feeCollector, \"Not authorized\");\n        uint256 amount = feePoolBalance;\n        require(amount > 0, \"No fees available\");\n\n        feePoolBalance = 0;\n        rewardToken.safeTransfer(feeCollector, amount);\n        emit FeesWithdrawn(feeCollector, amount);\n    }\n\n    function emergencyPause() external onlyOwner {\n        _pause();\n    }\n\n    function emergencyUnpause() external onlyOwner {\n        _unpause();\n    }\n}"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (access/Ownable2Step.sol)\n\npragma solidity ^0.8.20;\n\nimport {Ownable} from \"./Ownable.sol\";\n\n/**\n * @dev Contract module which provides access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * This extension of the {Ownable} contract includes a two-step mechanism to transfer\n * ownership, where the new owner must call {acceptOwnership} in order to replace the\n * old one. This can help prevent common mistakes, such as transfers of ownership to\n * incorrect accounts, or to contracts that are unable to interact with the\n * permission system.\n *\n * The initial owner is specified at deployment time in the constructor for `Ownable`. This\n * can later be changed with {transferOwnership} and {acceptOwnership}.\n *\n * This module is used through inheritance. It will make available all functions\n * from parent (Ownable).\n */\nabstract contract Ownable2Step is Ownable {\n    address private _pendingOwner;\n\n    event OwnershipTransferStarted(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Returns the address of the pending owner.\n     */\n    function pendingOwner() public view virtual returns (address) {\n        return _pendingOwner;\n    }\n\n    /**\n     * @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n     * Can only be called by the current owner.\n     *\n     * Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\n     */\n    function transferOwnership(address newOwner) public virtual override onlyOwner {\n        _pendingOwner = newOwner;\n        emit OwnershipTransferStarted(owner(), newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual override {\n        delete _pendingOwner;\n        super._transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev The new owner accepts the ownership transfer.\n     */\n    function acceptOwnership() public virtual {\n        address sender = _msgSender();\n        if (pendingOwner() != sender) {\n            revert OwnableUnauthorizedAccount(sender);\n        }\n        _transferOwnership(sender);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"Ownable2Step": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"acceptOwnership()": "79ba5097",
							"owner()": "8da5cb5b",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. This extension of the {Ownable} contract includes a two-step mechanism to transfer ownership, where the new owner must call {acceptOwnership} in order to replace the old one. This can help prevent common mistakes, such as transfers of ownership to incorrect accounts, or to contracts that are unable to interact with the permission system. The initial owner is specified at deployment time in the constructor for `Ownable`. This can later be changed with {transferOwnership} and {acceptOwnership}. This module is used through inheritance. It will make available all functions from parent (Ownable).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable2Step.sol\":\"Ownable2Step\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "@openzeppelin/contracts/access/Ownable2Step.sol:Ownable2Step",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 341,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 442,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Farming.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Farming.sol": {
				"CAFIFarming": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "rewardTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialFeeCollector",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isEnabled",
									"type": "bool"
								}
							],
							"name": "AutoCompoundToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFeeBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newCollector",
									"type": "address"
								}
							],
							"name": "FeeParametersUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "collector",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "FeesWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferStarted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "apyBps",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "minStake",
									"type": "uint256"
								}
							],
							"name": "PackageConfigured",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "PackageStatusChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "StakeCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "principal",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "StakeWithdrawn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BPS_DENOMINATOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_FEE_BPS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SECONDS_PER_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "acceptOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "autoCompoundFeeBps",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								}
							],
							"name": "calculatePendingRewards",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								}
							],
							"name": "claimStakeRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "stakeToken",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "duration",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "apyBps",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minStake",
									"type": "uint256"
								}
							],
							"name": "configureNewPackage",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "createStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyPause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyUnpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeCollector",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feePoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getActivePackageCount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								}
							],
							"name": "getPackageDetails",
							"outputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "stakeTokenAddress",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "lockDuration",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "apyBps",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "minimumStakeAmount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isActive",
											"type": "bool"
										}
									],
									"internalType": "struct CAFIFarming.FarmPackage",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getUserStakes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "packageId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakedAmount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakeStartTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "lastRewardClaimTimestamp",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isAutoCompounding",
											"type": "bool"
										}
									],
									"internalType": "struct CAFIFarming.UserStake[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pendingOwner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								}
							],
							"name": "toggleAutoCompound",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFeeBps",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "newCollector",
									"type": "address"
								}
							],
							"name": "updateFeeParameters",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newApyBps",
									"type": "uint256"
								}
							],
							"name": "updatePackageAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "packageId",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isActive",
									"type": "bool"
								}
							],
							"name": "updatePackageStatus",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawAccumulatedFees",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeId",
									"type": "uint256"
								}
							],
							"name": "withdrawStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Features adjustable APY packages with strict security controls",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"acceptOwnership()": {
								"details": "The new owner accepts the ownership transfer."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"pendingOwner()": {
								"details": "Returns the address of the pending owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
							}
						},
						"title": "CAFIFarming - Secure Staking Platform",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Farming.sol\":558:10442  contract CAFIFarming is Ownable2Step, ReentrancyGuard, Pausable {... */\n  mstore(0x40, 0xa0)\n    /* \"Farming.sol\":1609:1611  50 */\n  0x32\n    /* \"Farming.sol\":1573:1611  uint256 public autoCompoundFeeBps = 50 */\n  0x06\n  sstore\n    /* \"Farming.sol\":3275:3672  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Farming.sol\":3404:3416  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_9\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap2\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x02\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":1006:1011  false */\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1003  _paused */\n  0x03\n  0x00\n    /* \"@openzeppelin/contracts/security/Pausable.sol\":996:1011  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farming.sol\":3466:3467  0 */\n  0x00\n    /* \"Farming.sol\":3436:3468  rewardTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farming.sol\":3436:3454  rewardTokenAddress */\n  dup4\n    /* \"Farming.sol\":3436:3468  rewardTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Farming.sol\":3428:3493  require(rewardTokenAddress != address(0), \"Invalid reward token\") */\n  tag_17\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_18\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_17:\n    /* \"Farming.sol\":3542:3543  0 */\n  0x00\n    /* \"Farming.sol\":3511:3544  initialFeeCollector != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Farming.sol\":3511:3530  initialFeeCollector */\n  dup3\n    /* \"Farming.sol\":3511:3544  initialFeeCollector != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Farming.sol\":3503:3570  require(initialFeeCollector != address(0), \"Invalid fee collector\") */\n  tag_20\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_21\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_20:\n    /* \"Farming.sol\":3602:3620  rewardTokenAddress */\n  dup3\n    /* \"Farming.sol\":3581:3621  rewardToken = IERC20(rewardTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Farming.sol\":3646:3665  initialFeeCollector */\n  dup2\n    /* \"Farming.sol\":3631:3643  feeCollector */\n  0x05\n  0x00\n    /* \"Farming.sol\":3631:3665  feeCollector = initialFeeCollector */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Farming.sol\":3275:3672  constructor(... */\n  pop\n  pop\n  pop\n    /* \"Farming.sol\":558:10442  contract CAFIFarming is Ownable2Step, ReentrancyGuard, Pausable {... */\n  jump(tag_23)\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2100:2113  _pendingOwner */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2093:2113  delete _pendingOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  swap1\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  sstore\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n  tag_25\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2148:2156  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2147  super._transferOwnership */\n  shl(0x20, tag_26)\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_26:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_29:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_31:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_32:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_47\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_31\n  jump\t// in\ntag_47:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_33:\n    /* \"#utility.yul\":641:665   */\n  tag_49\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_32\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_50\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_50:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_34:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_52\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_33\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_3:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  0x00\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_55\n  tag_29\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":966:1085   */\ntag_54:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_56\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_34\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_57\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_34\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_58\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_34\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_35:\n    /* \"#utility.yul\":1601:1625   */\n  tag_60\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_32\n  jump\t// in\ntag_60:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_11:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_62\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_35\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1866:2035   */\ntag_36:\n    /* \"#utility.yul\":1950:1961   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  dup3\n    /* \"#utility.yul\":1979:1982   */\n  dup3\n    /* \"#utility.yul\":1972:1991   */\n  mstore\n    /* \"#utility.yul\":2024:2028   */\n  0x20\n    /* \"#utility.yul\":2019:2022   */\n  dup3\n    /* \"#utility.yul\":2015:2029   */\n  add\n    /* \"#utility.yul\":2000:2029   */\n  swap1\n  pop\n    /* \"#utility.yul\":1866:2035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2041:2211   */\ntag_37:\n    /* \"#utility.yul\":2181:2203   */\n  0x496e76616c69642072657761726420746f6b656e000000000000000000000000\n    /* \"#utility.yul\":2177:2178   */\n  0x00\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2165:2179   */\n  add\n    /* \"#utility.yul\":2158:2204   */\n  mstore\n    /* \"#utility.yul\":2041:2211   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2217:2583   */\ntag_38:\n    /* \"#utility.yul\":2359:2362   */\n  0x00\n    /* \"#utility.yul\":2380:2447   */\n  tag_66\n    /* \"#utility.yul\":2444:2446   */\n  0x14\n    /* \"#utility.yul\":2439:2442   */\n  dup4\n    /* \"#utility.yul\":2380:2447   */\n  tag_36\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":2373:2447   */\n  swap2\n  pop\n    /* \"#utility.yul\":2456:2549   */\n  tag_67\n    /* \"#utility.yul\":2545:2548   */\n  dup3\n    /* \"#utility.yul\":2456:2549   */\n  tag_37\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":2574:2576   */\n  0x20\n    /* \"#utility.yul\":2569:2572   */\n  dup3\n    /* \"#utility.yul\":2565:2577   */\n  add\n    /* \"#utility.yul\":2558:2577   */\n  swap1\n  pop\n    /* \"#utility.yul\":2217:2583   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2589:3008   */\ntag_19:\n    /* \"#utility.yul\":2755:2759   */\n  0x00\n    /* \"#utility.yul\":2793:2795   */\n  0x20\n    /* \"#utility.yul\":2782:2791   */\n  dup3\n    /* \"#utility.yul\":2778:2796   */\n  add\n    /* \"#utility.yul\":2770:2796   */\n  swap1\n  pop\n    /* \"#utility.yul\":2842:2851   */\n  dup2\n    /* \"#utility.yul\":2836:2840   */\n  dup2\n    /* \"#utility.yul\":2832:2852   */\n  sub\n    /* \"#utility.yul\":2828:2829   */\n  0x00\n    /* \"#utility.yul\":2817:2826   */\n  dup4\n    /* \"#utility.yul\":2813:2830   */\n  add\n    /* \"#utility.yul\":2806:2853   */\n  mstore\n    /* \"#utility.yul\":2870:3001   */\n  tag_69\n    /* \"#utility.yul\":2996:3000   */\n  dup2\n    /* \"#utility.yul\":2870:3001   */\n  tag_38\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2862:3001   */\n  swap1\n  pop\n    /* \"#utility.yul\":2589:3008   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3014:3185   */\ntag_39:\n    /* \"#utility.yul\":3154:3177   */\n  0x496e76616c69642066656520636f6c6c6563746f720000000000000000000000\n    /* \"#utility.yul\":3150:3151   */\n  0x00\n    /* \"#utility.yul\":3142:3148   */\n  dup3\n    /* \"#utility.yul\":3138:3152   */\n  add\n    /* \"#utility.yul\":3131:3178   */\n  mstore\n    /* \"#utility.yul\":3014:3185   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3191:3557   */\ntag_40:\n    /* \"#utility.yul\":3333:3336   */\n  0x00\n    /* \"#utility.yul\":3354:3421   */\n  tag_72\n    /* \"#utility.yul\":3418:3420   */\n  0x15\n    /* \"#utility.yul\":3413:3416   */\n  dup4\n    /* \"#utility.yul\":3354:3421   */\n  tag_36\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":3347:3421   */\n  swap2\n  pop\n    /* \"#utility.yul\":3430:3523   */\n  tag_73\n    /* \"#utility.yul\":3519:3522   */\n  dup3\n    /* \"#utility.yul\":3430:3523   */\n  tag_39\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":3548:3550   */\n  0x20\n    /* \"#utility.yul\":3543:3546   */\n  dup3\n    /* \"#utility.yul\":3539:3551   */\n  add\n    /* \"#utility.yul\":3532:3551   */\n  swap1\n  pop\n    /* \"#utility.yul\":3191:3557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3563:3982   */\ntag_22:\n    /* \"#utility.yul\":3729:3733   */\n  0x00\n    /* \"#utility.yul\":3767:3769   */\n  0x20\n    /* \"#utility.yul\":3756:3765   */\n  dup3\n    /* \"#utility.yul\":3752:3770   */\n  add\n    /* \"#utility.yul\":3744:3770   */\n  swap1\n  pop\n    /* \"#utility.yul\":3816:3825   */\n  dup2\n    /* \"#utility.yul\":3810:3814   */\n  dup2\n    /* \"#utility.yul\":3806:3826   */\n  sub\n    /* \"#utility.yul\":3802:3803   */\n  0x00\n    /* \"#utility.yul\":3791:3800   */\n  dup4\n    /* \"#utility.yul\":3787:3804   */\n  add\n    /* \"#utility.yul\":3780:3827   */\n  mstore\n    /* \"#utility.yul\":3844:3975   */\n  tag_75\n    /* \"#utility.yul\":3970:3974   */\n  dup2\n    /* \"#utility.yul\":3844:3975   */\n  tag_40\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3836:3975   */\n  swap1\n  pop\n    /* \"#utility.yul\":3563:3982   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Farming.sol\":558:10442  contract CAFIFarming is Ownable2Step, ReentrancyGuard, Pausable {... */\ntag_23:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0xef764c0d6484421d36739b89ad3d60c379efca83bed6303739614a73e091b0d2\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Farming.sol\":558:10442  contract CAFIFarming is Ownable2Step, ReentrancyGuard, Pausable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x842e2981\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xdb94ebc9\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xe30c3978\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe30c3978\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe6a69ab8\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xdb94ebc9\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xdd69becd\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xe1a45218\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x985145b5\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x985145b5\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xc415b95c\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xd55be8c6\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xd7fa023d\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x842e2981\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x973e46b1\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x5a4d8489\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x79ba5097\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7f6a9184\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7fc7984d\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x5a4d8489\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x6c435e36\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x2ba662d6\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x2ba662d6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e185ec7\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4a4e3bd5\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x51858e27\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x1bd9b708\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x217a51ee\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x25d5971f\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Farming.sol\":7962:8761  function configureNewPackage(... */\n    tag_3:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Farming.sol\":8767:9017  function updatePackageStatus(uint256 packageId, bool isActive)... */\n    tag_4:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      stop\n        /* \"Farming.sol\":5317:6323  function withdrawStake(uint256 stakeId)... */\n    tag_5:\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      tag_49\n      jump\t// in\n    tag_46:\n      stop\n        /* \"Farming.sol\":1573:1611  uint256 public autoCompoundFeeBps = 50 */\n    tag_6:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":9944:10284  function withdrawAccumulatedFees() external {... */\n    tag_7:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      stop\n        /* \"Farming.sol\":10366:10440  function emergencyUnpause() external onlyOwner {... */\n    tag_8:\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n      stop\n        /* \"Farming.sol\":10290:10360  function emergencyPause() external onlyOwner {... */\n    tag_9:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      stop\n        /* \"Farming.sol\":6329:6686  function toggleAutoCompound(uint256 stakeId)... */\n    tag_10:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_11:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":7589:7785  function getPackageDetails(uint256 packageId)... */\n    tag_12:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_13:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n    tag_14:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Farming.sol\":9023:9545  function updatePackageAPY(uint256 packageId, uint256 newApyBps)... */\n    tag_15:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      tag_79\n      jump\t// in\n    tag_76:\n      stop\n        /* \"Farming.sol\":6736:6923  function calculatePendingRewards(address user, uint256 stakeId)... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      tag_84\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":7791:7911  function getUserStakes(address user) external view returns (UserStake[] memory) {... */\n    tag_17:\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_18:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":9551:9938  function updateFeeParameters(uint256 newFeeBps, address newCollector)... */\n    tag_19:\n      tag_95\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_96\n      swap2\n      swap1\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n    tag_95:\n      stop\n        /* \"Farming.sol\":7475:7583  function getActivePackageCount() external view returns (uint256) {... */\n    tag_20:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":1540:1567  address public feeCollector */\n    tag_21:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":1164:1206  uint256 public constant MAX_FEE_BPS = 1000 */\n    tag_22:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":3722:4650  function createStake(uint256 packageId, uint256 amount)... */\n    tag_23:\n      tag_108\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_109\n      swap2\n      swap1\n      tag_78\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n    tag_108:\n      stop\n        /* \"Farming.sol\":1629:1658  uint256 public feePoolBalance */\n    tag_24:\n      tag_111\n      tag_112\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_113\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_113:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":4656:5311  function claimStakeRewards(uint256 stakeId)... */\n    tag_25:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"Farming.sol\":1288:1335  uint256 public constant BPS_DENOMINATOR = 10000 */\n    tag_26:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n    tag_27:\n      tag_120\n      tag_121\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      tag_122\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":1231:1282  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_28:\n      tag_123\n      tag_124\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_29:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"Farming.sol\":1415:1450  IERC20 public immutable rewardToken */\n    tag_30:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Farming.sol\":7962:8761  function configureNewPackage(... */\n    tag_41:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_134:\n        /* \"Farming.sol\":8160:8161  0 */\n      0x00\n        /* \"Farming.sol\":8138:8162  stakeToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":8138:8148  stakeToken */\n      dup5\n        /* \"Farming.sol\":8138:8162  stakeToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Farming.sol\":8130:8186  require(stakeToken != address(0), \"Invalid stake token\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"Farming.sol\":8215:8216  0 */\n      0x00\n        /* \"Farming.sol\":8204:8212  duration */\n      dup4\n        /* \"Farming.sol\":8204:8216  duration > 0 */\n      gt\n        /* \"Farming.sol\":8196:8237  require(duration > 0, \"Invalid duration\") */\n      tag_140\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_140:\n        /* \"Farming.sol\":8264:8265  0 */\n      0x00\n        /* \"Farming.sol\":8255:8261  apyBps */\n      dup3\n        /* \"Farming.sol\":8255:8265  apyBps > 0 */\n      gt\n        /* \"Farming.sol\":8255:8294  apyBps > 0 && apyBps <= BPS_DENOMINATOR */\n      dup1\n      iszero\n      tag_143\n      jumpi\n      pop\n        /* \"Farming.sol\":1330:1335  10000 */\n      0x2710\n        /* \"Farming.sol\":8269:8275  apyBps */\n      dup3\n        /* \"Farming.sol\":8269:8294  apyBps <= BPS_DENOMINATOR */\n      gt\n      iszero\n        /* \"Farming.sol\":8255:8294  apyBps > 0 && apyBps <= BPS_DENOMINATOR */\n    tag_143:\n        /* \"Farming.sol\":8247:8310  require(apyBps > 0 && apyBps <= BPS_DENOMINATOR, \"Invalid APY\") */\n      tag_144\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_145\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_144:\n        /* \"Farming.sol\":8321:8333  farmPackages */\n      0x04\n        /* \"Farming.sol\":8352:8576  FarmPackage({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Farming.sol\":8401:8411  stakeToken */\n      dup7\n        /* \"Farming.sol\":8352:8576  FarmPackage({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":8443:8451  duration */\n      dup6\n        /* \"Farming.sol\":8352:8576  FarmPackage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":8477:8483  apyBps */\n      dup5\n        /* \"Farming.sol\":8352:8576  FarmPackage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":8521:8529  minStake */\n      dup4\n        /* \"Farming.sol\":8352:8576  FarmPackage({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":8557:8561  true */\n      0x01\n        /* \"Farming.sol\":8352:8576  FarmPackage({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Farming.sol\":8321:8586  farmPackages.push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Farming.sol\":8655:8656  1 */\n      0x01\n        /* \"Farming.sol\":8633:8645  farmPackages */\n      0x04\n        /* \"Farming.sol\":8633:8652  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":8633:8656  farmPackages.length - 1 */\n      tag_148\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"Farming.sol\":8602:8754  PackageConfigured(... */\n      0x05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a877618\n        /* \"Farming.sol\":8670:8680  stakeToken */\n      dup6\n        /* \"Farming.sol\":8694:8702  duration */\n      dup6\n        /* \"Farming.sol\":8716:8722  apyBps */\n      dup6\n        /* \"Farming.sol\":8736:8744  minStake */\n      dup6\n        /* \"Farming.sol\":8602:8754  PackageConfigured(... */\n      mload(0x40)\n      tag_150\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_150:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Farming.sol\":7962:8761  function configureNewPackage(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":8767:9017  function updatePackageStatus(uint256 packageId, bool isActive)... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_153\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_153:\n        /* \"Farming.sol\":8886:8895  packageId */\n      dup2\n        /* \"Farming.sol\":2822:2834  farmPackages */\n      0x04\n        /* \"Farming.sol\":2822:2841  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2810:2819  packageId */\n      dup2\n        /* \"Farming.sol\":2810:2841  packageId < farmPackages.length */\n      lt\n        /* \"Farming.sol\":2802:2864  require(packageId < farmPackages.length, \"Invalid package ID\") */\n      tag_155\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_156\n      swap1\n      tag_157\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_155:\n        /* \"Farming.sol\":8946:8954  isActive */\n      dup2\n        /* \"Farming.sol\":8911:8923  farmPackages */\n      0x04\n        /* \"Farming.sol\":8924:8933  packageId */\n      dup5\n        /* \"Farming.sol\":8911:8934  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n    tag_159:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":8911:8943  farmPackages[packageId].isActive */\n      0x04\n      add\n      0x00\n        /* \"Farming.sol\":8911:8954  farmPackages[packageId].isActive = isActive */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":8990:8999  packageId */\n      dup3\n        /* \"Farming.sol\":8969:9010  PackageStatusChanged(packageId, isActive) */\n      0x27ffac29f91e32ed296e1ae41a59f23ebefbcac53eb28251a6fd6a5be271970a\n        /* \"Farming.sol\":9001:9009  isActive */\n      dup4\n        /* \"Farming.sol\":8969:9010  PackageStatusChanged(packageId, isActive) */\n      mload(0x40)\n      tag_163\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"Farming.sol\":8767:9017  function updatePackageStatus(uint256 packageId, bool isActive)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":5317:6323  function withdrawStake(uint256 stakeId)... */\n    tag_49:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_165\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_165:\n        /* \"Farming.sol\":5414:5424  msg.sender */\n      caller\n        /* \"Farming.sol\":5426:5433  stakeId */\n      dup2\n        /* \"Farming.sol\":2967:2977  userStakes */\n      0x08\n        /* \"Farming.sol\":2967:2983  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":2978:2982  user */\n      dup4\n        /* \"Farming.sol\":2967:2983  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":2967:2990  userStakes[user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2957:2964  stakeId */\n      dup2\n        /* \"Farming.sol\":2957:2990  stakeId < userStakes[user].length */\n      lt\n        /* \"Farming.sol\":2949:3011  require(stakeId < userStakes[user].length, \"Invalid stake ID\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"Farming.sol\":3070:3071  0 */\n      0x00\n        /* \"Farming.sol\":3029:3039  userStakes */\n      0x08\n        /* \"Farming.sol\":3029:3045  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":3040:3044  user */\n      dup5\n        /* \"Farming.sol\":3029:3045  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":3046:3053  stakeId */\n      dup3\n        /* \"Farming.sol\":3029:3054  userStakes[user][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_171\n      jumpi\n      tag_172\n      tag_161\n      jump\t// in\n    tag_172:\n    tag_171:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":3029:3067  userStakes[user][stakeId].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":3029:3071  userStakes[user][stakeId].stakedAmount > 0 */\n      gt\n        /* \"Farming.sol\":3021:3090  require(userStakes[user][stakeId].stakedAmount > 0, \"Inactive stake\") */\n      tag_174\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_174:\n        /* \"Farming.sol\":5449:5475  UserStake memory stakeInfo */\n      0x00\n        /* \"Farming.sol\":5478:5488  userStakes */\n      0x08\n        /* \"Farming.sol\":5478:5500  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":5489:5499  msg.sender */\n      caller\n        /* \"Farming.sol\":5478:5500  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":5501:5508  stakeId */\n      dup5\n        /* \"Farming.sol\":5478:5509  userStakes[msg.sender][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_178\n      jumpi\n      tag_179\n      tag_161\n      jump\t// in\n    tag_179:\n    tag_178:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":5449:5509  UserStake memory stakeInfo = userStakes[msg.sender][stakeId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":5519:5545  FarmPackage memory package */\n      0x00\n        /* \"Farming.sol\":5548:5560  farmPackages */\n      0x04\n        /* \"Farming.sol\":5561:5570  stakeInfo */\n      dup3\n        /* \"Farming.sol\":5561:5580  stakeInfo.packageId */\n      0x00\n      add\n      mload\n        /* \"Farming.sol\":5548:5581  farmPackages[stakeInfo.packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_181\n      jumpi\n      tag_182\n      tag_161\n      jump\t// in\n    tag_182:\n    tag_181:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":5519:5581  FarmPackage memory package = farmPackages[stakeInfo.packageId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":5664:5671  package */\n      dup1\n        /* \"Farming.sol\":5664:5684  package.lockDuration */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":5632:5641  stakeInfo */\n      dup3\n        /* \"Farming.sol\":5632:5661  stakeInfo.stakeStartTimestamp */\n      0x40\n      add\n      mload\n        /* \"Farming.sol\":5632:5684  stakeInfo.stakeStartTimestamp + package.lockDuration */\n      tag_184\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"Farming.sol\":5613:5628  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":5613:5684  block.timestamp >= stakeInfo.stakeStartTimestamp + package.lockDuration */\n      lt\n      iszero\n        /* \"Farming.sol\":5592:5728  require(... */\n      tag_186\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_187\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_186:\n        /* \"Farming.sol\":5739:5759  uint256 rewardAmount */\n      0x00\n        /* \"Farming.sol\":5762:5807  _calculateAccruedRewards(msg.sender, stakeId) */\n      tag_189\n        /* \"Farming.sol\":5787:5797  msg.sender */\n      caller\n        /* \"Farming.sol\":5799:5806  stakeId */\n      dup8\n        /* \"Farming.sol\":5762:5786  _calculateAccruedRewards */\n      tag_190\n        /* \"Farming.sol\":5762:5807  _calculateAccruedRewards(msg.sender, stakeId) */\n      jump\t// in\n    tag_189:\n        /* \"Farming.sol\":5739:5807  uint256 rewardAmount = _calculateAccruedRewards(msg.sender, stakeId) */\n      swap1\n      pop\n        /* \"Farming.sol\":5817:5840  uint256 principalAmount */\n      0x00\n        /* \"Farming.sol\":5843:5852  stakeInfo */\n      dup4\n        /* \"Farming.sol\":5843:5865  stakeInfo.stakedAmount */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":5817:5865  uint256 principalAmount = stakeInfo.stakedAmount */\n      swap1\n      pop\n        /* \"Farming.sol\":5945:5955  userStakes */\n      0x08\n        /* \"Farming.sol\":5945:5967  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":5956:5966  msg.sender */\n      caller\n        /* \"Farming.sol\":5945:5967  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":5968:5975  stakeId */\n      dup8\n        /* \"Farming.sol\":5945:5976  userStakes[msg.sender][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_191\n      jumpi\n      tag_192\n      tag_161\n      jump\t// in\n    tag_192:\n    tag_191:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n        /* \"Farming.sol\":5938:5976  delete userStakes[msg.sender][stakeId] */\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sstore\n      0x04\n      dup3\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xff\n      mul\n      not\n      and\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Farming.sol\":6017:6092  IERC20(package.stakeTokenAddress).safeTransfer(msg.sender, principalAmount) */\n      tag_194\n        /* \"Farming.sol\":6064:6074  msg.sender */\n      caller\n        /* \"Farming.sol\":6076:6091  principalAmount */\n      dup3\n        /* \"Farming.sol\":6024:6031  package */\n      dup6\n        /* \"Farming.sol\":6024:6049  package.stakeTokenAddress */\n      0x00\n      add\n      mload\n        /* \"Farming.sol\":6017:6063  IERC20(package.stakeTokenAddress).safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"Farming.sol\":6017:6092  IERC20(package.stakeTokenAddress).safeTransfer(msg.sender, principalAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"Farming.sol\":6157:6158  0 */\n      0x00\n        /* \"Farming.sol\":6142:6154  rewardAmount */\n      dup3\n        /* \"Farming.sol\":6142:6158  rewardAmount > 0 */\n      gt\n        /* \"Farming.sol\":6138:6235  if (rewardAmount > 0) {... */\n      iszero\n      tag_196\n      jumpi\n        /* \"Farming.sol\":6174:6224  rewardToken.safeTransfer(msg.sender, rewardAmount) */\n      tag_197\n        /* \"Farming.sol\":6199:6209  msg.sender */\n      caller\n        /* \"Farming.sol\":6211:6223  rewardAmount */\n      dup4\n        /* \"Farming.sol\":6174:6185  rewardToken */\n      immutable(\"0xef764c0d6484421d36739b89ad3d60c379efca83bed6303739614a73e091b0d2\")\n        /* \"Farming.sol\":6174:6198  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"Farming.sol\":6174:6224  rewardToken.safeTransfer(msg.sender, rewardAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_197:\n        /* \"Farming.sol\":6138:6235  if (rewardAmount > 0) {... */\n    tag_196:\n        /* \"Farming.sol\":6277:6284  stakeId */\n      dup7\n        /* \"Farming.sol\":6265:6275  msg.sender */\n      caller\n        /* \"Farming.sol\":6250:6316  StakeWithdrawn(msg.sender, stakeId, principalAmount, rewardAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x88d1c46373223a4f1f60db2badc985b05ec9c2b2eab4537f0f8e1291b78b6e37\n        /* \"Farming.sol\":6286:6301  principalAmount */\n      dup4\n        /* \"Farming.sol\":6303:6315  rewardAmount */\n      dup6\n        /* \"Farming.sol\":6250:6316  StakeWithdrawn(msg.sender, stakeId, principalAmount, rewardAmount) */\n      mload(0x40)\n      tag_198\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Farming.sol\":5439:6323  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_200\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_200:\n        /* \"Farming.sol\":5317:6323  function withdrawStake(uint256 stakeId)... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":1573:1611  uint256 public autoCompoundFeeBps = 50 */\n    tag_51:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":9944:10284  function withdrawAccumulatedFees() external {... */\n    tag_55:\n        /* \"Farming.sol\":10020:10032  feeCollector */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":10006:10032  msg.sender == feeCollector */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":10006:10016  msg.sender */\n      caller\n        /* \"Farming.sol\":10006:10032  msg.sender == feeCollector */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Farming.sol\":9998:10051  require(msg.sender == feeCollector, \"Not authorized\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_205\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"Farming.sol\":10061:10075  uint256 amount */\n      0x00\n        /* \"Farming.sol\":10078:10092  feePoolBalance */\n      sload(0x07)\n        /* \"Farming.sol\":10061:10092  uint256 amount = feePoolBalance */\n      swap1\n      pop\n        /* \"Farming.sol\":10119:10120  0 */\n      0x00\n        /* \"Farming.sol\":10110:10116  amount */\n      dup2\n        /* \"Farming.sol\":10110:10120  amount > 0 */\n      gt\n        /* \"Farming.sol\":10102:10142  require(amount > 0, \"No fees available\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"Farming.sol\":10170:10171  0 */\n      0x00\n        /* \"Farming.sol\":10153:10167  feePoolBalance */\n      0x07\n        /* \"Farming.sol\":10153:10171  feePoolBalance = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":10181:10227  rewardToken.safeTransfer(feeCollector, amount) */\n      tag_209\n        /* \"Farming.sol\":10206:10218  feeCollector */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":10220:10226  amount */\n      dup3\n        /* \"Farming.sol\":10181:10192  rewardToken */\n      immutable(\"0xef764c0d6484421d36739b89ad3d60c379efca83bed6303739614a73e091b0d2\")\n        /* \"Farming.sol\":10181:10205  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"Farming.sol\":10181:10227  rewardToken.safeTransfer(feeCollector, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_209:\n        /* \"Farming.sol\":10242:10277  FeesWithdrawn(feeCollector, amount) */\n      0xc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a\n        /* \"Farming.sol\":10256:10268  feeCollector */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":10270:10276  amount */\n      dup3\n        /* \"Farming.sol\":10242:10277  FeesWithdrawn(feeCollector, amount) */\n      mload(0x40)\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Farming.sol\":9988:10284  {... */\n      pop\n        /* \"Farming.sol\":9944:10284  function withdrawAccumulatedFees() external {... */\n      jump\t// out\n        /* \"Farming.sol\":10366:10440  function emergencyUnpause() external onlyOwner {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_213\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_213:\n        /* \"Farming.sol\":10423:10433  _unpause() */\n      tag_215\n        /* \"Farming.sol\":10423:10431  _unpause */\n      tag_216\n        /* \"Farming.sol\":10423:10433  _unpause() */\n      jump\t// in\n    tag_215:\n        /* \"Farming.sol\":10366:10440  function emergencyUnpause() external onlyOwner {... */\n      jump\t// out\n        /* \"Farming.sol\":10290:10360  function emergencyPause() external onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"Farming.sol\":10345:10353  _pause() */\n      tag_220\n        /* \"Farming.sol\":10345:10351  _pause */\n      tag_221\n        /* \"Farming.sol\":10345:10353  _pause() */\n      jump\t// in\n    tag_220:\n        /* \"Farming.sol\":10290:10360  function emergencyPause() external onlyOwner {... */\n      jump\t// out\n        /* \"Farming.sol\":6329:6686  function toggleAutoCompound(uint256 stakeId)... */\n    tag_62:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_223\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_223:\n        /* \"Farming.sol\":6431:6441  msg.sender */\n      caller\n        /* \"Farming.sol\":6443:6450  stakeId */\n      dup2\n        /* \"Farming.sol\":2967:2977  userStakes */\n      0x08\n        /* \"Farming.sol\":2967:2983  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":2978:2982  user */\n      dup4\n        /* \"Farming.sol\":2967:2983  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":2967:2990  userStakes[user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2957:2964  stakeId */\n      dup2\n        /* \"Farming.sol\":2957:2990  stakeId < userStakes[user].length */\n      lt\n        /* \"Farming.sol\":2949:3011  require(stakeId < userStakes[user].length, \"Invalid stake ID\") */\n      tag_225\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap1\n      tag_170\n      jump\t// in\n    tag_226:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_225:\n        /* \"Farming.sol\":3070:3071  0 */\n      0x00\n        /* \"Farming.sol\":3029:3039  userStakes */\n      0x08\n        /* \"Farming.sol\":3029:3045  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":3040:3044  user */\n      dup5\n        /* \"Farming.sol\":3029:3045  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":3046:3053  stakeId */\n      dup3\n        /* \"Farming.sol\":3029:3054  userStakes[user][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_227\n      jumpi\n      tag_228\n      tag_161\n      jump\t// in\n    tag_228:\n    tag_227:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":3029:3067  userStakes[user][stakeId].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":3029:3071  userStakes[user][stakeId].stakedAmount > 0 */\n      gt\n        /* \"Farming.sol\":3021:3090  require(userStakes[user][stakeId].stakedAmount > 0, \"Inactive stake\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_231\n      swap1\n      tag_176\n      jump\t// in\n    tag_231:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_230:\n        /* \"Farming.sol\":6466:6493  UserStake storage stakeInfo */\n      0x00\n        /* \"Farming.sol\":6496:6506  userStakes */\n      0x08\n        /* \"Farming.sol\":6496:6518  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":6507:6517  msg.sender */\n      caller\n        /* \"Farming.sol\":6496:6518  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":6519:6526  stakeId */\n      dup5\n        /* \"Farming.sol\":6496:6527  userStakes[msg.sender][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_234\n      tag_161\n      jump\t// in\n    tag_234:\n    tag_233:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":6466:6527  UserStake storage stakeInfo = userStakes[msg.sender][stakeId] */\n      swap1\n      pop\n        /* \"Farming.sol\":6568:6577  stakeInfo */\n      dup1\n        /* \"Farming.sol\":6568:6595  stakeInfo.isAutoCompounding */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":6567:6595  !stakeInfo.isAutoCompounding */\n      iszero\n        /* \"Farming.sol\":6537:6546  stakeInfo */\n      dup2\n        /* \"Farming.sol\":6537:6564  stakeInfo.isAutoCompounding */\n      0x04\n      add\n      0x00\n        /* \"Farming.sol\":6537:6595  stakeInfo.isAutoCompounding = !stakeInfo.isAutoCompounding */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":6642:6649  stakeId */\n      dup4\n        /* \"Farming.sol\":6630:6640  msg.sender */\n      caller\n        /* \"Farming.sol\":6610:6679  AutoCompoundToggled(msg.sender, stakeId, stakeInfo.isAutoCompounding) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd9a4263cd64bef5364cf9865147c8561e0c7151a9e1d79d8aa67df565aa96efe\n        /* \"Farming.sol\":6651:6660  stakeInfo */\n      dup4\n        /* \"Farming.sol\":6651:6678  stakeInfo.isAutoCompounding */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":6610:6679  AutoCompoundToggled(msg.sender, stakeId, stakeInfo.isAutoCompounding) */\n      mload(0x40)\n      tag_236\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Farming.sol\":6456:6686  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_237\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_237:\n        /* \"Farming.sol\":6329:6686  function toggleAutoCompound(uint256 stakeId)... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1662:1666  bool */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1685:1692  _paused */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1678:1692  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1615:1699  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"Farming.sol\":7589:7785  function getPackageDetails(uint256 packageId)... */\n    tag_69:\n        /* \"Farming.sol\":7714:7732  FarmPackage memory */\n      tag_239\n      tag_240\n      jump\t// in\n    tag_239:\n        /* \"Farming.sol\":7686:7695  packageId */\n      dup2\n        /* \"Farming.sol\":2822:2834  farmPackages */\n      0x04\n        /* \"Farming.sol\":2822:2841  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2810:2819  packageId */\n      dup2\n        /* \"Farming.sol\":2810:2841  packageId < farmPackages.length */\n      lt\n        /* \"Farming.sol\":2802:2864  require(packageId < farmPackages.length, \"Invalid package ID\") */\n      tag_242\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_243\n      swap1\n      tag_157\n      jump\t// in\n    tag_243:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_242:\n        /* \"Farming.sol\":7755:7767  farmPackages */\n      0x04\n        /* \"Farming.sol\":7768:7777  packageId */\n      dup4\n        /* \"Farming.sol\":7755:7778  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_161\n      jump\t// in\n    tag_246:\n    tag_245:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":7748:7778  return farmPackages[packageId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap2\n      pop\n        /* \"Farming.sol\":7589:7785  function getPackageDetails(uint256 packageId)... */\n      pop\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_249\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_249:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2296:2310  address sender */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2325  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2323  _msgSender */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2313:2325  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2296:2325  address sender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2357:2363  sender */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2363  pendingOwner() != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2353  pendingOwner() */\n      tag_256\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2351  pendingOwner */\n      tag_121\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2353  pendingOwner() */\n      jump\t// in\n    tag_256:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2339:2363  pendingOwner() != sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2335:2431  if (pendingOwner() != sender) {... */\n      tag_257\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2413:2419  sender */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2386:2420  OwnableUnauthorizedAccount(sender) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_258\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_258:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2335:2431  if (pendingOwner() != sender) {... */\n    tag_257:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2466  _transferOwnership(sender) */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2459:2465  sender */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2458  _transferOwnership */\n      tag_252\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2440:2466  _transferOwnership(sender) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2286:2473  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2244:2473  function acceptOwnership() public virtual {... */\n      jump\t// out\n        /* \"Farming.sol\":9023:9545  function updatePackageAPY(uint256 packageId, uint256 newApyBps)... */\n    tag_79:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_261:\n        /* \"Farming.sol\":9143:9152  packageId */\n      dup2\n        /* \"Farming.sol\":2822:2834  farmPackages */\n      0x04\n        /* \"Farming.sol\":2822:2841  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2810:2819  packageId */\n      dup2\n        /* \"Farming.sol\":2810:2841  packageId < farmPackages.length */\n      lt\n        /* \"Farming.sol\":2802:2864  require(packageId < farmPackages.length, \"Invalid package ID\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_157\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"Farming.sol\":9188:9189  0 */\n      0x00\n        /* \"Farming.sol\":9176:9185  newApyBps */\n      dup3\n        /* \"Farming.sol\":9176:9189  newApyBps > 0 */\n      gt\n        /* \"Farming.sol\":9176:9221  newApyBps > 0 && newApyBps <= BPS_DENOMINATOR */\n      dup1\n      iszero\n      tag_266\n      jumpi\n      pop\n        /* \"Farming.sol\":1330:1335  10000 */\n      0x2710\n        /* \"Farming.sol\":9193:9202  newApyBps */\n      dup3\n        /* \"Farming.sol\":9193:9221  newApyBps <= BPS_DENOMINATOR */\n      gt\n      iszero\n        /* \"Farming.sol\":9176:9221  newApyBps > 0 && newApyBps <= BPS_DENOMINATOR */\n    tag_266:\n        /* \"Farming.sol\":9168:9237  require(newApyBps > 0 && newApyBps <= BPS_DENOMINATOR, \"Invalid APY\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_146\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"Farming.sol\":9280:9289  newApyBps */\n      dup2\n        /* \"Farming.sol\":9247:9259  farmPackages */\n      0x04\n        /* \"Farming.sol\":9260:9269  packageId */\n      dup5\n        /* \"Farming.sol\":9247:9270  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_269\n      jumpi\n      tag_270\n      tag_161\n      jump\t// in\n    tag_270:\n    tag_269:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":9247:9277  farmPackages[packageId].apyBps */\n      0x02\n      add\n        /* \"Farming.sol\":9247:9289  farmPackages[packageId].apyBps = newApyBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":9335:9344  packageId */\n      dup3\n        /* \"Farming.sol\":9304:9538  PackageConfigured(... */\n      0x05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a877618\n        /* \"Farming.sol\":9358:9370  farmPackages */\n      0x04\n        /* \"Farming.sol\":9371:9380  packageId */\n      dup6\n        /* \"Farming.sol\":9358:9381  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_272\n      jumpi\n      tag_273\n      tag_161\n      jump\t// in\n    tag_273:\n    tag_272:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":9358:9399  farmPackages[packageId].stakeTokenAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":9413:9425  farmPackages */\n      0x04\n        /* \"Farming.sol\":9426:9435  packageId */\n      dup7\n        /* \"Farming.sol\":9413:9436  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_275\n      jumpi\n      tag_276\n      tag_161\n      jump\t// in\n    tag_276:\n    tag_275:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":9413:9449  farmPackages[packageId].lockDuration */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":9463:9472  newApyBps */\n      dup6\n        /* \"Farming.sol\":9486:9498  farmPackages */\n      0x04\n        /* \"Farming.sol\":9499:9508  packageId */\n      dup9\n        /* \"Farming.sol\":9486:9509  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_278\n      jumpi\n      tag_279\n      tag_161\n      jump\t// in\n    tag_279:\n    tag_278:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":9486:9528  farmPackages[packageId].minimumStakeAmount */\n      0x03\n      add\n      sload\n        /* \"Farming.sol\":9304:9538  PackageConfigured(... */\n      mload(0x40)\n      tag_281\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_281:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1554:1555  _ */\n      pop\n        /* \"Farming.sol\":9023:9545  function updatePackageAPY(uint256 packageId, uint256 newApyBps)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":6736:6923  function calculatePendingRewards(address user, uint256 stakeId)... */\n    tag_83:\n        /* \"Farming.sol\":6847:6854  uint256 */\n      0x00\n        /* \"Farming.sol\":6877:6916  _calculateAccruedRewards(user, stakeId) */\n      tag_283\n        /* \"Farming.sol\":6902:6906  user */\n      dup4\n        /* \"Farming.sol\":6908:6915  stakeId */\n      dup4\n        /* \"Farming.sol\":6877:6901  _calculateAccruedRewards */\n      tag_190\n        /* \"Farming.sol\":6877:6916  _calculateAccruedRewards(user, stakeId) */\n      jump\t// in\n    tag_283:\n        /* \"Farming.sol\":6870:6916  return _calculateAccruedRewards(user, stakeId) */\n      swap1\n      pop\n        /* \"Farming.sol\":6736:6923  function calculatePendingRewards(address user, uint256 stakeId)... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":7791:7911  function getUserStakes(address user) external view returns (UserStake[] memory) {... */\n    tag_88:\n        /* \"Farming.sol\":7851:7869  UserStake[] memory */\n      0x60\n        /* \"Farming.sol\":7888:7898  userStakes */\n      0x08\n        /* \"Farming.sol\":7888:7904  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":7899:7903  user */\n      dup4\n        /* \"Farming.sol\":7888:7904  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":7881:7904  return userStakes[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_285:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_286\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_285)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":7791:7911  function getUserStakes(address user) external view returns (UserStake[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Farming.sol\":9551:9938  function updateFeeParameters(uint256 newFeeBps, address newCollector)... */\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_290\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_290:\n        /* \"Farming.sol\":1202:1206  1000 */\n      0x03e8\n        /* \"Farming.sol\":9678:9687  newFeeBps */\n      dup3\n        /* \"Farming.sol\":9678:9702  newFeeBps <= MAX_FEE_BPS */\n      gt\n      iszero\n        /* \"Farming.sol\":9670:9719  require(newFeeBps <= MAX_FEE_BPS, \"Fee too high\") */\n      tag_292\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_293\n      swap1\n      tag_294\n      jump\t// in\n    tag_293:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_292:\n        /* \"Farming.sol\":9761:9762  0 */\n      0x00\n        /* \"Farming.sol\":9737:9763  newCollector != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":9737:9749  newCollector */\n      dup2\n        /* \"Farming.sol\":9737:9763  newCollector != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Farming.sol\":9729:9785  require(newCollector != address(0), \"Invalid collector\") */\n      tag_295\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_296\n      swap1\n      tag_297\n      jump\t// in\n    tag_296:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_295:\n        /* \"Farming.sol\":9825:9834  newFeeBps */\n      dup2\n        /* \"Farming.sol\":9804:9822  autoCompoundFeeBps */\n      0x06\n        /* \"Farming.sol\":9804:9834  autoCompoundFeeBps = newFeeBps */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":9859:9871  newCollector */\n      dup1\n        /* \"Farming.sol\":9844:9856  feeCollector */\n      0x05\n      0x00\n        /* \"Farming.sol\":9844:9871  feeCollector = newCollector */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":9886:9931  FeeParametersUpdated(newFeeBps, newCollector) */\n      0x2cf325792651b724d47f21230be0dd9729866cadd370618845e23a48555ef042\n        /* \"Farming.sol\":9907:9916  newFeeBps */\n      dup3\n        /* \"Farming.sol\":9918:9930  newCollector */\n      dup3\n        /* \"Farming.sol\":9886:9931  FeeParametersUpdated(newFeeBps, newCollector) */\n      mload(0x40)\n      tag_298\n      swap3\n      swap2\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Farming.sol\":9551:9938  function updateFeeParameters(uint256 newFeeBps, address newCollector)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":7475:7583  function getActivePackageCount() external view returns (uint256) {... */\n    tag_100:\n        /* \"Farming.sol\":7531:7538  uint256 */\n      0x00\n        /* \"Farming.sol\":7557:7569  farmPackages */\n      0x04\n        /* \"Farming.sol\":7557:7576  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":7550:7576  return farmPackages.length */\n      swap1\n      pop\n        /* \"Farming.sol\":7475:7583  function getActivePackageCount() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Farming.sol\":1540:1567  address public feeCollector */\n    tag_103:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":1164:1206  uint256 public constant MAX_FEE_BPS = 1000 */\n    tag_106:\n        /* \"Farming.sol\":1202:1206  1000 */\n      0x03e8\n        /* \"Farming.sol\":1164:1206  uint256 public constant MAX_FEE_BPS = 1000 */\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":3722:4650  function createStake(uint256 packageId, uint256 amount)... */\n    tag_110:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_302\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_302:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_305\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_304:\n        /* \"Farming.sol\":3859:3868  packageId */\n      dup2\n        /* \"Farming.sol\":2822:2834  farmPackages */\n      0x04\n        /* \"Farming.sol\":2822:2841  farmPackages.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2810:2819  packageId */\n      dup2\n        /* \"Farming.sol\":2810:2841  packageId < farmPackages.length */\n      lt\n        /* \"Farming.sol\":2802:2864  require(packageId < farmPackages.length, \"Invalid package ID\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_157\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"Farming.sol\":3893:3899  amount */\n      dup2\n        /* \"Farming.sol\":3181:3182  0 */\n      0x00\n        /* \"Farming.sol\":3172:3178  amount */\n      dup2\n        /* \"Farming.sol\":3172:3182  amount > 0 */\n      gt\n        /* \"Farming.sol\":3164:3210  require(amount > 0, \"Amount must be positive\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"Farming.sol\":3915:3942  FarmPackage storage package */\n      0x00\n        /* \"Farming.sol\":3945:3957  farmPackages */\n      0x04\n        /* \"Farming.sol\":3958:3967  packageId */\n      dup6\n        /* \"Farming.sol\":3945:3968  farmPackages[packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_314\n      jumpi\n      tag_315\n      tag_161\n      jump\t// in\n    tag_315:\n    tag_314:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":3915:3968  FarmPackage storage package = farmPackages[packageId] */\n      swap1\n      pop\n        /* \"Farming.sol\":3986:3993  package */\n      dup1\n        /* \"Farming.sol\":3986:4002  package.isActive */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":3978:4023  require(package.isActive, \"Package inactive\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_318\n      swap1\n      tag_319\n      jump\t// in\n    tag_318:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_317:\n        /* \"Farming.sol\":4051:4058  package */\n      dup1\n        /* \"Farming.sol\":4051:4077  package.minimumStakeAmount */\n      0x03\n      add\n      sload\n        /* \"Farming.sol\":4041:4047  amount */\n      dup5\n        /* \"Farming.sol\":4041:4077  amount >= package.minimumStakeAmount */\n      lt\n      iszero\n        /* \"Farming.sol\":4033:4107  require(amount >= package.minimumStakeAmount, \"Insufficient stake amount\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_321\n      swap1\n      tag_322\n      jump\t// in\n    tag_321:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_320:\n        /* \"Farming.sol\":4118:4249  IERC20(package.stakeTokenAddress).safeTransferFrom(... */\n      tag_323\n        /* \"Farming.sol\":4182:4192  msg.sender */\n      caller\n        /* \"Farming.sol\":4214:4218  this */\n      address\n        /* \"Farming.sol\":4233:4239  amount */\n      dup7\n        /* \"Farming.sol\":4125:4132  package */\n      dup5\n        /* \"Farming.sol\":4125:4150  package.stakeTokenAddress */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Farming.sol\":4118:4168  IERC20(package.stakeTokenAddress).safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_324\n      swap1\n        /* \"Farming.sol\":4118:4249  IERC20(package.stakeTokenAddress).safeTransferFrom(... */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_323:\n        /* \"Farming.sol\":4260:4270  userStakes */\n      0x08\n        /* \"Farming.sol\":4260:4282  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":4271:4281  msg.sender */\n      caller\n        /* \"Farming.sol\":4260:4282  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":4301:4557  UserStake({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Farming.sol\":4340:4349  packageId */\n      dup8\n        /* \"Farming.sol\":4301:4557  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":4381:4387  amount */\n      dup7\n        /* \"Farming.sol\":4301:4557  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":4426:4441  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":4301:4557  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":4485:4500  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":4301:4557  UserStake({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Farming.sol\":4537:4542  false */\n      0x00\n        /* \"Farming.sol\":4301:4557  UserStake({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"Farming.sol\":4260:4567  userStakes[msg.sender].push(... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n        /* \"Farming.sol\":4608:4617  packageId */\n      dup5\n        /* \"Farming.sol\":4596:4606  msg.sender */\n      caller\n        /* \"Farming.sol\":4583:4643  StakeCreated(msg.sender, packageId, amount, block.timestamp) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x20400db7cf9bdfcb8b13ccfb8a7b4bb447c3244efdbc2336e6f6e1673d7bd845\n        /* \"Farming.sol\":4619:4625  amount */\n      dup7\n        /* \"Farming.sol\":4627:4642  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":4583:4643  StakeCreated(msg.sender, packageId, amount, block.timestamp) */\n      mload(0x40)\n      tag_326\n      swap3\n      swap2\n      swap1\n      tag_199\n      jump\t// in\n    tag_326:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Farming.sol\":3905:4650  {... */\n      pop\n        /* \"Farming.sol\":2874:2875  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1268:1269  _ */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_327\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_327:\n        /* \"Farming.sol\":3722:4650  function createStake(uint256 packageId, uint256 amount)... */\n      pop\n      pop\n      jump\t// out\n        /* \"Farming.sol\":1629:1658  uint256 public feePoolBalance */\n    tag_112:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"Farming.sol\":4656:5311  function claimStakeRewards(uint256 stakeId)... */\n    tag_116:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_329\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_166\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_329:\n        /* \"Farming.sol\":4757:4767  msg.sender */\n      caller\n        /* \"Farming.sol\":4769:4776  stakeId */\n      dup2\n        /* \"Farming.sol\":2967:2977  userStakes */\n      0x08\n        /* \"Farming.sol\":2967:2983  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":2978:2982  user */\n      dup4\n        /* \"Farming.sol\":2967:2983  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":2967:2990  userStakes[user].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Farming.sol\":2957:2964  stakeId */\n      dup2\n        /* \"Farming.sol\":2957:2990  stakeId < userStakes[user].length */\n      lt\n        /* \"Farming.sol\":2949:3011  require(stakeId < userStakes[user].length, \"Invalid stake ID\") */\n      tag_331\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_332\n      swap1\n      tag_170\n      jump\t// in\n    tag_332:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_331:\n        /* \"Farming.sol\":3070:3071  0 */\n      0x00\n        /* \"Farming.sol\":3029:3039  userStakes */\n      0x08\n        /* \"Farming.sol\":3029:3045  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":3040:3044  user */\n      dup5\n        /* \"Farming.sol\":3029:3045  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":3046:3053  stakeId */\n      dup3\n        /* \"Farming.sol\":3029:3054  userStakes[user][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_333\n      jumpi\n      tag_334\n      tag_161\n      jump\t// in\n    tag_334:\n    tag_333:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":3029:3067  userStakes[user][stakeId].stakedAmount */\n      0x01\n      add\n      sload\n        /* \"Farming.sol\":3029:3071  userStakes[user][stakeId].stakedAmount > 0 */\n      gt\n        /* \"Farming.sol\":3021:3090  require(userStakes[user][stakeId].stakedAmount > 0, \"Inactive stake\") */\n      tag_336\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_337\n      swap1\n      tag_176\n      jump\t// in\n    tag_337:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_336:\n        /* \"Farming.sol\":4792:4819  UserStake storage stakeInfo */\n      0x00\n        /* \"Farming.sol\":4822:4832  userStakes */\n      0x08\n        /* \"Farming.sol\":4822:4844  userStakes[msg.sender] */\n      0x00\n        /* \"Farming.sol\":4833:4843  msg.sender */\n      caller\n        /* \"Farming.sol\":4822:4844  userStakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":4845:4852  stakeId */\n      dup5\n        /* \"Farming.sol\":4822:4853  userStakes[msg.sender][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_339\n      jumpi\n      tag_340\n      tag_161\n      jump\t// in\n    tag_340:\n    tag_339:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":4792:4853  UserStake storage stakeInfo = userStakes[msg.sender][stakeId] */\n      swap1\n      pop\n        /* \"Farming.sol\":4863:4883  uint256 rewardAmount */\n      0x00\n        /* \"Farming.sol\":4886:4931  _calculateAccruedRewards(msg.sender, stakeId) */\n      tag_342\n        /* \"Farming.sol\":4911:4921  msg.sender */\n      caller\n        /* \"Farming.sol\":4923:4930  stakeId */\n      dup7\n        /* \"Farming.sol\":4886:4910  _calculateAccruedRewards */\n      tag_190\n        /* \"Farming.sol\":4886:4931  _calculateAccruedRewards(msg.sender, stakeId) */\n      jump\t// in\n    tag_342:\n        /* \"Farming.sol\":4863:4931  uint256 rewardAmount = _calculateAccruedRewards(msg.sender, stakeId) */\n      swap1\n      pop\n        /* \"Farming.sol\":4964:4965  0 */\n      0x00\n        /* \"Farming.sol\":4949:4961  rewardAmount */\n      dup2\n        /* \"Farming.sol\":4949:4965  rewardAmount > 0 */\n      gt\n        /* \"Farming.sol\":4941:4990  require(rewardAmount > 0, \"No rewards available\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_344\n      swap1\n      tag_345\n      jump\t// in\n    tag_344:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_343:\n        /* \"Farming.sol\":5038:5053  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":5001:5010  stakeInfo */\n      dup3\n        /* \"Farming.sol\":5001:5035  stakeInfo.lastRewardClaimTimestamp */\n      0x03\n      add\n        /* \"Farming.sol\":5001:5053  stakeInfo.lastRewardClaimTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":5068:5077  stakeInfo */\n      dup2\n        /* \"Farming.sol\":5068:5095  stakeInfo.isAutoCompounding */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Farming.sol\":5064:5241  if (stakeInfo.isAutoCompounding) {... */\n      iszero\n      tag_346\n      jumpi\n        /* \"Farming.sol\":5137:5149  rewardAmount */\n      dup1\n        /* \"Farming.sol\":5111:5120  stakeInfo */\n      dup3\n        /* \"Farming.sol\":5111:5133  stakeInfo.stakedAmount */\n      0x01\n      add\n      0x00\n        /* \"Farming.sol\":5111:5149  stakeInfo.stakedAmount += rewardAmount */\n      dup3\n      dup3\n      sload\n      tag_347\n      swap2\n      swap1\n      tag_185\n      jump\t// in\n    tag_347:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Farming.sol\":5064:5241  if (stakeInfo.isAutoCompounding) {... */\n      jump(tag_348)\n    tag_346:\n        /* \"Farming.sol\":5180:5230  rewardToken.safeTransfer(msg.sender, rewardAmount) */\n      tag_349\n        /* \"Farming.sol\":5205:5215  msg.sender */\n      caller\n        /* \"Farming.sol\":5217:5229  rewardAmount */\n      dup3\n        /* \"Farming.sol\":5180:5191  rewardToken */\n      immutable(\"0xef764c0d6484421d36739b89ad3d60c379efca83bed6303739614a73e091b0d2\")\n        /* \"Farming.sol\":5180:5204  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"Farming.sol\":5180:5230  rewardToken.safeTransfer(msg.sender, rewardAmount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_349:\n        /* \"Farming.sol\":5064:5241  if (stakeInfo.isAutoCompounding) {... */\n    tag_348:\n        /* \"Farming.sol\":5282:5289  stakeId */\n      dup5\n        /* \"Farming.sol\":5270:5280  msg.sender */\n      caller\n        /* \"Farming.sol\":5256:5304  RewardClaimed(msg.sender, stakeId, rewardAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743\n        /* \"Farming.sol\":5291:5303  rewardAmount */\n      dup4\n        /* \"Farming.sol\":5256:5304  RewardClaimed(msg.sender, stakeId, rewardAmount) */\n      mload(0x40)\n      tag_350\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_350:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Farming.sol\":4782:5311  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2292:2293  _ */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_351\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_201\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_351:\n        /* \"Farming.sol\":4656:5311  function claimStakeRewards(uint256 stakeId)... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":1288:1335  uint256 public constant BPS_DENOMINATOR = 10000 */\n    tag_118:\n        /* \"Farming.sol\":1330:1335  10000 */\n      0x2710\n        /* \"Farming.sol\":1288:1335  uint256 public constant BPS_DENOMINATOR = 10000 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n    tag_121:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1285:1292  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1311:1324  _pendingOwner */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1304:1324  return _pendingOwner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1232:1331  function pendingOwner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Farming.sol\":1231:1282  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_124:\n        /* \"Farming.sol\":1274:1282  365 days */\n      0x01e13380\n        /* \"Farming.sol\":1231:1282  uint256 public constant SECONDS_PER_YEAR = 365 days */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_354\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_354:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1754:1762  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1738:1751  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1738:1762  _pendingOwner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1811:1819  newOwner */\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1777:1820  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1809  owner() */\n      tag_356\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1807  owner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1802:1809  owner() */\n      jump\t// in\n    tag_356:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1777:1820  OwnershipTransferStarted(owner(), newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":1649:1827  function transferOwnership(address newOwner) public virtual override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Farming.sol\":1415:1450  IERC20 public immutable rewardToken */\n    tag_130:\n      immutable(\"0xef764c0d6484421d36739b89ad3d60c379efca83bed6303739614a73e091b0d2\")\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_358\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_358:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_359\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_92\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_360\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_361\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_362\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_362:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      dup1\n      sload\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_364\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_365\n      swap1\n      tag_366\n      jump\t// in\n    tag_365:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_364:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"Farming.sol\":6929:7469  function _calculateAccruedRewards(address user, uint256 stakeId)... */\n    tag_190:\n        /* \"Farming.sol\":7041:7048  uint256 */\n      0x00\n        /* \"Farming.sol\":7064:7090  UserStake memory stakeInfo */\n      0x00\n        /* \"Farming.sol\":7093:7103  userStakes */\n      0x08\n        /* \"Farming.sol\":7093:7109  userStakes[user] */\n      0x00\n        /* \"Farming.sol\":7104:7108  user */\n      dup6\n        /* \"Farming.sol\":7093:7109  userStakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Farming.sol\":7110:7117  stakeId */\n      dup4\n        /* \"Farming.sol\":7093:7118  userStakes[user][stakeId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_368\n      jumpi\n      tag_369\n      tag_161\n      jump\t// in\n    tag_369:\n    tag_368:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":7064:7118  UserStake memory stakeInfo = userStakes[user][stakeId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":7158:7159  0 */\n      0x00\n        /* \"Farming.sol\":7132:7141  stakeInfo */\n      dup2\n        /* \"Farming.sol\":7132:7154  stakeInfo.stakedAmount */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":7132:7159  stakeInfo.stakedAmount == 0 */\n      sub\n        /* \"Farming.sol\":7128:7169  if (stakeInfo.stakedAmount == 0) return 0 */\n      tag_371\n      jumpi\n        /* \"Farming.sol\":7168:7169  0 */\n      0x00\n        /* \"Farming.sol\":7161:7169  return 0 */\n      swap2\n      pop\n      pop\n      jump(tag_367)\n        /* \"Farming.sol\":7128:7169  if (stakeInfo.stakedAmount == 0) return 0 */\n    tag_371:\n        /* \"Farming.sol\":7180:7206  FarmPackage memory package */\n      0x00\n        /* \"Farming.sol\":7209:7221  farmPackages */\n      0x04\n        /* \"Farming.sol\":7222:7231  stakeInfo */\n      dup3\n        /* \"Farming.sol\":7222:7241  stakeInfo.packageId */\n      0x00\n      add\n      mload\n        /* \"Farming.sol\":7209:7242  farmPackages[stakeInfo.packageId] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_372\n      jumpi\n      tag_373\n      tag_161\n      jump\t// in\n    tag_373:\n    tag_372:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Farming.sol\":7180:7242  FarmPackage memory package = farmPackages[stakeInfo.packageId] */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Farming.sol\":7252:7271  uint256 elapsedTime */\n      0x00\n        /* \"Farming.sol\":7292:7301  stakeInfo */\n      dup3\n        /* \"Farming.sol\":7292:7326  stakeInfo.lastRewardClaimTimestamp */\n      0x60\n      add\n      mload\n        /* \"Farming.sol\":7274:7289  block.timestamp */\n      timestamp\n        /* \"Farming.sol\":7274:7326  block.timestamp - stakeInfo.lastRewardClaimTimestamp */\n      tag_375\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_375:\n        /* \"Farming.sol\":7252:7326  uint256 elapsedTime = block.timestamp - stakeInfo.lastRewardClaimTimestamp */\n      swap1\n      pop\n        /* \"Farming.sol\":1330:1335  10000 */\n      0x2710\n        /* \"Farming.sol\":1274:1282  365 days */\n      0x01e13380\n        /* \"Farming.sol\":7427:7461  SECONDS_PER_YEAR * BPS_DENOMINATOR */\n      tag_376\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_376:\n        /* \"Farming.sol\":7395:7406  elapsedTime */\n      dup2\n        /* \"Farming.sol\":7378:7385  package */\n      dup4\n        /* \"Farming.sol\":7378:7392  package.apyBps */\n      0x40\n      add\n      mload\n        /* \"Farming.sol\":7353:7362  stakeInfo */\n      dup6\n        /* \"Farming.sol\":7353:7375  stakeInfo.stakedAmount */\n      0x20\n      add\n      mload\n        /* \"Farming.sol\":7353:7392  stakeInfo.stakedAmount * package.apyBps */\n      tag_378\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_378:\n        /* \"Farming.sol\":7353:7406  stakeInfo.stakedAmount * package.apyBps * elapsedTime */\n      tag_379\n      swap2\n      swap1\n      tag_377\n      jump\t// in\n    tag_379:\n        /* \"Farming.sol\":7352:7462  (stakeInfo.stakedAmount * package.apyBps * elapsedTime) / ... */\n      tag_380\n      swap2\n      swap1\n      tag_381\n      jump\t// in\n    tag_380:\n        /* \"Farming.sol\":7345:7462  return (stakeInfo.stakedAmount * package.apyBps * elapsedTime) / ... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"Farming.sol\":6929:7469  function _calculateAccruedRewards(address user, uint256 stakeId)... */\n    tag_367:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_383\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_384\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_384:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_383:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_201:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n    tag_216:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      tag_388\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1500  _requirePaused */\n      tag_389\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1486:1502  _requirePaused() */\n      jump\t// in\n    tag_388:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2501:2506  false */\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2498  _paused */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2491:2506  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      tag_391\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2540  _msgSender */\n      tag_255\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2530:2542  _msgSender() */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2521:2543  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_392\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_392:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2433:2550  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n    tag_221:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      tag_394\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1256  _requireNotPaused */\n      tag_305\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1239:1258  _requireNotPaused() */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2255:2259  true */\n      0x01\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2252  _paused */\n      0x03\n      0x00\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2245:2259  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      tag_396\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2291  _msgSender */\n      tag_255\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2281:2293  _msgSender() */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2274:2294  Paused(_msgSender()) */\n      mload(0x40)\n      tag_397\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_397:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2186:2301  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n    tag_252:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2100:2113  _pendingOwner */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2093:2113  delete _pendingOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n      tag_399\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2148:2156  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2147  super._transferOwnership */\n      tag_400\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2123:2157  super._transferOwnership(newOwner) */\n      jump\t// in\n    tag_399:\n        /* \"@openzeppelin/contracts/access/Ownable2Step.sol\":2011:2164  function _transferOwnership(address newOwner) internal virtual override {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_255:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n    tag_305:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      tag_403\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1843  paused */\n      tag_64\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1837:1845  paused() */\n      jump\t// in\n    tag_403:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1836:1845  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1828:1866  require(!paused(), \"Pausable: paused\") */\n      tag_404\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_405\n      swap1\n      tag_406\n      jump\t// in\n    tag_405:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_404:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1767:1873  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_324:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_408\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_409\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_410\n      jump\t// in\n    tag_409:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_385\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_412\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_414)\n    tag_413:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_415\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_416\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_416:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_415:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      tag_418\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2017  paused */\n      tag_64\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2011:2019  paused() */\n      jump\t// in\n    tag_418:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":2003:2044  require(paused(), \"Pausable: not paused\") */\n      tag_419\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_420\n      swap1\n      tag_421\n      jump\t// in\n    tag_420:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_419:\n        /* \"@openzeppelin/contracts/security/Pausable.sol\":1945:2051  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_400:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n    tag_240:\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_424:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_426:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_427:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_500\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_426\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_428:\n        /* \"#utility.yul\":641:665   */\n      tag_502\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_427\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_503:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_429:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_505\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_428\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:918   */\n    tag_430:\n        /* \"#utility.yul\":878:885   */\n      0x00\n        /* \"#utility.yul\":907:912   */\n      dup2\n        /* \"#utility.yul\":896:912   */\n      swap1\n      pop\n        /* \"#utility.yul\":841:918   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":924:1046   */\n    tag_431:\n        /* \"#utility.yul\":997:1021   */\n      tag_508\n        /* \"#utility.yul\":1015:1020   */\n      dup2\n        /* \"#utility.yul\":997:1021   */\n      tag_430\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":990:995   */\n      dup2\n        /* \"#utility.yul\":987:1022   */\n      eq\n        /* \"#utility.yul\":977:1040   */\n      tag_509\n      jumpi\n        /* \"#utility.yul\":1036:1037   */\n      0x00\n        /* \"#utility.yul\":1033:1034   */\n      0x00\n        /* \"#utility.yul\":1026:1038   */\n      revert\n        /* \"#utility.yul\":977:1040   */\n    tag_509:\n        /* \"#utility.yul\":924:1046   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1052:1191   */\n    tag_432:\n        /* \"#utility.yul\":1098:1103   */\n      0x00\n        /* \"#utility.yul\":1136:1142   */\n      dup2\n        /* \"#utility.yul\":1123:1143   */\n      calldataload\n        /* \"#utility.yul\":1114:1143   */\n      swap1\n      pop\n        /* \"#utility.yul\":1152:1185   */\n      tag_511\n        /* \"#utility.yul\":1179:1184   */\n      dup2\n        /* \"#utility.yul\":1152:1185   */\n      tag_431\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":1052:1191   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1197:1962   */\n    tag_40:\n        /* \"#utility.yul\":1283:1289   */\n      0x00\n        /* \"#utility.yul\":1291:1297   */\n      0x00\n        /* \"#utility.yul\":1299:1305   */\n      0x00\n        /* \"#utility.yul\":1307:1313   */\n      0x00\n        /* \"#utility.yul\":1356:1359   */\n      0x80\n        /* \"#utility.yul\":1344:1353   */\n      dup6\n        /* \"#utility.yul\":1335:1342   */\n      dup8\n        /* \"#utility.yul\":1331:1354   */\n      sub\n        /* \"#utility.yul\":1327:1360   */\n      slt\n        /* \"#utility.yul\":1324:1444   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":1363:1442   */\n      tag_514\n      tag_424\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1324:1444   */\n    tag_513:\n        /* \"#utility.yul\":1483:1484   */\n      0x00\n        /* \"#utility.yul\":1508:1561   */\n      tag_515\n        /* \"#utility.yul\":1553:1560   */\n      dup8\n        /* \"#utility.yul\":1544:1550   */\n      dup3\n        /* \"#utility.yul\":1533:1542   */\n      dup9\n        /* \"#utility.yul\":1529:1551   */\n      add\n        /* \"#utility.yul\":1508:1561   */\n      tag_429\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":1498:1561   */\n      swap5\n      pop\n        /* \"#utility.yul\":1454:1571   */\n      pop\n        /* \"#utility.yul\":1610:1612   */\n      0x20\n        /* \"#utility.yul\":1636:1689   */\n      tag_516\n        /* \"#utility.yul\":1681:1688   */\n      dup8\n        /* \"#utility.yul\":1672:1678   */\n      dup3\n        /* \"#utility.yul\":1661:1670   */\n      dup9\n        /* \"#utility.yul\":1657:1679   */\n      add\n        /* \"#utility.yul\":1636:1689   */\n      tag_432\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":1626:1689   */\n      swap4\n      pop\n        /* \"#utility.yul\":1581:1699   */\n      pop\n        /* \"#utility.yul\":1738:1740   */\n      0x40\n        /* \"#utility.yul\":1764:1817   */\n      tag_517\n        /* \"#utility.yul\":1809:1816   */\n      dup8\n        /* \"#utility.yul\":1800:1806   */\n      dup3\n        /* \"#utility.yul\":1789:1798   */\n      dup9\n        /* \"#utility.yul\":1785:1807   */\n      add\n        /* \"#utility.yul\":1764:1817   */\n      tag_432\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":1754:1817   */\n      swap3\n      pop\n        /* \"#utility.yul\":1709:1827   */\n      pop\n        /* \"#utility.yul\":1866:1868   */\n      0x60\n        /* \"#utility.yul\":1892:1945   */\n      tag_518\n        /* \"#utility.yul\":1937:1944   */\n      dup8\n        /* \"#utility.yul\":1928:1934   */\n      dup3\n        /* \"#utility.yul\":1917:1926   */\n      dup9\n        /* \"#utility.yul\":1913:1935   */\n      add\n        /* \"#utility.yul\":1892:1945   */\n      tag_432\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":1882:1945   */\n      swap2\n      pop\n        /* \"#utility.yul\":1837:1955   */\n      pop\n        /* \"#utility.yul\":1197:1962   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1968:2058   */\n    tag_433:\n        /* \"#utility.yul\":2002:2009   */\n      0x00\n        /* \"#utility.yul\":2045:2050   */\n      dup2\n        /* \"#utility.yul\":2038:2051   */\n      iszero\n        /* \"#utility.yul\":2031:2052   */\n      iszero\n        /* \"#utility.yul\":2020:2052   */\n      swap1\n      pop\n        /* \"#utility.yul\":1968:2058   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2064:2180   */\n    tag_434:\n        /* \"#utility.yul\":2134:2155   */\n      tag_521\n        /* \"#utility.yul\":2149:2154   */\n      dup2\n        /* \"#utility.yul\":2134:2155   */\n      tag_433\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":2127:2132   */\n      dup2\n        /* \"#utility.yul\":2124:2156   */\n      eq\n        /* \"#utility.yul\":2114:2174   */\n      tag_522\n      jumpi\n        /* \"#utility.yul\":2170:2171   */\n      0x00\n        /* \"#utility.yul\":2167:2168   */\n      0x00\n        /* \"#utility.yul\":2160:2172   */\n      revert\n        /* \"#utility.yul\":2114:2174   */\n    tag_522:\n        /* \"#utility.yul\":2064:2180   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2186:2319   */\n    tag_435:\n        /* \"#utility.yul\":2229:2234   */\n      0x00\n        /* \"#utility.yul\":2267:2273   */\n      dup2\n        /* \"#utility.yul\":2254:2274   */\n      calldataload\n        /* \"#utility.yul\":2245:2274   */\n      swap1\n      pop\n        /* \"#utility.yul\":2283:2313   */\n      tag_524\n        /* \"#utility.yul\":2307:2312   */\n      dup2\n        /* \"#utility.yul\":2283:2313   */\n      tag_434\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2186:2319   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2325:2793   */\n    tag_44:\n        /* \"#utility.yul\":2390:2396   */\n      0x00\n        /* \"#utility.yul\":2398:2404   */\n      0x00\n        /* \"#utility.yul\":2447:2449   */\n      0x40\n        /* \"#utility.yul\":2435:2444   */\n      dup4\n        /* \"#utility.yul\":2426:2433   */\n      dup6\n        /* \"#utility.yul\":2422:2445   */\n      sub\n        /* \"#utility.yul\":2418:2450   */\n      slt\n        /* \"#utility.yul\":2415:2534   */\n      iszero\n      tag_526\n      jumpi\n        /* \"#utility.yul\":2453:2532   */\n      tag_527\n      tag_424\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":2415:2534   */\n    tag_526:\n        /* \"#utility.yul\":2573:2574   */\n      0x00\n        /* \"#utility.yul\":2598:2651   */\n      tag_528\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2634:2640   */\n      dup3\n        /* \"#utility.yul\":2623:2632   */\n      dup7\n        /* \"#utility.yul\":2619:2641   */\n      add\n        /* \"#utility.yul\":2598:2651   */\n      tag_432\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":2588:2651   */\n      swap3\n      pop\n        /* \"#utility.yul\":2544:2661   */\n      pop\n        /* \"#utility.yul\":2700:2702   */\n      0x20\n        /* \"#utility.yul\":2726:2776   */\n      tag_529\n        /* \"#utility.yul\":2768:2775   */\n      dup6\n        /* \"#utility.yul\":2759:2765   */\n      dup3\n        /* \"#utility.yul\":2748:2757   */\n      dup7\n        /* \"#utility.yul\":2744:2766   */\n      add\n        /* \"#utility.yul\":2726:2776   */\n      tag_435\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":2716:2776   */\n      swap2\n      pop\n        /* \"#utility.yul\":2671:2786   */\n      pop\n        /* \"#utility.yul\":2325:2793   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2799:3128   */\n    tag_48:\n        /* \"#utility.yul\":2858:2864   */\n      0x00\n        /* \"#utility.yul\":2907:2909   */\n      0x20\n        /* \"#utility.yul\":2895:2904   */\n      dup3\n        /* \"#utility.yul\":2886:2893   */\n      dup5\n        /* \"#utility.yul\":2882:2905   */\n      sub\n        /* \"#utility.yul\":2878:2910   */\n      slt\n        /* \"#utility.yul\":2875:2994   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":2913:2992   */\n      tag_532\n      tag_424\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2875:2994   */\n    tag_531:\n        /* \"#utility.yul\":3033:3034   */\n      0x00\n        /* \"#utility.yul\":3058:3111   */\n      tag_533\n        /* \"#utility.yul\":3103:3110   */\n      dup5\n        /* \"#utility.yul\":3094:3100   */\n      dup3\n        /* \"#utility.yul\":3083:3092   */\n      dup6\n        /* \"#utility.yul\":3079:3101   */\n      add\n        /* \"#utility.yul\":3058:3111   */\n      tag_432\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3048:3111   */\n      swap2\n      pop\n        /* \"#utility.yul\":3004:3121   */\n      pop\n        /* \"#utility.yul\":2799:3128   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3134:3252   */\n    tag_436:\n        /* \"#utility.yul\":3221:3245   */\n      tag_535\n        /* \"#utility.yul\":3239:3244   */\n      dup2\n        /* \"#utility.yul\":3221:3245   */\n      tag_430\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3216:3219   */\n      dup3\n        /* \"#utility.yul\":3209:3246   */\n      mstore\n        /* \"#utility.yul\":3134:3252   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3258:3480   */\n    tag_53:\n        /* \"#utility.yul\":3351:3355   */\n      0x00\n        /* \"#utility.yul\":3389:3391   */\n      0x20\n        /* \"#utility.yul\":3378:3387   */\n      dup3\n        /* \"#utility.yul\":3374:3392   */\n      add\n        /* \"#utility.yul\":3366:3392   */\n      swap1\n      pop\n        /* \"#utility.yul\":3402:3473   */\n      tag_537\n        /* \"#utility.yul\":3470:3471   */\n      0x00\n        /* \"#utility.yul\":3459:3468   */\n      dup4\n        /* \"#utility.yul\":3455:3472   */\n      add\n        /* \"#utility.yul\":3446:3452   */\n      dup5\n        /* \"#utility.yul\":3402:3473   */\n      tag_436\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3258:3480   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3595   */\n    tag_437:\n        /* \"#utility.yul\":3567:3588   */\n      tag_539\n        /* \"#utility.yul\":3582:3587   */\n      dup2\n        /* \"#utility.yul\":3567:3588   */\n      tag_433\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":3562:3565   */\n      dup3\n        /* \"#utility.yul\":3555:3589   */\n      mstore\n        /* \"#utility.yul\":3486:3595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3601:3811   */\n    tag_66:\n        /* \"#utility.yul\":3688:3692   */\n      0x00\n        /* \"#utility.yul\":3726:3728   */\n      0x20\n        /* \"#utility.yul\":3715:3724   */\n      dup3\n        /* \"#utility.yul\":3711:3729   */\n      add\n        /* \"#utility.yul\":3703:3729   */\n      swap1\n      pop\n        /* \"#utility.yul\":3739:3804   */\n      tag_541\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3790:3799   */\n      dup4\n        /* \"#utility.yul\":3786:3803   */\n      add\n        /* \"#utility.yul\":3777:3783   */\n      dup5\n        /* \"#utility.yul\":3739:3804   */\n      tag_437\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3601:3811   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3817:3925   */\n    tag_438:\n        /* \"#utility.yul\":3894:3918   */\n      tag_543\n        /* \"#utility.yul\":3912:3917   */\n      dup2\n        /* \"#utility.yul\":3894:3918   */\n      tag_427\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":3889:3892   */\n      dup3\n        /* \"#utility.yul\":3882:3919   */\n      mstore\n        /* \"#utility.yul\":3817:3925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3931:4039   */\n    tag_439:\n        /* \"#utility.yul\":4008:4032   */\n      tag_545\n        /* \"#utility.yul\":4026:4031   */\n      dup2\n        /* \"#utility.yul\":4008:4032   */\n      tag_430\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4003:4006   */\n      dup3\n        /* \"#utility.yul\":3996:4033   */\n      mstore\n        /* \"#utility.yul\":3931:4039   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4045:4144   */\n    tag_440:\n        /* \"#utility.yul\":4116:4137   */\n      tag_547\n        /* \"#utility.yul\":4131:4136   */\n      dup2\n        /* \"#utility.yul\":4116:4137   */\n      tag_433\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":4111:4114   */\n      dup3\n        /* \"#utility.yul\":4104:4138   */\n      mstore\n        /* \"#utility.yul\":4045:4144   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4222:5294   */\n    tag_441:\n        /* \"#utility.yul\":4377:4381   */\n      0xa0\n        /* \"#utility.yul\":4372:4375   */\n      dup3\n        /* \"#utility.yul\":4368:4382   */\n      add\n        /* \"#utility.yul\":4477:4481   */\n      0x00\n        /* \"#utility.yul\":4470:4475   */\n      dup3\n        /* \"#utility.yul\":4466:4482   */\n      add\n        /* \"#utility.yul\":4460:4483   */\n      mload\n        /* \"#utility.yul\":4496:4559   */\n      tag_549\n        /* \"#utility.yul\":4553:4557   */\n      0x00\n        /* \"#utility.yul\":4548:4551   */\n      dup6\n        /* \"#utility.yul\":4544:4558   */\n      add\n        /* \"#utility.yul\":4530:4542   */\n      dup3\n        /* \"#utility.yul\":4496:4559   */\n      tag_438\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4392:4569   */\n      pop\n        /* \"#utility.yul\":4659:4663   */\n      0x20\n        /* \"#utility.yul\":4652:4657   */\n      dup3\n        /* \"#utility.yul\":4648:4664   */\n      add\n        /* \"#utility.yul\":4642:4665   */\n      mload\n        /* \"#utility.yul\":4678:4741   */\n      tag_550\n        /* \"#utility.yul\":4735:4739   */\n      0x20\n        /* \"#utility.yul\":4730:4733   */\n      dup6\n        /* \"#utility.yul\":4726:4740   */\n      add\n        /* \"#utility.yul\":4712:4724   */\n      dup3\n        /* \"#utility.yul\":4678:4741   */\n      tag_439\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":4579:4751   */\n      pop\n        /* \"#utility.yul\":4835:4839   */\n      0x40\n        /* \"#utility.yul\":4828:4833   */\n      dup3\n        /* \"#utility.yul\":4824:4840   */\n      add\n        /* \"#utility.yul\":4818:4841   */\n      mload\n        /* \"#utility.yul\":4854:4917   */\n      tag_551\n        /* \"#utility.yul\":4911:4915   */\n      0x40\n        /* \"#utility.yul\":4906:4909   */\n      dup6\n        /* \"#utility.yul\":4902:4916   */\n      add\n        /* \"#utility.yul\":4888:4900   */\n      dup3\n        /* \"#utility.yul\":4854:4917   */\n      tag_439\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":4761:4927   */\n      pop\n        /* \"#utility.yul\":5023:5027   */\n      0x60\n        /* \"#utility.yul\":5016:5021   */\n      dup3\n        /* \"#utility.yul\":5012:5028   */\n      add\n        /* \"#utility.yul\":5006:5029   */\n      mload\n        /* \"#utility.yul\":5042:5105   */\n      tag_552\n        /* \"#utility.yul\":5099:5103   */\n      0x60\n        /* \"#utility.yul\":5094:5097   */\n      dup6\n        /* \"#utility.yul\":5090:5104   */\n      add\n        /* \"#utility.yul\":5076:5088   */\n      dup3\n        /* \"#utility.yul\":5042:5105   */\n      tag_439\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":4937:5115   */\n      pop\n        /* \"#utility.yul\":5201:5205   */\n      0x80\n        /* \"#utility.yul\":5194:5199   */\n      dup3\n        /* \"#utility.yul\":5190:5206   */\n      add\n        /* \"#utility.yul\":5184:5207   */\n      mload\n        /* \"#utility.yul\":5220:5277   */\n      tag_553\n        /* \"#utility.yul\":5271:5275   */\n      0x80\n        /* \"#utility.yul\":5266:5269   */\n      dup6\n        /* \"#utility.yul\":5262:5276   */\n      add\n        /* \"#utility.yul\":5248:5260   */\n      dup3\n        /* \"#utility.yul\":5220:5277   */\n      tag_440\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5125:5287   */\n      pop\n        /* \"#utility.yul\":4346:5294   */\n      pop\n        /* \"#utility.yul\":4222:5294   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5300:5639   */\n    tag_71:\n        /* \"#utility.yul\":5451:5455   */\n      0x00\n        /* \"#utility.yul\":5489:5492   */\n      0xa0\n        /* \"#utility.yul\":5478:5487   */\n      dup3\n        /* \"#utility.yul\":5474:5493   */\n      add\n        /* \"#utility.yul\":5466:5493   */\n      swap1\n      pop\n        /* \"#utility.yul\":5503:5632   */\n      tag_555\n        /* \"#utility.yul\":5629:5630   */\n      0x00\n        /* \"#utility.yul\":5618:5627   */\n      dup4\n        /* \"#utility.yul\":5614:5631   */\n      add\n        /* \"#utility.yul\":5605:5611   */\n      dup5\n        /* \"#utility.yul\":5503:5632   */\n      tag_441\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":5300:5639   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5645:6119   */\n    tag_78:\n        /* \"#utility.yul\":5713:5719   */\n      0x00\n        /* \"#utility.yul\":5721:5727   */\n      0x00\n        /* \"#utility.yul\":5770:5772   */\n      0x40\n        /* \"#utility.yul\":5758:5767   */\n      dup4\n        /* \"#utility.yul\":5749:5756   */\n      dup6\n        /* \"#utility.yul\":5745:5768   */\n      sub\n        /* \"#utility.yul\":5741:5773   */\n      slt\n        /* \"#utility.yul\":5738:5857   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":5776:5855   */\n      tag_558\n      tag_424\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5738:5857   */\n    tag_557:\n        /* \"#utility.yul\":5896:5897   */\n      0x00\n        /* \"#utility.yul\":5921:5974   */\n      tag_559\n        /* \"#utility.yul\":5966:5973   */\n      dup6\n        /* \"#utility.yul\":5957:5963   */\n      dup3\n        /* \"#utility.yul\":5946:5955   */\n      dup7\n        /* \"#utility.yul\":5942:5964   */\n      add\n        /* \"#utility.yul\":5921:5974   */\n      tag_432\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":5911:5974   */\n      swap3\n      pop\n        /* \"#utility.yul\":5867:5984   */\n      pop\n        /* \"#utility.yul\":6023:6025   */\n      0x20\n        /* \"#utility.yul\":6049:6102   */\n      tag_560\n        /* \"#utility.yul\":6094:6101   */\n      dup6\n        /* \"#utility.yul\":6085:6091   */\n      dup3\n        /* \"#utility.yul\":6074:6083   */\n      dup7\n        /* \"#utility.yul\":6070:6092   */\n      add\n        /* \"#utility.yul\":6049:6102   */\n      tag_432\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":6039:6102   */\n      swap2\n      pop\n        /* \"#utility.yul\":5994:6112   */\n      pop\n        /* \"#utility.yul\":5645:6119   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6125:6599   */\n    tag_82:\n        /* \"#utility.yul\":6193:6199   */\n      0x00\n        /* \"#utility.yul\":6201:6207   */\n      0x00\n        /* \"#utility.yul\":6250:6252   */\n      0x40\n        /* \"#utility.yul\":6238:6247   */\n      dup4\n        /* \"#utility.yul\":6229:6236   */\n      dup6\n        /* \"#utility.yul\":6225:6248   */\n      sub\n        /* \"#utility.yul\":6221:6253   */\n      slt\n        /* \"#utility.yul\":6218:6337   */\n      iszero\n      tag_562\n      jumpi\n        /* \"#utility.yul\":6256:6335   */\n      tag_563\n      tag_424\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":6218:6337   */\n    tag_562:\n        /* \"#utility.yul\":6376:6377   */\n      0x00\n        /* \"#utility.yul\":6401:6454   */\n      tag_564\n        /* \"#utility.yul\":6446:6453   */\n      dup6\n        /* \"#utility.yul\":6437:6443   */\n      dup3\n        /* \"#utility.yul\":6426:6435   */\n      dup7\n        /* \"#utility.yul\":6422:6444   */\n      add\n        /* \"#utility.yul\":6401:6454   */\n      tag_429\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":6391:6454   */\n      swap3\n      pop\n        /* \"#utility.yul\":6347:6464   */\n      pop\n        /* \"#utility.yul\":6503:6505   */\n      0x20\n        /* \"#utility.yul\":6529:6582   */\n      tag_565\n        /* \"#utility.yul\":6574:6581   */\n      dup6\n        /* \"#utility.yul\":6565:6571   */\n      dup3\n        /* \"#utility.yul\":6554:6563   */\n      dup7\n        /* \"#utility.yul\":6550:6572   */\n      add\n        /* \"#utility.yul\":6529:6582   */\n      tag_432\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":6519:6582   */\n      swap2\n      pop\n        /* \"#utility.yul\":6474:6592   */\n      pop\n        /* \"#utility.yul\":6125:6599   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6605:6934   */\n    tag_87:\n        /* \"#utility.yul\":6664:6670   */\n      0x00\n        /* \"#utility.yul\":6713:6715   */\n      0x20\n        /* \"#utility.yul\":6701:6710   */\n      dup3\n        /* \"#utility.yul\":6692:6699   */\n      dup5\n        /* \"#utility.yul\":6688:6711   */\n      sub\n        /* \"#utility.yul\":6684:6716   */\n      slt\n        /* \"#utility.yul\":6681:6800   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":6719:6798   */\n      tag_568\n      tag_424\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":6681:6800   */\n    tag_567:\n        /* \"#utility.yul\":6839:6840   */\n      0x00\n        /* \"#utility.yul\":6864:6917   */\n      tag_569\n        /* \"#utility.yul\":6909:6916   */\n      dup5\n        /* \"#utility.yul\":6900:6906   */\n      dup3\n        /* \"#utility.yul\":6889:6898   */\n      dup6\n        /* \"#utility.yul\":6885:6907   */\n      add\n        /* \"#utility.yul\":6864:6917   */\n      tag_429\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":6854:6917   */\n      swap2\n      pop\n        /* \"#utility.yul\":6810:6927   */\n      pop\n        /* \"#utility.yul\":6605:6934   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6940:7081   */\n    tag_442:\n        /* \"#utility.yul\":7034:7040   */\n      0x00\n        /* \"#utility.yul\":7068:7073   */\n      dup2\n        /* \"#utility.yul\":7062:7074   */\n      mload\n        /* \"#utility.yul\":7052:7074   */\n      swap1\n      pop\n        /* \"#utility.yul\":6940:7081   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7087:7298   */\n    tag_443:\n        /* \"#utility.yul\":7213:7224   */\n      0x00\n        /* \"#utility.yul\":7247:7253   */\n      dup3\n        /* \"#utility.yul\":7242:7245   */\n      dup3\n        /* \"#utility.yul\":7235:7254   */\n      mstore\n        /* \"#utility.yul\":7287:7291   */\n      0x20\n        /* \"#utility.yul\":7282:7285   */\n      dup3\n        /* \"#utility.yul\":7278:7292   */\n      add\n        /* \"#utility.yul\":7263:7292   */\n      swap1\n      pop\n        /* \"#utility.yul\":7087:7298   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7304:7463   */\n    tag_444:\n        /* \"#utility.yul\":7398:7402   */\n      0x00\n        /* \"#utility.yul\":7421:7424   */\n      dup2\n        /* \"#utility.yul\":7413:7424   */\n      swap1\n      pop\n        /* \"#utility.yul\":7451:7455   */\n      0x20\n        /* \"#utility.yul\":7446:7449   */\n      dup3\n        /* \"#utility.yul\":7442:7456   */\n      add\n        /* \"#utility.yul\":7434:7456   */\n      swap1\n      pop\n        /* \"#utility.yul\":7304:7463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7537:8615   */\n    tag_445:\n        /* \"#utility.yul\":7678:7682   */\n      0xa0\n        /* \"#utility.yul\":7673:7676   */\n      dup3\n        /* \"#utility.yul\":7669:7683   */\n      add\n        /* \"#utility.yul\":7770:7774   */\n      0x00\n        /* \"#utility.yul\":7763:7768   */\n      dup3\n        /* \"#utility.yul\":7759:7775   */\n      add\n        /* \"#utility.yul\":7753:7776   */\n      mload\n        /* \"#utility.yul\":7789:7852   */\n      tag_574\n        /* \"#utility.yul\":7846:7850   */\n      0x00\n        /* \"#utility.yul\":7841:7844   */\n      dup6\n        /* \"#utility.yul\":7837:7851   */\n      add\n        /* \"#utility.yul\":7823:7835   */\n      dup3\n        /* \"#utility.yul\":7789:7852   */\n      tag_439\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":7693:7862   */\n      pop\n        /* \"#utility.yul\":7952:7956   */\n      0x20\n        /* \"#utility.yul\":7945:7950   */\n      dup3\n        /* \"#utility.yul\":7941:7957   */\n      add\n        /* \"#utility.yul\":7935:7958   */\n      mload\n        /* \"#utility.yul\":7971:8034   */\n      tag_575\n        /* \"#utility.yul\":8028:8032   */\n      0x20\n        /* \"#utility.yul\":8023:8026   */\n      dup6\n        /* \"#utility.yul\":8019:8033   */\n      add\n        /* \"#utility.yul\":8005:8017   */\n      dup3\n        /* \"#utility.yul\":7971:8034   */\n      tag_439\n      jump\t// in\n    tag_575:\n        /* \"#utility.yul\":7872:8044   */\n      pop\n        /* \"#utility.yul\":8141:8145   */\n      0x40\n        /* \"#utility.yul\":8134:8139   */\n      dup3\n        /* \"#utility.yul\":8130:8146   */\n      add\n        /* \"#utility.yul\":8124:8147   */\n      mload\n        /* \"#utility.yul\":8160:8223   */\n      tag_576\n        /* \"#utility.yul\":8217:8221   */\n      0x40\n        /* \"#utility.yul\":8212:8215   */\n      dup6\n        /* \"#utility.yul\":8208:8222   */\n      add\n        /* \"#utility.yul\":8194:8206   */\n      dup3\n        /* \"#utility.yul\":8160:8223   */\n      tag_439\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":8054:8233   */\n      pop\n        /* \"#utility.yul\":8335:8339   */\n      0x60\n        /* \"#utility.yul\":8328:8333   */\n      dup3\n        /* \"#utility.yul\":8324:8340   */\n      add\n        /* \"#utility.yul\":8318:8341   */\n      mload\n        /* \"#utility.yul\":8354:8417   */\n      tag_577\n        /* \"#utility.yul\":8411:8415   */\n      0x60\n        /* \"#utility.yul\":8406:8409   */\n      dup6\n        /* \"#utility.yul\":8402:8416   */\n      add\n        /* \"#utility.yul\":8388:8400   */\n      dup3\n        /* \"#utility.yul\":8354:8417   */\n      tag_439\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":8243:8427   */\n      pop\n        /* \"#utility.yul\":8522:8526   */\n      0x80\n        /* \"#utility.yul\":8515:8520   */\n      dup3\n        /* \"#utility.yul\":8511:8527   */\n      add\n        /* \"#utility.yul\":8505:8528   */\n      mload\n        /* \"#utility.yul\":8541:8598   */\n      tag_578\n        /* \"#utility.yul\":8592:8596   */\n      0x80\n        /* \"#utility.yul\":8587:8590   */\n      dup6\n        /* \"#utility.yul\":8583:8597   */\n      add\n        /* \"#utility.yul\":8569:8581   */\n      dup3\n        /* \"#utility.yul\":8541:8598   */\n      tag_440\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":8437:8608   */\n      pop\n        /* \"#utility.yul\":7647:8615   */\n      pop\n        /* \"#utility.yul\":7537:8615   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8621:8908   */\n    tag_446:\n        /* \"#utility.yul\":8744:8754   */\n      0x00\n        /* \"#utility.yul\":8765:8865   */\n      tag_580\n        /* \"#utility.yul\":8861:8864   */\n      dup4\n        /* \"#utility.yul\":8853:8859   */\n      dup4\n        /* \"#utility.yul\":8765:8865   */\n      tag_445\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":8897:8901   */\n      0xa0\n        /* \"#utility.yul\":8892:8895   */\n      dup4\n        /* \"#utility.yul\":8888:8902   */\n      add\n        /* \"#utility.yul\":8874:8902   */\n      swap1\n      pop\n        /* \"#utility.yul\":8621:8908   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8914:9054   */\n    tag_447:\n        /* \"#utility.yul\":9011:9015   */\n      0x00\n        /* \"#utility.yul\":9043:9047   */\n      0x20\n        /* \"#utility.yul\":9038:9041   */\n      dup3\n        /* \"#utility.yul\":9034:9048   */\n      add\n        /* \"#utility.yul\":9026:9048   */\n      swap1\n      pop\n        /* \"#utility.yul\":8914:9054   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9132:10080   */\n    tag_448:\n        /* \"#utility.yul\":9305:9308   */\n      0x00\n        /* \"#utility.yul\":9334:9415   */\n      tag_583\n        /* \"#utility.yul\":9409:9414   */\n      dup3\n        /* \"#utility.yul\":9334:9415   */\n      tag_442\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":9431:9544   */\n      tag_584\n        /* \"#utility.yul\":9537:9543   */\n      dup2\n        /* \"#utility.yul\":9532:9535   */\n      dup6\n        /* \"#utility.yul\":9431:9544   */\n      tag_443\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":9424:9544   */\n      swap4\n      pop\n        /* \"#utility.yul\":9568:9651   */\n      tag_585\n        /* \"#utility.yul\":9645:9650   */\n      dup4\n        /* \"#utility.yul\":9568:9651   */\n      tag_444\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":9674:9681   */\n      dup1\n        /* \"#utility.yul\":9705:9706   */\n      0x00\n        /* \"#utility.yul\":9690:10055   */\n    tag_586:\n        /* \"#utility.yul\":9715:9721   */\n      dup4\n        /* \"#utility.yul\":9712:9713   */\n      dup2\n        /* \"#utility.yul\":9709:9722   */\n      lt\n        /* \"#utility.yul\":9690:10055   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":9791:9797   */\n      dup2\n        /* \"#utility.yul\":9785:9798   */\n      mload\n        /* \"#utility.yul\":9818:9935   */\n      tag_589\n        /* \"#utility.yul\":9931:9934   */\n      dup9\n        /* \"#utility.yul\":9916:9929   */\n      dup3\n        /* \"#utility.yul\":9818:9935   */\n      tag_446\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":9811:9935   */\n      swap8\n      pop\n        /* \"#utility.yul\":9958:10045   */\n      tag_590\n        /* \"#utility.yul\":10038:10044   */\n      dup4\n        /* \"#utility.yul\":9958:10045   */\n      tag_447\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":9948:10045   */\n      swap3\n      pop\n        /* \"#utility.yul\":9750:10055   */\n      pop\n        /* \"#utility.yul\":9737:9738   */\n      0x01\n        /* \"#utility.yul\":9734:9735   */\n      dup2\n        /* \"#utility.yul\":9730:9739   */\n      add\n        /* \"#utility.yul\":9725:9739   */\n      swap1\n      pop\n        /* \"#utility.yul\":9690:10055   */\n      jump(tag_586)\n    tag_588:\n        /* \"#utility.yul\":9694:9708   */\n      pop\n        /* \"#utility.yul\":10071:10074   */\n      dup6\n        /* \"#utility.yul\":10064:10074   */\n      swap4\n      pop\n        /* \"#utility.yul\":9310:10080   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9132:10080   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10086:10567   */\n    tag_90:\n        /* \"#utility.yul\":10283:10287   */\n      0x00\n        /* \"#utility.yul\":10321:10323   */\n      0x20\n        /* \"#utility.yul\":10310:10319   */\n      dup3\n        /* \"#utility.yul\":10306:10324   */\n      add\n        /* \"#utility.yul\":10298:10324   */\n      swap1\n      pop\n        /* \"#utility.yul\":10370:10379   */\n      dup2\n        /* \"#utility.yul\":10364:10368   */\n      dup2\n        /* \"#utility.yul\":10360:10380   */\n      sub\n        /* \"#utility.yul\":10356:10357   */\n      0x00\n        /* \"#utility.yul\":10345:10354   */\n      dup4\n        /* \"#utility.yul\":10341:10358   */\n      add\n        /* \"#utility.yul\":10334:10381   */\n      mstore\n        /* \"#utility.yul\":10398:10560   */\n      tag_592\n        /* \"#utility.yul\":10555:10559   */\n      dup2\n        /* \"#utility.yul\":10546:10552   */\n      dup5\n        /* \"#utility.yul\":10398:10560   */\n      tag_448\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":10390:10560   */\n      swap1\n      pop\n        /* \"#utility.yul\":10086:10567   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10573:10691   */\n    tag_449:\n        /* \"#utility.yul\":10660:10684   */\n      tag_594\n        /* \"#utility.yul\":10678:10683   */\n      dup2\n        /* \"#utility.yul\":10660:10684   */\n      tag_427\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":10655:10658   */\n      dup3\n        /* \"#utility.yul\":10648:10685   */\n      mstore\n        /* \"#utility.yul\":10573:10691   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10697:10919   */\n    tag_94:\n        /* \"#utility.yul\":10790:10794   */\n      0x00\n        /* \"#utility.yul\":10828:10830   */\n      0x20\n        /* \"#utility.yul\":10817:10826   */\n      dup3\n        /* \"#utility.yul\":10813:10831   */\n      add\n        /* \"#utility.yul\":10805:10831   */\n      swap1\n      pop\n        /* \"#utility.yul\":10841:10912   */\n      tag_596\n        /* \"#utility.yul\":10909:10910   */\n      0x00\n        /* \"#utility.yul\":10898:10907   */\n      dup4\n        /* \"#utility.yul\":10894:10911   */\n      add\n        /* \"#utility.yul\":10885:10891   */\n      dup5\n        /* \"#utility.yul\":10841:10912   */\n      tag_449\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":10697:10919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10925:11399   */\n    tag_97:\n        /* \"#utility.yul\":10993:10999   */\n      0x00\n        /* \"#utility.yul\":11001:11007   */\n      0x00\n        /* \"#utility.yul\":11050:11052   */\n      0x40\n        /* \"#utility.yul\":11038:11047   */\n      dup4\n        /* \"#utility.yul\":11029:11036   */\n      dup6\n        /* \"#utility.yul\":11025:11048   */\n      sub\n        /* \"#utility.yul\":11021:11053   */\n      slt\n        /* \"#utility.yul\":11018:11137   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":11056:11135   */\n      tag_599\n      tag_424\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":11018:11137   */\n    tag_598:\n        /* \"#utility.yul\":11176:11177   */\n      0x00\n        /* \"#utility.yul\":11201:11254   */\n      tag_600\n        /* \"#utility.yul\":11246:11253   */\n      dup6\n        /* \"#utility.yul\":11237:11243   */\n      dup3\n        /* \"#utility.yul\":11226:11235   */\n      dup7\n        /* \"#utility.yul\":11222:11244   */\n      add\n        /* \"#utility.yul\":11201:11254   */\n      tag_432\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":11191:11254   */\n      swap3\n      pop\n        /* \"#utility.yul\":11147:11264   */\n      pop\n        /* \"#utility.yul\":11303:11305   */\n      0x20\n        /* \"#utility.yul\":11329:11382   */\n      tag_601\n        /* \"#utility.yul\":11374:11381   */\n      dup6\n        /* \"#utility.yul\":11365:11371   */\n      dup3\n        /* \"#utility.yul\":11354:11363   */\n      dup7\n        /* \"#utility.yul\":11350:11372   */\n      add\n        /* \"#utility.yul\":11329:11382   */\n      tag_429\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":11319:11382   */\n      swap2\n      pop\n        /* \"#utility.yul\":11274:11392   */\n      pop\n        /* \"#utility.yul\":10925:11399   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11405:11465   */\n    tag_450:\n        /* \"#utility.yul\":11433:11436   */\n      0x00\n        /* \"#utility.yul\":11454:11459   */\n      dup2\n        /* \"#utility.yul\":11447:11459   */\n      swap1\n      pop\n        /* \"#utility.yul\":11405:11465   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11471:11613   */\n    tag_451:\n        /* \"#utility.yul\":11521:11530   */\n      0x00\n        /* \"#utility.yul\":11554:11607   */\n      tag_604\n        /* \"#utility.yul\":11572:11606   */\n      tag_605\n        /* \"#utility.yul\":11581:11605   */\n      tag_606\n        /* \"#utility.yul\":11599:11604   */\n      dup5\n        /* \"#utility.yul\":11581:11605   */\n      tag_426\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":11572:11606   */\n      tag_450\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":11554:11607   */\n      tag_426\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":11541:11607   */\n      swap1\n      pop\n        /* \"#utility.yul\":11471:11613   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11619:11745   */\n    tag_452:\n        /* \"#utility.yul\":11669:11678   */\n      0x00\n        /* \"#utility.yul\":11702:11739   */\n      tag_608\n        /* \"#utility.yul\":11733:11738   */\n      dup3\n        /* \"#utility.yul\":11702:11739   */\n      tag_451\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":11689:11739   */\n      swap1\n      pop\n        /* \"#utility.yul\":11619:11745   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11751:11891   */\n    tag_453:\n        /* \"#utility.yul\":11815:11824   */\n      0x00\n        /* \"#utility.yul\":11848:11885   */\n      tag_610\n        /* \"#utility.yul\":11879:11884   */\n      dup3\n        /* \"#utility.yul\":11848:11885   */\n      tag_452\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":11835:11885   */\n      swap1\n      pop\n        /* \"#utility.yul\":11751:11891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11897:12056   */\n    tag_454:\n        /* \"#utility.yul\":11998:12049   */\n      tag_612\n        /* \"#utility.yul\":12043:12048   */\n      dup2\n        /* \"#utility.yul\":11998:12049   */\n      tag_453\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":11993:11996   */\n      dup3\n        /* \"#utility.yul\":11986:12050   */\n      mstore\n        /* \"#utility.yul\":11897:12056   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12062:12312   */\n    tag_132:\n        /* \"#utility.yul\":12169:12173   */\n      0x00\n        /* \"#utility.yul\":12207:12209   */\n      0x20\n        /* \"#utility.yul\":12196:12205   */\n      dup3\n        /* \"#utility.yul\":12192:12210   */\n      add\n        /* \"#utility.yul\":12184:12210   */\n      swap1\n      pop\n        /* \"#utility.yul\":12220:12305   */\n      tag_614\n        /* \"#utility.yul\":12302:12303   */\n      0x00\n        /* \"#utility.yul\":12291:12300   */\n      dup4\n        /* \"#utility.yul\":12287:12304   */\n      add\n        /* \"#utility.yul\":12278:12284   */\n      dup5\n        /* \"#utility.yul\":12220:12305   */\n      tag_454\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":12062:12312   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12318:12487   */\n    tag_455:\n        /* \"#utility.yul\":12402:12413   */\n      0x00\n        /* \"#utility.yul\":12436:12442   */\n      dup3\n        /* \"#utility.yul\":12431:12434   */\n      dup3\n        /* \"#utility.yul\":12424:12443   */\n      mstore\n        /* \"#utility.yul\":12476:12480   */\n      0x20\n        /* \"#utility.yul\":12471:12474   */\n      dup3\n        /* \"#utility.yul\":12467:12481   */\n      add\n        /* \"#utility.yul\":12452:12481   */\n      swap1\n      pop\n        /* \"#utility.yul\":12318:12487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12493:12662   */\n    tag_456:\n        /* \"#utility.yul\":12633:12654   */\n      0x496e76616c6964207374616b6520746f6b656e00000000000000000000000000\n        /* \"#utility.yul\":12629:12630   */\n      0x00\n        /* \"#utility.yul\":12621:12627   */\n      dup3\n        /* \"#utility.yul\":12617:12631   */\n      add\n        /* \"#utility.yul\":12610:12655   */\n      mstore\n        /* \"#utility.yul\":12493:12662   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12668:13034   */\n    tag_457:\n        /* \"#utility.yul\":12810:12813   */\n      0x00\n        /* \"#utility.yul\":12831:12898   */\n      tag_618\n        /* \"#utility.yul\":12895:12897   */\n      0x13\n        /* \"#utility.yul\":12890:12893   */\n      dup4\n        /* \"#utility.yul\":12831:12898   */\n      tag_455\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":12824:12898   */\n      swap2\n      pop\n        /* \"#utility.yul\":12907:13000   */\n      tag_619\n        /* \"#utility.yul\":12996:12999   */\n      dup3\n        /* \"#utility.yul\":12907:13000   */\n      tag_456\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":13025:13027   */\n      0x20\n        /* \"#utility.yul\":13020:13023   */\n      dup3\n        /* \"#utility.yul\":13016:13028   */\n      add\n        /* \"#utility.yul\":13009:13028   */\n      swap1\n      pop\n        /* \"#utility.yul\":12668:13034   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13040:13459   */\n    tag_139:\n        /* \"#utility.yul\":13206:13210   */\n      0x00\n        /* \"#utility.yul\":13244:13246   */\n      0x20\n        /* \"#utility.yul\":13233:13242   */\n      dup3\n        /* \"#utility.yul\":13229:13247   */\n      add\n        /* \"#utility.yul\":13221:13247   */\n      swap1\n      pop\n        /* \"#utility.yul\":13293:13302   */\n      dup2\n        /* \"#utility.yul\":13287:13291   */\n      dup2\n        /* \"#utility.yul\":13283:13303   */\n      sub\n        /* \"#utility.yul\":13279:13280   */\n      0x00\n        /* \"#utility.yul\":13268:13277   */\n      dup4\n        /* \"#utility.yul\":13264:13281   */\n      add\n        /* \"#utility.yul\":13257:13304   */\n      mstore\n        /* \"#utility.yul\":13321:13452   */\n      tag_621\n        /* \"#utility.yul\":13447:13451   */\n      dup2\n        /* \"#utility.yul\":13321:13452   */\n      tag_457\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":13313:13452   */\n      swap1\n      pop\n        /* \"#utility.yul\":13040:13459   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13465:13631   */\n    tag_458:\n        /* \"#utility.yul\":13605:13623   */\n      0x496e76616c6964206475726174696f6e00000000000000000000000000000000\n        /* \"#utility.yul\":13601:13602   */\n      0x00\n        /* \"#utility.yul\":13593:13599   */\n      dup3\n        /* \"#utility.yul\":13589:13603   */\n      add\n        /* \"#utility.yul\":13582:13624   */\n      mstore\n        /* \"#utility.yul\":13465:13631   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13637:14003   */\n    tag_459:\n        /* \"#utility.yul\":13779:13782   */\n      0x00\n        /* \"#utility.yul\":13800:13867   */\n      tag_624\n        /* \"#utility.yul\":13864:13866   */\n      0x10\n        /* \"#utility.yul\":13859:13862   */\n      dup4\n        /* \"#utility.yul\":13800:13867   */\n      tag_455\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":13793:13867   */\n      swap2\n      pop\n        /* \"#utility.yul\":13876:13969   */\n      tag_625\n        /* \"#utility.yul\":13965:13968   */\n      dup3\n        /* \"#utility.yul\":13876:13969   */\n      tag_458\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":13994:13996   */\n      0x20\n        /* \"#utility.yul\":13989:13992   */\n      dup3\n        /* \"#utility.yul\":13985:13997   */\n      add\n        /* \"#utility.yul\":13978:13997   */\n      swap1\n      pop\n        /* \"#utility.yul\":13637:14003   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14009:14428   */\n    tag_142:\n        /* \"#utility.yul\":14175:14179   */\n      0x00\n        /* \"#utility.yul\":14213:14215   */\n      0x20\n        /* \"#utility.yul\":14202:14211   */\n      dup3\n        /* \"#utility.yul\":14198:14216   */\n      add\n        /* \"#utility.yul\":14190:14216   */\n      swap1\n      pop\n        /* \"#utility.yul\":14262:14271   */\n      dup2\n        /* \"#utility.yul\":14256:14260   */\n      dup2\n        /* \"#utility.yul\":14252:14272   */\n      sub\n        /* \"#utility.yul\":14248:14249   */\n      0x00\n        /* \"#utility.yul\":14237:14246   */\n      dup4\n        /* \"#utility.yul\":14233:14250   */\n      add\n        /* \"#utility.yul\":14226:14273   */\n      mstore\n        /* \"#utility.yul\":14290:14421   */\n      tag_627\n        /* \"#utility.yul\":14416:14420   */\n      dup2\n        /* \"#utility.yul\":14290:14421   */\n      tag_459\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":14282:14421   */\n      swap1\n      pop\n        /* \"#utility.yul\":14009:14428   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14434:14595   */\n    tag_460:\n        /* \"#utility.yul\":14574:14587   */\n      0x496e76616c696420415059000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14570:14571   */\n      0x00\n        /* \"#utility.yul\":14562:14568   */\n      dup3\n        /* \"#utility.yul\":14558:14572   */\n      add\n        /* \"#utility.yul\":14551:14588   */\n      mstore\n        /* \"#utility.yul\":14434:14595   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14601:14967   */\n    tag_461:\n        /* \"#utility.yul\":14743:14746   */\n      0x00\n        /* \"#utility.yul\":14764:14831   */\n      tag_630\n        /* \"#utility.yul\":14828:14830   */\n      0x0b\n        /* \"#utility.yul\":14823:14826   */\n      dup4\n        /* \"#utility.yul\":14764:14831   */\n      tag_455\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":14757:14831   */\n      swap2\n      pop\n        /* \"#utility.yul\":14840:14933   */\n      tag_631\n        /* \"#utility.yul\":14929:14932   */\n      dup3\n        /* \"#utility.yul\":14840:14933   */\n      tag_460\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":14958:14960   */\n      0x20\n        /* \"#utility.yul\":14953:14956   */\n      dup3\n        /* \"#utility.yul\":14949:14961   */\n      add\n        /* \"#utility.yul\":14942:14961   */\n      swap1\n      pop\n        /* \"#utility.yul\":14601:14967   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14973:15392   */\n    tag_146:\n        /* \"#utility.yul\":15139:15143   */\n      0x00\n        /* \"#utility.yul\":15177:15179   */\n      0x20\n        /* \"#utility.yul\":15166:15175   */\n      dup3\n        /* \"#utility.yul\":15162:15180   */\n      add\n        /* \"#utility.yul\":15154:15180   */\n      swap1\n      pop\n        /* \"#utility.yul\":15226:15235   */\n      dup2\n        /* \"#utility.yul\":15220:15224   */\n      dup2\n        /* \"#utility.yul\":15216:15236   */\n      sub\n        /* \"#utility.yul\":15212:15213   */\n      0x00\n        /* \"#utility.yul\":15201:15210   */\n      dup4\n        /* \"#utility.yul\":15197:15214   */\n      add\n        /* \"#utility.yul\":15190:15237   */\n      mstore\n        /* \"#utility.yul\":15254:15385   */\n      tag_633\n        /* \"#utility.yul\":15380:15384   */\n      dup2\n        /* \"#utility.yul\":15254:15385   */\n      tag_461\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":15246:15385   */\n      swap1\n      pop\n        /* \"#utility.yul\":14973:15392   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15398:15578   */\n    tag_462:\n        /* \"#utility.yul\":15446:15523   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15443:15444   */\n      0x00\n        /* \"#utility.yul\":15436:15524   */\n      mstore\n        /* \"#utility.yul\":15543:15547   */\n      0x11\n        /* \"#utility.yul\":15540:15541   */\n      0x04\n        /* \"#utility.yul\":15533:15548   */\n      mstore\n        /* \"#utility.yul\":15567:15571   */\n      0x24\n        /* \"#utility.yul\":15564:15565   */\n      0x00\n        /* \"#utility.yul\":15557:15572   */\n      revert\n        /* \"#utility.yul\":15584:15778   */\n    tag_149:\n        /* \"#utility.yul\":15624:15628   */\n      0x00\n        /* \"#utility.yul\":15644:15664   */\n      tag_636\n        /* \"#utility.yul\":15662:15663   */\n      dup3\n        /* \"#utility.yul\":15644:15664   */\n      tag_430\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":15639:15664   */\n      swap2\n      pop\n        /* \"#utility.yul\":15678:15698   */\n      tag_637\n        /* \"#utility.yul\":15696:15697   */\n      dup4\n        /* \"#utility.yul\":15678:15698   */\n      tag_430\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":15673:15698   */\n      swap3\n      pop\n        /* \"#utility.yul\":15722:15723   */\n      dup3\n        /* \"#utility.yul\":15719:15720   */\n      dup3\n        /* \"#utility.yul\":15715:15724   */\n      sub\n        /* \"#utility.yul\":15707:15724   */\n      swap1\n      pop\n        /* \"#utility.yul\":15746:15747   */\n      dup2\n        /* \"#utility.yul\":15740:15744   */\n      dup2\n        /* \"#utility.yul\":15737:15748   */\n      gt\n        /* \"#utility.yul\":15734:15771   */\n      iszero\n      tag_638\n      jumpi\n        /* \"#utility.yul\":15751:15769   */\n      tag_639\n      tag_462\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":15734:15771   */\n    tag_638:\n        /* \"#utility.yul\":15584:15778   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15784:16337   */\n    tag_151:\n        /* \"#utility.yul\":15961:15965   */\n      0x00\n        /* \"#utility.yul\":15999:16002   */\n      0x80\n        /* \"#utility.yul\":15988:15997   */\n      dup3\n        /* \"#utility.yul\":15984:16003   */\n      add\n        /* \"#utility.yul\":15976:16003   */\n      swap1\n      pop\n        /* \"#utility.yul\":16013:16084   */\n      tag_641\n        /* \"#utility.yul\":16081:16082   */\n      0x00\n        /* \"#utility.yul\":16070:16079   */\n      dup4\n        /* \"#utility.yul\":16066:16083   */\n      add\n        /* \"#utility.yul\":16057:16063   */\n      dup8\n        /* \"#utility.yul\":16013:16084   */\n      tag_449\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":16094:16166   */\n      tag_642\n        /* \"#utility.yul\":16162:16164   */\n      0x20\n        /* \"#utility.yul\":16151:16160   */\n      dup4\n        /* \"#utility.yul\":16147:16165   */\n      add\n        /* \"#utility.yul\":16138:16144   */\n      dup7\n        /* \"#utility.yul\":16094:16166   */\n      tag_436\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":16176:16248   */\n      tag_643\n        /* \"#utility.yul\":16244:16246   */\n      0x40\n        /* \"#utility.yul\":16233:16242   */\n      dup4\n        /* \"#utility.yul\":16229:16247   */\n      add\n        /* \"#utility.yul\":16220:16226   */\n      dup6\n        /* \"#utility.yul\":16176:16248   */\n      tag_436\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":16258:16330   */\n      tag_644\n        /* \"#utility.yul\":16326:16328   */\n      0x60\n        /* \"#utility.yul\":16315:16324   */\n      dup4\n        /* \"#utility.yul\":16311:16329   */\n      add\n        /* \"#utility.yul\":16302:16308   */\n      dup5\n        /* \"#utility.yul\":16258:16330   */\n      tag_436\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":15784:16337   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16343:16511   */\n    tag_463:\n        /* \"#utility.yul\":16483:16503   */\n      0x496e76616c6964207061636b6167652049440000000000000000000000000000\n        /* \"#utility.yul\":16479:16480   */\n      0x00\n        /* \"#utility.yul\":16471:16477   */\n      dup3\n        /* \"#utility.yul\":16467:16481   */\n      add\n        /* \"#utility.yul\":16460:16504   */\n      mstore\n        /* \"#utility.yul\":16343:16511   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16517:16883   */\n    tag_464:\n        /* \"#utility.yul\":16659:16662   */\n      0x00\n        /* \"#utility.yul\":16680:16747   */\n      tag_647\n        /* \"#utility.yul\":16744:16746   */\n      0x12\n        /* \"#utility.yul\":16739:16742   */\n      dup4\n        /* \"#utility.yul\":16680:16747   */\n      tag_455\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":16673:16747   */\n      swap2\n      pop\n        /* \"#utility.yul\":16756:16849   */\n      tag_648\n        /* \"#utility.yul\":16845:16848   */\n      dup3\n        /* \"#utility.yul\":16756:16849   */\n      tag_463\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":16874:16876   */\n      0x20\n        /* \"#utility.yul\":16869:16872   */\n      dup3\n        /* \"#utility.yul\":16865:16877   */\n      add\n        /* \"#utility.yul\":16858:16877   */\n      swap1\n      pop\n        /* \"#utility.yul\":16517:16883   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16889:17308   */\n    tag_157:\n        /* \"#utility.yul\":17055:17059   */\n      0x00\n        /* \"#utility.yul\":17093:17095   */\n      0x20\n        /* \"#utility.yul\":17082:17091   */\n      dup3\n        /* \"#utility.yul\":17078:17096   */\n      add\n        /* \"#utility.yul\":17070:17096   */\n      swap1\n      pop\n        /* \"#utility.yul\":17142:17151   */\n      dup2\n        /* \"#utility.yul\":17136:17140   */\n      dup2\n        /* \"#utility.yul\":17132:17152   */\n      sub\n        /* \"#utility.yul\":17128:17129   */\n      0x00\n        /* \"#utility.yul\":17117:17126   */\n      dup4\n        /* \"#utility.yul\":17113:17130   */\n      add\n        /* \"#utility.yul\":17106:17153   */\n      mstore\n        /* \"#utility.yul\":17170:17301   */\n      tag_650\n        /* \"#utility.yul\":17296:17300   */\n      dup2\n        /* \"#utility.yul\":17170:17301   */\n      tag_464\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":17162:17301   */\n      swap1\n      pop\n        /* \"#utility.yul\":16889:17308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17314:17494   */\n    tag_161:\n        /* \"#utility.yul\":17362:17439   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17359:17360   */\n      0x00\n        /* \"#utility.yul\":17352:17440   */\n      mstore\n        /* \"#utility.yul\":17459:17463   */\n      0x32\n        /* \"#utility.yul\":17456:17457   */\n      0x04\n        /* \"#utility.yul\":17449:17464   */\n      mstore\n        /* \"#utility.yul\":17483:17487   */\n      0x24\n        /* \"#utility.yul\":17480:17481   */\n      0x00\n        /* \"#utility.yul\":17473:17488   */\n      revert\n        /* \"#utility.yul\":17500:17666   */\n    tag_465:\n        /* \"#utility.yul\":17640:17658   */\n      0x496e76616c6964207374616b6520494400000000000000000000000000000000\n        /* \"#utility.yul\":17636:17637   */\n      0x00\n        /* \"#utility.yul\":17628:17634   */\n      dup3\n        /* \"#utility.yul\":17624:17638   */\n      add\n        /* \"#utility.yul\":17617:17659   */\n      mstore\n        /* \"#utility.yul\":17500:17666   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17672:18038   */\n    tag_466:\n        /* \"#utility.yul\":17814:17817   */\n      0x00\n        /* \"#utility.yul\":17835:17902   */\n      tag_654\n        /* \"#utility.yul\":17899:17901   */\n      0x10\n        /* \"#utility.yul\":17894:17897   */\n      dup4\n        /* \"#utility.yul\":17835:17902   */\n      tag_455\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":17828:17902   */\n      swap2\n      pop\n        /* \"#utility.yul\":17911:18004   */\n      tag_655\n        /* \"#utility.yul\":18000:18003   */\n      dup3\n        /* \"#utility.yul\":17911:18004   */\n      tag_465\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":18029:18031   */\n      0x20\n        /* \"#utility.yul\":18024:18027   */\n      dup3\n        /* \"#utility.yul\":18020:18032   */\n      add\n        /* \"#utility.yul\":18013:18032   */\n      swap1\n      pop\n        /* \"#utility.yul\":17672:18038   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18044:18463   */\n    tag_170:\n        /* \"#utility.yul\":18210:18214   */\n      0x00\n        /* \"#utility.yul\":18248:18250   */\n      0x20\n        /* \"#utility.yul\":18237:18246   */\n      dup3\n        /* \"#utility.yul\":18233:18251   */\n      add\n        /* \"#utility.yul\":18225:18251   */\n      swap1\n      pop\n        /* \"#utility.yul\":18297:18306   */\n      dup2\n        /* \"#utility.yul\":18291:18295   */\n      dup2\n        /* \"#utility.yul\":18287:18307   */\n      sub\n        /* \"#utility.yul\":18283:18284   */\n      0x00\n        /* \"#utility.yul\":18272:18281   */\n      dup4\n        /* \"#utility.yul\":18268:18285   */\n      add\n        /* \"#utility.yul\":18261:18308   */\n      mstore\n        /* \"#utility.yul\":18325:18456   */\n      tag_657\n        /* \"#utility.yul\":18451:18455   */\n      dup2\n        /* \"#utility.yul\":18325:18456   */\n      tag_466\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":18317:18456   */\n      swap1\n      pop\n        /* \"#utility.yul\":18044:18463   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18469:18633   */\n    tag_467:\n        /* \"#utility.yul\":18609:18625   */\n      0x496e616374697665207374616b65000000000000000000000000000000000000\n        /* \"#utility.yul\":18605:18606   */\n      0x00\n        /* \"#utility.yul\":18597:18603   */\n      dup3\n        /* \"#utility.yul\":18593:18607   */\n      add\n        /* \"#utility.yul\":18586:18626   */\n      mstore\n        /* \"#utility.yul\":18469:18633   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18639:19005   */\n    tag_468:\n        /* \"#utility.yul\":18781:18784   */\n      0x00\n        /* \"#utility.yul\":18802:18869   */\n      tag_660\n        /* \"#utility.yul\":18866:18868   */\n      0x0e\n        /* \"#utility.yul\":18861:18864   */\n      dup4\n        /* \"#utility.yul\":18802:18869   */\n      tag_455\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":18795:18869   */\n      swap2\n      pop\n        /* \"#utility.yul\":18878:18971   */\n      tag_661\n        /* \"#utility.yul\":18967:18970   */\n      dup3\n        /* \"#utility.yul\":18878:18971   */\n      tag_467\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":18996:18998   */\n      0x20\n        /* \"#utility.yul\":18991:18994   */\n      dup3\n        /* \"#utility.yul\":18987:18999   */\n      add\n        /* \"#utility.yul\":18980:18999   */\n      swap1\n      pop\n        /* \"#utility.yul\":18639:19005   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19011:19430   */\n    tag_176:\n        /* \"#utility.yul\":19177:19181   */\n      0x00\n        /* \"#utility.yul\":19215:19217   */\n      0x20\n        /* \"#utility.yul\":19204:19213   */\n      dup3\n        /* \"#utility.yul\":19200:19218   */\n      add\n        /* \"#utility.yul\":19192:19218   */\n      swap1\n      pop\n        /* \"#utility.yul\":19264:19273   */\n      dup2\n        /* \"#utility.yul\":19258:19262   */\n      dup2\n        /* \"#utility.yul\":19254:19274   */\n      sub\n        /* \"#utility.yul\":19250:19251   */\n      0x00\n        /* \"#utility.yul\":19239:19248   */\n      dup4\n        /* \"#utility.yul\":19235:19252   */\n      add\n        /* \"#utility.yul\":19228:19275   */\n      mstore\n        /* \"#utility.yul\":19292:19423   */\n      tag_663\n        /* \"#utility.yul\":19418:19422   */\n      dup2\n        /* \"#utility.yul\":19292:19423   */\n      tag_468\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":19284:19423   */\n      swap1\n      pop\n        /* \"#utility.yul\":19011:19430   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19436:19627   */\n    tag_185:\n        /* \"#utility.yul\":19476:19479   */\n      0x00\n        /* \"#utility.yul\":19495:19515   */\n      tag_665\n        /* \"#utility.yul\":19513:19514   */\n      dup3\n        /* \"#utility.yul\":19495:19515   */\n      tag_430\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":19490:19515   */\n      swap2\n      pop\n        /* \"#utility.yul\":19529:19549   */\n      tag_666\n        /* \"#utility.yul\":19547:19548   */\n      dup4\n        /* \"#utility.yul\":19529:19549   */\n      tag_430\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":19524:19549   */\n      swap3\n      pop\n        /* \"#utility.yul\":19572:19573   */\n      dup3\n        /* \"#utility.yul\":19569:19570   */\n      dup3\n        /* \"#utility.yul\":19565:19574   */\n      add\n        /* \"#utility.yul\":19558:19574   */\n      swap1\n      pop\n        /* \"#utility.yul\":19593:19596   */\n      dup1\n        /* \"#utility.yul\":19590:19591   */\n      dup3\n        /* \"#utility.yul\":19587:19597   */\n      gt\n        /* \"#utility.yul\":19584:19620   */\n      iszero\n      tag_667\n      jumpi\n        /* \"#utility.yul\":19600:19618   */\n      tag_668\n      tag_462\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":19584:19620   */\n    tag_667:\n        /* \"#utility.yul\":19436:19627   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19633:19801   */\n    tag_469:\n        /* \"#utility.yul\":19773:19793   */\n      0x5374616b65207374696c6c206c6f636b65640000000000000000000000000000\n        /* \"#utility.yul\":19769:19770   */\n      0x00\n        /* \"#utility.yul\":19761:19767   */\n      dup3\n        /* \"#utility.yul\":19757:19771   */\n      add\n        /* \"#utility.yul\":19750:19794   */\n      mstore\n        /* \"#utility.yul\":19633:19801   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19807:20173   */\n    tag_470:\n        /* \"#utility.yul\":19949:19952   */\n      0x00\n        /* \"#utility.yul\":19970:20037   */\n      tag_671\n        /* \"#utility.yul\":20034:20036   */\n      0x12\n        /* \"#utility.yul\":20029:20032   */\n      dup4\n        /* \"#utility.yul\":19970:20037   */\n      tag_455\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":19963:20037   */\n      swap2\n      pop\n        /* \"#utility.yul\":20046:20139   */\n      tag_672\n        /* \"#utility.yul\":20135:20138   */\n      dup3\n        /* \"#utility.yul\":20046:20139   */\n      tag_469\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":20164:20166   */\n      0x20\n        /* \"#utility.yul\":20159:20162   */\n      dup3\n        /* \"#utility.yul\":20155:20167   */\n      add\n        /* \"#utility.yul\":20148:20167   */\n      swap1\n      pop\n        /* \"#utility.yul\":19807:20173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20179:20598   */\n    tag_188:\n        /* \"#utility.yul\":20345:20349   */\n      0x00\n        /* \"#utility.yul\":20383:20385   */\n      0x20\n        /* \"#utility.yul\":20372:20381   */\n      dup3\n        /* \"#utility.yul\":20368:20386   */\n      add\n        /* \"#utility.yul\":20360:20386   */\n      swap1\n      pop\n        /* \"#utility.yul\":20432:20441   */\n      dup2\n        /* \"#utility.yul\":20426:20430   */\n      dup2\n        /* \"#utility.yul\":20422:20442   */\n      sub\n        /* \"#utility.yul\":20418:20419   */\n      0x00\n        /* \"#utility.yul\":20407:20416   */\n      dup4\n        /* \"#utility.yul\":20403:20420   */\n      add\n        /* \"#utility.yul\":20396:20443   */\n      mstore\n        /* \"#utility.yul\":20460:20591   */\n      tag_674\n        /* \"#utility.yul\":20586:20590   */\n      dup2\n        /* \"#utility.yul\":20460:20591   */\n      tag_470\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":20452:20591   */\n      swap1\n      pop\n        /* \"#utility.yul\":20179:20598   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20604:20936   */\n    tag_199:\n        /* \"#utility.yul\":20725:20729   */\n      0x00\n        /* \"#utility.yul\":20763:20765   */\n      0x40\n        /* \"#utility.yul\":20752:20761   */\n      dup3\n        /* \"#utility.yul\":20748:20766   */\n      add\n        /* \"#utility.yul\":20740:20766   */\n      swap1\n      pop\n        /* \"#utility.yul\":20776:20847   */\n      tag_676\n        /* \"#utility.yul\":20844:20845   */\n      0x00\n        /* \"#utility.yul\":20833:20842   */\n      dup4\n        /* \"#utility.yul\":20829:20846   */\n      add\n        /* \"#utility.yul\":20820:20826   */\n      dup6\n        /* \"#utility.yul\":20776:20847   */\n      tag_436\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":20857:20929   */\n      tag_677\n        /* \"#utility.yul\":20925:20927   */\n      0x20\n        /* \"#utility.yul\":20914:20923   */\n      dup4\n        /* \"#utility.yul\":20910:20928   */\n      add\n        /* \"#utility.yul\":20901:20907   */\n      dup5\n        /* \"#utility.yul\":20857:20929   */\n      tag_436\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":20604:20936   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20942:21106   */\n    tag_471:\n        /* \"#utility.yul\":21082:21098   */\n      0x4e6f7420617574686f72697a6564000000000000000000000000000000000000\n        /* \"#utility.yul\":21078:21079   */\n      0x00\n        /* \"#utility.yul\":21070:21076   */\n      dup3\n        /* \"#utility.yul\":21066:21080   */\n      add\n        /* \"#utility.yul\":21059:21099   */\n      mstore\n        /* \"#utility.yul\":20942:21106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21112:21478   */\n    tag_472:\n        /* \"#utility.yul\":21254:21257   */\n      0x00\n        /* \"#utility.yul\":21275:21342   */\n      tag_680\n        /* \"#utility.yul\":21339:21341   */\n      0x0e\n        /* \"#utility.yul\":21334:21337   */\n      dup4\n        /* \"#utility.yul\":21275:21342   */\n      tag_455\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":21268:21342   */\n      swap2\n      pop\n        /* \"#utility.yul\":21351:21444   */\n      tag_681\n        /* \"#utility.yul\":21440:21443   */\n      dup3\n        /* \"#utility.yul\":21351:21444   */\n      tag_471\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":21469:21471   */\n      0x20\n        /* \"#utility.yul\":21464:21467   */\n      dup3\n        /* \"#utility.yul\":21460:21472   */\n      add\n        /* \"#utility.yul\":21453:21472   */\n      swap1\n      pop\n        /* \"#utility.yul\":21112:21478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21484:21903   */\n    tag_205:\n        /* \"#utility.yul\":21650:21654   */\n      0x00\n        /* \"#utility.yul\":21688:21690   */\n      0x20\n        /* \"#utility.yul\":21677:21686   */\n      dup3\n        /* \"#utility.yul\":21673:21691   */\n      add\n        /* \"#utility.yul\":21665:21691   */\n      swap1\n      pop\n        /* \"#utility.yul\":21737:21746   */\n      dup2\n        /* \"#utility.yul\":21731:21735   */\n      dup2\n        /* \"#utility.yul\":21727:21747   */\n      sub\n        /* \"#utility.yul\":21723:21724   */\n      0x00\n        /* \"#utility.yul\":21712:21721   */\n      dup4\n        /* \"#utility.yul\":21708:21725   */\n      add\n        /* \"#utility.yul\":21701:21748   */\n      mstore\n        /* \"#utility.yul\":21765:21896   */\n      tag_683\n        /* \"#utility.yul\":21891:21895   */\n      dup2\n        /* \"#utility.yul\":21765:21896   */\n      tag_472\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":21757:21896   */\n      swap1\n      pop\n        /* \"#utility.yul\":21484:21903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21909:22076   */\n    tag_473:\n        /* \"#utility.yul\":22049:22068   */\n      0x4e6f206665657320617661696c61626c65000000000000000000000000000000\n        /* \"#utility.yul\":22045:22046   */\n      0x00\n        /* \"#utility.yul\":22037:22043   */\n      dup3\n        /* \"#utility.yul\":22033:22047   */\n      add\n        /* \"#utility.yul\":22026:22069   */\n      mstore\n        /* \"#utility.yul\":21909:22076   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22082:22448   */\n    tag_474:\n        /* \"#utility.yul\":22224:22227   */\n      0x00\n        /* \"#utility.yul\":22245:22312   */\n      tag_686\n        /* \"#utility.yul\":22309:22311   */\n      0x11\n        /* \"#utility.yul\":22304:22307   */\n      dup4\n        /* \"#utility.yul\":22245:22312   */\n      tag_455\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":22238:22312   */\n      swap2\n      pop\n        /* \"#utility.yul\":22321:22414   */\n      tag_687\n        /* \"#utility.yul\":22410:22413   */\n      dup3\n        /* \"#utility.yul\":22321:22414   */\n      tag_473\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":22439:22441   */\n      0x20\n        /* \"#utility.yul\":22434:22437   */\n      dup3\n        /* \"#utility.yul\":22430:22442   */\n      add\n        /* \"#utility.yul\":22423:22442   */\n      swap1\n      pop\n        /* \"#utility.yul\":22082:22448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22454:22873   */\n    tag_208:\n        /* \"#utility.yul\":22620:22624   */\n      0x00\n        /* \"#utility.yul\":22658:22660   */\n      0x20\n        /* \"#utility.yul\":22647:22656   */\n      dup3\n        /* \"#utility.yul\":22643:22661   */\n      add\n        /* \"#utility.yul\":22635:22661   */\n      swap1\n      pop\n        /* \"#utility.yul\":22707:22716   */\n      dup2\n        /* \"#utility.yul\":22701:22705   */\n      dup2\n        /* \"#utility.yul\":22697:22717   */\n      sub\n        /* \"#utility.yul\":22693:22694   */\n      0x00\n        /* \"#utility.yul\":22682:22691   */\n      dup4\n        /* \"#utility.yul\":22678:22695   */\n      add\n        /* \"#utility.yul\":22671:22718   */\n      mstore\n        /* \"#utility.yul\":22735:22866   */\n      tag_689\n        /* \"#utility.yul\":22861:22865   */\n      dup2\n        /* \"#utility.yul\":22735:22866   */\n      tag_474\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":22727:22866   */\n      swap1\n      pop\n        /* \"#utility.yul\":22454:22873   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22879:23211   */\n    tag_211:\n        /* \"#utility.yul\":23000:23004   */\n      0x00\n        /* \"#utility.yul\":23038:23040   */\n      0x40\n        /* \"#utility.yul\":23027:23036   */\n      dup3\n        /* \"#utility.yul\":23023:23041   */\n      add\n        /* \"#utility.yul\":23015:23041   */\n      swap1\n      pop\n        /* \"#utility.yul\":23051:23122   */\n      tag_691\n        /* \"#utility.yul\":23119:23120   */\n      0x00\n        /* \"#utility.yul\":23108:23117   */\n      dup4\n        /* \"#utility.yul\":23104:23121   */\n      add\n        /* \"#utility.yul\":23095:23101   */\n      dup6\n        /* \"#utility.yul\":23051:23122   */\n      tag_449\n      jump\t// in\n    tag_691:\n        /* \"#utility.yul\":23132:23204   */\n      tag_692\n        /* \"#utility.yul\":23200:23202   */\n      0x20\n        /* \"#utility.yul\":23189:23198   */\n      dup4\n        /* \"#utility.yul\":23185:23203   */\n      add\n        /* \"#utility.yul\":23176:23182   */\n      dup5\n        /* \"#utility.yul\":23132:23204   */\n      tag_436\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":22879:23211   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23217:23379   */\n    tag_475:\n        /* \"#utility.yul\":23357:23371   */\n      0x46656520746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":23353:23354   */\n      0x00\n        /* \"#utility.yul\":23345:23351   */\n      dup3\n        /* \"#utility.yul\":23341:23355   */\n      add\n        /* \"#utility.yul\":23334:23372   */\n      mstore\n        /* \"#utility.yul\":23217:23379   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23385:23751   */\n    tag_476:\n        /* \"#utility.yul\":23527:23530   */\n      0x00\n        /* \"#utility.yul\":23548:23615   */\n      tag_695\n        /* \"#utility.yul\":23612:23614   */\n      0x0c\n        /* \"#utility.yul\":23607:23610   */\n      dup4\n        /* \"#utility.yul\":23548:23615   */\n      tag_455\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":23541:23615   */\n      swap2\n      pop\n        /* \"#utility.yul\":23624:23717   */\n      tag_696\n        /* \"#utility.yul\":23713:23716   */\n      dup3\n        /* \"#utility.yul\":23624:23717   */\n      tag_475\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23742:23744   */\n      0x20\n        /* \"#utility.yul\":23737:23740   */\n      dup3\n        /* \"#utility.yul\":23733:23745   */\n      add\n        /* \"#utility.yul\":23726:23745   */\n      swap1\n      pop\n        /* \"#utility.yul\":23385:23751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23757:24176   */\n    tag_294:\n        /* \"#utility.yul\":23923:23927   */\n      0x00\n        /* \"#utility.yul\":23961:23963   */\n      0x20\n        /* \"#utility.yul\":23950:23959   */\n      dup3\n        /* \"#utility.yul\":23946:23964   */\n      add\n        /* \"#utility.yul\":23938:23964   */\n      swap1\n      pop\n        /* \"#utility.yul\":24010:24019   */\n      dup2\n        /* \"#utility.yul\":24004:24008   */\n      dup2\n        /* \"#utility.yul\":24000:24020   */\n      sub\n        /* \"#utility.yul\":23996:23997   */\n      0x00\n        /* \"#utility.yul\":23985:23994   */\n      dup4\n        /* \"#utility.yul\":23981:23998   */\n      add\n        /* \"#utility.yul\":23974:24021   */\n      mstore\n        /* \"#utility.yul\":24038:24169   */\n      tag_698\n        /* \"#utility.yul\":24164:24168   */\n      dup2\n        /* \"#utility.yul\":24038:24169   */\n      tag_476\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":24030:24169   */\n      swap1\n      pop\n        /* \"#utility.yul\":23757:24176   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24182:24349   */\n    tag_477:\n        /* \"#utility.yul\":24322:24341   */\n      0x496e76616c696420636f6c6c6563746f72000000000000000000000000000000\n        /* \"#utility.yul\":24318:24319   */\n      0x00\n        /* \"#utility.yul\":24310:24316   */\n      dup3\n        /* \"#utility.yul\":24306:24320   */\n      add\n        /* \"#utility.yul\":24299:24342   */\n      mstore\n        /* \"#utility.yul\":24182:24349   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24355:24721   */\n    tag_478:\n        /* \"#utility.yul\":24497:24500   */\n      0x00\n        /* \"#utility.yul\":24518:24585   */\n      tag_701\n        /* \"#utility.yul\":24582:24584   */\n      0x11\n        /* \"#utility.yul\":24577:24580   */\n      dup4\n        /* \"#utility.yul\":24518:24585   */\n      tag_455\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":24511:24585   */\n      swap2\n      pop\n        /* \"#utility.yul\":24594:24687   */\n      tag_702\n        /* \"#utility.yul\":24683:24686   */\n      dup3\n        /* \"#utility.yul\":24594:24687   */\n      tag_477\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":24712:24714   */\n      0x20\n        /* \"#utility.yul\":24707:24710   */\n      dup3\n        /* \"#utility.yul\":24703:24715   */\n      add\n        /* \"#utility.yul\":24696:24715   */\n      swap1\n      pop\n        /* \"#utility.yul\":24355:24721   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24727:25146   */\n    tag_297:\n        /* \"#utility.yul\":24893:24897   */\n      0x00\n        /* \"#utility.yul\":24931:24933   */\n      0x20\n        /* \"#utility.yul\":24920:24929   */\n      dup3\n        /* \"#utility.yul\":24916:24934   */\n      add\n        /* \"#utility.yul\":24908:24934   */\n      swap1\n      pop\n        /* \"#utility.yul\":24980:24989   */\n      dup2\n        /* \"#utility.yul\":24974:24978   */\n      dup2\n        /* \"#utility.yul\":24970:24990   */\n      sub\n        /* \"#utility.yul\":24966:24967   */\n      0x00\n        /* \"#utility.yul\":24955:24964   */\n      dup4\n        /* \"#utility.yul\":24951:24968   */\n      add\n        /* \"#utility.yul\":24944:24991   */\n      mstore\n        /* \"#utility.yul\":25008:25139   */\n      tag_704\n        /* \"#utility.yul\":25134:25138   */\n      dup2\n        /* \"#utility.yul\":25008:25139   */\n      tag_478\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":25000:25139   */\n      swap1\n      pop\n        /* \"#utility.yul\":24727:25146   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25152:25484   */\n    tag_299:\n        /* \"#utility.yul\":25273:25277   */\n      0x00\n        /* \"#utility.yul\":25311:25313   */\n      0x40\n        /* \"#utility.yul\":25300:25309   */\n      dup3\n        /* \"#utility.yul\":25296:25314   */\n      add\n        /* \"#utility.yul\":25288:25314   */\n      swap1\n      pop\n        /* \"#utility.yul\":25324:25395   */\n      tag_706\n        /* \"#utility.yul\":25392:25393   */\n      0x00\n        /* \"#utility.yul\":25381:25390   */\n      dup4\n        /* \"#utility.yul\":25377:25394   */\n      add\n        /* \"#utility.yul\":25368:25374   */\n      dup6\n        /* \"#utility.yul\":25324:25395   */\n      tag_436\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":25405:25477   */\n      tag_707\n        /* \"#utility.yul\":25473:25475   */\n      0x20\n        /* \"#utility.yul\":25462:25471   */\n      dup4\n        /* \"#utility.yul\":25458:25476   */\n      add\n        /* \"#utility.yul\":25449:25455   */\n      dup5\n        /* \"#utility.yul\":25405:25477   */\n      tag_449\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":25152:25484   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25490:25663   */\n    tag_479:\n        /* \"#utility.yul\":25630:25655   */\n      0x416d6f756e74206d75737420626520706f736974697665000000000000000000\n        /* \"#utility.yul\":25626:25627   */\n      0x00\n        /* \"#utility.yul\":25618:25624   */\n      dup3\n        /* \"#utility.yul\":25614:25628   */\n      add\n        /* \"#utility.yul\":25607:25656   */\n      mstore\n        /* \"#utility.yul\":25490:25663   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25669:26035   */\n    tag_480:\n        /* \"#utility.yul\":25811:25814   */\n      0x00\n        /* \"#utility.yul\":25832:25899   */\n      tag_710\n        /* \"#utility.yul\":25896:25898   */\n      0x17\n        /* \"#utility.yul\":25891:25894   */\n      dup4\n        /* \"#utility.yul\":25832:25899   */\n      tag_455\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":25825:25899   */\n      swap2\n      pop\n        /* \"#utility.yul\":25908:26001   */\n      tag_711\n        /* \"#utility.yul\":25997:26000   */\n      dup3\n        /* \"#utility.yul\":25908:26001   */\n      tag_479\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":26026:26028   */\n      0x20\n        /* \"#utility.yul\":26021:26024   */\n      dup3\n        /* \"#utility.yul\":26017:26029   */\n      add\n        /* \"#utility.yul\":26010:26029   */\n      swap1\n      pop\n        /* \"#utility.yul\":25669:26035   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26041:26460   */\n    tag_312:\n        /* \"#utility.yul\":26207:26211   */\n      0x00\n        /* \"#utility.yul\":26245:26247   */\n      0x20\n        /* \"#utility.yul\":26234:26243   */\n      dup3\n        /* \"#utility.yul\":26230:26248   */\n      add\n        /* \"#utility.yul\":26222:26248   */\n      swap1\n      pop\n        /* \"#utility.yul\":26294:26303   */\n      dup2\n        /* \"#utility.yul\":26288:26292   */\n      dup2\n        /* \"#utility.yul\":26284:26304   */\n      sub\n        /* \"#utility.yul\":26280:26281   */\n      0x00\n        /* \"#utility.yul\":26269:26278   */\n      dup4\n        /* \"#utility.yul\":26265:26282   */\n      add\n        /* \"#utility.yul\":26258:26305   */\n      mstore\n        /* \"#utility.yul\":26322:26453   */\n      tag_713\n        /* \"#utility.yul\":26448:26452   */\n      dup2\n        /* \"#utility.yul\":26322:26453   */\n      tag_480\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":26314:26453   */\n      swap1\n      pop\n        /* \"#utility.yul\":26041:26460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26466:26632   */\n    tag_481:\n        /* \"#utility.yul\":26606:26624   */\n      0x5061636b61676520696e61637469766500000000000000000000000000000000\n        /* \"#utility.yul\":26602:26603   */\n      0x00\n        /* \"#utility.yul\":26594:26600   */\n      dup3\n        /* \"#utility.yul\":26590:26604   */\n      add\n        /* \"#utility.yul\":26583:26625   */\n      mstore\n        /* \"#utility.yul\":26466:26632   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26638:27004   */\n    tag_482:\n        /* \"#utility.yul\":26780:26783   */\n      0x00\n        /* \"#utility.yul\":26801:26868   */\n      tag_716\n        /* \"#utility.yul\":26865:26867   */\n      0x10\n        /* \"#utility.yul\":26860:26863   */\n      dup4\n        /* \"#utility.yul\":26801:26868   */\n      tag_455\n      jump\t// in\n    tag_716:\n        /* \"#utility.yul\":26794:26868   */\n      swap2\n      pop\n        /* \"#utility.yul\":26877:26970   */\n      tag_717\n        /* \"#utility.yul\":26966:26969   */\n      dup3\n        /* \"#utility.yul\":26877:26970   */\n      tag_481\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":26995:26997   */\n      0x20\n        /* \"#utility.yul\":26990:26993   */\n      dup3\n        /* \"#utility.yul\":26986:26998   */\n      add\n        /* \"#utility.yul\":26979:26998   */\n      swap1\n      pop\n        /* \"#utility.yul\":26638:27004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27010:27429   */\n    tag_319:\n        /* \"#utility.yul\":27176:27180   */\n      0x00\n        /* \"#utility.yul\":27214:27216   */\n      0x20\n        /* \"#utility.yul\":27203:27212   */\n      dup3\n        /* \"#utility.yul\":27199:27217   */\n      add\n        /* \"#utility.yul\":27191:27217   */\n      swap1\n      pop\n        /* \"#utility.yul\":27263:27272   */\n      dup2\n        /* \"#utility.yul\":27257:27261   */\n      dup2\n        /* \"#utility.yul\":27253:27273   */\n      sub\n        /* \"#utility.yul\":27249:27250   */\n      0x00\n        /* \"#utility.yul\":27238:27247   */\n      dup4\n        /* \"#utility.yul\":27234:27251   */\n      add\n        /* \"#utility.yul\":27227:27274   */\n      mstore\n        /* \"#utility.yul\":27291:27422   */\n      tag_719\n        /* \"#utility.yul\":27417:27421   */\n      dup2\n        /* \"#utility.yul\":27291:27422   */\n      tag_482\n      jump\t// in\n    tag_719:\n        /* \"#utility.yul\":27283:27422   */\n      swap1\n      pop\n        /* \"#utility.yul\":27010:27429   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27435:27610   */\n    tag_483:\n        /* \"#utility.yul\":27575:27602   */\n      0x496e73756666696369656e74207374616b6520616d6f756e7400000000000000\n        /* \"#utility.yul\":27571:27572   */\n      0x00\n        /* \"#utility.yul\":27563:27569   */\n      dup3\n        /* \"#utility.yul\":27559:27573   */\n      add\n        /* \"#utility.yul\":27552:27603   */\n      mstore\n        /* \"#utility.yul\":27435:27610   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27616:27982   */\n    tag_484:\n        /* \"#utility.yul\":27758:27761   */\n      0x00\n        /* \"#utility.yul\":27779:27846   */\n      tag_722\n        /* \"#utility.yul\":27843:27845   */\n      0x19\n        /* \"#utility.yul\":27838:27841   */\n      dup4\n        /* \"#utility.yul\":27779:27846   */\n      tag_455\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":27772:27846   */\n      swap2\n      pop\n        /* \"#utility.yul\":27855:27948   */\n      tag_723\n        /* \"#utility.yul\":27944:27947   */\n      dup3\n        /* \"#utility.yul\":27855:27948   */\n      tag_483\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":27973:27975   */\n      0x20\n        /* \"#utility.yul\":27968:27971   */\n      dup3\n        /* \"#utility.yul\":27964:27976   */\n      add\n        /* \"#utility.yul\":27957:27976   */\n      swap1\n      pop\n        /* \"#utility.yul\":27616:27982   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27988:28407   */\n    tag_322:\n        /* \"#utility.yul\":28154:28158   */\n      0x00\n        /* \"#utility.yul\":28192:28194   */\n      0x20\n        /* \"#utility.yul\":28181:28190   */\n      dup3\n        /* \"#utility.yul\":28177:28195   */\n      add\n        /* \"#utility.yul\":28169:28195   */\n      swap1\n      pop\n        /* \"#utility.yul\":28241:28250   */\n      dup2\n        /* \"#utility.yul\":28235:28239   */\n      dup2\n        /* \"#utility.yul\":28231:28251   */\n      sub\n        /* \"#utility.yul\":28227:28228   */\n      0x00\n        /* \"#utility.yul\":28216:28225   */\n      dup4\n        /* \"#utility.yul\":28212:28229   */\n      add\n        /* \"#utility.yul\":28205:28252   */\n      mstore\n        /* \"#utility.yul\":28269:28400   */\n      tag_725\n        /* \"#utility.yul\":28395:28399   */\n      dup2\n        /* \"#utility.yul\":28269:28400   */\n      tag_484\n      jump\t// in\n    tag_725:\n        /* \"#utility.yul\":28261:28400   */\n      swap1\n      pop\n        /* \"#utility.yul\":27988:28407   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28413:28583   */\n    tag_485:\n        /* \"#utility.yul\":28553:28575   */\n      0x4e6f207265776172647320617661696c61626c65000000000000000000000000\n        /* \"#utility.yul\":28549:28550   */\n      0x00\n        /* \"#utility.yul\":28541:28547   */\n      dup3\n        /* \"#utility.yul\":28537:28551   */\n      add\n        /* \"#utility.yul\":28530:28576   */\n      mstore\n        /* \"#utility.yul\":28413:28583   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28589:28955   */\n    tag_486:\n        /* \"#utility.yul\":28731:28734   */\n      0x00\n        /* \"#utility.yul\":28752:28819   */\n      tag_728\n        /* \"#utility.yul\":28816:28818   */\n      0x14\n        /* \"#utility.yul\":28811:28814   */\n      dup4\n        /* \"#utility.yul\":28752:28819   */\n      tag_455\n      jump\t// in\n    tag_728:\n        /* \"#utility.yul\":28745:28819   */\n      swap2\n      pop\n        /* \"#utility.yul\":28828:28921   */\n      tag_729\n        /* \"#utility.yul\":28917:28920   */\n      dup3\n        /* \"#utility.yul\":28828:28921   */\n      tag_485\n      jump\t// in\n    tag_729:\n        /* \"#utility.yul\":28946:28948   */\n      0x20\n        /* \"#utility.yul\":28941:28944   */\n      dup3\n        /* \"#utility.yul\":28937:28949   */\n      add\n        /* \"#utility.yul\":28930:28949   */\n      swap1\n      pop\n        /* \"#utility.yul\":28589:28955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28961:29380   */\n    tag_345:\n        /* \"#utility.yul\":29127:29131   */\n      0x00\n        /* \"#utility.yul\":29165:29167   */\n      0x20\n        /* \"#utility.yul\":29154:29163   */\n      dup3\n        /* \"#utility.yul\":29150:29168   */\n      add\n        /* \"#utility.yul\":29142:29168   */\n      swap1\n      pop\n        /* \"#utility.yul\":29214:29223   */\n      dup2\n        /* \"#utility.yul\":29208:29212   */\n      dup2\n        /* \"#utility.yul\":29204:29224   */\n      sub\n        /* \"#utility.yul\":29200:29201   */\n      0x00\n        /* \"#utility.yul\":29189:29198   */\n      dup4\n        /* \"#utility.yul\":29185:29202   */\n      add\n        /* \"#utility.yul\":29178:29225   */\n      mstore\n        /* \"#utility.yul\":29242:29373   */\n      tag_731\n        /* \"#utility.yul\":29368:29372   */\n      dup2\n        /* \"#utility.yul\":29242:29373   */\n      tag_486\n      jump\t// in\n    tag_731:\n        /* \"#utility.yul\":29234:29373   */\n      swap1\n      pop\n        /* \"#utility.yul\":28961:29380   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29386:29567   */\n    tag_487:\n        /* \"#utility.yul\":29526:29559   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":29522:29523   */\n      0x00\n        /* \"#utility.yul\":29514:29520   */\n      dup3\n        /* \"#utility.yul\":29510:29524   */\n      add\n        /* \"#utility.yul\":29503:29560   */\n      mstore\n        /* \"#utility.yul\":29386:29567   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29573:29939   */\n    tag_488:\n        /* \"#utility.yul\":29715:29718   */\n      0x00\n        /* \"#utility.yul\":29736:29803   */\n      tag_734\n        /* \"#utility.yul\":29800:29802   */\n      0x1f\n        /* \"#utility.yul\":29795:29798   */\n      dup4\n        /* \"#utility.yul\":29736:29803   */\n      tag_455\n      jump\t// in\n    tag_734:\n        /* \"#utility.yul\":29729:29803   */\n      swap2\n      pop\n        /* \"#utility.yul\":29812:29905   */\n      tag_735\n        /* \"#utility.yul\":29901:29904   */\n      dup3\n        /* \"#utility.yul\":29812:29905   */\n      tag_487\n      jump\t// in\n    tag_735:\n        /* \"#utility.yul\":29930:29932   */\n      0x20\n        /* \"#utility.yul\":29925:29928   */\n      dup3\n        /* \"#utility.yul\":29921:29933   */\n      add\n        /* \"#utility.yul\":29914:29933   */\n      swap1\n      pop\n        /* \"#utility.yul\":29573:29939   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29945:30364   */\n    tag_366:\n        /* \"#utility.yul\":30111:30115   */\n      0x00\n        /* \"#utility.yul\":30149:30151   */\n      0x20\n        /* \"#utility.yul\":30138:30147   */\n      dup3\n        /* \"#utility.yul\":30134:30152   */\n      add\n        /* \"#utility.yul\":30126:30152   */\n      swap1\n      pop\n        /* \"#utility.yul\":30198:30207   */\n      dup2\n        /* \"#utility.yul\":30192:30196   */\n      dup2\n        /* \"#utility.yul\":30188:30208   */\n      sub\n        /* \"#utility.yul\":30184:30185   */\n      0x00\n        /* \"#utility.yul\":30173:30182   */\n      dup4\n        /* \"#utility.yul\":30169:30186   */\n      add\n        /* \"#utility.yul\":30162:30209   */\n      mstore\n        /* \"#utility.yul\":30226:30357   */\n      tag_737\n        /* \"#utility.yul\":30352:30356   */\n      dup2\n        /* \"#utility.yul\":30226:30357   */\n      tag_488\n      jump\t// in\n    tag_737:\n        /* \"#utility.yul\":30218:30357   */\n      swap1\n      pop\n        /* \"#utility.yul\":29945:30364   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30370:30780   */\n    tag_377:\n        /* \"#utility.yul\":30410:30417   */\n      0x00\n        /* \"#utility.yul\":30433:30453   */\n      tag_739\n        /* \"#utility.yul\":30451:30452   */\n      dup3\n        /* \"#utility.yul\":30433:30453   */\n      tag_430\n      jump\t// in\n    tag_739:\n        /* \"#utility.yul\":30428:30453   */\n      swap2\n      pop\n        /* \"#utility.yul\":30467:30487   */\n      tag_740\n        /* \"#utility.yul\":30485:30486   */\n      dup4\n        /* \"#utility.yul\":30467:30487   */\n      tag_430\n      jump\t// in\n    tag_740:\n        /* \"#utility.yul\":30462:30487   */\n      swap3\n      pop\n        /* \"#utility.yul\":30522:30523   */\n      dup3\n        /* \"#utility.yul\":30519:30520   */\n      dup3\n        /* \"#utility.yul\":30515:30524   */\n      mul\n        /* \"#utility.yul\":30544:30574   */\n      tag_741\n        /* \"#utility.yul\":30562:30573   */\n      dup2\n        /* \"#utility.yul\":30544:30574   */\n      tag_430\n      jump\t// in\n    tag_741:\n        /* \"#utility.yul\":30533:30574   */\n      swap2\n      pop\n        /* \"#utility.yul\":30723:30724   */\n      dup3\n        /* \"#utility.yul\":30714:30721   */\n      dup3\n        /* \"#utility.yul\":30710:30725   */\n      div\n        /* \"#utility.yul\":30707:30708   */\n      dup5\n        /* \"#utility.yul\":30704:30726   */\n      eq\n        /* \"#utility.yul\":30684:30685   */\n      dup4\n        /* \"#utility.yul\":30677:30686   */\n      iszero\n        /* \"#utility.yul\":30657:30740   */\n      or\n        /* \"#utility.yul\":30634:30773   */\n      tag_742\n      jumpi\n        /* \"#utility.yul\":30753:30771   */\n      tag_743\n      tag_462\n      jump\t// in\n    tag_743:\n        /* \"#utility.yul\":30634:30773   */\n    tag_742:\n        /* \"#utility.yul\":30418:30780   */\n      pop\n        /* \"#utility.yul\":30370:30780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30786:30966   */\n    tag_489:\n        /* \"#utility.yul\":30834:30911   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30831:30832   */\n      0x00\n        /* \"#utility.yul\":30824:30912   */\n      mstore\n        /* \"#utility.yul\":30931:30935   */\n      0x12\n        /* \"#utility.yul\":30928:30929   */\n      0x04\n        /* \"#utility.yul\":30921:30936   */\n      mstore\n        /* \"#utility.yul\":30955:30959   */\n      0x24\n        /* \"#utility.yul\":30952:30953   */\n      0x00\n        /* \"#utility.yul\":30945:30960   */\n      revert\n        /* \"#utility.yul\":30972:31157   */\n    tag_381:\n        /* \"#utility.yul\":31012:31013   */\n      0x00\n        /* \"#utility.yul\":31029:31049   */\n      tag_746\n        /* \"#utility.yul\":31047:31048   */\n      dup3\n        /* \"#utility.yul\":31029:31049   */\n      tag_430\n      jump\t// in\n    tag_746:\n        /* \"#utility.yul\":31024:31049   */\n      swap2\n      pop\n        /* \"#utility.yul\":31063:31083   */\n      tag_747\n        /* \"#utility.yul\":31081:31082   */\n      dup4\n        /* \"#utility.yul\":31063:31083   */\n      tag_430\n      jump\t// in\n    tag_747:\n        /* \"#utility.yul\":31058:31083   */\n      swap3\n      pop\n        /* \"#utility.yul\":31102:31103   */\n      dup3\n        /* \"#utility.yul\":31092:31127   */\n      tag_748\n      jumpi\n        /* \"#utility.yul\":31107:31125   */\n      tag_749\n      tag_489\n      jump\t// in\n    tag_749:\n        /* \"#utility.yul\":31092:31127   */\n    tag_748:\n        /* \"#utility.yul\":31149:31150   */\n      dup3\n        /* \"#utility.yul\":31146:31147   */\n      dup3\n        /* \"#utility.yul\":31142:31151   */\n      div\n        /* \"#utility.yul\":31137:31151   */\n      swap1\n      pop\n        /* \"#utility.yul\":30972:31157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31163:31329   */\n    tag_490:\n        /* \"#utility.yul\":31303:31321   */\n      0x5061757361626c653a2070617573656400000000000000000000000000000000\n        /* \"#utility.yul\":31299:31300   */\n      0x00\n        /* \"#utility.yul\":31291:31297   */\n      dup3\n        /* \"#utility.yul\":31287:31301   */\n      add\n        /* \"#utility.yul\":31280:31322   */\n      mstore\n        /* \"#utility.yul\":31163:31329   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31335:31701   */\n    tag_491:\n        /* \"#utility.yul\":31477:31480   */\n      0x00\n        /* \"#utility.yul\":31498:31565   */\n      tag_752\n        /* \"#utility.yul\":31562:31564   */\n      0x10\n        /* \"#utility.yul\":31557:31560   */\n      dup4\n        /* \"#utility.yul\":31498:31565   */\n      tag_455\n      jump\t// in\n    tag_752:\n        /* \"#utility.yul\":31491:31565   */\n      swap2\n      pop\n        /* \"#utility.yul\":31574:31667   */\n      tag_753\n        /* \"#utility.yul\":31663:31666   */\n      dup3\n        /* \"#utility.yul\":31574:31667   */\n      tag_490\n      jump\t// in\n    tag_753:\n        /* \"#utility.yul\":31692:31694   */\n      0x20\n        /* \"#utility.yul\":31687:31690   */\n      dup3\n        /* \"#utility.yul\":31683:31695   */\n      add\n        /* \"#utility.yul\":31676:31695   */\n      swap1\n      pop\n        /* \"#utility.yul\":31335:31701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31707:32126   */\n    tag_406:\n        /* \"#utility.yul\":31873:31877   */\n      0x00\n        /* \"#utility.yul\":31911:31913   */\n      0x20\n        /* \"#utility.yul\":31900:31909   */\n      dup3\n        /* \"#utility.yul\":31896:31914   */\n      add\n        /* \"#utility.yul\":31888:31914   */\n      swap1\n      pop\n        /* \"#utility.yul\":31960:31969   */\n      dup2\n        /* \"#utility.yul\":31954:31958   */\n      dup2\n        /* \"#utility.yul\":31950:31970   */\n      sub\n        /* \"#utility.yul\":31946:31947   */\n      0x00\n        /* \"#utility.yul\":31935:31944   */\n      dup4\n        /* \"#utility.yul\":31931:31948   */\n      add\n        /* \"#utility.yul\":31924:31971   */\n      mstore\n        /* \"#utility.yul\":31988:32119   */\n      tag_755\n        /* \"#utility.yul\":32114:32118   */\n      dup2\n        /* \"#utility.yul\":31988:32119   */\n      tag_491\n      jump\t// in\n    tag_755:\n        /* \"#utility.yul\":31980:32119   */\n      swap1\n      pop\n        /* \"#utility.yul\":31707:32126   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32132:32574   */\n    tag_410:\n        /* \"#utility.yul\":32281:32285   */\n      0x00\n        /* \"#utility.yul\":32319:32321   */\n      0x60\n        /* \"#utility.yul\":32308:32317   */\n      dup3\n        /* \"#utility.yul\":32304:32322   */\n      add\n        /* \"#utility.yul\":32296:32322   */\n      swap1\n      pop\n        /* \"#utility.yul\":32332:32403   */\n      tag_757\n        /* \"#utility.yul\":32400:32401   */\n      0x00\n        /* \"#utility.yul\":32389:32398   */\n      dup4\n        /* \"#utility.yul\":32385:32402   */\n      add\n        /* \"#utility.yul\":32376:32382   */\n      dup7\n        /* \"#utility.yul\":32332:32403   */\n      tag_449\n      jump\t// in\n    tag_757:\n        /* \"#utility.yul\":32413:32485   */\n      tag_758\n        /* \"#utility.yul\":32481:32483   */\n      0x20\n        /* \"#utility.yul\":32470:32479   */\n      dup4\n        /* \"#utility.yul\":32466:32484   */\n      add\n        /* \"#utility.yul\":32457:32463   */\n      dup6\n        /* \"#utility.yul\":32413:32485   */\n      tag_449\n      jump\t// in\n    tag_758:\n        /* \"#utility.yul\":32495:32567   */\n      tag_759\n        /* \"#utility.yul\":32563:32565   */\n      0x40\n        /* \"#utility.yul\":32552:32561   */\n      dup4\n        /* \"#utility.yul\":32548:32566   */\n      add\n        /* \"#utility.yul\":32539:32545   */\n      dup5\n        /* \"#utility.yul\":32495:32567   */\n      tag_436\n      jump\t// in\n    tag_759:\n        /* \"#utility.yul\":32132:32574   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32580:32750   */\n    tag_492:\n        /* \"#utility.yul\":32720:32742   */\n      0x5061757361626c653a206e6f7420706175736564000000000000000000000000\n        /* \"#utility.yul\":32716:32717   */\n      0x00\n        /* \"#utility.yul\":32708:32714   */\n      dup3\n        /* \"#utility.yul\":32704:32718   */\n      add\n        /* \"#utility.yul\":32697:32743   */\n      mstore\n        /* \"#utility.yul\":32580:32750   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32756:33122   */\n    tag_493:\n        /* \"#utility.yul\":32898:32901   */\n      0x00\n        /* \"#utility.yul\":32919:32986   */\n      tag_762\n        /* \"#utility.yul\":32983:32985   */\n      0x14\n        /* \"#utility.yul\":32978:32981   */\n      dup4\n        /* \"#utility.yul\":32919:32986   */\n      tag_455\n      jump\t// in\n    tag_762:\n        /* \"#utility.yul\":32912:32986   */\n      swap2\n      pop\n        /* \"#utility.yul\":32995:33088   */\n      tag_763\n        /* \"#utility.yul\":33084:33087   */\n      dup3\n        /* \"#utility.yul\":32995:33088   */\n      tag_492\n      jump\t// in\n    tag_763:\n        /* \"#utility.yul\":33113:33115   */\n      0x20\n        /* \"#utility.yul\":33108:33111   */\n      dup3\n        /* \"#utility.yul\":33104:33116   */\n      add\n        /* \"#utility.yul\":33097:33116   */\n      swap1\n      pop\n        /* \"#utility.yul\":32756:33122   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33128:33547   */\n    tag_421:\n        /* \"#utility.yul\":33294:33298   */\n      0x00\n        /* \"#utility.yul\":33332:33334   */\n      0x20\n        /* \"#utility.yul\":33321:33330   */\n      dup3\n        /* \"#utility.yul\":33317:33335   */\n      add\n        /* \"#utility.yul\":33309:33335   */\n      swap1\n      pop\n        /* \"#utility.yul\":33381:33390   */\n      dup2\n        /* \"#utility.yul\":33375:33379   */\n      dup2\n        /* \"#utility.yul\":33371:33391   */\n      sub\n        /* \"#utility.yul\":33367:33368   */\n      0x00\n        /* \"#utility.yul\":33356:33365   */\n      dup4\n        /* \"#utility.yul\":33352:33369   */\n      add\n        /* \"#utility.yul\":33345:33392   */\n      mstore\n        /* \"#utility.yul\":33409:33540   */\n      tag_765\n        /* \"#utility.yul\":33535:33539   */\n      dup2\n        /* \"#utility.yul\":33409:33540   */\n      tag_493\n      jump\t// in\n    tag_765:\n        /* \"#utility.yul\":33401:33540   */\n      swap1\n      pop\n        /* \"#utility.yul\":33128:33547   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d9a8cf148e9c28ec1d3155c5f23e6498ee62ea58115147817a28b70fbdd9f65064736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1315": {
									"entryPoint": null,
									"id": 1315,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_350": {
									"entryPoint": null,
									"id": 350,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_450": {
									"entryPoint": null,
									"id": 450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 614,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_208": {
									"entryPoint": 560,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 881,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 981,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1181,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1077,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 996,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1111,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1021,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 811,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 807,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345": {
									"entryPoint": 1141,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3985:12",
										"nodeType": "YulBlock",
										"src": "0:3985:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "956:552:12",
													"nodeType": "YulBlock",
													"src": "956:552:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:12",
																"nodeType": "YulBlock",
																"src": "1002:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:12"
																			},
																			"nativeSrc": "1004:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:12"
																		},
																		"nativeSrc": "1004:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:12"
																		},
																		"nativeSrc": "973:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:12",
																		"nodeType": "YulLiteral",
																		"src": "998:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:12"
																},
																"nativeSrc": "969:32:12",
																"nodeType": "YulFunctionCall",
																"src": "969:32:12"
															},
															"nativeSrc": "966:119:12",
															"nodeType": "YulIf",
															"src": "966:119:12"
														},
														{
															"nativeSrc": "1095:128:12",
															"nodeType": "YulBlock",
															"src": "1095:128:12",
															"statements": [
																{
																	"nativeSrc": "1110:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:12"
																				},
																				"nativeSrc": "1181:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:12"
																		},
																		"nativeSrc": "1149:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:12",
															"nodeType": "YulBlock",
															"src": "1233:129:12",
															"statements": [
																{
																	"nativeSrc": "1248:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:12"
																				},
																				"nativeSrc": "1320:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:12"
																		},
																		"nativeSrc": "1288:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:12",
															"nodeType": "YulBlock",
															"src": "1372:129:12",
															"statements": [
																{
																	"nativeSrc": "1387:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:12"
																				},
																				"nativeSrc": "1459:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:12"
																		},
																		"nativeSrc": "1427:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:12",
														"nodeType": "YulTypedName",
														"src": "910:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:12",
														"nodeType": "YulTypedName",
														"src": "921:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:12",
														"nodeType": "YulTypedName",
														"src": "933:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:12",
														"nodeType": "YulTypedName",
														"src": "941:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:12",
														"nodeType": "YulTypedName",
														"src": "949:6:12",
														"type": ""
													}
												],
												"src": "845:663:12"
											},
											{
												"body": {
													"nativeSrc": "1579:53:12",
													"nodeType": "YulBlock",
													"src": "1579:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:12"
																		},
																		"nativeSrc": "1601:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:12"
																},
																"nativeSrc": "1589:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:12"
															},
															"nativeSrc": "1589:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:12",
														"nodeType": "YulTypedName",
														"src": "1567:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:12",
														"nodeType": "YulTypedName",
														"src": "1574:3:12",
														"type": ""
													}
												],
												"src": "1514:118:12"
											},
											{
												"body": {
													"nativeSrc": "1736:124:12",
													"nodeType": "YulBlock",
													"src": "1736:124:12",
													"statements": [
														{
															"nativeSrc": "1746:26:12",
															"nodeType": "YulAssignment",
															"src": "1746:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:12"
																},
																"nativeSrc": "1754:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:12"
																		},
																		"nativeSrc": "1835:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:12"
																},
																"nativeSrc": "1782:71:12",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:12"
															},
															"nativeSrc": "1782:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:12",
														"nodeType": "YulTypedName",
														"src": "1708:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:12",
														"nodeType": "YulTypedName",
														"src": "1720:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:12",
														"nodeType": "YulTypedName",
														"src": "1731:4:12",
														"type": ""
													}
												],
												"src": "1638:222:12"
											},
											{
												"body": {
													"nativeSrc": "1962:73:12",
													"nodeType": "YulBlock",
													"src": "1962:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1979:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1979:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1984:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:12"
																},
																"nativeSrc": "1972:19:12",
																"nodeType": "YulFunctionCall",
																"src": "1972:19:12"
															},
															"nativeSrc": "1972:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "1972:19:12"
														},
														{
															"nativeSrc": "2000:29:12",
															"nodeType": "YulAssignment",
															"src": "2000:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2019:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2015:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:12"
																},
																"nativeSrc": "2015:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2015:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2000:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "2000:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1866:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1934:3:12",
														"nodeType": "YulTypedName",
														"src": "1934:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1939:6:12",
														"nodeType": "YulTypedName",
														"src": "1939:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1950:11:12",
														"nodeType": "YulTypedName",
														"src": "1950:11:12",
														"type": ""
													}
												],
												"src": "1866:169:12"
											},
											{
												"body": {
													"nativeSrc": "2147:64:12",
													"nodeType": "YulBlock",
													"src": "2147:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2169:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2177:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2177:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2165:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:12"
																		},
																		"nativeSrc": "2165:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2165:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "2181:22:12",
																		"nodeType": "YulLiteral",
																		"src": "2181:22:12",
																		"type": "",
																		"value": "Invalid reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2158:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:12"
																},
																"nativeSrc": "2158:46:12",
																"nodeType": "YulFunctionCall",
																"src": "2158:46:12"
															},
															"nativeSrc": "2158:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "2158:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
												"nativeSrc": "2041:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2139:6:12",
														"nodeType": "YulTypedName",
														"src": "2139:6:12",
														"type": ""
													}
												],
												"src": "2041:170:12"
											},
											{
												"body": {
													"nativeSrc": "2363:220:12",
													"nodeType": "YulBlock",
													"src": "2363:220:12",
													"statements": [
														{
															"nativeSrc": "2373:74:12",
															"nodeType": "YulAssignment",
															"src": "2373:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2439:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2439:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2444:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2444:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2380:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "2380:58:12"
																},
																"nativeSrc": "2380:67:12",
																"nodeType": "YulFunctionCall",
																"src": "2380:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2373:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2373:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2545:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2545:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																	"nativeSrc": "2456:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "2456:88:12"
																},
																"nativeSrc": "2456:93:12",
																"nodeType": "YulFunctionCall",
																"src": "2456:93:12"
															},
															"nativeSrc": "2456:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "2456:93:12"
														},
														{
															"nativeSrc": "2558:19:12",
															"nodeType": "YulAssignment",
															"src": "2558:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2569:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2569:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2574:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2574:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2565:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2565:3:12"
																},
																"nativeSrc": "2565:12:12",
																"nodeType": "YulFunctionCall",
																"src": "2565:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2558:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2558:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2217:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2351:3:12",
														"nodeType": "YulTypedName",
														"src": "2351:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2359:3:12",
														"nodeType": "YulTypedName",
														"src": "2359:3:12",
														"type": ""
													}
												],
												"src": "2217:366:12"
											},
											{
												"body": {
													"nativeSrc": "2760:248:12",
													"nodeType": "YulBlock",
													"src": "2760:248:12",
													"statements": [
														{
															"nativeSrc": "2770:26:12",
															"nodeType": "YulAssignment",
															"src": "2770:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2782:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2782:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2793:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2793:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2778:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2778:3:12"
																},
																"nativeSrc": "2778:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2778:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2770:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2770:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2817:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2817:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2828:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2828:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2813:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:12"
																		},
																		"nativeSrc": "2813:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2836:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "2836:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2842:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2842:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2832:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2832:3:12"
																		},
																		"nativeSrc": "2832:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2832:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2806:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2806:6:12"
																},
																"nativeSrc": "2806:47:12",
																"nodeType": "YulFunctionCall",
																"src": "2806:47:12"
															},
															"nativeSrc": "2806:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "2806:47:12"
														},
														{
															"nativeSrc": "2862:139:12",
															"nodeType": "YulAssignment",
															"src": "2862:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2996:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "2996:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2870:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "2870:124:12"
																},
																"nativeSrc": "2870:131:12",
																"nodeType": "YulFunctionCall",
																"src": "2870:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2862:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2862:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2589:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2740:9:12",
														"nodeType": "YulTypedName",
														"src": "2740:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2755:4:12",
														"nodeType": "YulTypedName",
														"src": "2755:4:12",
														"type": ""
													}
												],
												"src": "2589:419:12"
											},
											{
												"body": {
													"nativeSrc": "3120:65:12",
													"nodeType": "YulBlock",
													"src": "3120:65:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3142:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3142:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3150:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3150:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3138:3:12"
																		},
																		"nativeSrc": "3138:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3138:14:12"
																	},
																	{
																		"hexValue": "496e76616c69642066656520636f6c6c6563746f72",
																		"kind": "string",
																		"nativeSrc": "3154:23:12",
																		"nodeType": "YulLiteral",
																		"src": "3154:23:12",
																		"type": "",
																		"value": "Invalid fee collector"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3131:6:12"
																},
																"nativeSrc": "3131:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3131:47:12"
															},
															"nativeSrc": "3131:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3131:47:12"
														}
													]
												},
												"name": "store_literal_in_memory_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345",
												"nativeSrc": "3014:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3112:6:12",
														"nodeType": "YulTypedName",
														"src": "3112:6:12",
														"type": ""
													}
												],
												"src": "3014:171:12"
											},
											{
												"body": {
													"nativeSrc": "3337:220:12",
													"nodeType": "YulBlock",
													"src": "3337:220:12",
													"statements": [
														{
															"nativeSrc": "3347:74:12",
															"nodeType": "YulAssignment",
															"src": "3347:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3413:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3418:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3418:2:12",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3354:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "3354:58:12"
																},
																"nativeSrc": "3354:67:12",
																"nodeType": "YulFunctionCall",
																"src": "3354:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3347:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3347:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3519:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3519:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345",
																	"nativeSrc": "3430:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "3430:88:12"
																},
																"nativeSrc": "3430:93:12",
																"nodeType": "YulFunctionCall",
																"src": "3430:93:12"
															},
															"nativeSrc": "3430:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "3430:93:12"
														},
														{
															"nativeSrc": "3532:19:12",
															"nodeType": "YulAssignment",
															"src": "3532:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3539:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:12"
																},
																"nativeSrc": "3539:12:12",
																"nodeType": "YulFunctionCall",
																"src": "3539:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3532:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3191:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3325:3:12",
														"nodeType": "YulTypedName",
														"src": "3325:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3333:3:12",
														"nodeType": "YulTypedName",
														"src": "3333:3:12",
														"type": ""
													}
												],
												"src": "3191:366:12"
											},
											{
												"body": {
													"nativeSrc": "3734:248:12",
													"nodeType": "YulBlock",
													"src": "3734:248:12",
													"statements": [
														{
															"nativeSrc": "3744:26:12",
															"nodeType": "YulAssignment",
															"src": "3744:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3756:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3756:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3767:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3752:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:12"
																},
																"nativeSrc": "3752:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3752:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3744:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3744:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3791:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3802:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3802:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:12"
																		},
																		"nativeSrc": "3787:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3810:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "3810:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3816:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3816:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:12"
																		},
																		"nativeSrc": "3806:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3780:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:12"
																},
																"nativeSrc": "3780:47:12",
																"nodeType": "YulFunctionCall",
																"src": "3780:47:12"
															},
															"nativeSrc": "3780:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "3780:47:12"
														},
														{
															"nativeSrc": "3836:139:12",
															"nodeType": "YulAssignment",
															"src": "3836:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3970:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "3970:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3844:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "3844:124:12"
																},
																"nativeSrc": "3844:131:12",
																"nodeType": "YulFunctionCall",
																"src": "3844:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3836:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3563:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3714:9:12",
														"nodeType": "YulTypedName",
														"src": "3714:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3729:4:12",
														"nodeType": "YulTypedName",
														"src": "3729:4:12",
														"type": ""
													}
												],
												"src": "3563:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee collector\")\n\n    }\n\n    function abi_encode_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a06040526032600655348015610014575f5ffd5b506040516137cd3803806137cd83398181016040528101906100369190610385565b805f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009e91906103e4565b60405180910390fd5b6100b68161023060201b60201c565b5060016002819055505f60035f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610146576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161013d90610457565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036101b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101ab906104bf565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506104dd565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556102638161026660201b60201c565b50565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103548261032b565b9050919050565b6103648161034a565b811461036e575f5ffd5b50565b5f8151905061037f8161035b565b92915050565b5f5f5f6060848603121561039c5761039b610327565b5b5f6103a986828701610371565b93505060206103ba86828701610371565b92505060406103cb86828701610371565b9150509250925092565b6103de8161034a565b82525050565b5f6020820190506103f75f8301846103d5565b92915050565b5f82825260208201905092915050565b7f496e76616c69642072657761726420746f6b656e0000000000000000000000005f82015250565b5f6104416014836103fd565b915061044c8261040d565b602082019050919050565b5f6020820190508181035f83015261046e81610435565b9050919050565b7f496e76616c69642066656520636f6c6c6563746f7200000000000000000000005f82015250565b5f6104a96015836103fd565b91506104b482610475565b602082019050919050565b5f6020820190508181035f8301526104d68161049d565b9050919050565b6080516132c361050a5f395f8181610ba401528181610d5701528181611b1b0152611ca201526132c35ff3fe608060405234801561000f575f5ffd5b50600436106101c2575f3560e01c8063842e2981116100f7578063db94ebc911610095578063e30c39781161006f578063e30c397814610458578063e6a69ab814610476578063f2fde38b14610494578063f7c618c1146104b0576101c2565b8063db94ebc914610400578063dd69becd1461041e578063e1a452181461043a576101c2565b8063985145b5116100d1578063985145b51461038a578063c415b95c146103a8578063d55be8c6146103c6578063d7fa023d146103e4576101c2565b8063842e2981146103205780638da5cb5b14610350578063973e46b11461036e576101c2565b80635a4d848911610164578063715018a61161013e578063715018a6146102c057806379ba5097146102ca5780637f6a9184146102d45780637fc7984d146102f0576101c2565b80635a4d8489146102565780635c975abb146102725780636c435e3614610290576101c2565b80632ba662d6116101a05780632ba662d61461021a5780632e185ec7146102385780634a4e3bd51461024257806351858e271461024c576101c2565b80631bd9b708146101c6578063217a51ee146101e257806325d5971f146101fe575b5f5ffd5b6101e060048036038101906101db9190612435565b6104ce565b005b6101fc60048036038101906101f791906124ce565b610716565b005b6102186004803603810190610213919061250c565b6107dd565b005b610222610c4b565b60405161022f9190612546565b60405180910390f35b610240610c51565b005b61024a610df8565b005b610254610e0a565b005b610270600480360381019061026b919061250c565b610e1c565b005b61027a61103f565b604051610287919061256e565b60405180910390f35b6102aa60048036038101906102a5919061250c565b611054565b6040516102b7919061261a565b60405180910390f35b6102c8611163565b005b6102d2611176565b005b6102ee60048036038101906102e99190612633565b611204565b005b61030a60048036038101906103059190612671565b611396565b6040516103179190612546565b60405180910390f35b61033a600480360381019061033591906126af565b6113a9565b60405161034791906127e8565b60405180910390f35b610358611483565b6040516103659190612817565b60405180910390f35b61038860048036038101906103839190612830565b6114aa565b005b6103926115e9565b60405161039f9190612546565b60405180910390f35b6103b06115f5565b6040516103bd9190612817565b60405180910390f35b6103ce61161a565b6040516103db9190612546565b60405180910390f35b6103fe60048036038101906103f99190612633565b611620565b005b6104086118f7565b6040516104159190612546565b60405180910390f35b6104386004803603810190610433919061250c565b6118fd565b005b610442611bbe565b60405161044f9190612546565b60405180910390f35b610460611bc4565b60405161046d9190612817565b60405180910390f35b61047e611bec565b60405161048b9190612546565b60405180910390f35b6104ae60048036038101906104a991906126af565b611bf4565b005b6104b8611ca0565b6040516104c591906128c9565b60405180910390f35b6104d6611cc4565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b9061293c565b60405180910390fd5b5f8311610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d906129a4565b60405180910390fd5b5f8211801561059757506127108211155b6105d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cd90612a0c565b60405180910390fd5b60046040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200160011515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff021916908315150217905550505060016004805490506106d39190612a57565b7f05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a877618858585856040516107089493929190612a8a565b60405180910390a250505050565b61071e611cc4565b816004805490508110610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90612b17565b60405180910390fd5b816004848154811061077b5761077a612b35565b5b905f5260205f2090600502016004015f6101000a81548160ff021916908315150217905550827f27ffac29f91e32ed296e1ae41a59f23ebefbcac53eb28251a6fd6a5be271970a836040516107d0919061256e565b60405180910390a2505050565b6107e5611d4b565b338160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086090612bac565b60405180910390fd5b5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106108b9576108b8612b35565b5b905f5260205f2090600502016001015411610909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090090612c14565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061095957610958612b35565b5b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6004825f0151815481106109cb576109ca612b35565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050905080602001518260400151610a849190612c32565b421015610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90612caf565b60405180910390fd5b5f610ad13387611d98565b90505f8360200151905060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110610b2a57610b29612b35565b5b905f5260205f2090600502015f5f82015f9055600182015f9055600282015f9055600382015f9055600482015f6101000a81549060ff02191690555050610b953382855f015173ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b5f821115610be957610be833837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b5b863373ffffffffffffffffffffffffffffffffffffffff167f88d1c46373223a4f1f60db2badc985b05ec9c2b2eab4537f0f8e1291b78b6e378385604051610c32929190612ccd565b60405180910390a3505050505050610c48611fed565b50565b60065481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790612d3e565b60405180910390fd5b5f60075490505f8111610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f90612da6565b60405180910390fd5b5f600781905550610d9b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b7fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610ded929190612dc4565b60405180910390a150565b610e00611cc4565b610e08611ff7565b565b610e12611cc4565b610e1a612058565b565b610e24611d4b565b338160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f90612bac565b60405180910390fd5b5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ef857610ef7612b35565b5b905f5260205f2090600502016001015411610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f90612c14565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610f9857610f97612b35565b5b905f5260205f2090600502019050806004015f9054906101000a900460ff1615816004015f6101000a81548160ff021916908315150217905550833373ffffffffffffffffffffffffffffffffffffffff167fd9a4263cd64bef5364cf9865147c8561e0c7151a9e1d79d8aa67df565aa96efe836004015f9054906101000a900460ff16604051611029919061256e565b60405180910390a350505061103c611fed565b50565b5f60035f9054906101000a900460ff16905090565b61105c612362565b8160048054905081106110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b90612b17565b60405180910390fd5b600483815481106110b8576110b7612b35565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050915050919050565b61116b611cc4565b6111745f6120ba565b565b5f61117f6120ea565b90508073ffffffffffffffffffffffffffffffffffffffff166111a0611bc4565b73ffffffffffffffffffffffffffffffffffffffff16146111f857806040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111ef9190612817565b60405180910390fd5b611201816120ba565b50565b61120c611cc4565b816004805490508110611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90612b17565b60405180910390fd5b5f8211801561126557506127108211155b6112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129b90612a0c565b60405180910390fd5b81600484815481106112b9576112b8612b35565b5b905f5260205f20906005020160020181905550827f05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a8776186004858154811061130257611301612b35565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004868154811061134457611343612b35565b5b905f5260205f20906005020160010154856004888154811061136957611368612b35565b5b905f5260205f209060050201600301546040516113899493929190612a8a565b60405180910390a2505050565b5f6113a18383611d98565b905092915050565b606060085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015611478578382905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505081526020019060010190611407565b505050509050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6114b2611cc4565b6103e88211156114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ee90612e35565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155c90612e9d565b60405180910390fd5b816006819055508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2cf325792651b724d47f21230be0dd9729866cadd370618845e23a48555ef04282826040516115dd929190612ebb565b60405180910390a15050565b5f600480549050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103e881565b611628611d4b565b6116306120f1565b816004805490508110611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166f90612b17565b60405180910390fd5b815f81116116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b290612f2c565b60405180910390fd5b5f600485815481106116d0576116cf612b35565b5b905f5260205f2090600502019050806004015f9054906101000a900460ff1661172e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172590612f94565b60405180910390fd5b8060030154841015611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176c90612ffc565b60405180910390fd5b6117c4333086845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661213b909392919063ffffffff16565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808781526020018681526020014281526020014281526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055505050843373ffffffffffffffffffffffffffffffffffffffff167f20400db7cf9bdfcb8b13ccfb8a7b4bb447c3244efdbc2336e6f6e1673d7bd84586426040516118e0929190612ccd565b60405180910390a35050506118f3611fed565b5050565b60075481565b611905611d4b565b338160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110611989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198090612bac565b60405180910390fd5b5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106119d9576119d8612b35565b5b905f5260205f2090600502016001015411611a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2090612c14565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110611a7957611a78612b35565b5b905f5260205f20906005020190505f611a923386611d98565b90505f8111611ad6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611acd90613064565b60405180910390fd5b428260030181905550816004015f9054906101000a900460ff1615611b145780826001015f828254611b089190612c32565b92505081905550611b60565b611b5f33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b5b843373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e273174383604051611ba79190612546565b60405180910390a350505050611bbb611fed565b50565b61271081565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6301e1338081565b611bfc611cc4565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16611c5b611483565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b611ccc6120ea565b73ffffffffffffffffffffffffffffffffffffffff16611cea611483565b73ffffffffffffffffffffffffffffffffffffffff1614611d4957611d0d6120ea565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d409190612817565b60405180910390fd5b565b6002805403611d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d86906130cc565b60405180910390fd5b60028081905550565b5f5f60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110611de957611de8612b35565b5b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f816020015103611e57575f915050611f68565b5f6004825f015181548110611e6f57611e6e612b35565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f826060015142611f259190612a57565b90506127106301e13380611f3991906130ea565b8183604001518560200151611f4e91906130ea565b611f5891906130ea565b611f629190613158565b93505050505b92915050565b611fe8838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611fa1929190612dc4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121bd565b505050565b6001600281905550565b611fff612258565b5f60035f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120416120ea565b60405161204e9190612817565b60405180910390a1565b6120606120f1565b600160035f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120a36120ea565b6040516120b09190612817565b60405180910390a1565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556120e7816122a1565b50565b5f33905090565b6120f961103f565b15612139576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612130906131d2565b60405180910390fd5b565b6121b7848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612170939291906131f0565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121bd565b50505050565b5f5f60205f8451602086015f885af1806121dc576040513d5f823e3d81fd5b3d92505f519150505f82146121f5576001811415612210565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561225257836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016122499190612817565b60405180910390fd5b50505050565b61226061103f565b61229f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122969061326f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f151581525090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6123d1826123a8565b9050919050565b6123e1816123c7565b81146123eb575f5ffd5b50565b5f813590506123fc816123d8565b92915050565b5f819050919050565b61241481612402565b811461241e575f5ffd5b50565b5f8135905061242f8161240b565b92915050565b5f5f5f5f6080858703121561244d5761244c6123a4565b5b5f61245a878288016123ee565b945050602061246b87828801612421565b935050604061247c87828801612421565b925050606061248d87828801612421565b91505092959194509250565b5f8115159050919050565b6124ad81612499565b81146124b7575f5ffd5b50565b5f813590506124c8816124a4565b92915050565b5f5f604083850312156124e4576124e36123a4565b5b5f6124f185828601612421565b9250506020612502858286016124ba565b9150509250929050565b5f60208284031215612521576125206123a4565b5b5f61252e84828501612421565b91505092915050565b61254081612402565b82525050565b5f6020820190506125595f830184612537565b92915050565b61256881612499565b82525050565b5f6020820190506125815f83018461255f565b92915050565b612590816123c7565b82525050565b61259f81612402565b82525050565b6125ae81612499565b82525050565b60a082015f8201516125c85f850182612587565b5060208201516125db6020850182612596565b5060408201516125ee6040850182612596565b5060608201516126016060850182612596565b50608082015161261460808501826125a5565b50505050565b5f60a08201905061262d5f8301846125b4565b92915050565b5f5f60408385031215612649576126486123a4565b5b5f61265685828601612421565b925050602061266785828601612421565b9150509250929050565b5f5f60408385031215612687576126866123a4565b5b5f612694858286016123ee565b92505060206126a585828601612421565b9150509250929050565b5f602082840312156126c4576126c36123a4565b5b5f6126d1848285016123ee565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60a082015f8201516127175f850182612596565b50602082015161272a6020850182612596565b50604082015161273d6040850182612596565b5060608201516127506060850182612596565b50608082015161276360808501826125a5565b50505050565b5f6127748383612703565b60a08301905092915050565b5f602082019050919050565b5f612796826126da565b6127a081856126e4565b93506127ab836126f4565b805f5b838110156127db5781516127c28882612769565b97506127cd83612780565b9250506001810190506127ae565b5085935050505092915050565b5f6020820190508181035f830152612800818461278c565b905092915050565b612811816123c7565b82525050565b5f60208201905061282a5f830184612808565b92915050565b5f5f60408385031215612846576128456123a4565b5b5f61285385828601612421565b9250506020612864858286016123ee565b9150509250929050565b5f819050919050565b5f61289161288c612887846123a8565b61286e565b6123a8565b9050919050565b5f6128a282612877565b9050919050565b5f6128b382612898565b9050919050565b6128c3816128a9565b82525050565b5f6020820190506128dc5f8301846128ba565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207374616b6520746f6b656e000000000000000000000000005f82015250565b5f6129266013836128e2565b9150612931826128f2565b602082019050919050565b5f6020820190508181035f8301526129538161291a565b9050919050565b7f496e76616c6964206475726174696f6e000000000000000000000000000000005f82015250565b5f61298e6010836128e2565b91506129998261295a565b602082019050919050565b5f6020820190508181035f8301526129bb81612982565b9050919050565b7f496e76616c6964204150590000000000000000000000000000000000000000005f82015250565b5f6129f6600b836128e2565b9150612a01826129c2565b602082019050919050565b5f6020820190508181035f830152612a23816129ea565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a6182612402565b9150612a6c83612402565b9250828203905081811115612a8457612a83612a2a565b5b92915050565b5f608082019050612a9d5f830187612808565b612aaa6020830186612537565b612ab76040830185612537565b612ac46060830184612537565b95945050505050565b7f496e76616c6964207061636b61676520494400000000000000000000000000005f82015250565b5f612b016012836128e2565b9150612b0c82612acd565b602082019050919050565b5f6020820190508181035f830152612b2e81612af5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e76616c6964207374616b65204944000000000000000000000000000000005f82015250565b5f612b966010836128e2565b9150612ba182612b62565b602082019050919050565b5f6020820190508181035f830152612bc381612b8a565b9050919050565b7f496e616374697665207374616b650000000000000000000000000000000000005f82015250565b5f612bfe600e836128e2565b9150612c0982612bca565b602082019050919050565b5f6020820190508181035f830152612c2b81612bf2565b9050919050565b5f612c3c82612402565b9150612c4783612402565b9250828201905080821115612c5f57612c5e612a2a565b5b92915050565b7f5374616b65207374696c6c206c6f636b656400000000000000000000000000005f82015250565b5f612c996012836128e2565b9150612ca482612c65565b602082019050919050565b5f6020820190508181035f830152612cc681612c8d565b9050919050565b5f604082019050612ce05f830185612537565b612ced6020830184612537565b9392505050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f612d28600e836128e2565b9150612d3382612cf4565b602082019050919050565b5f6020820190508181035f830152612d5581612d1c565b9050919050565b7f4e6f206665657320617661696c61626c650000000000000000000000000000005f82015250565b5f612d906011836128e2565b9150612d9b82612d5c565b602082019050919050565b5f6020820190508181035f830152612dbd81612d84565b9050919050565b5f604082019050612dd75f830185612808565b612de46020830184612537565b9392505050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f612e1f600c836128e2565b9150612e2a82612deb565b602082019050919050565b5f6020820190508181035f830152612e4c81612e13565b9050919050565b7f496e76616c696420636f6c6c6563746f720000000000000000000000000000005f82015250565b5f612e876011836128e2565b9150612e9282612e53565b602082019050919050565b5f6020820190508181035f830152612eb481612e7b565b9050919050565b5f604082019050612ece5f830185612537565b612edb6020830184612808565b9392505050565b7f416d6f756e74206d75737420626520706f7369746976650000000000000000005f82015250565b5f612f166017836128e2565b9150612f2182612ee2565b602082019050919050565b5f6020820190508181035f830152612f4381612f0a565b9050919050565b7f5061636b61676520696e616374697665000000000000000000000000000000005f82015250565b5f612f7e6010836128e2565b9150612f8982612f4a565b602082019050919050565b5f6020820190508181035f830152612fab81612f72565b9050919050565b7f496e73756666696369656e74207374616b6520616d6f756e74000000000000005f82015250565b5f612fe66019836128e2565b9150612ff182612fb2565b602082019050919050565b5f6020820190508181035f83015261301381612fda565b9050919050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f61304e6014836128e2565b91506130598261301a565b602082019050919050565b5f6020820190508181035f83015261307b81613042565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6130b6601f836128e2565b91506130c182613082565b602082019050919050565b5f6020820190508181035f8301526130e3816130aa565b9050919050565b5f6130f482612402565b91506130ff83612402565b925082820261310d81612402565b9150828204841483151761312457613123612a2a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61316282612402565b915061316d83612402565b92508261317d5761317c61312b565b5b828204905092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6131bc6010836128e2565b91506131c782613188565b602082019050919050565b5f6020820190508181035f8301526131e9816131b0565b9050919050565b5f6060820190506132035f830186612808565b6132106020830185612808565b61321d6040830184612537565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6132596014836128e2565b915061326482613225565b602082019050919050565b5f6020820190508181035f8301526132868161324d565b905091905056fea2646970667358221220d9a8cf148e9c28ec1d3155c5f23e6498ee62ea58115147817a28b70fbdd9f65064736f6c634300081e0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x32 PUSH1 0x6 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x37CD CODESIZE SUB DUP1 PUSH2 0x37CD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x385 JUMP JUMPDEST DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x3E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6 DUP2 PUSH2 0x230 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x146 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x13D SWAP1 PUSH2 0x457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x4DD JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x263 DUP2 PUSH2 0x266 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x354 DUP3 PUSH2 0x32B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x364 DUP2 PUSH2 0x34A JUMP JUMPDEST DUP2 EQ PUSH2 0x36E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x37F DUP2 PUSH2 0x35B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x39C JUMPI PUSH2 0x39B PUSH2 0x327 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x3A9 DUP7 DUP3 DUP8 ADD PUSH2 0x371 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3BA DUP7 DUP3 DUP8 ADD PUSH2 0x371 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3CB DUP7 DUP3 DUP8 ADD PUSH2 0x371 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3DE DUP2 PUSH2 0x34A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3F7 PUSH0 DUP4 ADD DUP5 PUSH2 0x3D5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x441 PUSH1 0x14 DUP4 PUSH2 0x3FD JUMP JUMPDEST SWAP2 POP PUSH2 0x44C DUP3 PUSH2 0x40D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x46E DUP2 PUSH2 0x435 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642066656520636F6C6C6563746F720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x4A9 PUSH1 0x15 DUP4 PUSH2 0x3FD JUMP JUMPDEST SWAP2 POP PUSH2 0x4B4 DUP3 PUSH2 0x475 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x4D6 DUP2 PUSH2 0x49D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x32C3 PUSH2 0x50A PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xBA4 ADD MSTORE DUP2 DUP2 PUSH2 0xD57 ADD MSTORE DUP2 DUP2 PUSH2 0x1B1B ADD MSTORE PUSH2 0x1CA2 ADD MSTORE PUSH2 0x32C3 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x842E2981 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDB94EBC9 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE30C3978 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x4B0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xDB94EBC9 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDD69BECD EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xE1A45218 EQ PUSH2 0x43A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x985145B5 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x985145B5 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xD7FA023D EQ PUSH2 0x3E4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x842E2981 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x973E46B1 EQ PUSH2 0x36E JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5A4D8489 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x7F6A9184 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x7FC7984D EQ PUSH2 0x2F0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5A4D8489 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x6C435E36 EQ PUSH2 0x290 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2BA662D6 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x2BA662D6 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2E185EC7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x24C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1BD9B708 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x217A51EE EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0xC51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH2 0xDF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0xE0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x1163 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH2 0x1176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x14AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x392 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x408 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x18FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x442 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x460 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH2 0x1BF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B8 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP1 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x597 JUMPI POP PUSH2 0x2710 DUP3 GT ISZERO JUMPDEST PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CD SWAP1 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH32 0x5752C03E5C1D84A4868E347BE593E78A3F0F449821FF8E628806E528A877618 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x708 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x71E PUSH2 0x1CC4 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75D SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x27FFAC29F91E32ED296E1AE41A59F23EBEFBCAC53EB28251A6FD6A5BE271970A DUP4 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0x1D4B JUMP JUMPDEST CALLER DUP2 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x860 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x4 DUP3 PUSH0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CA PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAD1 CALLER DUP8 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xB2A JUMPI PUSH2 0xB29 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0xB95 CALLER DUP3 DUP6 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE8 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP7 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88D1C46373223A4F1F60DB2BADC985B05EC9C2B2EAB4537F0F8E1291B78B6E37 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x2CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH2 0xC48 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1F SWAP1 PUSH2 0x2DA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xD9B PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xDED SWAP3 SWAP2 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE00 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0xE08 PUSH2 0x1FF7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0xE1A PUSH2 0x2058 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE24 PUSH2 0x1D4B JUMP JUMPDEST CALLER DUP2 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3F SWAP1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9A4263CD64BEF5364CF9865147C8561E0C7151A9E1D79D8AA67DF565AA96EFE DUP4 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x103C PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x105C PUSH2 0x2362 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10B8 JUMPI PUSH2 0x10B7 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116B PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1174 PUSH0 PUSH2 0x20BA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x117F PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11A0 PUSH2 0x1BC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1201 DUP2 PUSH2 0x20BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x120C PUSH2 0x1CC4 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1254 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x1265 JUMPI POP PUSH2 0x2710 DUP3 GT ISZERO JUMPDEST PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129B SWAP1 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0x5752C03E5C1D84A4868E347BE593E78A3F0F449821FF8E628806E528A877618 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1302 JUMPI PUSH2 0x1301 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1389 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13A1 DUP4 DUP4 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1478 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1407 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B2 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT ISZERO PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EE SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155C SWAP1 PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2CF325792651B724D47F21230BE0DD9729866CADD370618845E23A48555EF042 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x15DD SWAP3 SWAP2 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1628 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1630 PUSH2 0x20F1 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1678 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP2 GT PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x16D0 JUMPI PUSH2 0x16CF PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1725 SWAP1 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 LT ISZERO PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176C SWAP1 PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C4 CALLER ADDRESS DUP7 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x213B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20400DB7CF9BDFCB8B13CCFB8A7B4BB447C3244EFDBC2336E6F6E1673D7BD845 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x18E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x18F3 PUSH2 0x1FED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1905 PUSH2 0x1D4B JUMP JUMPDEST CALLER DUP2 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1980 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D9 JUMPI PUSH2 0x19D8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x1A29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A20 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH2 0x1A92 CALLER DUP7 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1AD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACD SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B14 JUMPI DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B08 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x1B5F CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x1BBB PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x1BFC PUSH2 0x1CC4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C5B PUSH2 0x1483 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1CCC PUSH2 0x20EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CEA PUSH2 0x1483 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D49 JUMPI PUSH2 0x1D0D PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D40 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1D8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D86 SWAP1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x1E57 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x1F68 JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP3 PUSH0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0x1F25 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH4 0x1E13380 PUSH2 0x1F39 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST DUP2 DUP4 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x1F4E SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH2 0x1F58 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH2 0x1F62 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE8 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1FA1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1FFF PUSH2 0x2258 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2041 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204E SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2060 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x20A3 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B0 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x20E7 DUP2 PUSH2 0x22A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20F9 PUSH2 0x103F JUMP JUMPDEST ISZERO PUSH2 0x2139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2130 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x21B7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x21DC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x21F5 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x2210 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2252 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2249 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2260 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x229F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2296 SWAP1 PUSH2 0x326F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 DUP3 PUSH2 0x23A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E1 DUP2 PUSH2 0x23C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x23EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23FC DUP2 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2414 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP2 EQ PUSH2 0x241E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242F DUP2 PUSH2 0x240B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x244D JUMPI PUSH2 0x244C PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245A DUP8 DUP3 DUP9 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x246B DUP8 DUP3 DUP9 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x247C DUP8 DUP3 DUP9 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x248D DUP8 DUP3 DUP9 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AD DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C8 DUP2 PUSH2 0x24A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E3 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2502 DUP6 DUP3 DUP7 ADD PUSH2 0x24BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252E DUP5 DUP3 DUP6 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2540 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2559 PUSH0 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2568 DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2581 PUSH0 DUP4 ADD DUP5 PUSH2 0x255F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2590 DUP2 PUSH2 0x23C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x259F DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25AE DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x25C8 PUSH0 DUP6 ADD DUP3 PUSH2 0x2587 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x25DB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x25EE PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2601 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2614 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x25A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x262D PUSH0 DUP4 ADD DUP5 PUSH2 0x25B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2649 JUMPI PUSH2 0x2648 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2656 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2667 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2687 JUMPI PUSH2 0x2686 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2694 DUP6 DUP3 DUP7 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26A5 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D1 DUP5 DUP3 DUP6 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2717 PUSH0 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x272A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x273D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2750 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2763 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x25A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2774 DUP4 DUP4 PUSH2 0x2703 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2796 DUP3 PUSH2 0x26DA JUMP JUMPDEST PUSH2 0x27A0 DUP2 DUP6 PUSH2 0x26E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x27AB DUP4 PUSH2 0x26F4 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27DB JUMPI DUP2 MLOAD PUSH2 0x27C2 DUP9 DUP3 PUSH2 0x2769 JUMP JUMPDEST SWAP8 POP PUSH2 0x27CD DUP4 PUSH2 0x2780 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27AE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2800 DUP2 DUP5 PUSH2 0x278C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2811 DUP2 PUSH2 0x23C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x282A PUSH0 DUP4 ADD DUP5 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2846 JUMPI PUSH2 0x2845 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2853 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2864 DUP6 DUP3 DUP7 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2891 PUSH2 0x288C PUSH2 0x2887 DUP5 PUSH2 0x23A8 JUMP JUMPDEST PUSH2 0x286E JUMP JUMPDEST PUSH2 0x23A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28A2 DUP3 PUSH2 0x2877 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28B3 DUP3 PUSH2 0x2898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C3 DUP2 PUSH2 0x28A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28DC PUSH0 DUP4 ADD DUP5 PUSH2 0x28BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2926 PUSH1 0x13 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2931 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2953 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206475726174696F6E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x298E PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2999 DUP3 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29BB DUP2 PUSH2 0x2982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29F6 PUSH1 0xB DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A01 DUP3 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A23 DUP2 PUSH2 0x29EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A61 DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6C DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A84 JUMPI PUSH2 0x2A83 PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2A9D PUSH0 DUP4 ADD DUP8 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2AAA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2AB7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2AC4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207061636B6167652049440000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B01 PUSH1 0x12 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0C DUP3 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2E DUP2 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C6964207374616B6520494400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B96 PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA1 DUP3 PUSH2 0x2B62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BC3 DUP2 PUSH2 0x2B8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E616374697665207374616B65000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFE PUSH1 0xE DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C09 DUP3 PUSH2 0x2BCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2B DUP2 PUSH2 0x2BF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C3C DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C47 DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B65207374696C6C206C6F636B65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C99 PUSH1 0x12 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA4 DUP3 PUSH2 0x2C65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC6 DUP2 PUSH2 0x2C8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CE0 PUSH0 DUP4 ADD DUP6 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2CED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D28 PUSH1 0xE DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D33 DUP3 PUSH2 0x2CF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D55 DUP2 PUSH2 0x2D1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206665657320617661696C61626C65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D90 PUSH1 0x11 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9B DUP3 PUSH2 0x2D5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DBD DUP2 PUSH2 0x2D84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DD7 PUSH0 DUP4 ADD DUP6 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2DE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1F PUSH1 0xC DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2A DUP3 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E4C DUP2 PUSH2 0x2E13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6C6C6563746F72000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E87 PUSH1 0x11 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E92 DUP3 PUSH2 0x2E53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EB4 DUP2 PUSH2 0x2E7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ECE PUSH0 DUP4 ADD DUP6 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2EDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2808 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F16 PUSH1 0x17 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F21 DUP3 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F43 DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061636B61676520696E61637469766500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F7E PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F89 DUP3 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FAB DUP2 PUSH2 0x2F72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B6520616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE6 PUSH1 0x19 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FF1 DUP3 PUSH2 0x2FB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3013 DUP2 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x304E PUSH1 0x14 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3059 DUP3 PUSH2 0x301A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x307B DUP2 PUSH2 0x3042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30B6 PUSH1 0x1F DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP3 PUSH2 0x3082 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30E3 DUP2 PUSH2 0x30AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30F4 DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x30FF DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x310D DUP2 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3124 JUMPI PUSH2 0x3123 PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3162 DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x316D DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x317D JUMPI PUSH2 0x317C PUSH2 0x312B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31BC PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x31C7 DUP3 PUSH2 0x3188 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31E9 DUP2 PUSH2 0x31B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3203 PUSH0 DUP4 ADD DUP7 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x3210 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x321D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3259 PUSH1 0x14 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3264 DUP3 PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3286 DUP2 PUSH2 0x324D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xA8 0xCF EQ DUP15 SWAP13 0x28 EOFCREATE 0x1D BALANCE SSTORE 0xC5 CALLCODE RETURNDATACOPY PUSH5 0x98EE62EA58 GT MLOAD SELFBALANCE DUP2 PUSH27 0x28B70FBDD9F65064736F6C634300081E0033000000000000000000 ",
							"sourceMap": "558:9884:11:-:0;;;1609:2;1573:38;;3275:397;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3404:12;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:6;1821:7;:22;;;;1006:5:5;996:7;;:15;;;;;;;;;;;;;;;;;;3466:1:11::1;3436:32;;:18;:32;;::::0;3428:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3542:1;3511:33;;:19;:33;;::::0;3503:67:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;3602:18;3581:40;;;;;;;;::::0;::::1;3646:19;3631:12;;:34;;;;;;;;;;;;;;;;;;3275:397:::0;;;558:9884;;2011:153:1;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;;;:34;;:::i;:::-;2011:153;:::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;1866:169::-;1950:11;1984:6;1979:3;1972:19;2024:4;2019:3;2015:14;2000:29;;1866:169;;;;:::o;2041:170::-;2181:22;2177:1;2169:6;2165:14;2158:46;2041:170;:::o;2217:366::-;2359:3;2380:67;2444:2;2439:3;2380:67;:::i;:::-;2373:74;;2456:93;2545:3;2456:93;:::i;:::-;2574:2;2569:3;2565:12;2558:19;;2217:366;;;:::o;2589:419::-;2755:4;2793:2;2782:9;2778:18;2770:26;;2842:9;2836:4;2832:20;2828:1;2817:9;2813:17;2806:47;2870:131;2996:4;2870:131;:::i;:::-;2862:139;;2589:419;;;:::o;3014:171::-;3154:23;3150:1;3142:6;3138:14;3131:47;3014:171;:::o;3191:366::-;3333:3;3354:67;3418:2;3413:3;3354:67;:::i;:::-;3347:74;;3430:93;3519:3;3430:93;:::i;:::-;3548:2;3543:3;3539:12;3532:19;;3191:366;;;:::o;3563:419::-;3729:4;3767:2;3756:9;3752:18;3744:26;;3816:9;3810:4;3806:20;3802:1;3791:9;3787:17;3780:47;3844:131;3970:4;3844:131;:::i;:::-;3836:139;;3563:419;;;:::o;558:9884:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BPS_DENOMINATOR_1129": {
									"entryPoint": 7102,
									"id": 1129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_FEE_BPS_1123": {
									"entryPoint": 5658,
									"id": 1123,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SECONDS_PER_YEAR_1126": {
									"entryPoint": 7148,
									"id": 1126,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateAccruedRewards_1669": {
									"entryPoint": 7576,
									"id": 1669,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_callOptionalReturn_996": {
									"entryPoint": 8637,
									"id": 996,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 7364,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1050": {
									"entryPoint": 8426,
									"id": 1050,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_484": {
									"entryPoint": 8173,
									"id": 484,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_476": {
									"entryPoint": 7499,
									"id": 476,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_414": {
									"entryPoint": 8280,
									"id": 414,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_387": {
									"entryPoint": 8433,
									"id": 387,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_398": {
									"entryPoint": 8792,
									"id": 398,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 8865,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_208": {
									"entryPoint": 8378,
									"id": 208,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_430": {
									"entryPoint": 8183,
									"id": 430,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@acceptOwnership_232": {
									"entryPoint": 4470,
									"id": 232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@autoCompoundFeeBps_1141": {
									"entryPoint": 3147,
									"id": 1141,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculatePendingRewards_1613": {
									"entryPoint": 5014,
									"id": 1613,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimStakeRewards_1464": {
									"entryPoint": 6397,
									"id": 1464,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@configureNewPackage_1773": {
									"entryPoint": 1230,
									"id": 1773,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@createStake_1393": {
									"entryPoint": 5664,
									"id": 1393,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@emergencyPause_1934": {
									"entryPoint": 3594,
									"id": 1934,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@emergencyUnpause_1943": {
									"entryPoint": 3576,
									"id": 1943,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeCollector_1138": {
									"entryPoint": 5621,
									"id": 1138,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feePoolBalance_1143": {
									"entryPoint": 6391,
									"id": 1143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getActivePackageCount_1678": {
									"entryPoint": 5609,
									"id": 1678,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getPackageDetails_1694": {
									"entryPoint": 4180,
									"id": 1694,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getUserStakes_1708": {
									"entryPoint": 5033,
									"id": 1708,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 5251,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_375": {
									"entryPoint": 4159,
									"id": 375,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pendingOwner_171": {
									"entryPoint": 7108,
									"id": 171,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_98": {
									"entryPoint": 4451,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_1132": {
									"entryPoint": 7328,
									"id": 1132,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_646": {
									"entryPoint": 8507,
									"id": 646,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_619": {
									"entryPoint": 8046,
									"id": 619,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@toggleAutoCompound_1598": {
									"entryPoint": 3612,
									"id": 1598,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_191": {
									"entryPoint": 7156,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateFeeParameters_1886": {
									"entryPoint": 5290,
									"id": 1886,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updatePackageAPY_1846": {
									"entryPoint": 4612,
									"id": 1846,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@updatePackageStatus_1798": {
									"entryPoint": 1814,
									"id": 1798,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawAccumulatedFees_1925": {
									"entryPoint": 3153,
									"id": 1925,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@withdrawStake_1559": {
									"entryPoint": 2013,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9903,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256": {
									"entryPoint": 9269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": 10288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_bool": {
									"entryPoint": 9422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9779,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr": {
									"entryPoint": 10089,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 9607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10248,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 10124,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 9637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$574_to_t_address_fromStack": {
									"entryPoint": 10426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12877,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10626,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11795,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12720,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10997,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10522,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11652,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11548,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_FarmPackage_$1109_memory_ptr_to_t_struct$_FarmPackage_$1109_memory_ptr_fromStack": {
									"entryPoint": 9652,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr": {
									"entryPoint": 9987,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 9622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9527,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12784,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10890,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 10216,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$574__to_t_address__fromStack_reversed": {
									"entryPoint": 10441,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12754,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10764,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11439,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12492,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11582,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_FarmPackage_$1109_memory_ptr__to_t_struct$_FarmPackage_$1109_memory_ptr__fromStack_reversed": {
									"entryPoint": 9754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9542,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 11963,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11469,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 10112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9956,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 11314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 12632,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 12522,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9218,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$574_to_t_address": {
									"entryPoint": 10409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10359,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 10350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 12587,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11061,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a": {
									"entryPoint": 12837,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4": {
									"entryPoint": 10586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1": {
									"entryPoint": 11755,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a": {
									"entryPoint": 12680,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5": {
									"entryPoint": 12210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d": {
									"entryPoint": 10957,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040": {
									"entryPoint": 12314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1": {
									"entryPoint": 10690,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6": {
									"entryPoint": 12106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4": {
									"entryPoint": 11210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624": {
									"entryPoint": 10482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc": {
									"entryPoint": 11365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31": {
									"entryPoint": 11612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d": {
									"entryPoint": 11859,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12418,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b": {
									"entryPoint": 11106,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36": {
									"entryPoint": 11508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc": {
									"entryPoint": 12002,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9227,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:33550:12",
										"nodeType": "YulBlock",
										"src": "0:33550:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "748:87:12",
													"nodeType": "YulBlock",
													"src": "748:87:12",
													"statements": [
														{
															"nativeSrc": "758:29:12",
															"nodeType": "YulAssignment",
															"src": "758:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:12"
																},
																"nativeSrc": "767:20:12",
																"nodeType": "YulFunctionCall",
																"src": "767:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:12"
																},
																"nativeSrc": "796:33:12",
																"nodeType": "YulFunctionCall",
																"src": "796:33:12"
															},
															"nativeSrc": "796:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:12",
														"nodeType": "YulTypedName",
														"src": "726:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:12",
														"nodeType": "YulTypedName",
														"src": "734:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:12",
														"nodeType": "YulTypedName",
														"src": "742:5:12",
														"type": ""
													}
												],
												"src": "696:139:12"
											},
											{
												"body": {
													"nativeSrc": "886:32:12",
													"nodeType": "YulBlock",
													"src": "886:32:12",
													"statements": [
														{
															"nativeSrc": "896:16:12",
															"nodeType": "YulAssignment",
															"src": "896:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "907:5:12",
																"nodeType": "YulIdentifier",
																"src": "907:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "896:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "896:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "841:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "868:5:12",
														"nodeType": "YulTypedName",
														"src": "868:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "878:7:12",
														"nodeType": "YulTypedName",
														"src": "878:7:12",
														"type": ""
													}
												],
												"src": "841:77:12"
											},
											{
												"body": {
													"nativeSrc": "967:79:12",
													"nodeType": "YulBlock",
													"src": "967:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1024:16:12",
																"nodeType": "YulBlock",
																"src": "1024:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1033:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1033:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1036:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1036:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1026:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1026:6:12"
																			},
																			"nativeSrc": "1026:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1026:12:12"
																		},
																		"nativeSrc": "1026:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1026:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "990:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "990:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1015:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1015:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "997:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "997:17:12"
																				},
																				"nativeSrc": "997:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "997:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "987:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "987:2:12"
																		},
																		"nativeSrc": "987:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "987:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "980:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "980:6:12"
																},
																"nativeSrc": "980:43:12",
																"nodeType": "YulFunctionCall",
																"src": "980:43:12"
															},
															"nativeSrc": "977:63:12",
															"nodeType": "YulIf",
															"src": "977:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "924:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "960:5:12",
														"nodeType": "YulTypedName",
														"src": "960:5:12",
														"type": ""
													}
												],
												"src": "924:122:12"
											},
											{
												"body": {
													"nativeSrc": "1104:87:12",
													"nodeType": "YulBlock",
													"src": "1104:87:12",
													"statements": [
														{
															"nativeSrc": "1114:29:12",
															"nodeType": "YulAssignment",
															"src": "1114:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1136:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1136:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1123:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1123:12:12"
																},
																"nativeSrc": "1123:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1123:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1114:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1114:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1179:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1152:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1152:26:12"
																},
																"nativeSrc": "1152:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1152:33:12"
															},
															"nativeSrc": "1152:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1152:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1052:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1082:6:12",
														"nodeType": "YulTypedName",
														"src": "1082:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1090:3:12",
														"nodeType": "YulTypedName",
														"src": "1090:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1098:5:12",
														"nodeType": "YulTypedName",
														"src": "1098:5:12",
														"type": ""
													}
												],
												"src": "1052:139:12"
											},
											{
												"body": {
													"nativeSrc": "1314:648:12",
													"nodeType": "YulBlock",
													"src": "1314:648:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1361:83:12",
																"nodeType": "YulBlock",
																"src": "1361:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1363:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1363:77:12"
																			},
																			"nativeSrc": "1363:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1363:79:12"
																		},
																		"nativeSrc": "1363:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1363:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1335:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1335:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1344:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1344:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1331:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1331:3:12"
																		},
																		"nativeSrc": "1331:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1331:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1356:3:12",
																		"nodeType": "YulLiteral",
																		"src": "1356:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1327:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1327:3:12"
																},
																"nativeSrc": "1327:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1327:33:12"
															},
															"nativeSrc": "1324:120:12",
															"nodeType": "YulIf",
															"src": "1324:120:12"
														},
														{
															"nativeSrc": "1454:117:12",
															"nodeType": "YulBlock",
															"src": "1454:117:12",
															"statements": [
																{
																	"nativeSrc": "1469:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1469:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1483:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1483:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1473:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1473:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1498:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1498:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1533:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1533:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1544:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1544:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1529:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1529:3:12"
																				},
																				"nativeSrc": "1529:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1529:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1553:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1553:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1508:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1508:20:12"
																		},
																		"nativeSrc": "1508:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1508:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1498:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1498:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1581:118:12",
															"nodeType": "YulBlock",
															"src": "1581:118:12",
															"statements": [
																{
																	"nativeSrc": "1596:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1596:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1610:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1610:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1600:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1600:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1626:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1626:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1661:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1661:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1672:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1672:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1657:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1657:3:12"
																				},
																				"nativeSrc": "1657:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1657:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1681:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1681:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1636:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1636:20:12"
																		},
																		"nativeSrc": "1636:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1636:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1626:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1626:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1709:118:12",
															"nodeType": "YulBlock",
															"src": "1709:118:12",
															"statements": [
																{
																	"nativeSrc": "1724:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1724:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1738:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1728:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1728:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1754:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1754:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1789:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1789:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1800:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1800:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1785:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1785:3:12"
																				},
																				"nativeSrc": "1785:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1785:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1809:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1809:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1764:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1764:20:12"
																		},
																		"nativeSrc": "1764:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1764:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1754:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1754:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1837:118:12",
															"nodeType": "YulBlock",
															"src": "1837:118:12",
															"statements": [
																{
																	"nativeSrc": "1852:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1852:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1866:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1866:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1856:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1856:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1882:63:12",
																	"nodeType": "YulAssignment",
																	"src": "1882:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1917:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1917:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1928:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1928:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1913:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1913:3:12"
																				},
																				"nativeSrc": "1913:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1913:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1937:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1937:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1892:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "1892:20:12"
																		},
																		"nativeSrc": "1892:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1892:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1882:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1882:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256",
												"nativeSrc": "1197:765:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1260:9:12",
														"nodeType": "YulTypedName",
														"src": "1260:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1271:7:12",
														"nodeType": "YulTypedName",
														"src": "1271:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1283:6:12",
														"nodeType": "YulTypedName",
														"src": "1283:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1291:6:12",
														"nodeType": "YulTypedName",
														"src": "1291:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1299:6:12",
														"nodeType": "YulTypedName",
														"src": "1299:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1307:6:12",
														"nodeType": "YulTypedName",
														"src": "1307:6:12",
														"type": ""
													}
												],
												"src": "1197:765:12"
											},
											{
												"body": {
													"nativeSrc": "2010:48:12",
													"nodeType": "YulBlock",
													"src": "2010:48:12",
													"statements": [
														{
															"nativeSrc": "2020:32:12",
															"nodeType": "YulAssignment",
															"src": "2020:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2045:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2045:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2038:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2038:6:12"
																		},
																		"nativeSrc": "2038:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2038:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2031:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2031:6:12"
																},
																"nativeSrc": "2031:21:12",
																"nodeType": "YulFunctionCall",
																"src": "2031:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2020:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2020:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1968:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1992:5:12",
														"nodeType": "YulTypedName",
														"src": "1992:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2002:7:12",
														"nodeType": "YulTypedName",
														"src": "2002:7:12",
														"type": ""
													}
												],
												"src": "1968:90:12"
											},
											{
												"body": {
													"nativeSrc": "2104:76:12",
													"nodeType": "YulBlock",
													"src": "2104:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2158:16:12",
																"nodeType": "YulBlock",
																"src": "2158:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2167:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2167:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2170:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2170:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2160:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2160:6:12"
																			},
																			"nativeSrc": "2160:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2160:12:12"
																		},
																		"nativeSrc": "2160:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2160:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2127:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2127:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2149:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2149:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2134:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "2134:14:12"
																				},
																				"nativeSrc": "2134:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2134:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2124:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2124:2:12"
																		},
																		"nativeSrc": "2124:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2117:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2117:6:12"
																},
																"nativeSrc": "2117:40:12",
																"nodeType": "YulFunctionCall",
																"src": "2117:40:12"
															},
															"nativeSrc": "2114:60:12",
															"nodeType": "YulIf",
															"src": "2114:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2064:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2097:5:12",
														"nodeType": "YulTypedName",
														"src": "2097:5:12",
														"type": ""
													}
												],
												"src": "2064:116:12"
											},
											{
												"body": {
													"nativeSrc": "2235:84:12",
													"nodeType": "YulBlock",
													"src": "2235:84:12",
													"statements": [
														{
															"nativeSrc": "2245:29:12",
															"nodeType": "YulAssignment",
															"src": "2245:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2267:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2267:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2254:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2254:12:12"
																},
																"nativeSrc": "2254:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2254:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2245:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2245:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2307:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2307:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2283:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "2283:23:12"
																},
																"nativeSrc": "2283:30:12",
																"nodeType": "YulFunctionCall",
																"src": "2283:30:12"
															},
															"nativeSrc": "2283:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "2283:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "2186:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2213:6:12",
														"nodeType": "YulTypedName",
														"src": "2213:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2221:3:12",
														"nodeType": "YulTypedName",
														"src": "2221:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2229:5:12",
														"nodeType": "YulTypedName",
														"src": "2229:5:12",
														"type": ""
													}
												],
												"src": "2186:133:12"
											},
											{
												"body": {
													"nativeSrc": "2405:388:12",
													"nodeType": "YulBlock",
													"src": "2405:388:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2451:83:12",
																"nodeType": "YulBlock",
																"src": "2451:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2453:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2453:77:12"
																			},
																			"nativeSrc": "2453:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2453:79:12"
																		},
																		"nativeSrc": "2453:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2453:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2426:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2426:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2435:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2435:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2422:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2422:3:12"
																		},
																		"nativeSrc": "2422:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2422:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2447:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2447:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2418:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2418:3:12"
																},
																"nativeSrc": "2418:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2418:32:12"
															},
															"nativeSrc": "2415:119:12",
															"nodeType": "YulIf",
															"src": "2415:119:12"
														},
														{
															"nativeSrc": "2544:117:12",
															"nodeType": "YulBlock",
															"src": "2544:117:12",
															"statements": [
																{
																	"nativeSrc": "2559:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2559:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2573:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2573:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2563:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2563:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2588:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2588:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2623:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2623:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2634:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2634:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2619:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2619:3:12"
																				},
																				"nativeSrc": "2619:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2619:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2598:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2598:20:12"
																		},
																		"nativeSrc": "2598:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2598:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2588:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2588:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2671:115:12",
															"nodeType": "YulBlock",
															"src": "2671:115:12",
															"statements": [
																{
																	"nativeSrc": "2686:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2686:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2700:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2700:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2690:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2690:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2716:60:12",
																	"nodeType": "YulAssignment",
																	"src": "2716:60:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2748:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2748:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2759:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2759:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2744:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2744:3:12"
																				},
																				"nativeSrc": "2744:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2744:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2768:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2768:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "2726:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2726:17:12"
																		},
																		"nativeSrc": "2726:50:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2726:50:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2716:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2716:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_bool",
												"nativeSrc": "2325:468:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2367:9:12",
														"nodeType": "YulTypedName",
														"src": "2367:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2378:7:12",
														"nodeType": "YulTypedName",
														"src": "2378:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2390:6:12",
														"nodeType": "YulTypedName",
														"src": "2390:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2398:6:12",
														"nodeType": "YulTypedName",
														"src": "2398:6:12",
														"type": ""
													}
												],
												"src": "2325:468:12"
											},
											{
												"body": {
													"nativeSrc": "2865:263:12",
													"nodeType": "YulBlock",
													"src": "2865:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2911:83:12",
																"nodeType": "YulBlock",
																"src": "2911:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2913:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2913:77:12"
																			},
																			"nativeSrc": "2913:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2913:79:12"
																		},
																		"nativeSrc": "2913:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2913:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2886:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2886:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2895:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2895:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2882:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2882:3:12"
																		},
																		"nativeSrc": "2882:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2882:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2907:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2907:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2878:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2878:3:12"
																},
																"nativeSrc": "2878:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2878:32:12"
															},
															"nativeSrc": "2875:119:12",
															"nodeType": "YulIf",
															"src": "2875:119:12"
														},
														{
															"nativeSrc": "3004:117:12",
															"nodeType": "YulBlock",
															"src": "3004:117:12",
															"statements": [
																{
																	"nativeSrc": "3019:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3019:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3033:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3033:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3023:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3023:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3048:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3048:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3083:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3083:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3094:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3094:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3079:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3079:3:12"
																				},
																				"nativeSrc": "3079:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3079:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3103:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3103:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3058:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3058:20:12"
																		},
																		"nativeSrc": "3058:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3058:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3048:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3048:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2799:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2835:9:12",
														"nodeType": "YulTypedName",
														"src": "2835:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2846:7:12",
														"nodeType": "YulTypedName",
														"src": "2846:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2858:6:12",
														"nodeType": "YulTypedName",
														"src": "2858:6:12",
														"type": ""
													}
												],
												"src": "2799:329:12"
											},
											{
												"body": {
													"nativeSrc": "3199:53:12",
													"nodeType": "YulBlock",
													"src": "3199:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3216:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3216:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3239:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3239:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3221:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3221:17:12"
																		},
																		"nativeSrc": "3221:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3221:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3209:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3209:6:12"
																},
																"nativeSrc": "3209:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3209:37:12"
															},
															"nativeSrc": "3209:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3209:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3134:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3187:5:12",
														"nodeType": "YulTypedName",
														"src": "3187:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3194:3:12",
														"nodeType": "YulTypedName",
														"src": "3194:3:12",
														"type": ""
													}
												],
												"src": "3134:118:12"
											},
											{
												"body": {
													"nativeSrc": "3356:124:12",
													"nodeType": "YulBlock",
													"src": "3356:124:12",
													"statements": [
														{
															"nativeSrc": "3366:26:12",
															"nodeType": "YulAssignment",
															"src": "3366:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3378:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3378:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3389:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3389:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3374:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3374:3:12"
																},
																"nativeSrc": "3374:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3374:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3366:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3366:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3446:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3459:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3459:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3470:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3470:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3455:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3455:3:12"
																		},
																		"nativeSrc": "3455:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3455:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3402:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "3402:43:12"
																},
																"nativeSrc": "3402:71:12",
																"nodeType": "YulFunctionCall",
																"src": "3402:71:12"
															},
															"nativeSrc": "3402:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "3402:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3258:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3328:9:12",
														"nodeType": "YulTypedName",
														"src": "3328:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3340:6:12",
														"nodeType": "YulTypedName",
														"src": "3340:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3351:4:12",
														"nodeType": "YulTypedName",
														"src": "3351:4:12",
														"type": ""
													}
												],
												"src": "3258:222:12"
											},
											{
												"body": {
													"nativeSrc": "3545:50:12",
													"nodeType": "YulBlock",
													"src": "3545:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3562:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3562:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3582:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3582:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3567:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "3567:14:12"
																		},
																		"nativeSrc": "3567:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3567:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3555:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3555:6:12"
																},
																"nativeSrc": "3555:34:12",
																"nodeType": "YulFunctionCall",
																"src": "3555:34:12"
															},
															"nativeSrc": "3555:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "3555:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3486:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3533:5:12",
														"nodeType": "YulTypedName",
														"src": "3533:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3540:3:12",
														"nodeType": "YulTypedName",
														"src": "3540:3:12",
														"type": ""
													}
												],
												"src": "3486:109:12"
											},
											{
												"body": {
													"nativeSrc": "3693:118:12",
													"nodeType": "YulBlock",
													"src": "3693:118:12",
													"statements": [
														{
															"nativeSrc": "3703:26:12",
															"nodeType": "YulAssignment",
															"src": "3703:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3715:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "3715:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3726:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3726:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3711:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3711:3:12"
																},
																"nativeSrc": "3711:18:12",
																"nodeType": "YulFunctionCall",
																"src": "3711:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3703:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "3703:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3777:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3777:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3790:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3790:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3801:1:12",
																				"nodeType": "YulLiteral",
																				"src": "3801:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3786:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3786:3:12"
																		},
																		"nativeSrc": "3786:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3786:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3739:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "3739:37:12"
																},
																"nativeSrc": "3739:65:12",
																"nodeType": "YulFunctionCall",
																"src": "3739:65:12"
															},
															"nativeSrc": "3739:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "3739:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3601:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3665:9:12",
														"nodeType": "YulTypedName",
														"src": "3665:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3677:6:12",
														"nodeType": "YulTypedName",
														"src": "3677:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3688:4:12",
														"nodeType": "YulTypedName",
														"src": "3688:4:12",
														"type": ""
													}
												],
												"src": "3601:210:12"
											},
											{
												"body": {
													"nativeSrc": "3872:53:12",
													"nodeType": "YulBlock",
													"src": "3872:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3889:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "3889:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3912:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3912:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3894:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "3894:17:12"
																		},
																		"nativeSrc": "3894:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3894:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3882:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3882:6:12"
																},
																"nativeSrc": "3882:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3882:37:12"
															},
															"nativeSrc": "3882:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3882:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "3817:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3860:5:12",
														"nodeType": "YulTypedName",
														"src": "3860:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3867:3:12",
														"nodeType": "YulTypedName",
														"src": "3867:3:12",
														"type": ""
													}
												],
												"src": "3817:108:12"
											},
											{
												"body": {
													"nativeSrc": "3986:53:12",
													"nodeType": "YulBlock",
													"src": "3986:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4003:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4003:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4026:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4026:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4008:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "4008:17:12"
																		},
																		"nativeSrc": "4008:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4008:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3996:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3996:6:12"
																},
																"nativeSrc": "3996:37:12",
																"nodeType": "YulFunctionCall",
																"src": "3996:37:12"
															},
															"nativeSrc": "3996:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "3996:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "3931:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3974:5:12",
														"nodeType": "YulTypedName",
														"src": "3974:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3981:3:12",
														"nodeType": "YulTypedName",
														"src": "3981:3:12",
														"type": ""
													}
												],
												"src": "3931:108:12"
											},
											{
												"body": {
													"nativeSrc": "4094:50:12",
													"nodeType": "YulBlock",
													"src": "4094:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4111:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4111:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4131:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4131:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4116:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "4116:14:12"
																		},
																		"nativeSrc": "4116:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4116:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4104:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4104:6:12"
																},
																"nativeSrc": "4104:34:12",
																"nodeType": "YulFunctionCall",
																"src": "4104:34:12"
															},
															"nativeSrc": "4104:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "4104:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "4045:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4082:5:12",
														"nodeType": "YulTypedName",
														"src": "4082:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4089:3:12",
														"nodeType": "YulTypedName",
														"src": "4089:3:12",
														"type": ""
													}
												],
												"src": "4045:99:12"
											},
											{
												"body": {
													"nativeSrc": "4346:948:12",
													"nodeType": "YulBlock",
													"src": "4346:948:12",
													"statements": [
														{
															"nativeSrc": "4356:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "4356:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4372:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4372:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4377:4:12",
																		"nodeType": "YulLiteral",
																		"src": "4377:4:12",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4368:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4368:3:12"
																},
																"nativeSrc": "4368:14:12",
																"nodeType": "YulFunctionCall",
																"src": "4368:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "4360:4:12",
																	"nodeType": "YulTypedName",
																	"src": "4360:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4392:177:12",
															"nodeType": "YulBlock",
															"src": "4392:177:12",
															"statements": [
																{
																	"nativeSrc": "4440:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4440:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4470:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4470:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4477:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4477:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4466:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4466:3:12"
																				},
																				"nativeSrc": "4466:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4466:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4460:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4460:5:12"
																		},
																		"nativeSrc": "4460:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4460:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4444:12:12",
																			"nodeType": "YulTypedName",
																			"src": "4444:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4530:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "4530:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4548:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4548:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4553:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4553:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4544:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4544:3:12"
																				},
																				"nativeSrc": "4544:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4544:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "4496:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "4496:33:12"
																		},
																		"nativeSrc": "4496:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4496:63:12"
																	},
																	"nativeSrc": "4496:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "4496:63:12"
																}
															]
														},
														{
															"nativeSrc": "4579:172:12",
															"nodeType": "YulBlock",
															"src": "4579:172:12",
															"statements": [
																{
																	"nativeSrc": "4622:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4622:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4652:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4652:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4659:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4659:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4648:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4648:3:12"
																				},
																				"nativeSrc": "4648:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4648:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4642:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4642:5:12"
																		},
																		"nativeSrc": "4642:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4642:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4626:12:12",
																			"nodeType": "YulTypedName",
																			"src": "4626:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4712:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "4712:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4730:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4730:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4735:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4735:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4726:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4726:3:12"
																				},
																				"nativeSrc": "4726:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4726:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4678:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "4678:33:12"
																		},
																		"nativeSrc": "4678:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4678:63:12"
																	},
																	"nativeSrc": "4678:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "4678:63:12"
																}
															]
														},
														{
															"nativeSrc": "4761:166:12",
															"nodeType": "YulBlock",
															"src": "4761:166:12",
															"statements": [
																{
																	"nativeSrc": "4798:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4798:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4828:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4828:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4835:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4835:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4824:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4824:3:12"
																				},
																				"nativeSrc": "4824:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4824:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4818:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4818:5:12"
																		},
																		"nativeSrc": "4818:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4818:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4802:12:12",
																			"nodeType": "YulTypedName",
																			"src": "4802:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4888:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "4888:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4906:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4906:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4911:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4911:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4902:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4902:3:12"
																				},
																				"nativeSrc": "4902:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4902:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "4854:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "4854:33:12"
																		},
																		"nativeSrc": "4854:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4854:63:12"
																	},
																	"nativeSrc": "4854:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "4854:63:12"
																}
															]
														},
														{
															"nativeSrc": "4937:178:12",
															"nodeType": "YulBlock",
															"src": "4937:178:12",
															"statements": [
																{
																	"nativeSrc": "4986:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4986:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5016:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5016:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5023:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5023:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5012:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5012:3:12"
																				},
																				"nativeSrc": "5012:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5012:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5006:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5006:5:12"
																		},
																		"nativeSrc": "5006:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5006:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "4990:12:12",
																			"nodeType": "YulTypedName",
																			"src": "4990:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5076:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "5076:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5094:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5094:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5099:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5099:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5090:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5090:3:12"
																				},
																				"nativeSrc": "5090:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5090:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "5042:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "5042:33:12"
																		},
																		"nativeSrc": "5042:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5042:63:12"
																	},
																	"nativeSrc": "5042:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "5042:63:12"
																}
															]
														},
														{
															"nativeSrc": "5125:162:12",
															"nodeType": "YulBlock",
															"src": "5125:162:12",
															"statements": [
																{
																	"nativeSrc": "5164:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5164:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5194:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5194:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5201:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5201:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5190:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5190:3:12"
																				},
																				"nativeSrc": "5190:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5190:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "5184:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "5184:5:12"
																		},
																		"nativeSrc": "5184:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5184:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "5168:12:12",
																			"nodeType": "YulTypedName",
																			"src": "5168:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "5248:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "5248:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5266:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "5266:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5271:4:12",
																						"nodeType": "YulLiteral",
																						"src": "5271:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5262:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5262:3:12"
																				},
																				"nativeSrc": "5262:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5262:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "5220:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "5220:27:12"
																		},
																		"nativeSrc": "5220:57:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5220:57:12"
																	},
																	"nativeSrc": "5220:57:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "5220:57:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_FarmPackage_$1109_memory_ptr_to_t_struct$_FarmPackage_$1109_memory_ptr_fromStack",
												"nativeSrc": "4222:1072:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4333:5:12",
														"nodeType": "YulTypedName",
														"src": "4333:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4340:3:12",
														"nodeType": "YulTypedName",
														"src": "4340:3:12",
														"type": ""
													}
												],
												"src": "4222:1072:12"
											},
											{
												"body": {
													"nativeSrc": "5456:183:12",
													"nodeType": "YulBlock",
													"src": "5456:183:12",
													"statements": [
														{
															"nativeSrc": "5466:27:12",
															"nodeType": "YulAssignment",
															"src": "5466:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5478:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5478:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5489:3:12",
																		"nodeType": "YulLiteral",
																		"src": "5489:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5474:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5474:3:12"
																},
																"nativeSrc": "5474:19:12",
																"nodeType": "YulFunctionCall",
																"src": "5474:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5466:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5466:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5605:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5605:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5618:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5618:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5629:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5629:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5614:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5614:3:12"
																		},
																		"nativeSrc": "5614:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5614:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_FarmPackage_$1109_memory_ptr_to_t_struct$_FarmPackage_$1109_memory_ptr_fromStack",
																	"nativeSrc": "5503:101:12",
																	"nodeType": "YulIdentifier",
																	"src": "5503:101:12"
																},
																"nativeSrc": "5503:129:12",
																"nodeType": "YulFunctionCall",
																"src": "5503:129:12"
															},
															"nativeSrc": "5503:129:12",
															"nodeType": "YulExpressionStatement",
															"src": "5503:129:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_FarmPackage_$1109_memory_ptr__to_t_struct$_FarmPackage_$1109_memory_ptr__fromStack_reversed",
												"nativeSrc": "5300:339:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5428:9:12",
														"nodeType": "YulTypedName",
														"src": "5428:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5440:6:12",
														"nodeType": "YulTypedName",
														"src": "5440:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5451:4:12",
														"nodeType": "YulTypedName",
														"src": "5451:4:12",
														"type": ""
													}
												],
												"src": "5300:339:12"
											},
											{
												"body": {
													"nativeSrc": "5728:391:12",
													"nodeType": "YulBlock",
													"src": "5728:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5774:83:12",
																"nodeType": "YulBlock",
																"src": "5774:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5776:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5776:77:12"
																			},
																			"nativeSrc": "5776:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5776:79:12"
																		},
																		"nativeSrc": "5776:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5776:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5749:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5749:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5758:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5758:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5745:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5745:3:12"
																		},
																		"nativeSrc": "5745:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5745:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5770:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5770:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5741:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5741:3:12"
																},
																"nativeSrc": "5741:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5741:32:12"
															},
															"nativeSrc": "5738:119:12",
															"nodeType": "YulIf",
															"src": "5738:119:12"
														},
														{
															"nativeSrc": "5867:117:12",
															"nodeType": "YulBlock",
															"src": "5867:117:12",
															"statements": [
																{
																	"nativeSrc": "5882:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5882:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5896:1:12",
																		"nodeType": "YulLiteral",
																		"src": "5896:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5886:6:12",
																			"nodeType": "YulTypedName",
																			"src": "5886:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5911:63:12",
																	"nodeType": "YulAssignment",
																	"src": "5911:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5946:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "5946:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5957:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "5957:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5942:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "5942:3:12"
																				},
																				"nativeSrc": "5942:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5942:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5966:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5966:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5921:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "5921:20:12"
																		},
																		"nativeSrc": "5921:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5921:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5911:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "5911:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5994:118:12",
															"nodeType": "YulBlock",
															"src": "5994:118:12",
															"statements": [
																{
																	"nativeSrc": "6009:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6009:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6023:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6023:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6013:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6013:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6039:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6039:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6074:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6074:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6085:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6085:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6070:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6070:3:12"
																				},
																				"nativeSrc": "6070:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6070:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6094:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6094:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6049:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6049:20:12"
																		},
																		"nativeSrc": "6049:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6049:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6039:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6039:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "5645:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5690:9:12",
														"nodeType": "YulTypedName",
														"src": "5690:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5701:7:12",
														"nodeType": "YulTypedName",
														"src": "5701:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5713:6:12",
														"nodeType": "YulTypedName",
														"src": "5713:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5721:6:12",
														"nodeType": "YulTypedName",
														"src": "5721:6:12",
														"type": ""
													}
												],
												"src": "5645:474:12"
											},
											{
												"body": {
													"nativeSrc": "6208:391:12",
													"nodeType": "YulBlock",
													"src": "6208:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6254:83:12",
																"nodeType": "YulBlock",
																"src": "6254:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6256:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6256:77:12"
																			},
																			"nativeSrc": "6256:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6256:79:12"
																		},
																		"nativeSrc": "6256:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6256:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6229:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6229:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6238:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6238:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6225:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6225:3:12"
																		},
																		"nativeSrc": "6225:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6225:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6250:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6250:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6221:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:12"
																},
																"nativeSrc": "6221:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6221:32:12"
															},
															"nativeSrc": "6218:119:12",
															"nodeType": "YulIf",
															"src": "6218:119:12"
														},
														{
															"nativeSrc": "6347:117:12",
															"nodeType": "YulBlock",
															"src": "6347:117:12",
															"statements": [
																{
																	"nativeSrc": "6362:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6362:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6376:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6376:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6366:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6366:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6391:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6391:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6426:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6426:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6437:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6437:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6422:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6422:3:12"
																				},
																				"nativeSrc": "6422:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6422:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6446:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6446:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6401:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6401:20:12"
																		},
																		"nativeSrc": "6401:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6401:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6391:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6391:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6474:118:12",
															"nodeType": "YulBlock",
															"src": "6474:118:12",
															"statements": [
																{
																	"nativeSrc": "6489:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6489:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6503:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6503:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6493:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6493:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6519:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6519:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6554:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6554:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6565:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6565:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6550:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6550:3:12"
																				},
																				"nativeSrc": "6550:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6550:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6574:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6574:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6529:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6529:20:12"
																		},
																		"nativeSrc": "6529:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6529:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6519:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6519:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "6125:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6170:9:12",
														"nodeType": "YulTypedName",
														"src": "6170:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6181:7:12",
														"nodeType": "YulTypedName",
														"src": "6181:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6193:6:12",
														"nodeType": "YulTypedName",
														"src": "6193:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6201:6:12",
														"nodeType": "YulTypedName",
														"src": "6201:6:12",
														"type": ""
													}
												],
												"src": "6125:474:12"
											},
											{
												"body": {
													"nativeSrc": "6671:263:12",
													"nodeType": "YulBlock",
													"src": "6671:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "6717:83:12",
																"nodeType": "YulBlock",
																"src": "6717:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6719:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "6719:77:12"
																			},
																			"nativeSrc": "6719:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6719:79:12"
																		},
																		"nativeSrc": "6719:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6719:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6692:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6692:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6701:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6701:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6688:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6688:3:12"
																		},
																		"nativeSrc": "6688:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6688:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6713:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6713:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6684:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6684:3:12"
																},
																"nativeSrc": "6684:32:12",
																"nodeType": "YulFunctionCall",
																"src": "6684:32:12"
															},
															"nativeSrc": "6681:119:12",
															"nodeType": "YulIf",
															"src": "6681:119:12"
														},
														{
															"nativeSrc": "6810:117:12",
															"nodeType": "YulBlock",
															"src": "6810:117:12",
															"statements": [
																{
																	"nativeSrc": "6825:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6825:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6839:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6839:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6829:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6829:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6854:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6854:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6889:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6889:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6900:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6900:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6885:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6885:3:12"
																				},
																				"nativeSrc": "6885:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6885:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6909:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6909:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6864:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6864:20:12"
																		},
																		"nativeSrc": "6864:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6864:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6854:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6854:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "6605:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6641:9:12",
														"nodeType": "YulTypedName",
														"src": "6641:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6652:7:12",
														"nodeType": "YulTypedName",
														"src": "6652:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6664:6:12",
														"nodeType": "YulTypedName",
														"src": "6664:6:12",
														"type": ""
													}
												],
												"src": "6605:329:12"
											},
											{
												"body": {
													"nativeSrc": "7041:40:12",
													"nodeType": "YulBlock",
													"src": "7041:40:12",
													"statements": [
														{
															"nativeSrc": "7052:22:12",
															"nodeType": "YulAssignment",
															"src": "7052:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7068:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7068:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7062:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7062:5:12"
																},
																"nativeSrc": "7062:12:12",
																"nodeType": "YulFunctionCall",
																"src": "7062:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7052:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "6940:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7024:5:12",
														"nodeType": "YulTypedName",
														"src": "7024:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7034:6:12",
														"nodeType": "YulTypedName",
														"src": "7034:6:12",
														"type": ""
													}
												],
												"src": "6940:141:12"
											},
											{
												"body": {
													"nativeSrc": "7225:73:12",
													"nodeType": "YulBlock",
													"src": "7225:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7242:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7242:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "7247:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7247:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7235:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:12"
																},
																"nativeSrc": "7235:19:12",
																"nodeType": "YulFunctionCall",
																"src": "7235:19:12"
															},
															"nativeSrc": "7235:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "7235:19:12"
														},
														{
															"nativeSrc": "7263:29:12",
															"nodeType": "YulAssignment",
															"src": "7263:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7282:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7282:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7287:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7287:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7278:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7278:3:12"
																},
																"nativeSrc": "7278:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7278:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "7263:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "7263:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "7087:211:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7197:3:12",
														"nodeType": "YulTypedName",
														"src": "7197:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "7202:6:12",
														"nodeType": "YulTypedName",
														"src": "7202:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "7213:11:12",
														"nodeType": "YulTypedName",
														"src": "7213:11:12",
														"type": ""
													}
												],
												"src": "7087:211:12"
											},
											{
												"body": {
													"nativeSrc": "7403:60:12",
													"nodeType": "YulBlock",
													"src": "7403:60:12",
													"statements": [
														{
															"nativeSrc": "7413:11:12",
															"nodeType": "YulAssignment",
															"src": "7413:11:12",
															"value": {
																"name": "ptr",
																"nativeSrc": "7421:3:12",
																"nodeType": "YulIdentifier",
																"src": "7421:3:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7413:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7413:4:12"
																}
															]
														},
														{
															"nativeSrc": "7434:22:12",
															"nodeType": "YulAssignment",
															"src": "7434:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "7446:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7446:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7451:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7451:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7442:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7442:3:12"
																},
																"nativeSrc": "7442:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7442:14:12"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7434:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7434:4:12"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "7304:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "7390:3:12",
														"nodeType": "YulTypedName",
														"src": "7390:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "7398:4:12",
														"nodeType": "YulTypedName",
														"src": "7398:4:12",
														"type": ""
													}
												],
												"src": "7304:159:12"
											},
											{
												"body": {
													"nativeSrc": "7647:968:12",
													"nodeType": "YulBlock",
													"src": "7647:968:12",
													"statements": [
														{
															"nativeSrc": "7657:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "7657:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7673:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "7673:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7678:4:12",
																		"nodeType": "YulLiteral",
																		"src": "7678:4:12",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7669:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7669:3:12"
																},
																"nativeSrc": "7669:14:12",
																"nodeType": "YulFunctionCall",
																"src": "7669:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "7661:4:12",
																	"nodeType": "YulTypedName",
																	"src": "7661:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7693:169:12",
															"nodeType": "YulBlock",
															"src": "7693:169:12",
															"statements": [
																{
																	"nativeSrc": "7733:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7733:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7763:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7763:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7770:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7770:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7759:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7759:3:12"
																				},
																				"nativeSrc": "7759:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7759:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7753:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7753:5:12"
																		},
																		"nativeSrc": "7753:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7753:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7737:12:12",
																			"nodeType": "YulTypedName",
																			"src": "7737:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "7823:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "7823:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "7841:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "7841:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7846:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7846:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7837:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7837:3:12"
																				},
																				"nativeSrc": "7837:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7837:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7789:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "7789:33:12"
																		},
																		"nativeSrc": "7789:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7789:63:12"
																	},
																	"nativeSrc": "7789:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "7789:63:12"
																}
															]
														},
														{
															"nativeSrc": "7872:172:12",
															"nodeType": "YulBlock",
															"src": "7872:172:12",
															"statements": [
																{
																	"nativeSrc": "7915:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7915:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7945:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7945:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7952:4:12",
																						"nodeType": "YulLiteral",
																						"src": "7952:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7941:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7941:3:12"
																				},
																				"nativeSrc": "7941:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7941:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "7935:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "7935:5:12"
																		},
																		"nativeSrc": "7935:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7935:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "7919:12:12",
																			"nodeType": "YulTypedName",
																			"src": "7919:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8005:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "8005:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8023:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8023:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8028:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8028:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8019:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8019:3:12"
																				},
																				"nativeSrc": "8019:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8019:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "7971:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "7971:33:12"
																		},
																		"nativeSrc": "7971:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7971:63:12"
																	},
																	"nativeSrc": "7971:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "7971:63:12"
																}
															]
														},
														{
															"nativeSrc": "8054:179:12",
															"nodeType": "YulBlock",
															"src": "8054:179:12",
															"statements": [
																{
																	"nativeSrc": "8104:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8104:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8134:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8134:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8141:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8141:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8130:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8130:3:12"
																				},
																				"nativeSrc": "8130:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8130:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8124:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8124:5:12"
																		},
																		"nativeSrc": "8124:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8124:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8108:12:12",
																			"nodeType": "YulTypedName",
																			"src": "8108:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8194:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "8194:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8212:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8212:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8217:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8217:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8208:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8208:3:12"
																				},
																				"nativeSrc": "8208:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8208:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8160:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "8160:33:12"
																		},
																		"nativeSrc": "8160:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8160:63:12"
																	},
																	"nativeSrc": "8160:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "8160:63:12"
																}
															]
														},
														{
															"nativeSrc": "8243:184:12",
															"nodeType": "YulBlock",
															"src": "8243:184:12",
															"statements": [
																{
																	"nativeSrc": "8298:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8298:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8328:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8328:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8335:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8335:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8324:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8324:3:12"
																				},
																				"nativeSrc": "8324:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8324:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8318:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8318:5:12"
																		},
																		"nativeSrc": "8318:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8318:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8302:12:12",
																			"nodeType": "YulTypedName",
																			"src": "8302:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8388:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "8388:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8406:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8406:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8411:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8411:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8402:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8402:3:12"
																				},
																				"nativeSrc": "8402:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8402:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "8354:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "8354:33:12"
																		},
																		"nativeSrc": "8354:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8354:63:12"
																	},
																	"nativeSrc": "8354:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "8354:63:12"
																}
															]
														},
														{
															"nativeSrc": "8437:171:12",
															"nodeType": "YulBlock",
															"src": "8437:171:12",
															"statements": [
																{
																	"nativeSrc": "8485:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8485:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "8515:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "8515:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8522:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8522:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8511:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8511:3:12"
																				},
																				"nativeSrc": "8511:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8511:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8505:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "8505:5:12"
																		},
																		"nativeSrc": "8505:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "8489:12:12",
																			"nodeType": "YulTypedName",
																			"src": "8489:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "8569:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "8569:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "8587:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "8587:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8592:4:12",
																						"nodeType": "YulLiteral",
																						"src": "8592:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8583:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8583:3:12"
																				},
																				"nativeSrc": "8583:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8583:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "8541:27:12",
																			"nodeType": "YulIdentifier",
																			"src": "8541:27:12"
																		},
																		"nativeSrc": "8541:57:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8541:57:12"
																	},
																	"nativeSrc": "8541:57:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "8541:57:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr",
												"nativeSrc": "7537:1078:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7634:5:12",
														"nodeType": "YulTypedName",
														"src": "7634:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7641:3:12",
														"nodeType": "YulTypedName",
														"src": "7641:3:12",
														"type": ""
													}
												],
												"src": "7537:1078:12"
											},
											{
												"body": {
													"nativeSrc": "8755:153:12",
													"nodeType": "YulBlock",
													"src": "8755:153:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8853:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8853:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "8861:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8861:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr",
																	"nativeSrc": "8765:87:12",
																	"nodeType": "YulIdentifier",
																	"src": "8765:87:12"
																},
																"nativeSrc": "8765:100:12",
																"nodeType": "YulFunctionCall",
																"src": "8765:100:12"
															},
															"nativeSrc": "8765:100:12",
															"nodeType": "YulExpressionStatement",
															"src": "8765:100:12"
														},
														{
															"nativeSrc": "8874:28:12",
															"nodeType": "YulAssignment",
															"src": "8874:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8892:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8892:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8897:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8897:4:12",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8888:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8888:3:12"
																},
																"nativeSrc": "8888:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8888:14:12"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "8874:10:12",
																	"nodeType": "YulIdentifier",
																	"src": "8874:10:12"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr",
												"nativeSrc": "8621:287:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "8728:6:12",
														"nodeType": "YulTypedName",
														"src": "8728:6:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8736:3:12",
														"nodeType": "YulTypedName",
														"src": "8736:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "8744:10:12",
														"nodeType": "YulTypedName",
														"src": "8744:10:12",
														"type": ""
													}
												],
												"src": "8621:287:12"
											},
											{
												"body": {
													"nativeSrc": "9016:38:12",
													"nodeType": "YulBlock",
													"src": "9016:38:12",
													"statements": [
														{
															"nativeSrc": "9026:22:12",
															"nodeType": "YulAssignment",
															"src": "9026:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "9038:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9038:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9043:4:12",
																		"nodeType": "YulLiteral",
																		"src": "9043:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9034:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9034:3:12"
																},
																"nativeSrc": "9034:14:12",
																"nodeType": "YulFunctionCall",
																"src": "9034:14:12"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "9026:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9026:4:12"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "8914:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "9003:3:12",
														"nodeType": "YulTypedName",
														"src": "9003:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "9011:4:12",
														"nodeType": "YulTypedName",
														"src": "9011:4:12",
														"type": ""
													}
												],
												"src": "8914:140:12"
											},
											{
												"body": {
													"nativeSrc": "9310:770:12",
													"nodeType": "YulBlock",
													"src": "9310:770:12",
													"statements": [
														{
															"nativeSrc": "9320:95:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9320:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9409:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9409:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "9334:74:12",
																	"nodeType": "YulIdentifier",
																	"src": "9334:74:12"
																},
																"nativeSrc": "9334:81:12",
																"nodeType": "YulFunctionCall",
																"src": "9334:81:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9324:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9324:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9424:120:12",
															"nodeType": "YulAssignment",
															"src": "9424:120:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9532:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9532:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9537:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9537:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "9431:100:12",
																	"nodeType": "YulIdentifier",
																	"src": "9431:100:12"
																},
																"nativeSrc": "9431:113:12",
																"nodeType": "YulFunctionCall",
																"src": "9431:113:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "9424:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9424:3:12"
																}
															]
														},
														{
															"nativeSrc": "9553:98:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9553:98:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9645:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "9645:5:12"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "9568:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "9568:76:12"
																},
																"nativeSrc": "9568:83:12",
																"nodeType": "YulFunctionCall",
																"src": "9568:83:12"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "9557:7:12",
																	"nodeType": "YulTypedName",
																	"src": "9557:7:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9660:21:12",
															"nodeType": "YulVariableDeclaration",
															"src": "9660:21:12",
															"value": {
																"name": "baseRef",
																"nativeSrc": "9674:7:12",
																"nodeType": "YulIdentifier",
																"src": "9674:7:12"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "9664:6:12",
																	"nodeType": "YulTypedName",
																	"src": "9664:6:12",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9750:305:12",
																"nodeType": "YulBlock",
																"src": "9750:305:12",
																"statements": [
																	{
																		"nativeSrc": "9764:34:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9764:34:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "9791:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "9791:6:12"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "9785:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "9785:5:12"
																			},
																			"nativeSrc": "9785:13:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9785:13:12"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "9768:13:12",
																				"nodeType": "YulTypedName",
																				"src": "9768:13:12",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "9811:124:12",
																		"nodeType": "YulAssignment",
																		"src": "9811:124:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "9916:13:12",
																					"nodeType": "YulIdentifier",
																					"src": "9916:13:12"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "9931:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9931:3:12"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr",
																				"nativeSrc": "9818:97:12",
																				"nodeType": "YulIdentifier",
																				"src": "9818:97:12"
																			},
																			"nativeSrc": "9818:117:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9818:117:12"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "9811:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9811:3:12"
																			}
																		]
																	},
																	{
																		"nativeSrc": "9948:97:12",
																		"nodeType": "YulAssignment",
																		"src": "9948:97:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "10038:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "10038:6:12"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "9958:79:12",
																				"nodeType": "YulIdentifier",
																				"src": "9958:79:12"
																			},
																			"nativeSrc": "9958:87:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9958:87:12"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "9948:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9948:6:12"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "9712:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9712:1:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9715:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9715:6:12"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "9709:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9709:2:12"
																},
																"nativeSrc": "9709:13:12",
																"nodeType": "YulFunctionCall",
																"src": "9709:13:12"
															},
															"nativeSrc": "9690:365:12",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "9723:18:12",
																"nodeType": "YulBlock",
																"src": "9723:18:12",
																"statements": [
																	{
																		"nativeSrc": "9725:14:12",
																		"nodeType": "YulAssignment",
																		"src": "9725:14:12",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "9734:1:12",
																					"nodeType": "YulIdentifier",
																					"src": "9734:1:12"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9737:1:12",
																					"nodeType": "YulLiteral",
																					"src": "9737:1:12",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "9730:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "9730:3:12"
																			},
																			"nativeSrc": "9730:9:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9730:9:12"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "9725:1:12",
																				"nodeType": "YulIdentifier",
																				"src": "9725:1:12"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "9694:14:12",
																"nodeType": "YulBlock",
																"src": "9694:14:12",
																"statements": [
																	{
																		"nativeSrc": "9696:10:12",
																		"nodeType": "YulVariableDeclaration",
																		"src": "9696:10:12",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "9705:1:12",
																			"nodeType": "YulLiteral",
																			"src": "9705:1:12",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "9700:1:12",
																				"nodeType": "YulTypedName",
																				"src": "9700:1:12",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "9690:365:12"
														},
														{
															"nativeSrc": "10064:10:12",
															"nodeType": "YulAssignment",
															"src": "10064:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "10071:3:12",
																"nodeType": "YulIdentifier",
																"src": "10071:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10064:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10064:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "9132:948:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9289:5:12",
														"nodeType": "YulTypedName",
														"src": "9289:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9296:3:12",
														"nodeType": "YulTypedName",
														"src": "9296:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9305:3:12",
														"nodeType": "YulTypedName",
														"src": "9305:3:12",
														"type": ""
													}
												],
												"src": "9132:948:12"
											},
											{
												"body": {
													"nativeSrc": "10288:279:12",
													"nodeType": "YulBlock",
													"src": "10288:279:12",
													"statements": [
														{
															"nativeSrc": "10298:26:12",
															"nodeType": "YulAssignment",
															"src": "10298:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10310:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10310:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10321:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10321:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10306:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10306:3:12"
																},
																"nativeSrc": "10306:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10306:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10298:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10298:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10345:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10345:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10356:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10356:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10341:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10341:3:12"
																		},
																		"nativeSrc": "10341:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10341:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10364:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10364:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10370:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10370:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10360:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10360:3:12"
																		},
																		"nativeSrc": "10360:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10360:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10334:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10334:6:12"
																},
																"nativeSrc": "10334:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10334:47:12"
															},
															"nativeSrc": "10334:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10334:47:12"
														},
														{
															"nativeSrc": "10390:170:12",
															"nodeType": "YulAssignment",
															"src": "10390:170:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10546:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10546:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "10555:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10555:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "10398:147:12",
																	"nodeType": "YulIdentifier",
																	"src": "10398:147:12"
																},
																"nativeSrc": "10398:162:12",
																"nodeType": "YulFunctionCall",
																"src": "10398:162:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10390:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10390:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "10086:481:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10260:9:12",
														"nodeType": "YulTypedName",
														"src": "10260:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10272:6:12",
														"nodeType": "YulTypedName",
														"src": "10272:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10283:4:12",
														"nodeType": "YulTypedName",
														"src": "10283:4:12",
														"type": ""
													}
												],
												"src": "10086:481:12"
											},
											{
												"body": {
													"nativeSrc": "10638:53:12",
													"nodeType": "YulBlock",
													"src": "10638:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10655:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10655:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10678:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10678:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10660:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "10660:17:12"
																		},
																		"nativeSrc": "10660:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10660:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10648:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10648:6:12"
																},
																"nativeSrc": "10648:37:12",
																"nodeType": "YulFunctionCall",
																"src": "10648:37:12"
															},
															"nativeSrc": "10648:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "10648:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10573:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10626:5:12",
														"nodeType": "YulTypedName",
														"src": "10626:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10633:3:12",
														"nodeType": "YulTypedName",
														"src": "10633:3:12",
														"type": ""
													}
												],
												"src": "10573:118:12"
											},
											{
												"body": {
													"nativeSrc": "10795:124:12",
													"nodeType": "YulBlock",
													"src": "10795:124:12",
													"statements": [
														{
															"nativeSrc": "10805:26:12",
															"nodeType": "YulAssignment",
															"src": "10805:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10817:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10817:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10828:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10828:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10813:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10813:3:12"
																},
																"nativeSrc": "10813:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10813:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10805:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10805:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10885:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10885:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10898:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10898:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10909:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10909:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10894:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10894:3:12"
																		},
																		"nativeSrc": "10894:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10894:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10841:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "10841:43:12"
																},
																"nativeSrc": "10841:71:12",
																"nodeType": "YulFunctionCall",
																"src": "10841:71:12"
															},
															"nativeSrc": "10841:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "10841:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10697:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10767:9:12",
														"nodeType": "YulTypedName",
														"src": "10767:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10779:6:12",
														"nodeType": "YulTypedName",
														"src": "10779:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10790:4:12",
														"nodeType": "YulTypedName",
														"src": "10790:4:12",
														"type": ""
													}
												],
												"src": "10697:222:12"
											},
											{
												"body": {
													"nativeSrc": "11008:391:12",
													"nodeType": "YulBlock",
													"src": "11008:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11054:83:12",
																"nodeType": "YulBlock",
																"src": "11054:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11056:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11056:77:12"
																			},
																			"nativeSrc": "11056:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11056:79:12"
																		},
																		"nativeSrc": "11056:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11056:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11029:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11029:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11038:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11038:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11025:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11025:3:12"
																		},
																		"nativeSrc": "11025:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11025:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11050:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11050:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11021:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11021:3:12"
																},
																"nativeSrc": "11021:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11021:32:12"
															},
															"nativeSrc": "11018:119:12",
															"nodeType": "YulIf",
															"src": "11018:119:12"
														},
														{
															"nativeSrc": "11147:117:12",
															"nodeType": "YulBlock",
															"src": "11147:117:12",
															"statements": [
																{
																	"nativeSrc": "11162:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11162:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11176:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11176:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11166:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11166:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11191:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11191:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11226:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11226:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11237:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11237:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11222:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11222:3:12"
																				},
																				"nativeSrc": "11222:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11222:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11246:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11246:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11201:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11201:20:12"
																		},
																		"nativeSrc": "11201:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11201:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11191:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11191:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11274:118:12",
															"nodeType": "YulBlock",
															"src": "11274:118:12",
															"statements": [
																{
																	"nativeSrc": "11289:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11289:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11303:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11303:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11293:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11293:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11319:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11319:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11354:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11354:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11365:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11365:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11350:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11350:3:12"
																				},
																				"nativeSrc": "11350:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11350:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11374:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11374:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11329:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11329:20:12"
																		},
																		"nativeSrc": "11329:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11329:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11319:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11319:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "10925:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10970:9:12",
														"nodeType": "YulTypedName",
														"src": "10970:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10981:7:12",
														"nodeType": "YulTypedName",
														"src": "10981:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10993:6:12",
														"nodeType": "YulTypedName",
														"src": "10993:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11001:6:12",
														"nodeType": "YulTypedName",
														"src": "11001:6:12",
														"type": ""
													}
												],
												"src": "10925:474:12"
											},
											{
												"body": {
													"nativeSrc": "11437:28:12",
													"nodeType": "YulBlock",
													"src": "11437:28:12",
													"statements": [
														{
															"nativeSrc": "11447:12:12",
															"nodeType": "YulAssignment",
															"src": "11447:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "11454:5:12",
																"nodeType": "YulIdentifier",
																"src": "11454:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11447:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11447:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "11405:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11423:5:12",
														"nodeType": "YulTypedName",
														"src": "11423:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "11433:3:12",
														"nodeType": "YulTypedName",
														"src": "11433:3:12",
														"type": ""
													}
												],
												"src": "11405:60:12"
											},
											{
												"body": {
													"nativeSrc": "11531:82:12",
													"nodeType": "YulBlock",
													"src": "11531:82:12",
													"statements": [
														{
															"nativeSrc": "11541:66:12",
															"nodeType": "YulAssignment",
															"src": "11541:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "11599:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "11599:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "11581:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "11581:17:12"
																				},
																				"nativeSrc": "11581:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11581:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "11572:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "11572:8:12"
																		},
																		"nativeSrc": "11572:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11572:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "11554:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11554:17:12"
																},
																"nativeSrc": "11554:53:12",
																"nodeType": "YulFunctionCall",
																"src": "11554:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11541:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11541:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "11471:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11511:5:12",
														"nodeType": "YulTypedName",
														"src": "11511:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11521:9:12",
														"nodeType": "YulTypedName",
														"src": "11521:9:12",
														"type": ""
													}
												],
												"src": "11471:142:12"
											},
											{
												"body": {
													"nativeSrc": "11679:66:12",
													"nodeType": "YulBlock",
													"src": "11679:66:12",
													"statements": [
														{
															"nativeSrc": "11689:50:12",
															"nodeType": "YulAssignment",
															"src": "11689:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11733:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11733:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "11702:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11702:30:12"
																},
																"nativeSrc": "11702:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11702:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11689:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11689:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "11619:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11659:5:12",
														"nodeType": "YulTypedName",
														"src": "11659:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11669:9:12",
														"nodeType": "YulTypedName",
														"src": "11669:9:12",
														"type": ""
													}
												],
												"src": "11619:126:12"
											},
											{
												"body": {
													"nativeSrc": "11825:66:12",
													"nodeType": "YulBlock",
													"src": "11825:66:12",
													"statements": [
														{
															"nativeSrc": "11835:50:12",
															"nodeType": "YulAssignment",
															"src": "11835:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11879:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "11879:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "11848:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "11848:30:12"
																},
																"nativeSrc": "11848:37:12",
																"nodeType": "YulFunctionCall",
																"src": "11848:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "11835:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "11835:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$574_to_t_address",
												"nativeSrc": "11751:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11805:5:12",
														"nodeType": "YulTypedName",
														"src": "11805:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "11815:9:12",
														"nodeType": "YulTypedName",
														"src": "11815:9:12",
														"type": ""
													}
												],
												"src": "11751:140:12"
											},
											{
												"body": {
													"nativeSrc": "11976:80:12",
													"nodeType": "YulBlock",
													"src": "11976:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11993:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11993:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12043:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12043:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$574_to_t_address",
																			"nativeSrc": "11998:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "11998:44:12"
																		},
																		"nativeSrc": "11998:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11998:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11986:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11986:6:12"
																},
																"nativeSrc": "11986:64:12",
																"nodeType": "YulFunctionCall",
																"src": "11986:64:12"
															},
															"nativeSrc": "11986:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "11986:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$574_to_t_address_fromStack",
												"nativeSrc": "11897:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11964:5:12",
														"nodeType": "YulTypedName",
														"src": "11964:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11971:3:12",
														"nodeType": "YulTypedName",
														"src": "11971:3:12",
														"type": ""
													}
												],
												"src": "11897:159:12"
											},
											{
												"body": {
													"nativeSrc": "12174:138:12",
													"nodeType": "YulBlock",
													"src": "12174:138:12",
													"statements": [
														{
															"nativeSrc": "12184:26:12",
															"nodeType": "YulAssignment",
															"src": "12184:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12196:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12196:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12207:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12207:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12192:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12192:3:12"
																},
																"nativeSrc": "12192:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12192:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12184:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12184:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12278:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12278:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12291:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12291:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12302:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12302:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12287:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12287:3:12"
																		},
																		"nativeSrc": "12287:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12287:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$574_to_t_address_fromStack",
																	"nativeSrc": "12220:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "12220:57:12"
																},
																"nativeSrc": "12220:85:12",
																"nodeType": "YulFunctionCall",
																"src": "12220:85:12"
															},
															"nativeSrc": "12220:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "12220:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$574__to_t_address__fromStack_reversed",
												"nativeSrc": "12062:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12146:9:12",
														"nodeType": "YulTypedName",
														"src": "12146:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12158:6:12",
														"nodeType": "YulTypedName",
														"src": "12158:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12169:4:12",
														"nodeType": "YulTypedName",
														"src": "12169:4:12",
														"type": ""
													}
												],
												"src": "12062:250:12"
											},
											{
												"body": {
													"nativeSrc": "12414:73:12",
													"nodeType": "YulBlock",
													"src": "12414:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12431:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12431:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12436:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12436:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12424:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12424:6:12"
																},
																"nativeSrc": "12424:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12424:19:12"
															},
															"nativeSrc": "12424:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "12424:19:12"
														},
														{
															"nativeSrc": "12452:29:12",
															"nodeType": "YulAssignment",
															"src": "12452:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12471:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12471:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12476:4:12",
																		"nodeType": "YulLiteral",
																		"src": "12476:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12467:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12467:3:12"
																},
																"nativeSrc": "12467:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12467:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12452:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "12452:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "12318:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12386:3:12",
														"nodeType": "YulTypedName",
														"src": "12386:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12391:6:12",
														"nodeType": "YulTypedName",
														"src": "12391:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12402:11:12",
														"nodeType": "YulTypedName",
														"src": "12402:11:12",
														"type": ""
													}
												],
												"src": "12318:169:12"
											},
											{
												"body": {
													"nativeSrc": "12599:63:12",
													"nodeType": "YulBlock",
													"src": "12599:63:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12621:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12621:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12629:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12629:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12617:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12617:3:12"
																		},
																		"nativeSrc": "12617:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12617:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b6520746f6b656e",
																		"kind": "string",
																		"nativeSrc": "12633:21:12",
																		"nodeType": "YulLiteral",
																		"src": "12633:21:12",
																		"type": "",
																		"value": "Invalid stake token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12610:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12610:6:12"
																},
																"nativeSrc": "12610:45:12",
																"nodeType": "YulFunctionCall",
																"src": "12610:45:12"
															},
															"nativeSrc": "12610:45:12",
															"nodeType": "YulExpressionStatement",
															"src": "12610:45:12"
														}
													]
												},
												"name": "store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
												"nativeSrc": "12493:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12591:6:12",
														"nodeType": "YulTypedName",
														"src": "12591:6:12",
														"type": ""
													}
												],
												"src": "12493:169:12"
											},
											{
												"body": {
													"nativeSrc": "12814:220:12",
													"nodeType": "YulBlock",
													"src": "12814:220:12",
													"statements": [
														{
															"nativeSrc": "12824:74:12",
															"nodeType": "YulAssignment",
															"src": "12824:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12890:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12890:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12895:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12895:2:12",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12831:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12831:58:12"
																},
																"nativeSrc": "12831:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12831:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12824:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12824:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12996:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12996:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
																	"nativeSrc": "12907:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12907:88:12"
																},
																"nativeSrc": "12907:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12907:93:12"
															},
															"nativeSrc": "12907:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12907:93:12"
														},
														{
															"nativeSrc": "13009:19:12",
															"nodeType": "YulAssignment",
															"src": "13009:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13020:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13020:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13025:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13025:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13016:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13016:3:12"
																},
																"nativeSrc": "13016:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13016:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13009:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12668:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12802:3:12",
														"nodeType": "YulTypedName",
														"src": "12802:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12810:3:12",
														"nodeType": "YulTypedName",
														"src": "12810:3:12",
														"type": ""
													}
												],
												"src": "12668:366:12"
											},
											{
												"body": {
													"nativeSrc": "13211:248:12",
													"nodeType": "YulBlock",
													"src": "13211:248:12",
													"statements": [
														{
															"nativeSrc": "13221:26:12",
															"nodeType": "YulAssignment",
															"src": "13221:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13233:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "13233:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13244:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13244:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13229:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13229:3:12"
																},
																"nativeSrc": "13229:18:12",
																"nodeType": "YulFunctionCall",
																"src": "13229:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13221:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13221:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13268:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13268:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13279:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13279:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13264:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13264:3:12"
																		},
																		"nativeSrc": "13264:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13264:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13287:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "13287:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13293:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "13293:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13283:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13283:3:12"
																		},
																		"nativeSrc": "13283:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13283:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13257:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13257:6:12"
																},
																"nativeSrc": "13257:47:12",
																"nodeType": "YulFunctionCall",
																"src": "13257:47:12"
															},
															"nativeSrc": "13257:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "13257:47:12"
														},
														{
															"nativeSrc": "13313:139:12",
															"nodeType": "YulAssignment",
															"src": "13313:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13447:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "13447:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13321:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "13321:124:12"
																},
																"nativeSrc": "13321:131:12",
																"nodeType": "YulFunctionCall",
																"src": "13321:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13313:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "13313:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13040:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13191:9:12",
														"nodeType": "YulTypedName",
														"src": "13191:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13206:4:12",
														"nodeType": "YulTypedName",
														"src": "13206:4:12",
														"type": ""
													}
												],
												"src": "13040:419:12"
											},
											{
												"body": {
													"nativeSrc": "13571:60:12",
													"nodeType": "YulBlock",
													"src": "13571:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13593:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13593:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13601:1:12",
																				"nodeType": "YulLiteral",
																				"src": "13601:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13589:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13589:3:12"
																		},
																		"nativeSrc": "13589:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13589:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964206475726174696f6e",
																		"kind": "string",
																		"nativeSrc": "13605:18:12",
																		"nodeType": "YulLiteral",
																		"src": "13605:18:12",
																		"type": "",
																		"value": "Invalid duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13582:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13582:6:12"
																},
																"nativeSrc": "13582:42:12",
																"nodeType": "YulFunctionCall",
																"src": "13582:42:12"
															},
															"nativeSrc": "13582:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "13582:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
												"nativeSrc": "13465:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13563:6:12",
														"nodeType": "YulTypedName",
														"src": "13563:6:12",
														"type": ""
													}
												],
												"src": "13465:166:12"
											},
											{
												"body": {
													"nativeSrc": "13783:220:12",
													"nodeType": "YulBlock",
													"src": "13783:220:12",
													"statements": [
														{
															"nativeSrc": "13793:74:12",
															"nodeType": "YulAssignment",
															"src": "13793:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13859:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13859:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13864:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13864:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13800:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "13800:58:12"
																},
																"nativeSrc": "13800:67:12",
																"nodeType": "YulFunctionCall",
																"src": "13800:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13793:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13793:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13965:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13965:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
																	"nativeSrc": "13876:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13876:88:12"
																},
																"nativeSrc": "13876:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13876:93:12"
															},
															"nativeSrc": "13876:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13876:93:12"
														},
														{
															"nativeSrc": "13978:19:12",
															"nodeType": "YulAssignment",
															"src": "13978:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13989:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13989:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13994:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13994:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13985:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13985:3:12"
																},
																"nativeSrc": "13985:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13985:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13978:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13978:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13637:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13771:3:12",
														"nodeType": "YulTypedName",
														"src": "13771:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13779:3:12",
														"nodeType": "YulTypedName",
														"src": "13779:3:12",
														"type": ""
													}
												],
												"src": "13637:366:12"
											},
											{
												"body": {
													"nativeSrc": "14180:248:12",
													"nodeType": "YulBlock",
													"src": "14180:248:12",
													"statements": [
														{
															"nativeSrc": "14190:26:12",
															"nodeType": "YulAssignment",
															"src": "14190:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14202:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "14202:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14213:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14213:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14198:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14198:3:12"
																},
																"nativeSrc": "14198:18:12",
																"nodeType": "YulFunctionCall",
																"src": "14198:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14190:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14190:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14237:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14237:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14248:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14248:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14233:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14233:3:12"
																		},
																		"nativeSrc": "14233:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14233:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14256:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "14256:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14262:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "14262:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14252:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14252:3:12"
																		},
																		"nativeSrc": "14252:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14252:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14226:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14226:6:12"
																},
																"nativeSrc": "14226:47:12",
																"nodeType": "YulFunctionCall",
																"src": "14226:47:12"
															},
															"nativeSrc": "14226:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "14226:47:12"
														},
														{
															"nativeSrc": "14282:139:12",
															"nodeType": "YulAssignment",
															"src": "14282:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14416:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14416:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14290:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "14290:124:12"
																},
																"nativeSrc": "14290:131:12",
																"nodeType": "YulFunctionCall",
																"src": "14290:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14282:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14282:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14009:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14160:9:12",
														"nodeType": "YulTypedName",
														"src": "14160:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14175:4:12",
														"nodeType": "YulTypedName",
														"src": "14175:4:12",
														"type": ""
													}
												],
												"src": "14009:419:12"
											},
											{
												"body": {
													"nativeSrc": "14540:55:12",
													"nodeType": "YulBlock",
													"src": "14540:55:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14562:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14562:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14570:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14570:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14558:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14558:3:12"
																		},
																		"nativeSrc": "14558:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14558:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420415059",
																		"kind": "string",
																		"nativeSrc": "14574:13:12",
																		"nodeType": "YulLiteral",
																		"src": "14574:13:12",
																		"type": "",
																		"value": "Invalid APY"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14551:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14551:6:12"
																},
																"nativeSrc": "14551:37:12",
																"nodeType": "YulFunctionCall",
																"src": "14551:37:12"
															},
															"nativeSrc": "14551:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "14551:37:12"
														}
													]
												},
												"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
												"nativeSrc": "14434:161:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14532:6:12",
														"nodeType": "YulTypedName",
														"src": "14532:6:12",
														"type": ""
													}
												],
												"src": "14434:161:12"
											},
											{
												"body": {
													"nativeSrc": "14747:220:12",
													"nodeType": "YulBlock",
													"src": "14747:220:12",
													"statements": [
														{
															"nativeSrc": "14757:74:12",
															"nodeType": "YulAssignment",
															"src": "14757:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14823:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14823:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14828:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14828:2:12",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14764:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "14764:58:12"
																},
																"nativeSrc": "14764:67:12",
																"nodeType": "YulFunctionCall",
																"src": "14764:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14757:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14757:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14929:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14929:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																	"nativeSrc": "14840:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14840:88:12"
																},
																"nativeSrc": "14840:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14840:93:12"
															},
															"nativeSrc": "14840:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14840:93:12"
														},
														{
															"nativeSrc": "14942:19:12",
															"nodeType": "YulAssignment",
															"src": "14942:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14953:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14953:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14958:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14958:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14949:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14949:3:12"
																},
																"nativeSrc": "14949:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14949:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14942:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14942:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14601:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14735:3:12",
														"nodeType": "YulTypedName",
														"src": "14735:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14743:3:12",
														"nodeType": "YulTypedName",
														"src": "14743:3:12",
														"type": ""
													}
												],
												"src": "14601:366:12"
											},
											{
												"body": {
													"nativeSrc": "15144:248:12",
													"nodeType": "YulBlock",
													"src": "15144:248:12",
													"statements": [
														{
															"nativeSrc": "15154:26:12",
															"nodeType": "YulAssignment",
															"src": "15154:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15166:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15166:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15177:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15177:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15162:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15162:3:12"
																},
																"nativeSrc": "15162:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15162:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15154:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15154:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15201:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15201:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15212:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15212:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15197:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15197:3:12"
																		},
																		"nativeSrc": "15197:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15197:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15220:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "15220:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15226:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15226:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15216:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15216:3:12"
																		},
																		"nativeSrc": "15216:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15216:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15190:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15190:6:12"
																},
																"nativeSrc": "15190:47:12",
																"nodeType": "YulFunctionCall",
																"src": "15190:47:12"
															},
															"nativeSrc": "15190:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "15190:47:12"
														},
														{
															"nativeSrc": "15246:139:12",
															"nodeType": "YulAssignment",
															"src": "15246:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15380:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15380:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15254:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "15254:124:12"
																},
																"nativeSrc": "15254:131:12",
																"nodeType": "YulFunctionCall",
																"src": "15254:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15246:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15246:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14973:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15124:9:12",
														"nodeType": "YulTypedName",
														"src": "15124:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15139:4:12",
														"nodeType": "YulTypedName",
														"src": "15139:4:12",
														"type": ""
													}
												],
												"src": "14973:419:12"
											},
											{
												"body": {
													"nativeSrc": "15426:152:12",
													"nodeType": "YulBlock",
													"src": "15426:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15443:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15443:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15446:77:12",
																		"nodeType": "YulLiteral",
																		"src": "15446:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15436:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15436:6:12"
																},
																"nativeSrc": "15436:88:12",
																"nodeType": "YulFunctionCall",
																"src": "15436:88:12"
															},
															"nativeSrc": "15436:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "15436:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15540:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15540:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15543:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15543:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15533:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15533:6:12"
																},
																"nativeSrc": "15533:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15533:15:12"
															},
															"nativeSrc": "15533:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15533:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15564:1:12",
																		"nodeType": "YulLiteral",
																		"src": "15564:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15567:4:12",
																		"nodeType": "YulLiteral",
																		"src": "15567:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15557:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15557:6:12"
																},
																"nativeSrc": "15557:15:12",
																"nodeType": "YulFunctionCall",
																"src": "15557:15:12"
															},
															"nativeSrc": "15557:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "15557:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "15398:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "15398:180:12"
											},
											{
												"body": {
													"nativeSrc": "15629:149:12",
													"nodeType": "YulBlock",
													"src": "15629:149:12",
													"statements": [
														{
															"nativeSrc": "15639:25:12",
															"nodeType": "YulAssignment",
															"src": "15639:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15662:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15662:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15644:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15644:17:12"
																},
																"nativeSrc": "15644:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15644:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15639:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15639:1:12"
																}
															]
														},
														{
															"nativeSrc": "15673:25:12",
															"nodeType": "YulAssignment",
															"src": "15673:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15696:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15696:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15678:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15678:17:12"
																},
																"nativeSrc": "15678:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15678:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15673:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15673:1:12"
																}
															]
														},
														{
															"nativeSrc": "15707:17:12",
															"nodeType": "YulAssignment",
															"src": "15707:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15719:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15719:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15722:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15722:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15715:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15715:3:12"
																},
																"nativeSrc": "15715:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15715:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15707:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15707:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15749:22:12",
																"nodeType": "YulBlock",
																"src": "15749:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15751:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15751:16:12"
																			},
																			"nativeSrc": "15751:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15751:18:12"
																		},
																		"nativeSrc": "15751:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15751:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15740:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "15740:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15746:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15746:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15737:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15737:2:12"
																},
																"nativeSrc": "15737:11:12",
																"nodeType": "YulFunctionCall",
																"src": "15737:11:12"
															},
															"nativeSrc": "15734:37:12",
															"nodeType": "YulIf",
															"src": "15734:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15584:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15615:1:12",
														"nodeType": "YulTypedName",
														"src": "15615:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15618:1:12",
														"nodeType": "YulTypedName",
														"src": "15618:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15624:4:12",
														"nodeType": "YulTypedName",
														"src": "15624:4:12",
														"type": ""
													}
												],
												"src": "15584:194:12"
											},
											{
												"body": {
													"nativeSrc": "15966:371:12",
													"nodeType": "YulBlock",
													"src": "15966:371:12",
													"statements": [
														{
															"nativeSrc": "15976:27:12",
															"nodeType": "YulAssignment",
															"src": "15976:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15988:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15988:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15999:3:12",
																		"nodeType": "YulLiteral",
																		"src": "15999:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15984:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15984:3:12"
																},
																"nativeSrc": "15984:19:12",
																"nodeType": "YulFunctionCall",
																"src": "15984:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15976:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15976:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16057:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16057:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16070:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16070:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16081:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16081:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16066:3:12"
																		},
																		"nativeSrc": "16066:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16066:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16013:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16013:43:12"
																},
																"nativeSrc": "16013:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16013:71:12"
															},
															"nativeSrc": "16013:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16013:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16138:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16138:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16151:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16151:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16162:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16162:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16147:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16147:3:12"
																		},
																		"nativeSrc": "16147:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16147:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16094:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16094:43:12"
																},
																"nativeSrc": "16094:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16094:72:12"
															},
															"nativeSrc": "16094:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16094:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16220:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16220:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16233:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16233:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16244:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16244:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16229:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16229:3:12"
																		},
																		"nativeSrc": "16229:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16229:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16176:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16176:43:12"
																},
																"nativeSrc": "16176:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16176:72:12"
															},
															"nativeSrc": "16176:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16176:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "16302:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16302:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16315:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16315:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16326:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16326:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16311:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16311:3:12"
																		},
																		"nativeSrc": "16311:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16311:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16258:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16258:43:12"
																},
																"nativeSrc": "16258:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16258:72:12"
															},
															"nativeSrc": "16258:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16258:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "15784:553:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15914:9:12",
														"nodeType": "YulTypedName",
														"src": "15914:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "15926:6:12",
														"nodeType": "YulTypedName",
														"src": "15926:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "15934:6:12",
														"nodeType": "YulTypedName",
														"src": "15934:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15942:6:12",
														"nodeType": "YulTypedName",
														"src": "15942:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15950:6:12",
														"nodeType": "YulTypedName",
														"src": "15950:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15961:4:12",
														"nodeType": "YulTypedName",
														"src": "15961:4:12",
														"type": ""
													}
												],
												"src": "15784:553:12"
											},
											{
												"body": {
													"nativeSrc": "16449:62:12",
													"nodeType": "YulBlock",
													"src": "16449:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16471:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16471:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16479:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16479:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16467:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16467:3:12"
																		},
																		"nativeSrc": "16467:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16467:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964207061636b616765204944",
																		"kind": "string",
																		"nativeSrc": "16483:20:12",
																		"nodeType": "YulLiteral",
																		"src": "16483:20:12",
																		"type": "",
																		"value": "Invalid package ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16460:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16460:6:12"
																},
																"nativeSrc": "16460:44:12",
																"nodeType": "YulFunctionCall",
																"src": "16460:44:12"
															},
															"nativeSrc": "16460:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "16460:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
												"nativeSrc": "16343:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16441:6:12",
														"nodeType": "YulTypedName",
														"src": "16441:6:12",
														"type": ""
													}
												],
												"src": "16343:168:12"
											},
											{
												"body": {
													"nativeSrc": "16663:220:12",
													"nodeType": "YulBlock",
													"src": "16663:220:12",
													"statements": [
														{
															"nativeSrc": "16673:74:12",
															"nodeType": "YulAssignment",
															"src": "16673:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16739:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16739:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16744:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16744:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16680:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "16680:58:12"
																},
																"nativeSrc": "16680:67:12",
																"nodeType": "YulFunctionCall",
																"src": "16680:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16673:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16673:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16845:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16845:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																	"nativeSrc": "16756:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "16756:88:12"
																},
																"nativeSrc": "16756:93:12",
																"nodeType": "YulFunctionCall",
																"src": "16756:93:12"
															},
															"nativeSrc": "16756:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "16756:93:12"
														},
														{
															"nativeSrc": "16858:19:12",
															"nodeType": "YulAssignment",
															"src": "16858:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16869:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16869:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16874:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16874:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16865:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16865:3:12"
																},
																"nativeSrc": "16865:12:12",
																"nodeType": "YulFunctionCall",
																"src": "16865:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16858:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16858:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16517:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16651:3:12",
														"nodeType": "YulTypedName",
														"src": "16651:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16659:3:12",
														"nodeType": "YulTypedName",
														"src": "16659:3:12",
														"type": ""
													}
												],
												"src": "16517:366:12"
											},
											{
												"body": {
													"nativeSrc": "17060:248:12",
													"nodeType": "YulBlock",
													"src": "17060:248:12",
													"statements": [
														{
															"nativeSrc": "17070:26:12",
															"nodeType": "YulAssignment",
															"src": "17070:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17082:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17082:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17093:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17093:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17078:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17078:3:12"
																},
																"nativeSrc": "17078:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17078:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17070:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17070:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17117:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17117:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17128:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17128:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17113:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17113:3:12"
																		},
																		"nativeSrc": "17113:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17113:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17136:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17136:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17142:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17142:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17132:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17132:3:12"
																		},
																		"nativeSrc": "17132:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17132:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17106:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17106:6:12"
																},
																"nativeSrc": "17106:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17106:47:12"
															},
															"nativeSrc": "17106:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17106:47:12"
														},
														{
															"nativeSrc": "17162:139:12",
															"nodeType": "YulAssignment",
															"src": "17162:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17296:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17296:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17170:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17170:124:12"
																},
																"nativeSrc": "17170:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17170:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17162:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17162:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16889:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17040:9:12",
														"nodeType": "YulTypedName",
														"src": "17040:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17055:4:12",
														"nodeType": "YulTypedName",
														"src": "17055:4:12",
														"type": ""
													}
												],
												"src": "16889:419:12"
											},
											{
												"body": {
													"nativeSrc": "17342:152:12",
													"nodeType": "YulBlock",
													"src": "17342:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17359:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17359:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17362:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17362:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17352:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17352:6:12"
																},
																"nativeSrc": "17352:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17352:88:12"
															},
															"nativeSrc": "17352:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17352:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17456:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17456:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17459:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17459:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17449:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17449:6:12"
																},
																"nativeSrc": "17449:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17449:15:12"
															},
															"nativeSrc": "17449:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17449:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17480:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17480:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17483:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17483:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17473:6:12"
																},
																"nativeSrc": "17473:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17473:15:12"
															},
															"nativeSrc": "17473:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17473:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "17314:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17314:180:12"
											},
											{
												"body": {
													"nativeSrc": "17606:60:12",
													"nodeType": "YulBlock",
													"src": "17606:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17628:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17628:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17636:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17636:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17624:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17624:3:12"
																		},
																		"nativeSrc": "17624:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17624:14:12"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b65204944",
																		"kind": "string",
																		"nativeSrc": "17640:18:12",
																		"nodeType": "YulLiteral",
																		"src": "17640:18:12",
																		"type": "",
																		"value": "Invalid stake ID"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17617:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17617:6:12"
																},
																"nativeSrc": "17617:42:12",
																"nodeType": "YulFunctionCall",
																"src": "17617:42:12"
															},
															"nativeSrc": "17617:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "17617:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b",
												"nativeSrc": "17500:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17598:6:12",
														"nodeType": "YulTypedName",
														"src": "17598:6:12",
														"type": ""
													}
												],
												"src": "17500:166:12"
											},
											{
												"body": {
													"nativeSrc": "17818:220:12",
													"nodeType": "YulBlock",
													"src": "17818:220:12",
													"statements": [
														{
															"nativeSrc": "17828:74:12",
															"nodeType": "YulAssignment",
															"src": "17828:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17894:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17894:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17899:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17899:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17835:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17835:58:12"
																},
																"nativeSrc": "17835:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17835:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17828:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17828:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18000:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18000:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b",
																	"nativeSrc": "17911:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17911:88:12"
																},
																"nativeSrc": "17911:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17911:93:12"
															},
															"nativeSrc": "17911:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17911:93:12"
														},
														{
															"nativeSrc": "18013:19:12",
															"nodeType": "YulAssignment",
															"src": "18013:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18024:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18024:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18029:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18029:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18020:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18020:3:12"
																},
																"nativeSrc": "18020:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18020:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18013:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18013:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17672:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17806:3:12",
														"nodeType": "YulTypedName",
														"src": "17806:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17814:3:12",
														"nodeType": "YulTypedName",
														"src": "17814:3:12",
														"type": ""
													}
												],
												"src": "17672:366:12"
											},
											{
												"body": {
													"nativeSrc": "18215:248:12",
													"nodeType": "YulBlock",
													"src": "18215:248:12",
													"statements": [
														{
															"nativeSrc": "18225:26:12",
															"nodeType": "YulAssignment",
															"src": "18225:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18237:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "18237:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18248:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18248:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18233:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18233:3:12"
																},
																"nativeSrc": "18233:18:12",
																"nodeType": "YulFunctionCall",
																"src": "18233:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18225:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18225:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18272:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18272:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18283:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18283:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18268:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18268:3:12"
																		},
																		"nativeSrc": "18268:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18268:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18291:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "18291:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18297:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "18297:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18287:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18287:3:12"
																		},
																		"nativeSrc": "18287:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18287:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18261:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18261:6:12"
																},
																"nativeSrc": "18261:47:12",
																"nodeType": "YulFunctionCall",
																"src": "18261:47:12"
															},
															"nativeSrc": "18261:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "18261:47:12"
														},
														{
															"nativeSrc": "18317:139:12",
															"nodeType": "YulAssignment",
															"src": "18317:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18451:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "18451:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18325:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "18325:124:12"
																},
																"nativeSrc": "18325:131:12",
																"nodeType": "YulFunctionCall",
																"src": "18325:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18317:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "18317:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18044:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18195:9:12",
														"nodeType": "YulTypedName",
														"src": "18195:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18210:4:12",
														"nodeType": "YulTypedName",
														"src": "18210:4:12",
														"type": ""
													}
												],
												"src": "18044:419:12"
											},
											{
												"body": {
													"nativeSrc": "18575:58:12",
													"nodeType": "YulBlock",
													"src": "18575:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18597:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18597:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18605:1:12",
																				"nodeType": "YulLiteral",
																				"src": "18605:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18593:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18593:3:12"
																		},
																		"nativeSrc": "18593:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18593:14:12"
																	},
																	{
																		"hexValue": "496e616374697665207374616b65",
																		"kind": "string",
																		"nativeSrc": "18609:16:12",
																		"nodeType": "YulLiteral",
																		"src": "18609:16:12",
																		"type": "",
																		"value": "Inactive stake"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18586:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18586:6:12"
																},
																"nativeSrc": "18586:40:12",
																"nodeType": "YulFunctionCall",
																"src": "18586:40:12"
															},
															"nativeSrc": "18586:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "18586:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4",
												"nativeSrc": "18469:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18567:6:12",
														"nodeType": "YulTypedName",
														"src": "18567:6:12",
														"type": ""
													}
												],
												"src": "18469:164:12"
											},
											{
												"body": {
													"nativeSrc": "18785:220:12",
													"nodeType": "YulBlock",
													"src": "18785:220:12",
													"statements": [
														{
															"nativeSrc": "18795:74:12",
															"nodeType": "YulAssignment",
															"src": "18795:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18861:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18861:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18866:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18866:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18802:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "18802:58:12"
																},
																"nativeSrc": "18802:67:12",
																"nodeType": "YulFunctionCall",
																"src": "18802:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18795:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18795:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18967:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18967:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4",
																	"nativeSrc": "18878:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "18878:88:12"
																},
																"nativeSrc": "18878:93:12",
																"nodeType": "YulFunctionCall",
																"src": "18878:93:12"
															},
															"nativeSrc": "18878:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "18878:93:12"
														},
														{
															"nativeSrc": "18980:19:12",
															"nodeType": "YulAssignment",
															"src": "18980:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18991:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18991:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18996:2:12",
																		"nodeType": "YulLiteral",
																		"src": "18996:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18987:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18987:3:12"
																},
																"nativeSrc": "18987:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18987:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18980:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18980:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18639:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18773:3:12",
														"nodeType": "YulTypedName",
														"src": "18773:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18781:3:12",
														"nodeType": "YulTypedName",
														"src": "18781:3:12",
														"type": ""
													}
												],
												"src": "18639:366:12"
											},
											{
												"body": {
													"nativeSrc": "19182:248:12",
													"nodeType": "YulBlock",
													"src": "19182:248:12",
													"statements": [
														{
															"nativeSrc": "19192:26:12",
															"nodeType": "YulAssignment",
															"src": "19192:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19204:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "19204:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19215:2:12",
																		"nodeType": "YulLiteral",
																		"src": "19215:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19200:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19200:3:12"
																},
																"nativeSrc": "19200:18:12",
																"nodeType": "YulFunctionCall",
																"src": "19200:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19192:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19192:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19239:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19239:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19250:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19250:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19235:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19235:3:12"
																		},
																		"nativeSrc": "19235:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19235:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19258:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "19258:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19264:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "19264:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19254:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19254:3:12"
																		},
																		"nativeSrc": "19254:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19254:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19228:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19228:6:12"
																},
																"nativeSrc": "19228:47:12",
																"nodeType": "YulFunctionCall",
																"src": "19228:47:12"
															},
															"nativeSrc": "19228:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "19228:47:12"
														},
														{
															"nativeSrc": "19284:139:12",
															"nodeType": "YulAssignment",
															"src": "19284:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19418:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "19418:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19292:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "19292:124:12"
																},
																"nativeSrc": "19292:131:12",
																"nodeType": "YulFunctionCall",
																"src": "19292:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19284:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "19284:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19011:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19162:9:12",
														"nodeType": "YulTypedName",
														"src": "19162:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19177:4:12",
														"nodeType": "YulTypedName",
														"src": "19177:4:12",
														"type": ""
													}
												],
												"src": "19011:419:12"
											},
											{
												"body": {
													"nativeSrc": "19480:147:12",
													"nodeType": "YulBlock",
													"src": "19480:147:12",
													"statements": [
														{
															"nativeSrc": "19490:25:12",
															"nodeType": "YulAssignment",
															"src": "19490:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19513:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19513:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19495:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19495:17:12"
																},
																"nativeSrc": "19495:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19495:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "19490:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19490:1:12"
																}
															]
														},
														{
															"nativeSrc": "19524:25:12",
															"nodeType": "YulAssignment",
															"src": "19524:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "19547:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19547:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "19529:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "19529:17:12"
																},
																"nativeSrc": "19529:20:12",
																"nodeType": "YulFunctionCall",
																"src": "19529:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "19524:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "19524:1:12"
																}
															]
														},
														{
															"nativeSrc": "19558:16:12",
															"nodeType": "YulAssignment",
															"src": "19558:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19569:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19569:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "19572:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19572:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19565:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19565:3:12"
																},
																"nativeSrc": "19565:9:12",
																"nodeType": "YulFunctionCall",
																"src": "19565:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "19558:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19558:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "19598:22:12",
																"nodeType": "YulBlock",
																"src": "19598:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "19600:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "19600:16:12"
																			},
																			"nativeSrc": "19600:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "19600:18:12"
																		},
																		"nativeSrc": "19600:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "19600:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "19590:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "19590:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "19593:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19593:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "19587:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "19587:2:12"
																},
																"nativeSrc": "19587:10:12",
																"nodeType": "YulFunctionCall",
																"src": "19587:10:12"
															},
															"nativeSrc": "19584:36:12",
															"nodeType": "YulIf",
															"src": "19584:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "19436:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "19467:1:12",
														"nodeType": "YulTypedName",
														"src": "19467:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "19470:1:12",
														"nodeType": "YulTypedName",
														"src": "19470:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "19476:3:12",
														"nodeType": "YulTypedName",
														"src": "19476:3:12",
														"type": ""
													}
												],
												"src": "19436:191:12"
											},
											{
												"body": {
													"nativeSrc": "19739:62:12",
													"nodeType": "YulBlock",
													"src": "19739:62:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19761:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "19761:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19769:1:12",
																				"nodeType": "YulLiteral",
																				"src": "19769:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19757:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "19757:3:12"
																		},
																		"nativeSrc": "19757:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "19757:14:12"
																	},
																	{
																		"hexValue": "5374616b65207374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "19773:20:12",
																		"nodeType": "YulLiteral",
																		"src": "19773:20:12",
																		"type": "",
																		"value": "Stake still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19750:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "19750:6:12"
																},
																"nativeSrc": "19750:44:12",
																"nodeType": "YulFunctionCall",
																"src": "19750:44:12"
															},
															"nativeSrc": "19750:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "19750:44:12"
														}
													]
												},
												"name": "store_literal_in_memory_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc",
												"nativeSrc": "19633:168:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19731:6:12",
														"nodeType": "YulTypedName",
														"src": "19731:6:12",
														"type": ""
													}
												],
												"src": "19633:168:12"
											},
											{
												"body": {
													"nativeSrc": "19953:220:12",
													"nodeType": "YulBlock",
													"src": "19953:220:12",
													"statements": [
														{
															"nativeSrc": "19963:74:12",
															"nodeType": "YulAssignment",
															"src": "19963:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20029:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20029:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20034:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20034:2:12",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19970:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "19970:58:12"
																},
																"nativeSrc": "19970:67:12",
																"nodeType": "YulFunctionCall",
																"src": "19970:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19963:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19963:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20135:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20135:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc",
																	"nativeSrc": "20046:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "20046:88:12"
																},
																"nativeSrc": "20046:93:12",
																"nodeType": "YulFunctionCall",
																"src": "20046:93:12"
															},
															"nativeSrc": "20046:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "20046:93:12"
														},
														{
															"nativeSrc": "20148:19:12",
															"nodeType": "YulAssignment",
															"src": "20148:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20159:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "20159:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20164:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20164:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20155:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20155:3:12"
																},
																"nativeSrc": "20155:12:12",
																"nodeType": "YulFunctionCall",
																"src": "20155:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20148:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20148:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19807:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19941:3:12",
														"nodeType": "YulTypedName",
														"src": "19941:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19949:3:12",
														"nodeType": "YulTypedName",
														"src": "19949:3:12",
														"type": ""
													}
												],
												"src": "19807:366:12"
											},
											{
												"body": {
													"nativeSrc": "20350:248:12",
													"nodeType": "YulBlock",
													"src": "20350:248:12",
													"statements": [
														{
															"nativeSrc": "20360:26:12",
															"nodeType": "YulAssignment",
															"src": "20360:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20372:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20372:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20383:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20383:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20368:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20368:3:12"
																},
																"nativeSrc": "20368:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20368:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20360:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20360:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20407:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20407:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20418:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20418:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20403:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20403:3:12"
																		},
																		"nativeSrc": "20403:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20403:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20426:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "20426:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20432:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20432:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20422:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20422:3:12"
																		},
																		"nativeSrc": "20422:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20422:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20396:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "20396:6:12"
																},
																"nativeSrc": "20396:47:12",
																"nodeType": "YulFunctionCall",
																"src": "20396:47:12"
															},
															"nativeSrc": "20396:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "20396:47:12"
														},
														{
															"nativeSrc": "20452:139:12",
															"nodeType": "YulAssignment",
															"src": "20452:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20586:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "20586:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20460:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "20460:124:12"
																},
																"nativeSrc": "20460:131:12",
																"nodeType": "YulFunctionCall",
																"src": "20460:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20452:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20452:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20179:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20330:9:12",
														"nodeType": "YulTypedName",
														"src": "20330:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20345:4:12",
														"nodeType": "YulTypedName",
														"src": "20345:4:12",
														"type": ""
													}
												],
												"src": "20179:419:12"
											},
											{
												"body": {
													"nativeSrc": "20730:206:12",
													"nodeType": "YulBlock",
													"src": "20730:206:12",
													"statements": [
														{
															"nativeSrc": "20740:26:12",
															"nodeType": "YulAssignment",
															"src": "20740:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20752:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "20752:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20763:2:12",
																		"nodeType": "YulLiteral",
																		"src": "20763:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20748:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "20748:3:12"
																},
																"nativeSrc": "20748:18:12",
																"nodeType": "YulFunctionCall",
																"src": "20748:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20740:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "20740:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20820:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20820:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20833:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20833:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20844:1:12",
																				"nodeType": "YulLiteral",
																				"src": "20844:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20829:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20829:3:12"
																		},
																		"nativeSrc": "20829:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20829:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20776:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20776:43:12"
																},
																"nativeSrc": "20776:71:12",
																"nodeType": "YulFunctionCall",
																"src": "20776:71:12"
															},
															"nativeSrc": "20776:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "20776:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20901:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "20901:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20914:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "20914:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20925:2:12",
																				"nodeType": "YulLiteral",
																				"src": "20925:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20910:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "20910:3:12"
																		},
																		"nativeSrc": "20910:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "20910:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20857:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "20857:43:12"
																},
																"nativeSrc": "20857:72:12",
																"nodeType": "YulFunctionCall",
																"src": "20857:72:12"
															},
															"nativeSrc": "20857:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "20857:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20604:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20694:9:12",
														"nodeType": "YulTypedName",
														"src": "20694:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20706:6:12",
														"nodeType": "YulTypedName",
														"src": "20706:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20714:6:12",
														"nodeType": "YulTypedName",
														"src": "20714:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20725:4:12",
														"nodeType": "YulTypedName",
														"src": "20725:4:12",
														"type": ""
													}
												],
												"src": "20604:332:12"
											},
											{
												"body": {
													"nativeSrc": "21048:58:12",
													"nodeType": "YulBlock",
													"src": "21048:58:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21070:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "21070:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21078:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21078:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21066:3:12"
																		},
																		"nativeSrc": "21066:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21066:14:12"
																	},
																	{
																		"hexValue": "4e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nativeSrc": "21082:16:12",
																		"nodeType": "YulLiteral",
																		"src": "21082:16:12",
																		"type": "",
																		"value": "Not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21059:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21059:6:12"
																},
																"nativeSrc": "21059:40:12",
																"nodeType": "YulFunctionCall",
																"src": "21059:40:12"
															},
															"nativeSrc": "21059:40:12",
															"nodeType": "YulExpressionStatement",
															"src": "21059:40:12"
														}
													]
												},
												"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
												"nativeSrc": "20942:164:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21040:6:12",
														"nodeType": "YulTypedName",
														"src": "21040:6:12",
														"type": ""
													}
												],
												"src": "20942:164:12"
											},
											{
												"body": {
													"nativeSrc": "21258:220:12",
													"nodeType": "YulBlock",
													"src": "21258:220:12",
													"statements": [
														{
															"nativeSrc": "21268:74:12",
															"nodeType": "YulAssignment",
															"src": "21268:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21334:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21334:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21339:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21339:2:12",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21275:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "21275:58:12"
																},
																"nativeSrc": "21275:67:12",
																"nodeType": "YulFunctionCall",
																"src": "21275:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21268:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21268:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21440:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21440:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																	"nativeSrc": "21351:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "21351:88:12"
																},
																"nativeSrc": "21351:93:12",
																"nodeType": "YulFunctionCall",
																"src": "21351:93:12"
															},
															"nativeSrc": "21351:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "21351:93:12"
														},
														{
															"nativeSrc": "21453:19:12",
															"nodeType": "YulAssignment",
															"src": "21453:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21464:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "21464:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21469:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21469:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21460:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21460:3:12"
																},
																"nativeSrc": "21460:12:12",
																"nodeType": "YulFunctionCall",
																"src": "21460:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21453:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21453:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21112:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21246:3:12",
														"nodeType": "YulTypedName",
														"src": "21246:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21254:3:12",
														"nodeType": "YulTypedName",
														"src": "21254:3:12",
														"type": ""
													}
												],
												"src": "21112:366:12"
											},
											{
												"body": {
													"nativeSrc": "21655:248:12",
													"nodeType": "YulBlock",
													"src": "21655:248:12",
													"statements": [
														{
															"nativeSrc": "21665:26:12",
															"nodeType": "YulAssignment",
															"src": "21665:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21677:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "21677:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21688:2:12",
																		"nodeType": "YulLiteral",
																		"src": "21688:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21673:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "21673:3:12"
																},
																"nativeSrc": "21673:18:12",
																"nodeType": "YulFunctionCall",
																"src": "21673:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21665:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21665:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21712:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21712:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21723:1:12",
																				"nodeType": "YulLiteral",
																				"src": "21723:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21708:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21708:3:12"
																		},
																		"nativeSrc": "21708:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21708:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21731:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "21731:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21737:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "21737:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21727:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "21727:3:12"
																		},
																		"nativeSrc": "21727:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "21727:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21701:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "21701:6:12"
																},
																"nativeSrc": "21701:47:12",
																"nodeType": "YulFunctionCall",
																"src": "21701:47:12"
															},
															"nativeSrc": "21701:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "21701:47:12"
														},
														{
															"nativeSrc": "21757:139:12",
															"nodeType": "YulAssignment",
															"src": "21757:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21891:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "21891:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21765:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "21765:124:12"
																},
																"nativeSrc": "21765:131:12",
																"nodeType": "YulFunctionCall",
																"src": "21765:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21757:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "21757:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21484:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21635:9:12",
														"nodeType": "YulTypedName",
														"src": "21635:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21650:4:12",
														"nodeType": "YulTypedName",
														"src": "21650:4:12",
														"type": ""
													}
												],
												"src": "21484:419:12"
											},
											{
												"body": {
													"nativeSrc": "22015:61:12",
													"nodeType": "YulBlock",
													"src": "22015:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22037:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "22037:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22045:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22045:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22033:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22033:3:12"
																		},
																		"nativeSrc": "22033:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22033:14:12"
																	},
																	{
																		"hexValue": "4e6f206665657320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "22049:19:12",
																		"nodeType": "YulLiteral",
																		"src": "22049:19:12",
																		"type": "",
																		"value": "No fees available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22026:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22026:6:12"
																},
																"nativeSrc": "22026:43:12",
																"nodeType": "YulFunctionCall",
																"src": "22026:43:12"
															},
															"nativeSrc": "22026:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "22026:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31",
												"nativeSrc": "21909:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22007:6:12",
														"nodeType": "YulTypedName",
														"src": "22007:6:12",
														"type": ""
													}
												],
												"src": "21909:167:12"
											},
											{
												"body": {
													"nativeSrc": "22228:220:12",
													"nodeType": "YulBlock",
													"src": "22228:220:12",
													"statements": [
														{
															"nativeSrc": "22238:74:12",
															"nodeType": "YulAssignment",
															"src": "22238:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22304:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22304:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22309:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22309:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22245:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "22245:58:12"
																},
																"nativeSrc": "22245:67:12",
																"nodeType": "YulFunctionCall",
																"src": "22245:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22238:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22238:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22410:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22410:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31",
																	"nativeSrc": "22321:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "22321:88:12"
																},
																"nativeSrc": "22321:93:12",
																"nodeType": "YulFunctionCall",
																"src": "22321:93:12"
															},
															"nativeSrc": "22321:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "22321:93:12"
														},
														{
															"nativeSrc": "22423:19:12",
															"nodeType": "YulAssignment",
															"src": "22423:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22434:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "22434:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22439:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22439:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22430:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22430:3:12"
																},
																"nativeSrc": "22430:12:12",
																"nodeType": "YulFunctionCall",
																"src": "22430:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22423:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22423:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22082:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22216:3:12",
														"nodeType": "YulTypedName",
														"src": "22216:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22224:3:12",
														"nodeType": "YulTypedName",
														"src": "22224:3:12",
														"type": ""
													}
												],
												"src": "22082:366:12"
											},
											{
												"body": {
													"nativeSrc": "22625:248:12",
													"nodeType": "YulBlock",
													"src": "22625:248:12",
													"statements": [
														{
															"nativeSrc": "22635:26:12",
															"nodeType": "YulAssignment",
															"src": "22635:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22647:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "22647:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22658:2:12",
																		"nodeType": "YulLiteral",
																		"src": "22658:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22643:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "22643:3:12"
																},
																"nativeSrc": "22643:18:12",
																"nodeType": "YulFunctionCall",
																"src": "22643:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22635:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22635:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22682:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22682:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22693:1:12",
																				"nodeType": "YulLiteral",
																				"src": "22693:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22678:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22678:3:12"
																		},
																		"nativeSrc": "22678:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22678:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22701:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "22701:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22707:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "22707:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22697:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "22697:3:12"
																		},
																		"nativeSrc": "22697:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "22697:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22671:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "22671:6:12"
																},
																"nativeSrc": "22671:47:12",
																"nodeType": "YulFunctionCall",
																"src": "22671:47:12"
															},
															"nativeSrc": "22671:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "22671:47:12"
														},
														{
															"nativeSrc": "22727:139:12",
															"nodeType": "YulAssignment",
															"src": "22727:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22861:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "22861:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22735:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "22735:124:12"
																},
																"nativeSrc": "22735:131:12",
																"nodeType": "YulFunctionCall",
																"src": "22735:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22727:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "22727:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22454:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22605:9:12",
														"nodeType": "YulTypedName",
														"src": "22605:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22620:4:12",
														"nodeType": "YulTypedName",
														"src": "22620:4:12",
														"type": ""
													}
												],
												"src": "22454:419:12"
											},
											{
												"body": {
													"nativeSrc": "23005:206:12",
													"nodeType": "YulBlock",
													"src": "23005:206:12",
													"statements": [
														{
															"nativeSrc": "23015:26:12",
															"nodeType": "YulAssignment",
															"src": "23015:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23027:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23027:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23038:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23038:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23023:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23023:3:12"
																},
																"nativeSrc": "23023:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23023:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23015:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23015:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23095:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23095:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23108:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23108:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23119:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23119:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23104:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23104:3:12"
																		},
																		"nativeSrc": "23104:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23104:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23051:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23051:43:12"
																},
																"nativeSrc": "23051:71:12",
																"nodeType": "YulFunctionCall",
																"src": "23051:71:12"
															},
															"nativeSrc": "23051:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "23051:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23176:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "23176:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23189:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23189:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23200:2:12",
																				"nodeType": "YulLiteral",
																				"src": "23200:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23185:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23185:3:12"
																		},
																		"nativeSrc": "23185:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23185:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23132:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "23132:43:12"
																},
																"nativeSrc": "23132:72:12",
																"nodeType": "YulFunctionCall",
																"src": "23132:72:12"
															},
															"nativeSrc": "23132:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "23132:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "22879:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22969:9:12",
														"nodeType": "YulTypedName",
														"src": "22969:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22981:6:12",
														"nodeType": "YulTypedName",
														"src": "22981:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22989:6:12",
														"nodeType": "YulTypedName",
														"src": "22989:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23000:4:12",
														"nodeType": "YulTypedName",
														"src": "23000:4:12",
														"type": ""
													}
												],
												"src": "22879:332:12"
											},
											{
												"body": {
													"nativeSrc": "23323:56:12",
													"nodeType": "YulBlock",
													"src": "23323:56:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23345:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "23345:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23353:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23353:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23341:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23341:3:12"
																		},
																		"nativeSrc": "23341:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23341:14:12"
																	},
																	{
																		"hexValue": "46656520746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "23357:14:12",
																		"nodeType": "YulLiteral",
																		"src": "23357:14:12",
																		"type": "",
																		"value": "Fee too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23334:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23334:6:12"
																},
																"nativeSrc": "23334:38:12",
																"nodeType": "YulFunctionCall",
																"src": "23334:38:12"
															},
															"nativeSrc": "23334:38:12",
															"nodeType": "YulExpressionStatement",
															"src": "23334:38:12"
														}
													]
												},
												"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
												"nativeSrc": "23217:162:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23315:6:12",
														"nodeType": "YulTypedName",
														"src": "23315:6:12",
														"type": ""
													}
												],
												"src": "23217:162:12"
											},
											{
												"body": {
													"nativeSrc": "23531:220:12",
													"nodeType": "YulBlock",
													"src": "23531:220:12",
													"statements": [
														{
															"nativeSrc": "23541:74:12",
															"nodeType": "YulAssignment",
															"src": "23541:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23607:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23607:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23612:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23612:2:12",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23548:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "23548:58:12"
																},
																"nativeSrc": "23548:67:12",
																"nodeType": "YulFunctionCall",
																"src": "23548:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23541:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23541:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23713:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23713:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																	"nativeSrc": "23624:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "23624:88:12"
																},
																"nativeSrc": "23624:93:12",
																"nodeType": "YulFunctionCall",
																"src": "23624:93:12"
															},
															"nativeSrc": "23624:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "23624:93:12"
														},
														{
															"nativeSrc": "23726:19:12",
															"nodeType": "YulAssignment",
															"src": "23726:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23737:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "23737:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23742:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23742:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23733:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23733:3:12"
																},
																"nativeSrc": "23733:12:12",
																"nodeType": "YulFunctionCall",
																"src": "23733:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23726:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23726:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23385:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "23519:3:12",
														"nodeType": "YulTypedName",
														"src": "23519:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23527:3:12",
														"nodeType": "YulTypedName",
														"src": "23527:3:12",
														"type": ""
													}
												],
												"src": "23385:366:12"
											},
											{
												"body": {
													"nativeSrc": "23928:248:12",
													"nodeType": "YulBlock",
													"src": "23928:248:12",
													"statements": [
														{
															"nativeSrc": "23938:26:12",
															"nodeType": "YulAssignment",
															"src": "23938:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23950:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "23950:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23961:2:12",
																		"nodeType": "YulLiteral",
																		"src": "23961:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23946:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "23946:3:12"
																},
																"nativeSrc": "23946:18:12",
																"nodeType": "YulFunctionCall",
																"src": "23946:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23938:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "23938:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23985:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "23985:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23996:1:12",
																				"nodeType": "YulLiteral",
																				"src": "23996:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23981:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "23981:3:12"
																		},
																		"nativeSrc": "23981:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "23981:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24004:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24004:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24010:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24010:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24000:3:12"
																		},
																		"nativeSrc": "24000:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24000:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23974:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "23974:6:12"
																},
																"nativeSrc": "23974:47:12",
																"nodeType": "YulFunctionCall",
																"src": "23974:47:12"
															},
															"nativeSrc": "23974:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "23974:47:12"
														},
														{
															"nativeSrc": "24030:139:12",
															"nodeType": "YulAssignment",
															"src": "24030:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24164:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "24164:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24038:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "24038:124:12"
																},
																"nativeSrc": "24038:131:12",
																"nodeType": "YulFunctionCall",
																"src": "24038:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24030:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24030:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23757:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23908:9:12",
														"nodeType": "YulTypedName",
														"src": "23908:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23923:4:12",
														"nodeType": "YulTypedName",
														"src": "23923:4:12",
														"type": ""
													}
												],
												"src": "23757:419:12"
											},
											{
												"body": {
													"nativeSrc": "24288:61:12",
													"nodeType": "YulBlock",
													"src": "24288:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24310:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "24310:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24318:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24318:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24306:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24306:3:12"
																		},
																		"nativeSrc": "24306:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24306:14:12"
																	},
																	{
																		"hexValue": "496e76616c696420636f6c6c6563746f72",
																		"kind": "string",
																		"nativeSrc": "24322:19:12",
																		"nodeType": "YulLiteral",
																		"src": "24322:19:12",
																		"type": "",
																		"value": "Invalid collector"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24299:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24299:6:12"
																},
																"nativeSrc": "24299:43:12",
																"nodeType": "YulFunctionCall",
																"src": "24299:43:12"
															},
															"nativeSrc": "24299:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "24299:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d",
												"nativeSrc": "24182:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24280:6:12",
														"nodeType": "YulTypedName",
														"src": "24280:6:12",
														"type": ""
													}
												],
												"src": "24182:167:12"
											},
											{
												"body": {
													"nativeSrc": "24501:220:12",
													"nodeType": "YulBlock",
													"src": "24501:220:12",
													"statements": [
														{
															"nativeSrc": "24511:74:12",
															"nodeType": "YulAssignment",
															"src": "24511:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24577:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24577:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24582:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24582:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24518:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "24518:58:12"
																},
																"nativeSrc": "24518:67:12",
																"nodeType": "YulFunctionCall",
																"src": "24518:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24511:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24511:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24683:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24683:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d",
																	"nativeSrc": "24594:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "24594:88:12"
																},
																"nativeSrc": "24594:93:12",
																"nodeType": "YulFunctionCall",
																"src": "24594:93:12"
															},
															"nativeSrc": "24594:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "24594:93:12"
														},
														{
															"nativeSrc": "24696:19:12",
															"nodeType": "YulAssignment",
															"src": "24696:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24707:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "24707:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24712:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24712:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24703:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24703:3:12"
																},
																"nativeSrc": "24703:12:12",
																"nodeType": "YulFunctionCall",
																"src": "24703:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24696:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24696:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24355:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24489:3:12",
														"nodeType": "YulTypedName",
														"src": "24489:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24497:3:12",
														"nodeType": "YulTypedName",
														"src": "24497:3:12",
														"type": ""
													}
												],
												"src": "24355:366:12"
											},
											{
												"body": {
													"nativeSrc": "24898:248:12",
													"nodeType": "YulBlock",
													"src": "24898:248:12",
													"statements": [
														{
															"nativeSrc": "24908:26:12",
															"nodeType": "YulAssignment",
															"src": "24908:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24920:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "24920:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24931:2:12",
																		"nodeType": "YulLiteral",
																		"src": "24931:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24916:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "24916:3:12"
																},
																"nativeSrc": "24916:18:12",
																"nodeType": "YulFunctionCall",
																"src": "24916:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24908:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "24908:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24955:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24955:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24966:1:12",
																				"nodeType": "YulLiteral",
																				"src": "24966:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24951:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24951:3:12"
																		},
																		"nativeSrc": "24951:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24951:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24974:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "24974:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24980:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "24980:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24970:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "24970:3:12"
																		},
																		"nativeSrc": "24970:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "24970:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24944:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "24944:6:12"
																},
																"nativeSrc": "24944:47:12",
																"nodeType": "YulFunctionCall",
																"src": "24944:47:12"
															},
															"nativeSrc": "24944:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "24944:47:12"
														},
														{
															"nativeSrc": "25000:139:12",
															"nodeType": "YulAssignment",
															"src": "25000:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25134:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "25134:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25008:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "25008:124:12"
																},
																"nativeSrc": "25008:131:12",
																"nodeType": "YulFunctionCall",
																"src": "25008:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25000:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25000:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24727:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24878:9:12",
														"nodeType": "YulTypedName",
														"src": "24878:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24893:4:12",
														"nodeType": "YulTypedName",
														"src": "24893:4:12",
														"type": ""
													}
												],
												"src": "24727:419:12"
											},
											{
												"body": {
													"nativeSrc": "25278:206:12",
													"nodeType": "YulBlock",
													"src": "25278:206:12",
													"statements": [
														{
															"nativeSrc": "25288:26:12",
															"nodeType": "YulAssignment",
															"src": "25288:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25300:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "25300:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25311:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25311:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25296:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25296:3:12"
																},
																"nativeSrc": "25296:18:12",
																"nodeType": "YulFunctionCall",
																"src": "25296:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25288:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "25288:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25368:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25368:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25381:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25381:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25392:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25392:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25377:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25377:3:12"
																		},
																		"nativeSrc": "25377:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25377:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25324:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "25324:43:12"
																},
																"nativeSrc": "25324:71:12",
																"nodeType": "YulFunctionCall",
																"src": "25324:71:12"
															},
															"nativeSrc": "25324:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "25324:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25449:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "25449:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25462:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "25462:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25473:2:12",
																				"nodeType": "YulLiteral",
																				"src": "25473:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25458:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25458:3:12"
																		},
																		"nativeSrc": "25458:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25458:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25405:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "25405:43:12"
																},
																"nativeSrc": "25405:72:12",
																"nodeType": "YulFunctionCall",
																"src": "25405:72:12"
															},
															"nativeSrc": "25405:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "25405:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "25152:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25242:9:12",
														"nodeType": "YulTypedName",
														"src": "25242:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "25254:6:12",
														"nodeType": "YulTypedName",
														"src": "25254:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25262:6:12",
														"nodeType": "YulTypedName",
														"src": "25262:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25273:4:12",
														"nodeType": "YulTypedName",
														"src": "25273:4:12",
														"type": ""
													}
												],
												"src": "25152:332:12"
											},
											{
												"body": {
													"nativeSrc": "25596:67:12",
													"nodeType": "YulBlock",
													"src": "25596:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25618:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "25618:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25626:1:12",
																				"nodeType": "YulLiteral",
																				"src": "25626:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25614:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "25614:3:12"
																		},
																		"nativeSrc": "25614:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "25614:14:12"
																	},
																	{
																		"hexValue": "416d6f756e74206d75737420626520706f736974697665",
																		"kind": "string",
																		"nativeSrc": "25630:25:12",
																		"nodeType": "YulLiteral",
																		"src": "25630:25:12",
																		"type": "",
																		"value": "Amount must be positive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25607:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "25607:6:12"
																},
																"nativeSrc": "25607:49:12",
																"nodeType": "YulFunctionCall",
																"src": "25607:49:12"
															},
															"nativeSrc": "25607:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "25607:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
												"nativeSrc": "25490:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25588:6:12",
														"nodeType": "YulTypedName",
														"src": "25588:6:12",
														"type": ""
													}
												],
												"src": "25490:173:12"
											},
											{
												"body": {
													"nativeSrc": "25815:220:12",
													"nodeType": "YulBlock",
													"src": "25815:220:12",
													"statements": [
														{
															"nativeSrc": "25825:74:12",
															"nodeType": "YulAssignment",
															"src": "25825:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25891:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25891:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25896:2:12",
																		"nodeType": "YulLiteral",
																		"src": "25896:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25832:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "25832:58:12"
																},
																"nativeSrc": "25832:67:12",
																"nodeType": "YulFunctionCall",
																"src": "25832:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25825:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "25825:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25997:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "25997:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																	"nativeSrc": "25908:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "25908:88:12"
																},
																"nativeSrc": "25908:93:12",
																"nodeType": "YulFunctionCall",
																"src": "25908:93:12"
															},
															"nativeSrc": "25908:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "25908:93:12"
														},
														{
															"nativeSrc": "26010:19:12",
															"nodeType": "YulAssignment",
															"src": "26010:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26021:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26021:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26026:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26026:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26017:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26017:3:12"
																},
																"nativeSrc": "26017:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26017:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26010:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26010:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25669:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25803:3:12",
														"nodeType": "YulTypedName",
														"src": "25803:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25811:3:12",
														"nodeType": "YulTypedName",
														"src": "25811:3:12",
														"type": ""
													}
												],
												"src": "25669:366:12"
											},
											{
												"body": {
													"nativeSrc": "26212:248:12",
													"nodeType": "YulBlock",
													"src": "26212:248:12",
													"statements": [
														{
															"nativeSrc": "26222:26:12",
															"nodeType": "YulAssignment",
															"src": "26222:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26234:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "26234:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26245:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26245:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26230:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26230:3:12"
																},
																"nativeSrc": "26230:18:12",
																"nodeType": "YulFunctionCall",
																"src": "26230:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26222:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26222:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26269:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26269:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26280:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26280:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26265:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26265:3:12"
																		},
																		"nativeSrc": "26265:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26265:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26288:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "26288:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26294:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "26294:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26284:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26284:3:12"
																		},
																		"nativeSrc": "26284:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26284:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26258:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26258:6:12"
																},
																"nativeSrc": "26258:47:12",
																"nodeType": "YulFunctionCall",
																"src": "26258:47:12"
															},
															"nativeSrc": "26258:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "26258:47:12"
														},
														{
															"nativeSrc": "26314:139:12",
															"nodeType": "YulAssignment",
															"src": "26314:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26448:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "26448:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26322:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "26322:124:12"
																},
																"nativeSrc": "26322:131:12",
																"nodeType": "YulFunctionCall",
																"src": "26322:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26314:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "26314:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26041:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26192:9:12",
														"nodeType": "YulTypedName",
														"src": "26192:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26207:4:12",
														"nodeType": "YulTypedName",
														"src": "26207:4:12",
														"type": ""
													}
												],
												"src": "26041:419:12"
											},
											{
												"body": {
													"nativeSrc": "26572:60:12",
													"nodeType": "YulBlock",
													"src": "26572:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26594:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "26594:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26602:1:12",
																				"nodeType": "YulLiteral",
																				"src": "26602:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26590:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "26590:3:12"
																		},
																		"nativeSrc": "26590:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "26590:14:12"
																	},
																	{
																		"hexValue": "5061636b61676520696e616374697665",
																		"kind": "string",
																		"nativeSrc": "26606:18:12",
																		"nodeType": "YulLiteral",
																		"src": "26606:18:12",
																		"type": "",
																		"value": "Package inactive"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26583:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "26583:6:12"
																},
																"nativeSrc": "26583:42:12",
																"nodeType": "YulFunctionCall",
																"src": "26583:42:12"
															},
															"nativeSrc": "26583:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "26583:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6",
												"nativeSrc": "26466:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26564:6:12",
														"nodeType": "YulTypedName",
														"src": "26564:6:12",
														"type": ""
													}
												],
												"src": "26466:166:12"
											},
											{
												"body": {
													"nativeSrc": "26784:220:12",
													"nodeType": "YulBlock",
													"src": "26784:220:12",
													"statements": [
														{
															"nativeSrc": "26794:74:12",
															"nodeType": "YulAssignment",
															"src": "26794:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26860:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26860:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26865:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26801:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "26801:58:12"
																},
																"nativeSrc": "26801:67:12",
																"nodeType": "YulFunctionCall",
																"src": "26801:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26794:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26794:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26966:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26966:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6",
																	"nativeSrc": "26877:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "26877:88:12"
																},
																"nativeSrc": "26877:93:12",
																"nodeType": "YulFunctionCall",
																"src": "26877:93:12"
															},
															"nativeSrc": "26877:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "26877:93:12"
														},
														{
															"nativeSrc": "26979:19:12",
															"nodeType": "YulAssignment",
															"src": "26979:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26990:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "26990:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26995:2:12",
																		"nodeType": "YulLiteral",
																		"src": "26995:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26986:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26986:3:12"
																},
																"nativeSrc": "26986:12:12",
																"nodeType": "YulFunctionCall",
																"src": "26986:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26979:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "26979:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26638:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26772:3:12",
														"nodeType": "YulTypedName",
														"src": "26772:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26780:3:12",
														"nodeType": "YulTypedName",
														"src": "26780:3:12",
														"type": ""
													}
												],
												"src": "26638:366:12"
											},
											{
												"body": {
													"nativeSrc": "27181:248:12",
													"nodeType": "YulBlock",
													"src": "27181:248:12",
													"statements": [
														{
															"nativeSrc": "27191:26:12",
															"nodeType": "YulAssignment",
															"src": "27191:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27203:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "27203:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27214:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27214:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27199:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27199:3:12"
																},
																"nativeSrc": "27199:18:12",
																"nodeType": "YulFunctionCall",
																"src": "27199:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27191:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27191:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27238:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27238:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27249:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27249:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27234:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27234:3:12"
																		},
																		"nativeSrc": "27234:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27234:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27257:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "27257:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27263:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "27263:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27253:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27253:3:12"
																		},
																		"nativeSrc": "27253:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27253:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27227:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27227:6:12"
																},
																"nativeSrc": "27227:47:12",
																"nodeType": "YulFunctionCall",
																"src": "27227:47:12"
															},
															"nativeSrc": "27227:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "27227:47:12"
														},
														{
															"nativeSrc": "27283:139:12",
															"nodeType": "YulAssignment",
															"src": "27283:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27417:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "27417:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27291:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "27291:124:12"
																},
																"nativeSrc": "27291:131:12",
																"nodeType": "YulFunctionCall",
																"src": "27291:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27283:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "27283:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27010:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27161:9:12",
														"nodeType": "YulTypedName",
														"src": "27161:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27176:4:12",
														"nodeType": "YulTypedName",
														"src": "27176:4:12",
														"type": ""
													}
												],
												"src": "27010:419:12"
											},
											{
												"body": {
													"nativeSrc": "27541:69:12",
													"nodeType": "YulBlock",
													"src": "27541:69:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27563:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "27563:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27571:1:12",
																				"nodeType": "YulLiteral",
																				"src": "27571:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27559:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "27559:3:12"
																		},
																		"nativeSrc": "27559:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "27559:14:12"
																	},
																	{
																		"hexValue": "496e73756666696369656e74207374616b6520616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "27575:27:12",
																		"nodeType": "YulLiteral",
																		"src": "27575:27:12",
																		"type": "",
																		"value": "Insufficient stake amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "27552:6:12"
																},
																"nativeSrc": "27552:51:12",
																"nodeType": "YulFunctionCall",
																"src": "27552:51:12"
															},
															"nativeSrc": "27552:51:12",
															"nodeType": "YulExpressionStatement",
															"src": "27552:51:12"
														}
													]
												},
												"name": "store_literal_in_memory_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5",
												"nativeSrc": "27435:175:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27533:6:12",
														"nodeType": "YulTypedName",
														"src": "27533:6:12",
														"type": ""
													}
												],
												"src": "27435:175:12"
											},
											{
												"body": {
													"nativeSrc": "27762:220:12",
													"nodeType": "YulBlock",
													"src": "27762:220:12",
													"statements": [
														{
															"nativeSrc": "27772:74:12",
															"nodeType": "YulAssignment",
															"src": "27772:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27838:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27838:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27843:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27843:2:12",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27779:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "27779:58:12"
																},
																"nativeSrc": "27779:67:12",
																"nodeType": "YulFunctionCall",
																"src": "27779:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27772:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27772:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27944:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27944:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5",
																	"nativeSrc": "27855:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "27855:88:12"
																},
																"nativeSrc": "27855:93:12",
																"nodeType": "YulFunctionCall",
																"src": "27855:93:12"
															},
															"nativeSrc": "27855:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "27855:93:12"
														},
														{
															"nativeSrc": "27957:19:12",
															"nodeType": "YulAssignment",
															"src": "27957:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27968:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "27968:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27973:2:12",
																		"nodeType": "YulLiteral",
																		"src": "27973:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27964:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27964:3:12"
																},
																"nativeSrc": "27964:12:12",
																"nodeType": "YulFunctionCall",
																"src": "27964:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27957:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "27957:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27616:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27750:3:12",
														"nodeType": "YulTypedName",
														"src": "27750:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27758:3:12",
														"nodeType": "YulTypedName",
														"src": "27758:3:12",
														"type": ""
													}
												],
												"src": "27616:366:12"
											},
											{
												"body": {
													"nativeSrc": "28159:248:12",
													"nodeType": "YulBlock",
													"src": "28159:248:12",
													"statements": [
														{
															"nativeSrc": "28169:26:12",
															"nodeType": "YulAssignment",
															"src": "28169:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28181:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "28181:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28192:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28192:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28177:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28177:3:12"
																},
																"nativeSrc": "28177:18:12",
																"nodeType": "YulFunctionCall",
																"src": "28177:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28169:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28169:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28216:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28216:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28227:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28227:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28212:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28212:3:12"
																		},
																		"nativeSrc": "28212:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28212:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "28235:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "28235:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "28241:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "28241:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "28231:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28231:3:12"
																		},
																		"nativeSrc": "28231:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28231:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28205:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28205:6:12"
																},
																"nativeSrc": "28205:47:12",
																"nodeType": "YulFunctionCall",
																"src": "28205:47:12"
															},
															"nativeSrc": "28205:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "28205:47:12"
														},
														{
															"nativeSrc": "28261:139:12",
															"nodeType": "YulAssignment",
															"src": "28261:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "28395:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "28395:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28269:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "28269:124:12"
																},
																"nativeSrc": "28269:131:12",
																"nodeType": "YulFunctionCall",
																"src": "28269:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28261:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "28261:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27988:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28139:9:12",
														"nodeType": "YulTypedName",
														"src": "28139:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28154:4:12",
														"nodeType": "YulTypedName",
														"src": "28154:4:12",
														"type": ""
													}
												],
												"src": "27988:419:12"
											},
											{
												"body": {
													"nativeSrc": "28519:64:12",
													"nodeType": "YulBlock",
													"src": "28519:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "28541:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "28541:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28549:1:12",
																				"nodeType": "YulLiteral",
																				"src": "28549:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28537:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "28537:3:12"
																		},
																		"nativeSrc": "28537:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "28537:14:12"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "28553:22:12",
																		"nodeType": "YulLiteral",
																		"src": "28553:22:12",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "28530:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "28530:6:12"
																},
																"nativeSrc": "28530:46:12",
																"nodeType": "YulFunctionCall",
																"src": "28530:46:12"
															},
															"nativeSrc": "28530:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "28530:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
												"nativeSrc": "28413:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "28511:6:12",
														"nodeType": "YulTypedName",
														"src": "28511:6:12",
														"type": ""
													}
												],
												"src": "28413:170:12"
											},
											{
												"body": {
													"nativeSrc": "28735:220:12",
													"nodeType": "YulBlock",
													"src": "28735:220:12",
													"statements": [
														{
															"nativeSrc": "28745:74:12",
															"nodeType": "YulAssignment",
															"src": "28745:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28811:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28811:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28816:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28816:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "28752:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "28752:58:12"
																},
																"nativeSrc": "28752:67:12",
																"nodeType": "YulFunctionCall",
																"src": "28752:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "28745:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28745:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28917:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28917:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																	"nativeSrc": "28828:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "28828:88:12"
																},
																"nativeSrc": "28828:93:12",
																"nodeType": "YulFunctionCall",
																"src": "28828:93:12"
															},
															"nativeSrc": "28828:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "28828:93:12"
														},
														{
															"nativeSrc": "28930:19:12",
															"nodeType": "YulAssignment",
															"src": "28930:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "28941:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "28941:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28946:2:12",
																		"nodeType": "YulLiteral",
																		"src": "28946:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28937:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28937:3:12"
																},
																"nativeSrc": "28937:12:12",
																"nodeType": "YulFunctionCall",
																"src": "28937:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "28930:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "28930:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "28589:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "28723:3:12",
														"nodeType": "YulTypedName",
														"src": "28723:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "28731:3:12",
														"nodeType": "YulTypedName",
														"src": "28731:3:12",
														"type": ""
													}
												],
												"src": "28589:366:12"
											},
											{
												"body": {
													"nativeSrc": "29132:248:12",
													"nodeType": "YulBlock",
													"src": "29132:248:12",
													"statements": [
														{
															"nativeSrc": "29142:26:12",
															"nodeType": "YulAssignment",
															"src": "29142:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "29154:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "29154:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29165:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29165:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29150:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29150:3:12"
																},
																"nativeSrc": "29150:18:12",
																"nodeType": "YulFunctionCall",
																"src": "29150:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29142:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29142:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "29189:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29189:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29200:1:12",
																				"nodeType": "YulLiteral",
																				"src": "29200:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29185:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29185:3:12"
																		},
																		"nativeSrc": "29185:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29185:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "29208:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "29208:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "29214:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "29214:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "29204:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29204:3:12"
																		},
																		"nativeSrc": "29204:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29204:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29178:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "29178:6:12"
																},
																"nativeSrc": "29178:47:12",
																"nodeType": "YulFunctionCall",
																"src": "29178:47:12"
															},
															"nativeSrc": "29178:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "29178:47:12"
														},
														{
															"nativeSrc": "29234:139:12",
															"nodeType": "YulAssignment",
															"src": "29234:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "29368:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "29368:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29242:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "29242:124:12"
																},
																"nativeSrc": "29242:131:12",
																"nodeType": "YulFunctionCall",
																"src": "29242:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "29234:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "29234:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "28961:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "29112:9:12",
														"nodeType": "YulTypedName",
														"src": "29112:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "29127:4:12",
														"nodeType": "YulTypedName",
														"src": "29127:4:12",
														"type": ""
													}
												],
												"src": "28961:419:12"
											},
											{
												"body": {
													"nativeSrc": "29492:75:12",
													"nodeType": "YulBlock",
													"src": "29492:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "29514:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "29514:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "29522:1:12",
																				"nodeType": "YulLiteral",
																				"src": "29522:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "29510:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "29510:3:12"
																		},
																		"nativeSrc": "29510:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "29510:14:12"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "29526:33:12",
																		"nodeType": "YulLiteral",
																		"src": "29526:33:12",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "29503:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "29503:6:12"
																},
																"nativeSrc": "29503:57:12",
																"nodeType": "YulFunctionCall",
																"src": "29503:57:12"
															},
															"nativeSrc": "29503:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "29503:57:12"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "29386:181:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "29484:6:12",
														"nodeType": "YulTypedName",
														"src": "29484:6:12",
														"type": ""
													}
												],
												"src": "29386:181:12"
											},
											{
												"body": {
													"nativeSrc": "29719:220:12",
													"nodeType": "YulBlock",
													"src": "29719:220:12",
													"statements": [
														{
															"nativeSrc": "29729:74:12",
															"nodeType": "YulAssignment",
															"src": "29729:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29795:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29795:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29800:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29800:2:12",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "29736:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "29736:58:12"
																},
																"nativeSrc": "29736:67:12",
																"nodeType": "YulFunctionCall",
																"src": "29736:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "29729:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29729:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29901:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29901:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "29812:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "29812:88:12"
																},
																"nativeSrc": "29812:93:12",
																"nodeType": "YulFunctionCall",
																"src": "29812:93:12"
															},
															"nativeSrc": "29812:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "29812:93:12"
														},
														{
															"nativeSrc": "29914:19:12",
															"nodeType": "YulAssignment",
															"src": "29914:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "29925:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "29925:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "29930:2:12",
																		"nodeType": "YulLiteral",
																		"src": "29930:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "29921:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29921:3:12"
																},
																"nativeSrc": "29921:12:12",
																"nodeType": "YulFunctionCall",
																"src": "29921:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "29914:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "29914:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "29573:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "29707:3:12",
														"nodeType": "YulTypedName",
														"src": "29707:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "29715:3:12",
														"nodeType": "YulTypedName",
														"src": "29715:3:12",
														"type": ""
													}
												],
												"src": "29573:366:12"
											},
											{
												"body": {
													"nativeSrc": "30116:248:12",
													"nodeType": "YulBlock",
													"src": "30116:248:12",
													"statements": [
														{
															"nativeSrc": "30126:26:12",
															"nodeType": "YulAssignment",
															"src": "30126:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "30138:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "30138:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30149:2:12",
																		"nodeType": "YulLiteral",
																		"src": "30149:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "30134:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30134:3:12"
																},
																"nativeSrc": "30134:18:12",
																"nodeType": "YulFunctionCall",
																"src": "30134:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30126:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "30126:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "30173:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30173:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "30184:1:12",
																				"nodeType": "YulLiteral",
																				"src": "30184:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "30169:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30169:3:12"
																		},
																		"nativeSrc": "30169:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30169:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "30192:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "30192:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "30198:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "30198:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "30188:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "30188:3:12"
																		},
																		"nativeSrc": "30188:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30188:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30162:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30162:6:12"
																},
																"nativeSrc": "30162:47:12",
																"nodeType": "YulFunctionCall",
																"src": "30162:47:12"
															},
															"nativeSrc": "30162:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "30162:47:12"
														},
														{
															"nativeSrc": "30218:139:12",
															"nodeType": "YulAssignment",
															"src": "30218:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "30352:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "30352:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "30226:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "30226:124:12"
																},
																"nativeSrc": "30226:131:12",
																"nodeType": "YulFunctionCall",
																"src": "30226:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "30218:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "30218:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "29945:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "30096:9:12",
														"nodeType": "YulTypedName",
														"src": "30096:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "30111:4:12",
														"nodeType": "YulTypedName",
														"src": "30111:4:12",
														"type": ""
													}
												],
												"src": "29945:419:12"
											},
											{
												"body": {
													"nativeSrc": "30418:362:12",
													"nodeType": "YulBlock",
													"src": "30418:362:12",
													"statements": [
														{
															"nativeSrc": "30428:25:12",
															"nodeType": "YulAssignment",
															"src": "30428:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30451:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "30451:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30433:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "30433:17:12"
																},
																"nativeSrc": "30433:20:12",
																"nodeType": "YulFunctionCall",
																"src": "30433:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "30428:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "30428:1:12"
																}
															]
														},
														{
															"nativeSrc": "30462:25:12",
															"nodeType": "YulAssignment",
															"src": "30462:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "30485:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "30485:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30467:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "30467:17:12"
																},
																"nativeSrc": "30467:20:12",
																"nodeType": "YulFunctionCall",
																"src": "30467:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "30462:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "30462:1:12"
																}
															]
														},
														{
															"nativeSrc": "30496:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "30496:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "30519:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "30519:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "30522:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "30522:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "30515:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "30515:3:12"
																},
																"nativeSrc": "30515:9:12",
																"nodeType": "YulFunctionCall",
																"src": "30515:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "30500:11:12",
																	"nodeType": "YulTypedName",
																	"src": "30500:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "30533:41:12",
															"nodeType": "YulAssignment",
															"src": "30533:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "30562:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "30562:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "30544:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "30544:17:12"
																},
																"nativeSrc": "30544:30:12",
																"nodeType": "YulFunctionCall",
																"src": "30544:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "30533:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "30533:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "30751:22:12",
																"nodeType": "YulBlock",
																"src": "30751:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "30753:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "30753:16:12"
																			},
																			"nativeSrc": "30753:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "30753:18:12"
																		},
																		"nativeSrc": "30753:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "30753:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "30684:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "30684:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "30677:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "30677:6:12"
																				},
																				"nativeSrc": "30677:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "30677:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "30707:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "30707:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "30714:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "30714:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "30723:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "30723:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "30710:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "30710:3:12"
																						},
																						"nativeSrc": "30710:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "30710:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "30704:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "30704:2:12"
																				},
																				"nativeSrc": "30704:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "30704:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "30657:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "30657:2:12"
																		},
																		"nativeSrc": "30657:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "30657:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "30637:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30637:6:12"
																},
																"nativeSrc": "30637:113:12",
																"nodeType": "YulFunctionCall",
																"src": "30637:113:12"
															},
															"nativeSrc": "30634:139:12",
															"nodeType": "YulIf",
															"src": "30634:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "30370:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "30401:1:12",
														"nodeType": "YulTypedName",
														"src": "30401:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "30404:1:12",
														"nodeType": "YulTypedName",
														"src": "30404:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "30410:7:12",
														"nodeType": "YulTypedName",
														"src": "30410:7:12",
														"type": ""
													}
												],
												"src": "30370:410:12"
											},
											{
												"body": {
													"nativeSrc": "30814:152:12",
													"nodeType": "YulBlock",
													"src": "30814:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30831:1:12",
																		"nodeType": "YulLiteral",
																		"src": "30831:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30834:77:12",
																		"nodeType": "YulLiteral",
																		"src": "30834:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30824:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30824:6:12"
																},
																"nativeSrc": "30824:88:12",
																"nodeType": "YulFunctionCall",
																"src": "30824:88:12"
															},
															"nativeSrc": "30824:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "30824:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "30928:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30931:4:12",
																		"nodeType": "YulLiteral",
																		"src": "30931:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "30921:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30921:6:12"
																},
																"nativeSrc": "30921:15:12",
																"nodeType": "YulFunctionCall",
																"src": "30921:15:12"
															},
															"nativeSrc": "30921:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "30921:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "30952:1:12",
																		"nodeType": "YulLiteral",
																		"src": "30952:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "30955:4:12",
																		"nodeType": "YulLiteral",
																		"src": "30955:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "30945:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "30945:6:12"
																},
																"nativeSrc": "30945:15:12",
																"nodeType": "YulFunctionCall",
																"src": "30945:15:12"
															},
															"nativeSrc": "30945:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "30945:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "30786:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "30786:180:12"
											},
											{
												"body": {
													"nativeSrc": "31014:143:12",
													"nodeType": "YulBlock",
													"src": "31014:143:12",
													"statements": [
														{
															"nativeSrc": "31024:25:12",
															"nodeType": "YulAssignment",
															"src": "31024:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31047:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "31047:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31029:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "31029:17:12"
																},
																"nativeSrc": "31029:20:12",
																"nodeType": "YulFunctionCall",
																"src": "31029:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "31024:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "31024:1:12"
																}
															]
														},
														{
															"nativeSrc": "31058:25:12",
															"nodeType": "YulAssignment",
															"src": "31058:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "31081:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "31081:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "31063:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "31063:17:12"
																},
																"nativeSrc": "31063:20:12",
																"nodeType": "YulFunctionCall",
																"src": "31063:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "31058:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "31058:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "31105:22:12",
																"nodeType": "YulBlock",
																"src": "31105:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "31107:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "31107:16:12"
																			},
																			"nativeSrc": "31107:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "31107:18:12"
																		},
																		"nativeSrc": "31107:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "31107:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "31102:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "31102:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "31095:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "31095:6:12"
																},
																"nativeSrc": "31095:9:12",
																"nodeType": "YulFunctionCall",
																"src": "31095:9:12"
															},
															"nativeSrc": "31092:35:12",
															"nodeType": "YulIf",
															"src": "31092:35:12"
														},
														{
															"nativeSrc": "31137:14:12",
															"nodeType": "YulAssignment",
															"src": "31137:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "31146:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "31146:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "31149:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "31149:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "31142:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31142:3:12"
																},
																"nativeSrc": "31142:9:12",
																"nodeType": "YulFunctionCall",
																"src": "31142:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "31137:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "31137:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "30972:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "31003:1:12",
														"nodeType": "YulTypedName",
														"src": "31003:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "31006:1:12",
														"nodeType": "YulTypedName",
														"src": "31006:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "31012:1:12",
														"nodeType": "YulTypedName",
														"src": "31012:1:12",
														"type": ""
													}
												],
												"src": "30972:185:12"
											},
											{
												"body": {
													"nativeSrc": "31269:60:12",
													"nodeType": "YulBlock",
													"src": "31269:60:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "31291:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "31291:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31299:1:12",
																				"nodeType": "YulLiteral",
																				"src": "31299:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31287:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31287:3:12"
																		},
																		"nativeSrc": "31287:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31287:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "31303:18:12",
																		"nodeType": "YulLiteral",
																		"src": "31303:18:12",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31280:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "31280:6:12"
																},
																"nativeSrc": "31280:42:12",
																"nodeType": "YulFunctionCall",
																"src": "31280:42:12"
															},
															"nativeSrc": "31280:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "31280:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
												"nativeSrc": "31163:166:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "31261:6:12",
														"nodeType": "YulTypedName",
														"src": "31261:6:12",
														"type": ""
													}
												],
												"src": "31163:166:12"
											},
											{
												"body": {
													"nativeSrc": "31481:220:12",
													"nodeType": "YulBlock",
													"src": "31481:220:12",
													"statements": [
														{
															"nativeSrc": "31491:74:12",
															"nodeType": "YulAssignment",
															"src": "31491:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31557:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "31557:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31562:2:12",
																		"nodeType": "YulLiteral",
																		"src": "31562:2:12",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31498:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "31498:58:12"
																},
																"nativeSrc": "31498:67:12",
																"nodeType": "YulFunctionCall",
																"src": "31498:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "31491:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31491:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31663:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "31663:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																	"nativeSrc": "31574:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "31574:88:12"
																},
																"nativeSrc": "31574:93:12",
																"nodeType": "YulFunctionCall",
																"src": "31574:93:12"
															},
															"nativeSrc": "31574:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "31574:93:12"
														},
														{
															"nativeSrc": "31676:19:12",
															"nodeType": "YulAssignment",
															"src": "31676:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "31687:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "31687:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31692:2:12",
																		"nodeType": "YulLiteral",
																		"src": "31692:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31683:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31683:3:12"
																},
																"nativeSrc": "31683:12:12",
																"nodeType": "YulFunctionCall",
																"src": "31683:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "31676:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31676:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "31335:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "31469:3:12",
														"nodeType": "YulTypedName",
														"src": "31469:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "31477:3:12",
														"nodeType": "YulTypedName",
														"src": "31477:3:12",
														"type": ""
													}
												],
												"src": "31335:366:12"
											},
											{
												"body": {
													"nativeSrc": "31878:248:12",
													"nodeType": "YulBlock",
													"src": "31878:248:12",
													"statements": [
														{
															"nativeSrc": "31888:26:12",
															"nodeType": "YulAssignment",
															"src": "31888:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "31900:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "31900:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "31911:2:12",
																		"nodeType": "YulLiteral",
																		"src": "31911:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "31896:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "31896:3:12"
																},
																"nativeSrc": "31896:18:12",
																"nodeType": "YulFunctionCall",
																"src": "31896:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31888:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "31888:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "31935:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31935:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "31946:1:12",
																				"nodeType": "YulLiteral",
																				"src": "31946:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "31931:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31931:3:12"
																		},
																		"nativeSrc": "31931:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31931:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "31954:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "31954:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "31960:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "31960:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "31950:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "31950:3:12"
																		},
																		"nativeSrc": "31950:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "31950:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "31924:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "31924:6:12"
																},
																"nativeSrc": "31924:47:12",
																"nodeType": "YulFunctionCall",
																"src": "31924:47:12"
															},
															"nativeSrc": "31924:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "31924:47:12"
														},
														{
															"nativeSrc": "31980:139:12",
															"nodeType": "YulAssignment",
															"src": "31980:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "32114:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "32114:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "31988:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "31988:124:12"
																},
																"nativeSrc": "31988:131:12",
																"nodeType": "YulFunctionCall",
																"src": "31988:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "31980:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "31980:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "31707:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "31858:9:12",
														"nodeType": "YulTypedName",
														"src": "31858:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "31873:4:12",
														"nodeType": "YulTypedName",
														"src": "31873:4:12",
														"type": ""
													}
												],
												"src": "31707:419:12"
											},
											{
												"body": {
													"nativeSrc": "32286:288:12",
													"nodeType": "YulBlock",
													"src": "32286:288:12",
													"statements": [
														{
															"nativeSrc": "32296:26:12",
															"nodeType": "YulAssignment",
															"src": "32296:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "32308:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "32308:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32319:2:12",
																		"nodeType": "YulLiteral",
																		"src": "32319:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "32304:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32304:3:12"
																},
																"nativeSrc": "32304:18:12",
																"nodeType": "YulFunctionCall",
																"src": "32304:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "32296:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "32296:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "32376:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "32376:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32389:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "32389:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32400:1:12",
																				"nodeType": "YulLiteral",
																				"src": "32400:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32385:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "32385:3:12"
																		},
																		"nativeSrc": "32385:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "32385:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "32332:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "32332:43:12"
																},
																"nativeSrc": "32332:71:12",
																"nodeType": "YulFunctionCall",
																"src": "32332:71:12"
															},
															"nativeSrc": "32332:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "32332:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "32457:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "32457:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32470:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "32470:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32481:2:12",
																				"nodeType": "YulLiteral",
																				"src": "32481:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32466:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "32466:3:12"
																		},
																		"nativeSrc": "32466:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "32466:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "32413:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "32413:43:12"
																},
																"nativeSrc": "32413:72:12",
																"nodeType": "YulFunctionCall",
																"src": "32413:72:12"
															},
															"nativeSrc": "32413:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "32413:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "32539:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "32539:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "32552:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "32552:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32563:2:12",
																				"nodeType": "YulLiteral",
																				"src": "32563:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32548:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "32548:3:12"
																		},
																		"nativeSrc": "32548:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "32548:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "32495:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "32495:43:12"
																},
																"nativeSrc": "32495:72:12",
																"nodeType": "YulFunctionCall",
																"src": "32495:72:12"
															},
															"nativeSrc": "32495:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "32495:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "32132:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "32242:9:12",
														"nodeType": "YulTypedName",
														"src": "32242:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "32254:6:12",
														"nodeType": "YulTypedName",
														"src": "32254:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "32262:6:12",
														"nodeType": "YulTypedName",
														"src": "32262:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "32270:6:12",
														"nodeType": "YulTypedName",
														"src": "32270:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "32281:4:12",
														"nodeType": "YulTypedName",
														"src": "32281:4:12",
														"type": ""
													}
												],
												"src": "32132:442:12"
											},
											{
												"body": {
													"nativeSrc": "32686:64:12",
													"nodeType": "YulBlock",
													"src": "32686:64:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "32708:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "32708:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "32716:1:12",
																				"nodeType": "YulLiteral",
																				"src": "32716:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "32704:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "32704:3:12"
																		},
																		"nativeSrc": "32704:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "32704:14:12"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "32720:22:12",
																		"nodeType": "YulLiteral",
																		"src": "32720:22:12",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "32697:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "32697:6:12"
																},
																"nativeSrc": "32697:46:12",
																"nodeType": "YulFunctionCall",
																"src": "32697:46:12"
															},
															"nativeSrc": "32697:46:12",
															"nodeType": "YulExpressionStatement",
															"src": "32697:46:12"
														}
													]
												},
												"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
												"nativeSrc": "32580:170:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "32678:6:12",
														"nodeType": "YulTypedName",
														"src": "32678:6:12",
														"type": ""
													}
												],
												"src": "32580:170:12"
											},
											{
												"body": {
													"nativeSrc": "32902:220:12",
													"nodeType": "YulBlock",
													"src": "32902:220:12",
													"statements": [
														{
															"nativeSrc": "32912:74:12",
															"nodeType": "YulAssignment",
															"src": "32912:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "32978:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "32978:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "32983:2:12",
																		"nodeType": "YulLiteral",
																		"src": "32983:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "32919:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "32919:58:12"
																},
																"nativeSrc": "32919:67:12",
																"nodeType": "YulFunctionCall",
																"src": "32919:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "32912:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "32912:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33084:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "33084:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																	"nativeSrc": "32995:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "32995:88:12"
																},
																"nativeSrc": "32995:93:12",
																"nodeType": "YulFunctionCall",
																"src": "32995:93:12"
															},
															"nativeSrc": "32995:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "32995:93:12"
														},
														{
															"nativeSrc": "33097:19:12",
															"nodeType": "YulAssignment",
															"src": "33097:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "33108:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "33108:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33113:2:12",
																		"nodeType": "YulLiteral",
																		"src": "33113:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33104:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "33104:3:12"
																},
																"nativeSrc": "33104:12:12",
																"nodeType": "YulFunctionCall",
																"src": "33104:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "33097:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "33097:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "32756:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "32890:3:12",
														"nodeType": "YulTypedName",
														"src": "32890:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "32898:3:12",
														"nodeType": "YulTypedName",
														"src": "32898:3:12",
														"type": ""
													}
												],
												"src": "32756:366:12"
											},
											{
												"body": {
													"nativeSrc": "33299:248:12",
													"nodeType": "YulBlock",
													"src": "33299:248:12",
													"statements": [
														{
															"nativeSrc": "33309:26:12",
															"nodeType": "YulAssignment",
															"src": "33309:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "33321:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "33321:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "33332:2:12",
																		"nodeType": "YulLiteral",
																		"src": "33332:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "33317:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "33317:3:12"
																},
																"nativeSrc": "33317:18:12",
																"nodeType": "YulFunctionCall",
																"src": "33317:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33309:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "33309:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "33356:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "33356:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "33367:1:12",
																				"nodeType": "YulLiteral",
																				"src": "33367:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "33352:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "33352:3:12"
																		},
																		"nativeSrc": "33352:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "33352:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "33375:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "33375:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "33381:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "33381:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "33371:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "33371:3:12"
																		},
																		"nativeSrc": "33371:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "33371:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "33345:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "33345:6:12"
																},
																"nativeSrc": "33345:47:12",
																"nodeType": "YulFunctionCall",
																"src": "33345:47:12"
															},
															"nativeSrc": "33345:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "33345:47:12"
														},
														{
															"nativeSrc": "33401:139:12",
															"nodeType": "YulAssignment",
															"src": "33401:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "33535:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "33535:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "33409:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "33409:124:12"
																},
																"nativeSrc": "33409:131:12",
																"nodeType": "YulFunctionCall",
																"src": "33409:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "33401:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "33401:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "33128:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "33279:9:12",
														"nodeType": "YulTypedName",
														"src": "33279:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "33294:4:12",
														"nodeType": "YulTypedName",
														"src": "33294:4:12",
														"type": ""
													}
												],
												"src": "33128:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct CAFIFarming.FarmPackage -> struct CAFIFarming.FarmPackage\n    function abi_encode_t_struct$_FarmPackage_$1109_memory_ptr_to_t_struct$_FarmPackage_$1109_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // stakeTokenAddress\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // lockDuration\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // apyBps\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // minimumStakeAmount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // isActive\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_FarmPackage_$1109_memory_ptr__to_t_struct$_FarmPackage_$1109_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_struct$_FarmPackage_$1109_memory_ptr_to_t_struct$_FarmPackage_$1109_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct CAFIFarming.UserStake -> struct CAFIFarming.UserStake\n    function abi_encode_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xa0)\n\n        {\n            // packageId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakedAmount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // stakeStartTimestamp\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // lastRewardClaimTimestamp\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // isAutoCompounding\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xa0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct CAFIFarming.UserStake[] -> struct CAFIFarming.UserStake[]\n    function abi_encode_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_UserStake_$1120_memory_ptr_to_t_struct$_UserStake_$1120_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$574_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$574_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$574_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$574__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$574_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake token\")\n\n    }\n\n    function abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid duration\")\n\n    }\n\n    function abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid APY\")\n\n    }\n\n    function abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid package ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake ID\")\n\n    }\n\n    function abi_encode_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Inactive stake\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Stake still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31(memPtr) {\n\n        mstore(add(memPtr, 0), \"No fees available\")\n\n    }\n\n    function abi_encode_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid collector\")\n\n    }\n\n    function abi_encode_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount must be positive\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6(memPtr) {\n\n        mstore(add(memPtr, 0), \"Package inactive\")\n\n    }\n\n    function abi_encode_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient stake amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards available\")\n\n    }\n\n    function abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Pausable: not paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1132": [
									{
										"length": 32,
										"start": 2980
									},
									{
										"length": 32,
										"start": 3415
									},
									{
										"length": 32,
										"start": 6939
									},
									{
										"length": 32,
										"start": 7330
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101c2575f3560e01c8063842e2981116100f7578063db94ebc911610095578063e30c39781161006f578063e30c397814610458578063e6a69ab814610476578063f2fde38b14610494578063f7c618c1146104b0576101c2565b8063db94ebc914610400578063dd69becd1461041e578063e1a452181461043a576101c2565b8063985145b5116100d1578063985145b51461038a578063c415b95c146103a8578063d55be8c6146103c6578063d7fa023d146103e4576101c2565b8063842e2981146103205780638da5cb5b14610350578063973e46b11461036e576101c2565b80635a4d848911610164578063715018a61161013e578063715018a6146102c057806379ba5097146102ca5780637f6a9184146102d45780637fc7984d146102f0576101c2565b80635a4d8489146102565780635c975abb146102725780636c435e3614610290576101c2565b80632ba662d6116101a05780632ba662d61461021a5780632e185ec7146102385780634a4e3bd51461024257806351858e271461024c576101c2565b80631bd9b708146101c6578063217a51ee146101e257806325d5971f146101fe575b5f5ffd5b6101e060048036038101906101db9190612435565b6104ce565b005b6101fc60048036038101906101f791906124ce565b610716565b005b6102186004803603810190610213919061250c565b6107dd565b005b610222610c4b565b60405161022f9190612546565b60405180910390f35b610240610c51565b005b61024a610df8565b005b610254610e0a565b005b610270600480360381019061026b919061250c565b610e1c565b005b61027a61103f565b604051610287919061256e565b60405180910390f35b6102aa60048036038101906102a5919061250c565b611054565b6040516102b7919061261a565b60405180910390f35b6102c8611163565b005b6102d2611176565b005b6102ee60048036038101906102e99190612633565b611204565b005b61030a60048036038101906103059190612671565b611396565b6040516103179190612546565b60405180910390f35b61033a600480360381019061033591906126af565b6113a9565b60405161034791906127e8565b60405180910390f35b610358611483565b6040516103659190612817565b60405180910390f35b61038860048036038101906103839190612830565b6114aa565b005b6103926115e9565b60405161039f9190612546565b60405180910390f35b6103b06115f5565b6040516103bd9190612817565b60405180910390f35b6103ce61161a565b6040516103db9190612546565b60405180910390f35b6103fe60048036038101906103f99190612633565b611620565b005b6104086118f7565b6040516104159190612546565b60405180910390f35b6104386004803603810190610433919061250c565b6118fd565b005b610442611bbe565b60405161044f9190612546565b60405180910390f35b610460611bc4565b60405161046d9190612817565b60405180910390f35b61047e611bec565b60405161048b9190612546565b60405180910390f35b6104ae60048036038101906104a991906126af565b611bf4565b005b6104b8611ca0565b6040516104c591906128c9565b60405180910390f35b6104d6611cc4565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610544576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053b9061293c565b60405180910390fd5b5f8311610586576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161057d906129a4565b60405180910390fd5b5f8211801561059757506127108211155b6105d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cd90612a0c565b60405180910390fd5b60046040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff16815260200185815260200184815260200183815260200160011515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff021916908315150217905550505060016004805490506106d39190612a57565b7f05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a877618858585856040516107089493929190612a8a565b60405180910390a250505050565b61071e611cc4565b816004805490508110610766576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075d90612b17565b60405180910390fd5b816004848154811061077b5761077a612b35565b5b905f5260205f2090600502016004015f6101000a81548160ff021916908315150217905550827f27ffac29f91e32ed296e1ae41a59f23ebefbcac53eb28251a6fd6a5be271970a836040516107d0919061256e565b60405180910390a2505050565b6107e5611d4b565b338160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110610869576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086090612bac565b60405180910390fd5b5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106108b9576108b8612b35565b5b905f5260205f2090600502016001015411610909576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161090090612c14565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20848154811061095957610958612b35565b5b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f6004825f0151815481106109cb576109ca612b35565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050905080602001518260400151610a849190612c32565b421015610ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610abd90612caf565b60405180910390fd5b5f610ad13387611d98565b90505f8360200151905060085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208781548110610b2a57610b29612b35565b5b905f5260205f2090600502015f5f82015f9055600182015f9055600282015f9055600382015f9055600482015f6101000a81549060ff02191690555050610b953382855f015173ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b5f821115610be957610be833837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b5b863373ffffffffffffffffffffffffffffffffffffffff167f88d1c46373223a4f1f60db2badc985b05ec9c2b2eab4537f0f8e1291b78b6e378385604051610c32929190612ccd565b60405180910390a3505050505050610c48611fed565b50565b60065481565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd790612d3e565b60405180910390fd5b5f60075490505f8111610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f90612da6565b60405180910390fd5b5f600781905550610d9b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b7fc0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1682604051610ded929190612dc4565b60405180910390a150565b610e00611cc4565b610e08611ff7565b565b610e12611cc4565b610e1a612058565b565b610e24611d4b565b338160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110610ea8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9f90612bac565b60405180910390fd5b5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208281548110610ef857610ef7612b35565b5b905f5260205f2090600502016001015411610f48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f3f90612c14565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110610f9857610f97612b35565b5b905f5260205f2090600502019050806004015f9054906101000a900460ff1615816004015f6101000a81548160ff021916908315150217905550833373ffffffffffffffffffffffffffffffffffffffff167fd9a4263cd64bef5364cf9865147c8561e0c7151a9e1d79d8aa67df565aa96efe836004015f9054906101000a900460ff16604051611029919061256e565b60405180910390a350505061103c611fed565b50565b5f60035f9054906101000a900460ff16905090565b61105c612362565b8160048054905081106110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b90612b17565b60405180910390fd5b600483815481106110b8576110b7612b35565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050915050919050565b61116b611cc4565b6111745f6120ba565b565b5f61117f6120ea565b90508073ffffffffffffffffffffffffffffffffffffffff166111a0611bc4565b73ffffffffffffffffffffffffffffffffffffffff16146111f857806040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016111ef9190612817565b60405180910390fd5b611201816120ba565b50565b61120c611cc4565b816004805490508110611254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161124b90612b17565b60405180910390fd5b5f8211801561126557506127108211155b6112a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161129b90612a0c565b60405180910390fd5b81600484815481106112b9576112b8612b35565b5b905f5260205f20906005020160020181905550827f05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a8776186004858154811061130257611301612b35565b5b905f5260205f2090600502015f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166004868154811061134457611343612b35565b5b905f5260205f20906005020160010154856004888154811061136957611368612b35565b5b905f5260205f209060050201600301546040516113899493929190612a8a565b60405180910390a2505050565b5f6113a18383611d98565b905092915050565b606060085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b82821015611478578382905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505081526020019060010190611407565b505050509050919050565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6114b2611cc4565b6103e88211156114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114ee90612e35565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611565576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161155c90612e9d565b60405180910390fd5b816006819055508060055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2cf325792651b724d47f21230be0dd9729866cadd370618845e23a48555ef04282826040516115dd929190612ebb565b60405180910390a15050565b5f600480549050905090565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103e881565b611628611d4b565b6116306120f1565b816004805490508110611678576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166f90612b17565b60405180910390fd5b815f81116116bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116b290612f2c565b60405180910390fd5b5f600485815481106116d0576116cf612b35565b5b905f5260205f2090600502019050806004015f9054906101000a900460ff1661172e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172590612f94565b60405180910390fd5b8060030154841015611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176c90612ffc565b60405180910390fd5b6117c4333086845f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661213b909392919063ffffffff16565b60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060a001604052808781526020018681526020014281526020014281526020015f1515815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f01556020820151816001015560408201518160020155606082015181600301556080820151816004015f6101000a81548160ff0219169083151502179055505050843373ffffffffffffffffffffffffffffffffffffffff167f20400db7cf9bdfcb8b13ccfb8a7b4bb447c3244efdbc2336e6f6e1673d7bd84586426040516118e0929190612ccd565b60405180910390a35050506118f3611fed565b5050565b60075481565b611905611d4b565b338160085f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508110611989576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198090612bac565b60405180910390fd5b5f60085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2082815481106119d9576119d8612b35565b5b905f5260205f2090600502016001015411611a29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a2090612c14565b60405180910390fd5b5f60085f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208481548110611a7957611a78612b35565b5b905f5260205f20906005020190505f611a923386611d98565b90505f8111611ad6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611acd90613064565b60405180910390fd5b428260030181905550816004015f9054906101000a900460ff1615611b145780826001015f828254611b089190612c32565b92505081905550611b60565b611b5f33827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611f6e9092919063ffffffff16565b5b843373ffffffffffffffffffffffffffffffffffffffff167ff01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e273174383604051611ba79190612546565b60405180910390a350505050611bbb611fed565b50565b61271081565b5f60015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6301e1338081565b611bfc611cc4565b8060015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16611c5b611483565b73ffffffffffffffffffffffffffffffffffffffff167f38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e2270060405160405180910390a350565b7f000000000000000000000000000000000000000000000000000000000000000081565b611ccc6120ea565b73ffffffffffffffffffffffffffffffffffffffff16611cea611483565b73ffffffffffffffffffffffffffffffffffffffff1614611d4957611d0d6120ea565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401611d409190612817565b60405180910390fd5b565b6002805403611d8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d86906130cc565b60405180910390fd5b60028081905550565b5f5f60085f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110611de957611de8612b35565b5b905f5260205f2090600502016040518060a00160405290815f8201548152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f816020015103611e57575f915050611f68565b5f6004825f015181548110611e6f57611e6e612b35565b5b905f5260205f2090600502016040518060a00160405290815f82015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff16151515158152505090505f826060015142611f259190612a57565b90506127106301e13380611f3991906130ea565b8183604001518560200151611f4e91906130ea565b611f5891906130ea565b611f629190613158565b93505050505b92915050565b611fe8838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611fa1929190612dc4565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121bd565b505050565b6001600281905550565b611fff612258565b5f60035f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa6120416120ea565b60405161204e9190612817565b60405180910390a1565b6120606120f1565b600160035f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586120a36120ea565b6040516120b09190612817565b60405180910390a1565b60015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556120e7816122a1565b50565b5f33905090565b6120f961103f565b15612139576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612130906131d2565b60405180910390fd5b565b6121b7848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401612170939291906131f0565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121bd565b50505050565b5f5f60205f8451602086015f885af1806121dc576040513d5f823e3d81fd5b3d92505f519150505f82146121f5576001811415612210565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561225257836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016122499190612817565b60405180910390fd5b50505050565b61226061103f565b61229f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122969061326f565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6040518060a001604052805f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f81526020015f151581525090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6123d1826123a8565b9050919050565b6123e1816123c7565b81146123eb575f5ffd5b50565b5f813590506123fc816123d8565b92915050565b5f819050919050565b61241481612402565b811461241e575f5ffd5b50565b5f8135905061242f8161240b565b92915050565b5f5f5f5f6080858703121561244d5761244c6123a4565b5b5f61245a878288016123ee565b945050602061246b87828801612421565b935050604061247c87828801612421565b925050606061248d87828801612421565b91505092959194509250565b5f8115159050919050565b6124ad81612499565b81146124b7575f5ffd5b50565b5f813590506124c8816124a4565b92915050565b5f5f604083850312156124e4576124e36123a4565b5b5f6124f185828601612421565b9250506020612502858286016124ba565b9150509250929050565b5f60208284031215612521576125206123a4565b5b5f61252e84828501612421565b91505092915050565b61254081612402565b82525050565b5f6020820190506125595f830184612537565b92915050565b61256881612499565b82525050565b5f6020820190506125815f83018461255f565b92915050565b612590816123c7565b82525050565b61259f81612402565b82525050565b6125ae81612499565b82525050565b60a082015f8201516125c85f850182612587565b5060208201516125db6020850182612596565b5060408201516125ee6040850182612596565b5060608201516126016060850182612596565b50608082015161261460808501826125a5565b50505050565b5f60a08201905061262d5f8301846125b4565b92915050565b5f5f60408385031215612649576126486123a4565b5b5f61265685828601612421565b925050602061266785828601612421565b9150509250929050565b5f5f60408385031215612687576126866123a4565b5b5f612694858286016123ee565b92505060206126a585828601612421565b9150509250929050565b5f602082840312156126c4576126c36123a4565b5b5f6126d1848285016123ee565b91505092915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b60a082015f8201516127175f850182612596565b50602082015161272a6020850182612596565b50604082015161273d6040850182612596565b5060608201516127506060850182612596565b50608082015161276360808501826125a5565b50505050565b5f6127748383612703565b60a08301905092915050565b5f602082019050919050565b5f612796826126da565b6127a081856126e4565b93506127ab836126f4565b805f5b838110156127db5781516127c28882612769565b97506127cd83612780565b9250506001810190506127ae565b5085935050505092915050565b5f6020820190508181035f830152612800818461278c565b905092915050565b612811816123c7565b82525050565b5f60208201905061282a5f830184612808565b92915050565b5f5f60408385031215612846576128456123a4565b5b5f61285385828601612421565b9250506020612864858286016123ee565b9150509250929050565b5f819050919050565b5f61289161288c612887846123a8565b61286e565b6123a8565b9050919050565b5f6128a282612877565b9050919050565b5f6128b382612898565b9050919050565b6128c3816128a9565b82525050565b5f6020820190506128dc5f8301846128ba565b92915050565b5f82825260208201905092915050565b7f496e76616c6964207374616b6520746f6b656e000000000000000000000000005f82015250565b5f6129266013836128e2565b9150612931826128f2565b602082019050919050565b5f6020820190508181035f8301526129538161291a565b9050919050565b7f496e76616c6964206475726174696f6e000000000000000000000000000000005f82015250565b5f61298e6010836128e2565b91506129998261295a565b602082019050919050565b5f6020820190508181035f8301526129bb81612982565b9050919050565b7f496e76616c6964204150590000000000000000000000000000000000000000005f82015250565b5f6129f6600b836128e2565b9150612a01826129c2565b602082019050919050565b5f6020820190508181035f830152612a23816129ea565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f612a6182612402565b9150612a6c83612402565b9250828203905081811115612a8457612a83612a2a565b5b92915050565b5f608082019050612a9d5f830187612808565b612aaa6020830186612537565b612ab76040830185612537565b612ac46060830184612537565b95945050505050565b7f496e76616c6964207061636b61676520494400000000000000000000000000005f82015250565b5f612b016012836128e2565b9150612b0c82612acd565b602082019050919050565b5f6020820190508181035f830152612b2e81612af5565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f496e76616c6964207374616b65204944000000000000000000000000000000005f82015250565b5f612b966010836128e2565b9150612ba182612b62565b602082019050919050565b5f6020820190508181035f830152612bc381612b8a565b9050919050565b7f496e616374697665207374616b650000000000000000000000000000000000005f82015250565b5f612bfe600e836128e2565b9150612c0982612bca565b602082019050919050565b5f6020820190508181035f830152612c2b81612bf2565b9050919050565b5f612c3c82612402565b9150612c4783612402565b9250828201905080821115612c5f57612c5e612a2a565b5b92915050565b7f5374616b65207374696c6c206c6f636b656400000000000000000000000000005f82015250565b5f612c996012836128e2565b9150612ca482612c65565b602082019050919050565b5f6020820190508181035f830152612cc681612c8d565b9050919050565b5f604082019050612ce05f830185612537565b612ced6020830184612537565b9392505050565b7f4e6f7420617574686f72697a65640000000000000000000000000000000000005f82015250565b5f612d28600e836128e2565b9150612d3382612cf4565b602082019050919050565b5f6020820190508181035f830152612d5581612d1c565b9050919050565b7f4e6f206665657320617661696c61626c650000000000000000000000000000005f82015250565b5f612d906011836128e2565b9150612d9b82612d5c565b602082019050919050565b5f6020820190508181035f830152612dbd81612d84565b9050919050565b5f604082019050612dd75f830185612808565b612de46020830184612537565b9392505050565b7f46656520746f6f206869676800000000000000000000000000000000000000005f82015250565b5f612e1f600c836128e2565b9150612e2a82612deb565b602082019050919050565b5f6020820190508181035f830152612e4c81612e13565b9050919050565b7f496e76616c696420636f6c6c6563746f720000000000000000000000000000005f82015250565b5f612e876011836128e2565b9150612e9282612e53565b602082019050919050565b5f6020820190508181035f830152612eb481612e7b565b9050919050565b5f604082019050612ece5f830185612537565b612edb6020830184612808565b9392505050565b7f416d6f756e74206d75737420626520706f7369746976650000000000000000005f82015250565b5f612f166017836128e2565b9150612f2182612ee2565b602082019050919050565b5f6020820190508181035f830152612f4381612f0a565b9050919050565b7f5061636b61676520696e616374697665000000000000000000000000000000005f82015250565b5f612f7e6010836128e2565b9150612f8982612f4a565b602082019050919050565b5f6020820190508181035f830152612fab81612f72565b9050919050565b7f496e73756666696369656e74207374616b6520616d6f756e74000000000000005f82015250565b5f612fe66019836128e2565b9150612ff182612fb2565b602082019050919050565b5f6020820190508181035f83015261301381612fda565b9050919050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f61304e6014836128e2565b91506130598261301a565b602082019050919050565b5f6020820190508181035f83015261307b81613042565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f6130b6601f836128e2565b91506130c182613082565b602082019050919050565b5f6020820190508181035f8301526130e3816130aa565b9050919050565b5f6130f482612402565b91506130ff83612402565b925082820261310d81612402565b9150828204841483151761312457613123612a2a565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61316282612402565b915061316d83612402565b92508261317d5761317c61312b565b5b828204905092915050565b7f5061757361626c653a20706175736564000000000000000000000000000000005f82015250565b5f6131bc6010836128e2565b91506131c782613188565b602082019050919050565b5f6020820190508181035f8301526131e9816131b0565b9050919050565b5f6060820190506132035f830186612808565b6132106020830185612808565b61321d6040830184612537565b949350505050565b7f5061757361626c653a206e6f74207061757365640000000000000000000000005f82015250565b5f6132596014836128e2565b915061326482613225565b602082019050919050565b5f6020820190508181035f8301526132868161324d565b905091905056fea2646970667358221220d9a8cf148e9c28ec1d3155c5f23e6498ee62ea58115147817a28b70fbdd9f65064736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x842E2981 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xDB94EBC9 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xE30C3978 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xE30C3978 EQ PUSH2 0x458 JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x476 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x4B0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xDB94EBC9 EQ PUSH2 0x400 JUMPI DUP1 PUSH4 0xDD69BECD EQ PUSH2 0x41E JUMPI DUP1 PUSH4 0xE1A45218 EQ PUSH2 0x43A JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x985145B5 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x985145B5 EQ PUSH2 0x38A JUMPI DUP1 PUSH4 0xC415B95C EQ PUSH2 0x3A8 JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x3C6 JUMPI DUP1 PUSH4 0xD7FA023D EQ PUSH2 0x3E4 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x842E2981 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x350 JUMPI DUP1 PUSH4 0x973E46B1 EQ PUSH2 0x36E JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5A4D8489 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x79BA5097 EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0x7F6A9184 EQ PUSH2 0x2D4 JUMPI DUP1 PUSH4 0x7FC7984D EQ PUSH2 0x2F0 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x5A4D8489 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x272 JUMPI DUP1 PUSH4 0x6C435E36 EQ PUSH2 0x290 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2BA662D6 GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x2BA662D6 EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x2E185EC7 EQ PUSH2 0x238 JUMPI DUP1 PUSH4 0x4A4E3BD5 EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x51858E27 EQ PUSH2 0x24C JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x1BD9B708 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x217A51EE EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x25D5971F EQ PUSH2 0x1FE JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x2435 JUMP JUMPDEST PUSH2 0x4CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F7 SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x716 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x218 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x213 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x7DD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x222 PUSH2 0xC4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22F SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x240 PUSH2 0xC51 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x24A PUSH2 0xDF8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x254 PUSH2 0xE0A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x270 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26B SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0xE1C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27A PUSH2 0x103F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x287 SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2AA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A5 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B7 SWAP2 SWAP1 PUSH2 0x261A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C8 PUSH2 0x1163 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D2 PUSH2 0x1176 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2EE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x1204 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x305 SWAP2 SWAP1 PUSH2 0x2671 JUMP JUMPDEST PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x317 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x33A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x335 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH2 0x13A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x347 SWAP2 SWAP1 PUSH2 0x27E8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x358 PUSH2 0x1483 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x365 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x388 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x383 SWAP2 SWAP1 PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x14AA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x392 PUSH2 0x15E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39F SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B0 PUSH2 0x15F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BD SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CE PUSH2 0x161A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3DB SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F9 SWAP2 SWAP1 PUSH2 0x2633 JUMP JUMPDEST PUSH2 0x1620 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x408 PUSH2 0x18F7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x438 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x433 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x18FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x442 PUSH2 0x1BBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x460 PUSH2 0x1BC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x46D SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47E PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4AE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4A9 SWAP2 SWAP1 PUSH2 0x26AF JUMP JUMPDEST PUSH2 0x1BF4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4B8 PUSH2 0x1CA0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x28C9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D6 PUSH2 0x1CC4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x544 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x53B SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0x586 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x57D SWAP1 PUSH2 0x29A4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x597 JUMPI POP PUSH2 0x2710 DUP3 GT ISZERO JUMPDEST PUSH2 0x5D6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CD SWAP1 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x1 PUSH1 0x4 DUP1 SLOAD SWAP1 POP PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST PUSH32 0x5752C03E5C1D84A4868E347BE593E78A3F0F449821FF8E628806E528A877618 DUP6 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x708 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x71E PUSH2 0x1CC4 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x766 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x75D SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x77B JUMPI PUSH2 0x77A PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP3 PUSH32 0x27FFAC29F91E32ED296E1AE41A59F23EBEFBCAC53EB28251A6FD6A5BE271970A DUP4 PUSH1 0x40 MLOAD PUSH2 0x7D0 SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x7E5 PUSH2 0x1D4B JUMP JUMPDEST CALLER DUP2 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x869 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x860 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x8B9 JUMPI PUSH2 0x8B8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x909 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x900 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x959 JUMPI PUSH2 0x958 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 PUSH1 0x4 DUP3 PUSH0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x9CB JUMPI PUSH2 0x9CA PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD DUP3 PUSH1 0x40 ADD MLOAD PUSH2 0xA84 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0xAC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABD SWAP1 PUSH2 0x2CAF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xAD1 CALLER DUP8 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 PUSH1 0x20 ADD MLOAD SWAP1 POP PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0xB2A JUMPI PUSH2 0xB29 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 PUSH0 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SSTORE PUSH1 0x4 DUP3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH1 0xFF MUL NOT AND SWAP1 SSTORE POP POP PUSH2 0xB95 CALLER DUP3 DUP6 PUSH0 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0xBE9 JUMPI PUSH2 0xBE8 CALLER DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP7 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x88D1C46373223A4F1F60DB2BADC985B05EC9C2B2EAB4537F0F8E1291B78B6E37 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0xC32 SWAP3 SWAP2 SWAP1 PUSH2 0x2CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP PUSH2 0xC48 PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD7 SWAP1 PUSH2 0x2D3E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0xD28 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD1F SWAP1 PUSH2 0x2DA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0xD9B PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH32 0xC0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH1 0x40 MLOAD PUSH2 0xDED SWAP3 SWAP2 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0xE00 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0xE08 PUSH2 0x1FF7 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE12 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0xE1A PUSH2 0x2058 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xE24 PUSH2 0x1D4B JUMP JUMPDEST CALLER DUP2 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0xEA8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE9F SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEF8 JUMPI PUSH2 0xEF7 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0xF48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF3F SWAP1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF98 JUMPI PUSH2 0xF97 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP4 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD9A4263CD64BEF5364CF9865147C8561E0C7151A9E1D79D8AA67DF565AA96EFE DUP4 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x1029 SWAP2 SWAP1 PUSH2 0x256E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x103C PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x105C PUSH2 0x2362 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x10B8 JUMPI PUSH2 0x10B7 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x116B PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x1174 PUSH0 PUSH2 0x20BA JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x117F PUSH2 0x20EA JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x11A0 PUSH2 0x1BC4 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x11F8 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11EF SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1201 DUP2 PUSH2 0x20BA JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x120C PUSH2 0x1CC4 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1254 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x124B SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 GT DUP1 ISZERO PUSH2 0x1265 JUMPI POP PUSH2 0x2710 DUP3 GT ISZERO JUMPDEST PUSH2 0x12A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x129B SWAP1 PUSH2 0x2A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x12B9 JUMPI PUSH2 0x12B8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH32 0x5752C03E5C1D84A4868E347BE593E78A3F0F449821FF8E628806E528A877618 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x1302 JUMPI PUSH2 0x1301 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x4 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x1344 JUMPI PUSH2 0x1343 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x4 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x1369 JUMPI PUSH2 0x1368 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1389 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x13A1 DUP4 DUP4 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1478 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1407 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x14B2 PUSH2 0x1CC4 JUMP JUMPDEST PUSH2 0x3E8 DUP3 GT ISZERO PUSH2 0x14F7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14EE SWAP1 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1565 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x155C SWAP1 PUSH2 0x2E9D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x2CF325792651B724D47F21230BE0DD9729866CADD370618845E23A48555EF042 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x15DD SWAP3 SWAP2 SWAP1 PUSH2 0x2EBB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1628 PUSH2 0x1D4B JUMP JUMPDEST PUSH2 0x1630 PUSH2 0x20F1 JUMP JUMPDEST DUP2 PUSH1 0x4 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1678 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x166F SWAP1 PUSH2 0x2B17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH0 DUP2 GT PUSH2 0x16BB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16B2 SWAP1 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x4 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x16D0 JUMPI PUSH2 0x16CF PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x172E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1725 SWAP1 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD DUP5 LT ISZERO PUSH2 0x1775 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x176C SWAP1 PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17C4 CALLER ADDRESS DUP7 DUP5 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x213B SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP8 DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x20400DB7CF9BDFCB8B13CCFB8A7B4BB447C3244EFDBC2336E6F6E1673D7BD845 DUP7 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x18E0 SWAP3 SWAP2 SWAP1 PUSH2 0x2CCD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP PUSH2 0x18F3 PUSH2 0x1FED JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1905 PUSH2 0x1D4B JUMP JUMPDEST CALLER DUP2 PUSH1 0x8 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x1989 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1980 SWAP1 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x19D9 JUMPI PUSH2 0x19D8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x1 ADD SLOAD GT PUSH2 0x1A29 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A20 SWAP1 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x8 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1A79 JUMPI PUSH2 0x1A78 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH0 PUSH2 0x1A92 CALLER DUP7 PUSH2 0x1D98 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1AD6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACD SWAP1 PUSH2 0x3064 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1B14 JUMPI DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1B08 SWAP2 SWAP1 PUSH2 0x2C32 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1B60 JUMP JUMPDEST PUSH2 0x1B5F CALLER DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1F6E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xF01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743 DUP4 PUSH1 0x40 MLOAD PUSH2 0x1BA7 SWAP2 SWAP1 PUSH2 0x2546 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x1BBB PUSH2 0x1FED JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH2 0x1BFC PUSH2 0x1CC4 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1C5B PUSH2 0x1483 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1CCC PUSH2 0x20EA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1CEA PUSH2 0x1483 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D49 JUMPI PUSH2 0x1D0D PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D40 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD SUB PUSH2 0x1D8F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D86 SWAP1 PUSH2 0x30CC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x8 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1DE9 JUMPI PUSH2 0x1DE8 PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH1 0x20 ADD MLOAD SUB PUSH2 0x1E57 JUMPI PUSH0 SWAP2 POP POP PUSH2 0x1F68 JUMP JUMPDEST PUSH0 PUSH1 0x4 DUP3 PUSH0 ADD MLOAD DUP2 SLOAD DUP2 LT PUSH2 0x1E6F JUMPI PUSH2 0x1E6E PUSH2 0x2B35 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP3 PUSH1 0x60 ADD MLOAD TIMESTAMP PUSH2 0x1F25 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP PUSH2 0x2710 PUSH4 0x1E13380 PUSH2 0x1F39 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST DUP2 DUP4 PUSH1 0x40 ADD MLOAD DUP6 PUSH1 0x20 ADD MLOAD PUSH2 0x1F4E SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH2 0x1F58 SWAP2 SWAP1 PUSH2 0x30EA JUMP JUMPDEST PUSH2 0x1F62 SWAP2 SWAP1 PUSH2 0x3158 JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE8 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1FA1 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21BD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1FFF PUSH2 0x2258 JUMP JUMPDEST PUSH0 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x2041 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x204E SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH2 0x2060 PUSH2 0x20F1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x20A3 PUSH2 0x20EA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20B0 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE PUSH2 0x20E7 DUP2 PUSH2 0x22A1 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x20F9 PUSH2 0x103F JUMP JUMPDEST ISZERO PUSH2 0x2139 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2130 SWAP1 PUSH2 0x31D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x21B7 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2170 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x31F0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21BD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x21DC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x21F5 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x2210 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2252 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2249 SWAP2 SWAP1 PUSH2 0x2817 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x2260 PUSH2 0x103F JUMP JUMPDEST PUSH2 0x229F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2296 SWAP1 PUSH2 0x326F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23D1 DUP3 PUSH2 0x23A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E1 DUP2 PUSH2 0x23C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x23EB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23FC DUP2 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2414 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP2 EQ PUSH2 0x241E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x242F DUP2 PUSH2 0x240B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x244D JUMPI PUSH2 0x244C PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x245A DUP8 DUP3 DUP9 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x246B DUP8 DUP3 DUP9 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x247C DUP8 DUP3 DUP9 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x248D DUP8 DUP3 DUP9 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AD DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C8 DUP2 PUSH2 0x24A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E3 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24F1 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2502 DUP6 DUP3 DUP7 ADD PUSH2 0x24BA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2521 JUMPI PUSH2 0x2520 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252E DUP5 DUP3 DUP6 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2540 DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2559 PUSH0 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2568 DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2581 PUSH0 DUP4 ADD DUP5 PUSH2 0x255F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2590 DUP2 PUSH2 0x23C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x259F DUP2 PUSH2 0x2402 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x25AE DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x25C8 PUSH0 DUP6 ADD DUP3 PUSH2 0x2587 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x25DB PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x25EE PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2601 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2614 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x25A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x262D PUSH0 DUP4 ADD DUP5 PUSH2 0x25B4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2649 JUMPI PUSH2 0x2648 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2656 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2667 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2687 JUMPI PUSH2 0x2686 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2694 DUP6 DUP3 DUP7 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x26A5 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x26C4 JUMPI PUSH2 0x26C3 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x26D1 DUP5 DUP3 DUP6 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2717 PUSH0 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x272A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x273D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2750 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x2596 JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2763 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x25A5 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2774 DUP4 DUP4 PUSH2 0x2703 JUMP JUMPDEST PUSH1 0xA0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2796 DUP3 PUSH2 0x26DA JUMP JUMPDEST PUSH2 0x27A0 DUP2 DUP6 PUSH2 0x26E4 JUMP JUMPDEST SWAP4 POP PUSH2 0x27AB DUP4 PUSH2 0x26F4 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x27DB JUMPI DUP2 MLOAD PUSH2 0x27C2 DUP9 DUP3 PUSH2 0x2769 JUMP JUMPDEST SWAP8 POP PUSH2 0x27CD DUP4 PUSH2 0x2780 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x27AE JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2800 DUP2 DUP5 PUSH2 0x278C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2811 DUP2 PUSH2 0x23C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x282A PUSH0 DUP4 ADD DUP5 PUSH2 0x2808 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2846 JUMPI PUSH2 0x2845 PUSH2 0x23A4 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2853 DUP6 DUP3 DUP7 ADD PUSH2 0x2421 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2864 DUP6 DUP3 DUP7 ADD PUSH2 0x23EE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2891 PUSH2 0x288C PUSH2 0x2887 DUP5 PUSH2 0x23A8 JUMP JUMPDEST PUSH2 0x286E JUMP JUMPDEST PUSH2 0x23A8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28A2 DUP3 PUSH2 0x2877 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x28B3 DUP3 PUSH2 0x2898 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C3 DUP2 PUSH2 0x28A9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28DC PUSH0 DUP4 ADD DUP5 PUSH2 0x28BA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520746F6B656E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2926 PUSH1 0x13 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2931 DUP3 PUSH2 0x28F2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2953 DUP2 PUSH2 0x291A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964206475726174696F6E00000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x298E PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2999 DUP3 PUSH2 0x295A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x29BB DUP2 PUSH2 0x2982 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420415059000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29F6 PUSH1 0xB DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A01 DUP3 PUSH2 0x29C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A23 DUP2 PUSH2 0x29EA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A61 DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6C DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2A84 JUMPI PUSH2 0x2A83 PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2A9D PUSH0 DUP4 ADD DUP8 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2AAA PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2AB7 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2AC4 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207061636B6167652049440000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B01 PUSH1 0x12 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B0C DUP3 PUSH2 0x2ACD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B2E DUP2 PUSH2 0x2AF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x496E76616C6964207374616B6520494400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B96 PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BA1 DUP3 PUSH2 0x2B62 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BC3 DUP2 PUSH2 0x2B8A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E616374697665207374616B65000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BFE PUSH1 0xE DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C09 DUP3 PUSH2 0x2BCA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C2B DUP2 PUSH2 0x2BF2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2C3C DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C47 DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2C5F JUMPI PUSH2 0x2C5E PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5374616B65207374696C6C206C6F636B65640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C99 PUSH1 0x12 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CA4 DUP3 PUSH2 0x2C65 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CC6 DUP2 PUSH2 0x2C8D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CE0 PUSH0 DUP4 ADD DUP6 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2CED PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D28 PUSH1 0xE DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D33 DUP3 PUSH2 0x2CF4 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D55 DUP2 PUSH2 0x2D1C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F206665657320617661696C61626C65000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D90 PUSH1 0x11 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D9B DUP3 PUSH2 0x2D5C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DBD DUP2 PUSH2 0x2D84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2DD7 PUSH0 DUP4 ADD DUP6 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x2DE4 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x46656520746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E1F PUSH1 0xC DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E2A DUP3 PUSH2 0x2DEB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E4C DUP2 PUSH2 0x2E13 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420636F6C6C6563746F72000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E87 PUSH1 0x11 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E92 DUP3 PUSH2 0x2E53 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EB4 DUP2 PUSH2 0x2E7B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2ECE PUSH0 DUP4 ADD DUP6 PUSH2 0x2537 JUMP JUMPDEST PUSH2 0x2EDB PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2808 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416D6F756E74206D75737420626520706F736974697665000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F16 PUSH1 0x17 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F21 DUP3 PUSH2 0x2EE2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F43 DUP2 PUSH2 0x2F0A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5061636B61676520696E61637469766500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F7E PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F89 DUP3 PUSH2 0x2F4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FAB DUP2 PUSH2 0x2F72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E74207374616B6520616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FE6 PUSH1 0x19 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FF1 DUP3 PUSH2 0x2FB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3013 DUP2 PUSH2 0x2FDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x304E PUSH1 0x14 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3059 DUP3 PUSH2 0x301A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x307B DUP2 PUSH2 0x3042 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x30B6 PUSH1 0x1F DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x30C1 DUP3 PUSH2 0x3082 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x30E3 DUP2 PUSH2 0x30AA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x30F4 DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x30FF DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x310D DUP2 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x3124 JUMPI PUSH2 0x3123 PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x3162 DUP3 PUSH2 0x2402 JUMP JUMPDEST SWAP2 POP PUSH2 0x316D DUP4 PUSH2 0x2402 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x317D JUMPI PUSH2 0x317C PUSH2 0x312B JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A2070617573656400000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x31BC PUSH1 0x10 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x31C7 DUP3 PUSH2 0x3188 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x31E9 DUP2 PUSH2 0x31B0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3203 PUSH0 DUP4 ADD DUP7 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x3210 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2808 JUMP JUMPDEST PUSH2 0x321D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2537 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5061757361626C653A206E6F7420706175736564000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x3259 PUSH1 0x14 DUP4 PUSH2 0x28E2 JUMP JUMPDEST SWAP2 POP PUSH2 0x3264 DUP3 PUSH2 0x3225 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x3286 DUP2 PUSH2 0x324D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 0xA8 0xCF EQ DUP15 SWAP13 0x28 EOFCREATE 0x1D BALANCE SSTORE 0xC5 CALLCODE RETURNDATACOPY PUSH5 0x98EE62EA58 GT MLOAD SELFBALANCE DUP2 PUSH27 0x28B70FBDD9F65064736F6C634300081E0033000000000000000000 ",
							"sourceMap": "558:9884:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7962:799;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8767:250;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5317:1006;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1573:38;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9944:340;;;:::i;:::-;;10366:74;;;:::i;:::-;;10290:70;;;:::i;:::-;;6329:357;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1615:84:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7589:196:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;2244:229:1;;;:::i;:::-;;9023:522:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6736:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7791:120;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9551:387:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7475:108;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1540:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1164:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3722:928;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1629:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4656:655;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1288:47;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:99:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1231:51:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1649:178:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1415:35:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7962:799;1531:13:0;:11;:13::i;:::-;8160:1:11::1;8138:24;;:10;:24;;::::0;8130:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8215:1;8204:8;:12;8196:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;8264:1;8255:6;:10;:39;;;;;1330:5;8269:6;:25;;8255:39;8247:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8321:12;8352:224;;;;;;;;8401:10;8352:224;;;;;;8443:8;8352:224;;;;8477:6;8352:224;;;;8521:8;8352:224;;;;8557:4;8352:224;;;;::::0;8321:265:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8655:1;8633:12;:19;;;;:23;;;;:::i;:::-;8602:152;8670:10;8694:8;8716:6;8736:8;8602:152;;;;;;;;;:::i;:::-;;;;;;;;7962:799:::0;;;;:::o;8767:250::-;1531:13:0;:11;:13::i;:::-;8886:9:11::1;2822:12;:19;;;;2810:9;:31;2802:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;8946:8:::2;8911:12;8924:9;8911:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:32;;;:43;;;;;;;;;;;;;;;;;;8990:9;8969:41;9001:8;8969:41;;;;;;:::i;:::-;;;;;;;;1554:1:0::1;8767:250:11::0;;:::o;5317:1006::-;2261:21:6;:19;:21::i;:::-;5414:10:11::1;5426:7;2967:10;:16;2978:4;2967:16;;;;;;;;;;;;;;;:23;;;;2957:7;:33;2949:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3070:1;3029:10;:16;3040:4;3029:16;;;;;;;;;;;;;;;3046:7;3029:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;:42;3021:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;5449:26:::2;5478:10;:22;5489:10;5478:22;;;;;;;;;;;;;;;5501:7;5478:31;;;;;;;;:::i;:::-;;;;;;;;;;;;5449:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;5519:26;5548:12;5561:9;:19;;;5548:33;;;;;;;;:::i;:::-;;;;;;;;;;;;5519:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;5664:7;:20;;;5632:9;:29;;;:52;;;;:::i;:::-;5613:15;:71;;5592:136;;;;;;;;;;;;:::i;:::-;;;;;;;;;5739:20;5762:45;5787:10;5799:7;5762:24;:45::i;:::-;5739:68;;5817:23;5843:9;:22;;;5817:48;;5945:10;:22;5956:10;5945:22;;;;;;;;;;;;;;;5968:7;5945:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;5938:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6017:75;6064:10;6076:15;6024:7;:25;;;6017:46;;;;:75;;;;;:::i;:::-;6157:1;6142:12;:16;6138:97;;;6174:50;6199:10;6211:12;6174:11;:24;;;;:50;;;;;:::i;:::-;6138:97;6277:7;6265:10;6250:66;;;6286:15;6303:12;6250:66;;;;;;;:::i;:::-;;;;;;;;5439:884;;;;2292:1:6::1;;2303:20:::0;:18;:20::i;:::-;5317:1006:11;:::o;1573:38::-;;;;:::o;9944:340::-;10020:12;;;;;;;;;;;10006:26;;:10;:26;;;9998:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;10061:14;10078;;10061:31;;10119:1;10110:6;:10;10102:40;;;;;;;;;;;;:::i;:::-;;;;;;;;;10170:1;10153:14;:18;;;;10181:46;10206:12;;;;;;;;;;;10220:6;10181:11;:24;;;;:46;;;;;:::i;:::-;10242:35;10256:12;;;;;;;;;;;10270:6;10242:35;;;;;;;:::i;:::-;;;;;;;;9988:296;9944:340::o;10366:74::-;1531:13:0;:11;:13::i;:::-;10423:10:11::1;:8;:10::i;:::-;10366:74::o:0;10290:70::-;1531:13:0;:11;:13::i;:::-;10345:8:11::1;:6;:8::i;:::-;10290:70::o:0;6329:357::-;2261:21:6;:19;:21::i;:::-;6431:10:11::1;6443:7;2967:10;:16;2978:4;2967:16;;;;;;;;;;;;;;;:23;;;;2957:7;:33;2949:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3070:1;3029:10;:16;3040:4;3029:16;;;;;;;;;;;;;;;3046:7;3029:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;:42;3021:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;6466:27:::2;6496:10;:22;6507:10;6496:22;;;;;;;;;;;;;;;6519:7;6496:31;;;;;;;;:::i;:::-;;;;;;;;;;;;6466:61;;6568:9;:27;;;;;;;;;;;;6567:28;6537:9;:27;;;:58;;;;;;;;;;;;;;;;;;6642:7;6630:10;6610:69;;;6651:9;:27;;;;;;;;;;;;6610:69;;;;;;:::i;:::-;;;;;;;;6456:230;2292:1:6::1;;2303:20:::0;:18;:20::i;:::-;6329:357:11;:::o;1615:84:5:-;1662:4;1685:7;;;;;;;;;;;1678:14;;1615:84;:::o;7589:196:11:-;7714:18;;:::i;:::-;7686:9;2822:12;:19;;;;2810:9;:31;2802:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;7755:12:::1;7768:9;7755:23;;;;;;;;:::i;:::-;;;;;;;;;;;;7748:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7589:196:::0;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;2244:229:1:-;2296:14;2313:12;:10;:12::i;:::-;2296:29;;2357:6;2339:24;;:14;:12;:14::i;:::-;:24;;;2335:96;;2413:6;2386:34;;;;;;;;;;;:::i;:::-;;;;;;;;2335:96;2440:26;2459:6;2440:18;:26::i;:::-;2286:187;2244:229::o;9023:522:11:-;1531:13:0;:11;:13::i;:::-;9143:9:11::1;2822:12;:19;;;;2810:9;:31;2802:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;9188:1:::2;9176:9;:13;:45;;;;;1330:5;9193:9;:28;;9176:45;9168:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;9280:9;9247:12;9260:9;9247:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:30;;:42;;;;9335:9;9304:234;9358:12;9371:9;9358:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:41;;;;;;;;;;;;9413:12;9426:9;9413:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:36;;;9463:9;9486:12;9499:9;9486:23;;;;;;;;:::i;:::-;;;;;;;;;;;;:42;;;9304:234;;;;;;;;;:::i;:::-;;;;;;;;1554:1:0::1;9023:522:11::0;;:::o;6736:187::-;6847:7;6877:39;6902:4;6908:7;6877:24;:39::i;:::-;6870:46;;6736:187;;;;:::o;7791:120::-;7851:18;7888:10;:16;7899:4;7888:16;;;;;;;;;;;;;;;7881:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7791:120;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;9551:387:11:-;1531:13:0;:11;:13::i;:::-;1202:4:11::1;9678:9;:24;;9670:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;9761:1;9737:26;;:12;:26;;::::0;9729:56:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9825:9;9804:18;:30;;;;9859:12;9844;;:27;;;;;;;;;;;;;;;;;;9886:45;9907:9;9918:12;9886:45;;;;;;;:::i;:::-;;;;;;;;9551:387:::0;;:::o;7475:108::-;7531:7;7557:12;:19;;;;7550:26;;7475:108;:::o;1540:27::-;;;;;;;;;;;;;:::o;1164:42::-;1202:4;1164:42;:::o;3722:928::-;2261:21:6;:19;:21::i;:::-;1239:19:5::1;:17;:19::i;:::-;3859:9:11::2;2822:12;:19;;;;2810:9;:31;2802:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3893:6:::3;3181:1;3172:6;:10;3164:46;;;;;;;;;;;;:::i;:::-;;;;;;;;;3915:27:::4;3945:12;3958:9;3945:23;;;;;;;;:::i;:::-;;;;;;;;;;;;3915:53;;3986:7;:16;;;;;;;;;;;;3978:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;4051:7;:26;;;4041:6;:36;;4033:74;;;;;;;;;;;;:::i;:::-;;;;;;;;;4118:131;4182:10;4214:4;4233:6;4125:7;:25;;;;;;;;;;;;4118:50;;;;:131;;;;;;:::i;:::-;4260:10;:22;4271:10;4260:22;;;;;;;;;;;;;;;4301:256;;;;;;;;4340:9;4301:256;;;;4381:6;4301:256;;;;4426:15;4301:256;;;;4485:15;4301:256;;;;4537:5;4301:256;;;;::::0;4260:307:::4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:9;4596:10;4583:60;;;4619:6;4627:15;4583:60;;;;;;;:::i;:::-;;;;;;;;3905:745;2874:1:::3;1268::5::2;2303:20:6::0;:18;:20::i;:::-;3722:928:11;;:::o;1629:29::-;;;;:::o;4656:655::-;2261:21:6;:19;:21::i;:::-;4757:10:11::1;4769:7;2967:10;:16;2978:4;2967:16;;;;;;;;;;;;;;;:23;;;;2957:7;:33;2949:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3070:1;3029:10;:16;3040:4;3029:16;;;;;;;;;;;;;;;3046:7;3029:25;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;:42;3021:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;4792:27:::2;4822:10;:22;4833:10;4822:22;;;;;;;;;;;;;;;4845:7;4822:31;;;;;;;;:::i;:::-;;;;;;;;;;;;4792:61;;4863:20;4886:45;4911:10;4923:7;4886:24;:45::i;:::-;4863:68;;4964:1;4949:12;:16;4941:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;5038:15;5001:9;:34;;:52;;;;5068:9;:27;;;;;;;;;;;;5064:177;;;5137:12;5111:9;:22;;;:38;;;;;;;:::i;:::-;;;;;;;;5064:177;;;5180:50;5205:10;5217:12;5180:11;:24;;;;:50;;;;;:::i;:::-;5064:177;5282:7;5270:10;5256:48;;;5291:12;5256:48;;;;;;:::i;:::-;;;;;;;;4782:529;;2292:1:6::1;;2303:20:::0;:18;:20::i;:::-;4656:655:11;:::o;1288:47::-;1330:5;1288:47;:::o;1232:99:1:-;1285:7;1311:13;;;;;;;;;;;1304:20;;1232:99;:::o;1231:51:11:-;1274:8;1231:51;:::o;1649:178:1:-;1531:13:0;:11;:13::i;:::-;1754:8:1::1;1738:13;;:24;;;;;;;;;;;;;;;;;;1811:8;1777:43;;1802:7;:5;:7::i;:::-;1777:43;;;;;;;;;;;;1649:178:::0;:::o;1415:35:11:-;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2336:287:6:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;6929:540:11:-;7041:7;7064:26;7093:10;:16;7104:4;7093:16;;;;;;;;;;;;;;;7110:7;7093:25;;;;;;;;:::i;:::-;;;;;;;;;;;;7064:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7158:1;7132:9;:22;;;:27;7128:41;;7168:1;7161:8;;;;;7128:41;7180:26;7209:12;7222:9;:19;;;7209:33;;;;;;;;:::i;:::-;;;;;;;;;;;;7180:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7252:19;7292:9;:34;;;7274:15;:52;;;;:::i;:::-;7252:74;;1330:5;1274:8;7427:34;;;;:::i;:::-;7395:11;7378:7;:14;;;7353:9;:22;;;:39;;;;:::i;:::-;:53;;;;:::i;:::-;7352:110;;;;:::i;:::-;7345:117;;;;;6929:540;;;;;:::o;1219:160:8:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;2629:209:6:-;1716:1;2809:7;:22;;;;2629:209::o;2433:117:5:-;1486:16;:14;:16::i;:::-;2501:5:::1;2491:7;;:15;;;;;;;;;;;;;;;;;;2521:22;2530:12;:10;:12::i;:::-;2521:22;;;;;;:::i;:::-;;;;;;;;2433:117::o:0;2186:115::-;1239:19;:17;:19::i;:::-;2255:4:::1;2245:7;;:14;;;;;;;;;;;;;;;;;;2274:20;2281:12;:10;:12::i;:::-;2274:20;;;;;;:::i;:::-;;;;;;;;2186:115::o:0;2011:153:1:-;2100:13;;2093:20;;;;;;;;;;;2123:34;2148:8;2123:24;:34::i;:::-;2011:153;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;1767:106:5:-;1837:8;:6;:8::i;:::-;1836:9;1828:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;1767:106::o;1618:188:8:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;1945:106:5:-;2011:8;:6;:8::i;:::-;2003:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;1945:106::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:765::-;1283:6;1291;1299;1307;1356:3;1344:9;1335:7;1331:23;1327:33;1324:120;;;1363:79;;:::i;:::-;1324:120;1483:1;1508:53;1553:7;1544:6;1533:9;1529:22;1508:53;:::i;:::-;1498:63;;1454:117;1610:2;1636:53;1681:7;1672:6;1661:9;1657:22;1636:53;:::i;:::-;1626:63;;1581:118;1738:2;1764:53;1809:7;1800:6;1789:9;1785:22;1764:53;:::i;:::-;1754:63;;1709:118;1866:2;1892:53;1937:7;1928:6;1917:9;1913:22;1892:53;:::i;:::-;1882:63;;1837:118;1197:765;;;;;;;:::o;1968:90::-;2002:7;2045:5;2038:13;2031:21;2020:32;;1968:90;;;:::o;2064:116::-;2134:21;2149:5;2134:21;:::i;:::-;2127:5;2124:32;2114:60;;2170:1;2167;2160:12;2114:60;2064:116;:::o;2186:133::-;2229:5;2267:6;2254:20;2245:29;;2283:30;2307:5;2283:30;:::i;:::-;2186:133;;;;:::o;2325:468::-;2390:6;2398;2447:2;2435:9;2426:7;2422:23;2418:32;2415:119;;;2453:79;;:::i;:::-;2415:119;2573:1;2598:53;2643:7;2634:6;2623:9;2619:22;2598:53;:::i;:::-;2588:63;;2544:117;2700:2;2726:50;2768:7;2759:6;2748:9;2744:22;2726:50;:::i;:::-;2716:60;;2671:115;2325:468;;;;;:::o;2799:329::-;2858:6;2907:2;2895:9;2886:7;2882:23;2878:32;2875:119;;;2913:79;;:::i;:::-;2875:119;3033:1;3058:53;3103:7;3094:6;3083:9;3079:22;3058:53;:::i;:::-;3048:63;;3004:117;2799:329;;;;:::o;3134:118::-;3221:24;3239:5;3221:24;:::i;:::-;3216:3;3209:37;3134:118;;:::o;3258:222::-;3351:4;3389:2;3378:9;3374:18;3366:26;;3402:71;3470:1;3459:9;3455:17;3446:6;3402:71;:::i;:::-;3258:222;;;;:::o;3486:109::-;3567:21;3582:5;3567:21;:::i;:::-;3562:3;3555:34;3486:109;;:::o;3601:210::-;3688:4;3726:2;3715:9;3711:18;3703:26;;3739:65;3801:1;3790:9;3786:17;3777:6;3739:65;:::i;:::-;3601:210;;;;:::o;3817:108::-;3894:24;3912:5;3894:24;:::i;:::-;3889:3;3882:37;3817:108;;:::o;3931:::-;4008:24;4026:5;4008:24;:::i;:::-;4003:3;3996:37;3931:108;;:::o;4045:99::-;4116:21;4131:5;4116:21;:::i;:::-;4111:3;4104:34;4045:99;;:::o;4222:1072::-;4377:4;4372:3;4368:14;4477:4;4470:5;4466:16;4460:23;4496:63;4553:4;4548:3;4544:14;4530:12;4496:63;:::i;:::-;4392:177;4659:4;4652:5;4648:16;4642:23;4678:63;4735:4;4730:3;4726:14;4712:12;4678:63;:::i;:::-;4579:172;4835:4;4828:5;4824:16;4818:23;4854:63;4911:4;4906:3;4902:14;4888:12;4854:63;:::i;:::-;4761:166;5023:4;5016:5;5012:16;5006:23;5042:63;5099:4;5094:3;5090:14;5076:12;5042:63;:::i;:::-;4937:178;5201:4;5194:5;5190:16;5184:23;5220:57;5271:4;5266:3;5262:14;5248:12;5220:57;:::i;:::-;5125:162;4346:948;4222:1072;;:::o;5300:339::-;5451:4;5489:3;5478:9;5474:19;5466:27;;5503:129;5629:1;5618:9;5614:17;5605:6;5503:129;:::i;:::-;5300:339;;;;:::o;5645:474::-;5713:6;5721;5770:2;5758:9;5749:7;5745:23;5741:32;5738:119;;;5776:79;;:::i;:::-;5738:119;5896:1;5921:53;5966:7;5957:6;5946:9;5942:22;5921:53;:::i;:::-;5911:63;;5867:117;6023:2;6049:53;6094:7;6085:6;6074:9;6070:22;6049:53;:::i;:::-;6039:63;;5994:118;5645:474;;;;;:::o;6125:::-;6193:6;6201;6250:2;6238:9;6229:7;6225:23;6221:32;6218:119;;;6256:79;;:::i;:::-;6218:119;6376:1;6401:53;6446:7;6437:6;6426:9;6422:22;6401:53;:::i;:::-;6391:63;;6347:117;6503:2;6529:53;6574:7;6565:6;6554:9;6550:22;6529:53;:::i;:::-;6519:63;;6474:118;6125:474;;;;;:::o;6605:329::-;6664:6;6713:2;6701:9;6692:7;6688:23;6684:32;6681:119;;;6719:79;;:::i;:::-;6681:119;6839:1;6864:53;6909:7;6900:6;6889:9;6885:22;6864:53;:::i;:::-;6854:63;;6810:117;6605:329;;;;:::o;6940:141::-;7034:6;7068:5;7062:12;7052:22;;6940:141;;;:::o;7087:211::-;7213:11;7247:6;7242:3;7235:19;7287:4;7282:3;7278:14;7263:29;;7087:211;;;;:::o;7304:159::-;7398:4;7421:3;7413:11;;7451:4;7446:3;7442:14;7434:22;;7304:159;;;:::o;7537:1078::-;7678:4;7673:3;7669:14;7770:4;7763:5;7759:16;7753:23;7789:63;7846:4;7841:3;7837:14;7823:12;7789:63;:::i;:::-;7693:169;7952:4;7945:5;7941:16;7935:23;7971:63;8028:4;8023:3;8019:14;8005:12;7971:63;:::i;:::-;7872:172;8141:4;8134:5;8130:16;8124:23;8160:63;8217:4;8212:3;8208:14;8194:12;8160:63;:::i;:::-;8054:179;8335:4;8328:5;8324:16;8318:23;8354:63;8411:4;8406:3;8402:14;8388:12;8354:63;:::i;:::-;8243:184;8522:4;8515:5;8511:16;8505:23;8541:57;8592:4;8587:3;8583:14;8569:12;8541:57;:::i;:::-;8437:171;7647:968;7537:1078;;:::o;8621:287::-;8744:10;8765:100;8861:3;8853:6;8765:100;:::i;:::-;8897:4;8892:3;8888:14;8874:28;;8621:287;;;;:::o;8914:140::-;9011:4;9043;9038:3;9034:14;9026:22;;8914:140;;;:::o;9132:948::-;9305:3;9334:81;9409:5;9334:81;:::i;:::-;9431:113;9537:6;9532:3;9431:113;:::i;:::-;9424:120;;9568:83;9645:5;9568:83;:::i;:::-;9674:7;9705:1;9690:365;9715:6;9712:1;9709:13;9690:365;;;9791:6;9785:13;9818:117;9931:3;9916:13;9818:117;:::i;:::-;9811:124;;9958:87;10038:6;9958:87;:::i;:::-;9948:97;;9750:305;9737:1;9734;9730:9;9725:14;;9690:365;;;9694:14;10071:3;10064:10;;9310:770;;;9132:948;;;;:::o;10086:481::-;10283:4;10321:2;10310:9;10306:18;10298:26;;10370:9;10364:4;10360:20;10356:1;10345:9;10341:17;10334:47;10398:162;10555:4;10546:6;10398:162;:::i;:::-;10390:170;;10086:481;;;;:::o;10573:118::-;10660:24;10678:5;10660:24;:::i;:::-;10655:3;10648:37;10573:118;;:::o;10697:222::-;10790:4;10828:2;10817:9;10813:18;10805:26;;10841:71;10909:1;10898:9;10894:17;10885:6;10841:71;:::i;:::-;10697:222;;;;:::o;10925:474::-;10993:6;11001;11050:2;11038:9;11029:7;11025:23;11021:32;11018:119;;;11056:79;;:::i;:::-;11018:119;11176:1;11201:53;11246:7;11237:6;11226:9;11222:22;11201:53;:::i;:::-;11191:63;;11147:117;11303:2;11329:53;11374:7;11365:6;11354:9;11350:22;11329:53;:::i;:::-;11319:63;;11274:118;10925:474;;;;;:::o;11405:60::-;11433:3;11454:5;11447:12;;11405:60;;;:::o;11471:142::-;11521:9;11554:53;11572:34;11581:24;11599:5;11581:24;:::i;:::-;11572:34;:::i;:::-;11554:53;:::i;:::-;11541:66;;11471:142;;;:::o;11619:126::-;11669:9;11702:37;11733:5;11702:37;:::i;:::-;11689:50;;11619:126;;;:::o;11751:140::-;11815:9;11848:37;11879:5;11848:37;:::i;:::-;11835:50;;11751:140;;;:::o;11897:159::-;11998:51;12043:5;11998:51;:::i;:::-;11993:3;11986:64;11897:159;;:::o;12062:250::-;12169:4;12207:2;12196:9;12192:18;12184:26;;12220:85;12302:1;12291:9;12287:17;12278:6;12220:85;:::i;:::-;12062:250;;;;:::o;12318:169::-;12402:11;12436:6;12431:3;12424:19;12476:4;12471:3;12467:14;12452:29;;12318:169;;;;:::o;12493:::-;12633:21;12629:1;12621:6;12617:14;12610:45;12493:169;:::o;12668:366::-;12810:3;12831:67;12895:2;12890:3;12831:67;:::i;:::-;12824:74;;12907:93;12996:3;12907:93;:::i;:::-;13025:2;13020:3;13016:12;13009:19;;12668:366;;;:::o;13040:419::-;13206:4;13244:2;13233:9;13229:18;13221:26;;13293:9;13287:4;13283:20;13279:1;13268:9;13264:17;13257:47;13321:131;13447:4;13321:131;:::i;:::-;13313:139;;13040:419;;;:::o;13465:166::-;13605:18;13601:1;13593:6;13589:14;13582:42;13465:166;:::o;13637:366::-;13779:3;13800:67;13864:2;13859:3;13800:67;:::i;:::-;13793:74;;13876:93;13965:3;13876:93;:::i;:::-;13994:2;13989:3;13985:12;13978:19;;13637:366;;;:::o;14009:419::-;14175:4;14213:2;14202:9;14198:18;14190:26;;14262:9;14256:4;14252:20;14248:1;14237:9;14233:17;14226:47;14290:131;14416:4;14290:131;:::i;:::-;14282:139;;14009:419;;;:::o;14434:161::-;14574:13;14570:1;14562:6;14558:14;14551:37;14434:161;:::o;14601:366::-;14743:3;14764:67;14828:2;14823:3;14764:67;:::i;:::-;14757:74;;14840:93;14929:3;14840:93;:::i;:::-;14958:2;14953:3;14949:12;14942:19;;14601:366;;;:::o;14973:419::-;15139:4;15177:2;15166:9;15162:18;15154:26;;15226:9;15220:4;15216:20;15212:1;15201:9;15197:17;15190:47;15254:131;15380:4;15254:131;:::i;:::-;15246:139;;14973:419;;;:::o;15398:180::-;15446:77;15443:1;15436:88;15543:4;15540:1;15533:15;15567:4;15564:1;15557:15;15584:194;15624:4;15644:20;15662:1;15644:20;:::i;:::-;15639:25;;15678:20;15696:1;15678:20;:::i;:::-;15673:25;;15722:1;15719;15715:9;15707:17;;15746:1;15740:4;15737:11;15734:37;;;15751:18;;:::i;:::-;15734:37;15584:194;;;;:::o;15784:553::-;15961:4;15999:3;15988:9;15984:19;15976:27;;16013:71;16081:1;16070:9;16066:17;16057:6;16013:71;:::i;:::-;16094:72;16162:2;16151:9;16147:18;16138:6;16094:72;:::i;:::-;16176;16244:2;16233:9;16229:18;16220:6;16176:72;:::i;:::-;16258;16326:2;16315:9;16311:18;16302:6;16258:72;:::i;:::-;15784:553;;;;;;;:::o;16343:168::-;16483:20;16479:1;16471:6;16467:14;16460:44;16343:168;:::o;16517:366::-;16659:3;16680:67;16744:2;16739:3;16680:67;:::i;:::-;16673:74;;16756:93;16845:3;16756:93;:::i;:::-;16874:2;16869:3;16865:12;16858:19;;16517:366;;;:::o;16889:419::-;17055:4;17093:2;17082:9;17078:18;17070:26;;17142:9;17136:4;17132:20;17128:1;17117:9;17113:17;17106:47;17170:131;17296:4;17170:131;:::i;:::-;17162:139;;16889:419;;;:::o;17314:180::-;17362:77;17359:1;17352:88;17459:4;17456:1;17449:15;17483:4;17480:1;17473:15;17500:166;17640:18;17636:1;17628:6;17624:14;17617:42;17500:166;:::o;17672:366::-;17814:3;17835:67;17899:2;17894:3;17835:67;:::i;:::-;17828:74;;17911:93;18000:3;17911:93;:::i;:::-;18029:2;18024:3;18020:12;18013:19;;17672:366;;;:::o;18044:419::-;18210:4;18248:2;18237:9;18233:18;18225:26;;18297:9;18291:4;18287:20;18283:1;18272:9;18268:17;18261:47;18325:131;18451:4;18325:131;:::i;:::-;18317:139;;18044:419;;;:::o;18469:164::-;18609:16;18605:1;18597:6;18593:14;18586:40;18469:164;:::o;18639:366::-;18781:3;18802:67;18866:2;18861:3;18802:67;:::i;:::-;18795:74;;18878:93;18967:3;18878:93;:::i;:::-;18996:2;18991:3;18987:12;18980:19;;18639:366;;;:::o;19011:419::-;19177:4;19215:2;19204:9;19200:18;19192:26;;19264:9;19258:4;19254:20;19250:1;19239:9;19235:17;19228:47;19292:131;19418:4;19292:131;:::i;:::-;19284:139;;19011:419;;;:::o;19436:191::-;19476:3;19495:20;19513:1;19495:20;:::i;:::-;19490:25;;19529:20;19547:1;19529:20;:::i;:::-;19524:25;;19572:1;19569;19565:9;19558:16;;19593:3;19590:1;19587:10;19584:36;;;19600:18;;:::i;:::-;19584:36;19436:191;;;;:::o;19633:168::-;19773:20;19769:1;19761:6;19757:14;19750:44;19633:168;:::o;19807:366::-;19949:3;19970:67;20034:2;20029:3;19970:67;:::i;:::-;19963:74;;20046:93;20135:3;20046:93;:::i;:::-;20164:2;20159:3;20155:12;20148:19;;19807:366;;;:::o;20179:419::-;20345:4;20383:2;20372:9;20368:18;20360:26;;20432:9;20426:4;20422:20;20418:1;20407:9;20403:17;20396:47;20460:131;20586:4;20460:131;:::i;:::-;20452:139;;20179:419;;;:::o;20604:332::-;20725:4;20763:2;20752:9;20748:18;20740:26;;20776:71;20844:1;20833:9;20829:17;20820:6;20776:71;:::i;:::-;20857:72;20925:2;20914:9;20910:18;20901:6;20857:72;:::i;:::-;20604:332;;;;;:::o;20942:164::-;21082:16;21078:1;21070:6;21066:14;21059:40;20942:164;:::o;21112:366::-;21254:3;21275:67;21339:2;21334:3;21275:67;:::i;:::-;21268:74;;21351:93;21440:3;21351:93;:::i;:::-;21469:2;21464:3;21460:12;21453:19;;21112:366;;;:::o;21484:419::-;21650:4;21688:2;21677:9;21673:18;21665:26;;21737:9;21731:4;21727:20;21723:1;21712:9;21708:17;21701:47;21765:131;21891:4;21765:131;:::i;:::-;21757:139;;21484:419;;;:::o;21909:167::-;22049:19;22045:1;22037:6;22033:14;22026:43;21909:167;:::o;22082:366::-;22224:3;22245:67;22309:2;22304:3;22245:67;:::i;:::-;22238:74;;22321:93;22410:3;22321:93;:::i;:::-;22439:2;22434:3;22430:12;22423:19;;22082:366;;;:::o;22454:419::-;22620:4;22658:2;22647:9;22643:18;22635:26;;22707:9;22701:4;22697:20;22693:1;22682:9;22678:17;22671:47;22735:131;22861:4;22735:131;:::i;:::-;22727:139;;22454:419;;;:::o;22879:332::-;23000:4;23038:2;23027:9;23023:18;23015:26;;23051:71;23119:1;23108:9;23104:17;23095:6;23051:71;:::i;:::-;23132:72;23200:2;23189:9;23185:18;23176:6;23132:72;:::i;:::-;22879:332;;;;;:::o;23217:162::-;23357:14;23353:1;23345:6;23341:14;23334:38;23217:162;:::o;23385:366::-;23527:3;23548:67;23612:2;23607:3;23548:67;:::i;:::-;23541:74;;23624:93;23713:3;23624:93;:::i;:::-;23742:2;23737:3;23733:12;23726:19;;23385:366;;;:::o;23757:419::-;23923:4;23961:2;23950:9;23946:18;23938:26;;24010:9;24004:4;24000:20;23996:1;23985:9;23981:17;23974:47;24038:131;24164:4;24038:131;:::i;:::-;24030:139;;23757:419;;;:::o;24182:167::-;24322:19;24318:1;24310:6;24306:14;24299:43;24182:167;:::o;24355:366::-;24497:3;24518:67;24582:2;24577:3;24518:67;:::i;:::-;24511:74;;24594:93;24683:3;24594:93;:::i;:::-;24712:2;24707:3;24703:12;24696:19;;24355:366;;;:::o;24727:419::-;24893:4;24931:2;24920:9;24916:18;24908:26;;24980:9;24974:4;24970:20;24966:1;24955:9;24951:17;24944:47;25008:131;25134:4;25008:131;:::i;:::-;25000:139;;24727:419;;;:::o;25152:332::-;25273:4;25311:2;25300:9;25296:18;25288:26;;25324:71;25392:1;25381:9;25377:17;25368:6;25324:71;:::i;:::-;25405:72;25473:2;25462:9;25458:18;25449:6;25405:72;:::i;:::-;25152:332;;;;;:::o;25490:173::-;25630:25;25626:1;25618:6;25614:14;25607:49;25490:173;:::o;25669:366::-;25811:3;25832:67;25896:2;25891:3;25832:67;:::i;:::-;25825:74;;25908:93;25997:3;25908:93;:::i;:::-;26026:2;26021:3;26017:12;26010:19;;25669:366;;;:::o;26041:419::-;26207:4;26245:2;26234:9;26230:18;26222:26;;26294:9;26288:4;26284:20;26280:1;26269:9;26265:17;26258:47;26322:131;26448:4;26322:131;:::i;:::-;26314:139;;26041:419;;;:::o;26466:166::-;26606:18;26602:1;26594:6;26590:14;26583:42;26466:166;:::o;26638:366::-;26780:3;26801:67;26865:2;26860:3;26801:67;:::i;:::-;26794:74;;26877:93;26966:3;26877:93;:::i;:::-;26995:2;26990:3;26986:12;26979:19;;26638:366;;;:::o;27010:419::-;27176:4;27214:2;27203:9;27199:18;27191:26;;27263:9;27257:4;27253:20;27249:1;27238:9;27234:17;27227:47;27291:131;27417:4;27291:131;:::i;:::-;27283:139;;27010:419;;;:::o;27435:175::-;27575:27;27571:1;27563:6;27559:14;27552:51;27435:175;:::o;27616:366::-;27758:3;27779:67;27843:2;27838:3;27779:67;:::i;:::-;27772:74;;27855:93;27944:3;27855:93;:::i;:::-;27973:2;27968:3;27964:12;27957:19;;27616:366;;;:::o;27988:419::-;28154:4;28192:2;28181:9;28177:18;28169:26;;28241:9;28235:4;28231:20;28227:1;28216:9;28212:17;28205:47;28269:131;28395:4;28269:131;:::i;:::-;28261:139;;27988:419;;;:::o;28413:170::-;28553:22;28549:1;28541:6;28537:14;28530:46;28413:170;:::o;28589:366::-;28731:3;28752:67;28816:2;28811:3;28752:67;:::i;:::-;28745:74;;28828:93;28917:3;28828:93;:::i;:::-;28946:2;28941:3;28937:12;28930:19;;28589:366;;;:::o;28961:419::-;29127:4;29165:2;29154:9;29150:18;29142:26;;29214:9;29208:4;29204:20;29200:1;29189:9;29185:17;29178:47;29242:131;29368:4;29242:131;:::i;:::-;29234:139;;28961:419;;;:::o;29386:181::-;29526:33;29522:1;29514:6;29510:14;29503:57;29386:181;:::o;29573:366::-;29715:3;29736:67;29800:2;29795:3;29736:67;:::i;:::-;29729:74;;29812:93;29901:3;29812:93;:::i;:::-;29930:2;29925:3;29921:12;29914:19;;29573:366;;;:::o;29945:419::-;30111:4;30149:2;30138:9;30134:18;30126:26;;30198:9;30192:4;30188:20;30184:1;30173:9;30169:17;30162:47;30226:131;30352:4;30226:131;:::i;:::-;30218:139;;29945:419;;;:::o;30370:410::-;30410:7;30433:20;30451:1;30433:20;:::i;:::-;30428:25;;30467:20;30485:1;30467:20;:::i;:::-;30462:25;;30522:1;30519;30515:9;30544:30;30562:11;30544:30;:::i;:::-;30533:41;;30723:1;30714:7;30710:15;30707:1;30704:22;30684:1;30677:9;30657:83;30634:139;;30753:18;;:::i;:::-;30634:139;30418:362;30370:410;;;;:::o;30786:180::-;30834:77;30831:1;30824:88;30931:4;30928:1;30921:15;30955:4;30952:1;30945:15;30972:185;31012:1;31029:20;31047:1;31029:20;:::i;:::-;31024:25;;31063:20;31081:1;31063:20;:::i;:::-;31058:25;;31102:1;31092:35;;31107:18;;:::i;:::-;31092:35;31149:1;31146;31142:9;31137:14;;30972:185;;;;:::o;31163:166::-;31303:18;31299:1;31291:6;31287:14;31280:42;31163:166;:::o;31335:366::-;31477:3;31498:67;31562:2;31557:3;31498:67;:::i;:::-;31491:74;;31574:93;31663:3;31574:93;:::i;:::-;31692:2;31687:3;31683:12;31676:19;;31335:366;;;:::o;31707:419::-;31873:4;31911:2;31900:9;31896:18;31888:26;;31960:9;31954:4;31950:20;31946:1;31935:9;31931:17;31924:47;31988:131;32114:4;31988:131;:::i;:::-;31980:139;;31707:419;;;:::o;32132:442::-;32281:4;32319:2;32308:9;32304:18;32296:26;;32332:71;32400:1;32389:9;32385:17;32376:6;32332:71;:::i;:::-;32413:72;32481:2;32470:9;32466:18;32457:6;32413:72;:::i;:::-;32495;32563:2;32552:9;32548:18;32539:6;32495:72;:::i;:::-;32132:442;;;;;;:::o;32580:170::-;32720:22;32716:1;32708:6;32704:14;32697:46;32580:170;:::o;32756:366::-;32898:3;32919:67;32983:2;32978:3;32919:67;:::i;:::-;32912:74;;32995:93;33084:3;32995:93;:::i;:::-;33113:2;33108:3;33104:12;33097:19;;32756:366;;;:::o;33128:419::-;33294:4;33332:2;33321:9;33317:18;33309:26;;33381:9;33375:4;33371:20;33367:1;33356:9;33352:17;33345:47;33409:131;33535:4;33409:131;:::i;:::-;33401:139;;33128:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2599000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BPS_DENOMINATOR()": "414",
								"MAX_FEE_BPS()": "414",
								"SECONDS_PER_YEAR()": "391",
								"acceptOwnership()": "54714",
								"autoCompoundFeeBps()": "2471",
								"calculatePendingRewards(address,uint256)": "infinite",
								"claimStakeRewards(uint256)": "infinite",
								"configureNewPackage(address,uint256,uint256,uint256)": "infinite",
								"createStake(uint256,uint256)": "infinite",
								"emergencyPause()": "infinite",
								"emergencyUnpause()": "infinite",
								"feeCollector()": "2575",
								"feePoolBalance()": "2470",
								"getActivePackageCount()": "2485",
								"getPackageDetails(uint256)": "infinite",
								"getUserStakes(address)": "infinite",
								"owner()": "2582",
								"paused()": "2541",
								"pendingOwner()": "2559",
								"renounceOwnership()": "infinite",
								"rewardToken()": "infinite",
								"toggleAutoCompound(uint256)": "86279",
								"transferOwnership(address)": "infinite",
								"updateFeeParameters(uint256,address)": "infinite",
								"updatePackageAPY(uint256,uint256)": "infinite",
								"updatePackageStatus(uint256,bool)": "infinite",
								"withdrawAccumulatedFees()": "infinite",
								"withdrawStake(uint256)": "infinite"
							},
							"internal": {
								"_calculateAccruedRewards(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1609,
									"end": 1611,
									"name": "PUSH",
									"source": 11,
									"value": "32"
								},
								{
									"begin": 1573,
									"end": 1611,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 1573,
									"end": 1611,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 3275,
									"end": 3672,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3404,
									"end": 3416,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1006,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 996,
									"end": 1003,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "100"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "EXP",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SLOAD",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "PUSH",
									"source": 5,
									"value": "FF"
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "NOT",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "MUL",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "OR",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "SSTORE",
									"source": 5
								},
								{
									"begin": 996,
									"end": 1011,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 3466,
									"end": 3467,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3436,
									"end": 3468,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3454,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3468,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3436,
									"end": 3468,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3436,
									"end": 3468,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 3428,
									"end": 3493,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 3428,
									"end": 3493,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3542,
									"end": 3543,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3511,
									"end": 3544,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3511,
									"end": 3544,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3530,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3544,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3511,
									"end": 3544,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3511,
									"end": 3544,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 3503,
									"end": 3570,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 3503,
									"end": 3570,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 3602,
									"end": 3620,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3581,
									"end": 3621,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3646,
									"end": 3665,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3643,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "5"
								},
								{
									"begin": 3631,
									"end": 3643,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 3631,
									"end": 3665,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 3275,
									"end": 3672,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2100,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2093,
									"end": 2113,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2148,
									"end": 2156,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2123,
									"end": 2147,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2123,
									"end": 2157,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2164,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2011,
									"end": 2164,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "50"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "52"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "29"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 12,
									"value": "55"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 12,
									"value": "57"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 12
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 12,
									"value": "58"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 12,
									"value": "11"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1979,
									"end": 1982,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1972,
									"end": 1991,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2024,
									"end": 2028,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2022,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2015,
									"end": 2029,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1866,
									"end": 2035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2211,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2041,
									"end": 2211,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2181,
									"end": 2203,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C69642072657761726420746F6B656E000000000000000000000000"
								},
								{
									"begin": 2177,
									"end": 2178,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2165,
									"end": 2179,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2158,
									"end": 2204,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2211,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2041,
									"end": 2211,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2583,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2217,
									"end": 2583,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2359,
									"end": 2362,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2380,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2444,
									"end": 2446,
									"name": "PUSH",
									"source": 12,
									"value": "14"
								},
								{
									"begin": 2439,
									"end": 2442,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2380,
									"end": 2447,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 2380,
									"end": 2447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2380,
									"end": 2447,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 2380,
									"end": 2447,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2373,
									"end": 2447,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2373,
									"end": 2447,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2456,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2545,
									"end": 2548,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2456,
									"end": 2549,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 2456,
									"end": 2549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2456,
									"end": 2549,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 2456,
									"end": 2549,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2574,
									"end": 2576,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2569,
									"end": 2572,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2565,
									"end": 2577,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2577,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2558,
									"end": 2577,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2583,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2583,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2583,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2217,
									"end": 2583,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 3008,
									"name": "tag",
									"source": 12,
									"value": "19"
								},
								{
									"begin": 2589,
									"end": 3008,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2755,
									"end": 2759,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2793,
									"end": 2795,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2782,
									"end": 2791,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2778,
									"end": 2796,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2770,
									"end": 2796,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2770,
									"end": 2796,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2842,
									"end": 2851,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2836,
									"end": 2840,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2832,
									"end": 2852,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2828,
									"end": 2829,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2817,
									"end": 2826,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2813,
									"end": 2830,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2806,
									"end": 2853,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2996,
									"end": 3000,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 3001,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 2870,
									"end": 3001,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2870,
									"end": 3001,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2870,
									"end": 3001,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2862,
									"end": 3001,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2862,
									"end": 3001,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 3008,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 3008,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 3008,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 3008,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3185,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3014,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3154,
									"end": 3177,
									"name": "PUSH",
									"source": 12,
									"value": "496E76616C69642066656520636F6C6C6563746F720000000000000000000000"
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3142,
									"end": 3148,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3138,
									"end": 3152,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3131,
									"end": 3178,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3185,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3014,
									"end": 3185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3333,
									"end": 3336,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3418,
									"end": 3420,
									"name": "PUSH",
									"source": 12,
									"value": "15"
								},
								{
									"begin": 3413,
									"end": 3416,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 3354,
									"end": 3421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "tag",
									"source": 12,
									"value": "72"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 3519,
									"end": 3522,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 3430,
									"end": 3523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3548,
									"end": 3550,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3546,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3539,
									"end": 3551,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3191,
									"end": 3557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "tag",
									"source": 12,
									"value": "22"
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3767,
									"end": 3769,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3752,
									"end": 3770,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3816,
									"end": 3825,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3806,
									"end": 3826,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 3802,
									"end": 3803,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3800,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 3787,
									"end": 3804,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3780,
									"end": 3827,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3970,
									"end": 3974,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 3844,
									"end": 3975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "tag",
									"source": 12,
									"value": "75"
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 3563,
									"end": 3982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "tag",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "1132"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 558,
									"end": 10442,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d9a8cf148e9c28ec1d3155c5f23e6498ee62ea58115147817a28b70fbdd9f65064736f6c634300081e0033",
									".code": [
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "842E2981"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "DB94EBC9"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "E30C3978"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "E30C3978"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "E6A69AB8"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "F7C618C1"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "DB94EBC9"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "DD69BECD"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "E1A45218"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "985145B5"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "985145B5"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "C415B95C"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "D55BE8C6"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "D7FA023D"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "842E2981"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "973E46B1"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "5A4D8489"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "79BA5097"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "7F6A9184"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "7FC7984D"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "5A4D8489"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "6C435E36"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "2BA662D6"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "2BA662D6"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "2E185EC7"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "4A4E3BD5"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "51858E27"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "1BD9B708"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "217A51EE"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "25D5971F"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 558,
											"end": 10442,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7962,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7962,
											"end": 8761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 8767,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 8767,
											"end": 9017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 5317,
											"end": 6323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 5317,
											"end": 6323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1573,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1573,
											"end": 1611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 9944,
											"end": 10284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 10366,
											"end": 10440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 10290,
											"end": 10360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "tag",
											"source": 11,
											"value": "58"
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 6329,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 6329,
											"end": 6686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "RETURN",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 7589,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 7589,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 7589,
											"end": 7785,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2244,
											"end": 2473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 9023,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 9023,
											"end": 9545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 6736,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6736,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 6736,
											"end": 6923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 7791,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "tag",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 7791,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 7791,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 9551,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 9551,
											"end": 9938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7475,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 7475,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1540,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 1540,
											"end": 1567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "104"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1164,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1164,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "tag",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 3722,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3722,
											"end": 4650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1629,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "tag",
											"source": 11,
											"value": "111"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1629,
											"end": 1658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "tag",
											"source": 11,
											"value": "113"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 4656,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "tag",
											"source": 11,
											"value": "115"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4656,
											"end": 5311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "tag",
											"source": 11,
											"value": "114"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1288,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "117"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1288,
											"end": 1335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "119"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "122"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 1231,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "123"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 1231,
											"end": 1282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "125"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "87"
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "127"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "STOP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "tag",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1415,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 1415,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8160,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8148,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8138,
											"end": 8162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8138,
											"end": 8162,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 8130,
											"end": 8186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 8130,
											"end": 8186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8215,
											"end": 8216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8204,
											"end": 8212,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8204,
											"end": 8216,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 8196,
											"end": 8237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 8196,
											"end": 8237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8264,
											"end": 8265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8255,
											"end": 8261,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8265,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1335,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 8269,
											"end": 8275,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8269,
											"end": 8294,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 8269,
											"end": 8294,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 8255,
											"end": 8294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 8247,
											"end": 8310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 8247,
											"end": 8310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8333,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8401,
											"end": 8411,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8443,
											"end": 8451,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8477,
											"end": 8483,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8521,
											"end": 8529,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8557,
											"end": 8561,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8352,
											"end": 8576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8321,
											"end": 8586,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8655,
											"end": 8656,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 8633,
											"end": 8645,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8633,
											"end": 8652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8652,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8633,
											"end": 8656,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8656,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8656,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 8633,
											"end": 8656,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8633,
											"end": 8656,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 8633,
											"end": 8656,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5752C03E5C1D84A4868E347BE593E78A3F0F449821FF8E628806E528A877618"
										},
										{
											"begin": 8670,
											"end": 8680,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8694,
											"end": 8702,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8716,
											"end": 8722,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8736,
											"end": 8744,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 8602,
											"end": 8754,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8602,
											"end": 8754,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7962,
											"end": 8761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "tag",
											"source": 11,
											"value": "45"
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8886,
											"end": 8895,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2802,
											"end": 2864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "156"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "155"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8946,
											"end": 8954,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8923,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8924,
											"end": 8933,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 8911,
											"end": 8934,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8934,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 8911,
											"end": 8943,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8943,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 8911,
											"end": 8954,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8990,
											"end": 8999,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "27FFAC29F91E32ED296E1AE41A59F23EBEFBCAC53EB28251A6FD6A5BE271970A"
										},
										{
											"begin": 9001,
											"end": 9009,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 8969,
											"end": 9010,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 8969,
											"end": 9010,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 8767,
											"end": 9017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "165"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5414,
											"end": 5424,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5426,
											"end": 5433,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2982,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2990,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2949,
											"end": 3011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3046,
											"end": 3053,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3029,
											"end": 3054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3071,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3021,
											"end": 3090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5475,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5488,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5499,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5500,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5501,
											"end": 5508,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5478,
											"end": 5509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5478,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5449,
											"end": 5509,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5545,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5561,
											"end": 5570,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5561,
											"end": 5580,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5561,
											"end": 5580,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5561,
											"end": 5580,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5548,
											"end": 5581,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5548,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5519,
											"end": 5581,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5671,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5684,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5664,
											"end": 5684,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5664,
											"end": 5684,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5641,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5661,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5632,
											"end": 5661,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5661,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5684,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5632,
											"end": 5684,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5684,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5684,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5632,
											"end": 5684,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5632,
											"end": 5684,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 5632,
											"end": 5684,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5628,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5684,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5613,
											"end": 5684,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "188"
										},
										{
											"begin": 5592,
											"end": 5728,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 5592,
											"end": 5728,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5759,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5762,
											"end": 5807,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 5787,
											"end": 5797,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5799,
											"end": 5806,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5762,
											"end": 5786,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 5762,
											"end": 5807,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5762,
											"end": 5807,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "189"
										},
										{
											"begin": 5762,
											"end": 5807,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5807,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5739,
											"end": 5807,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5840,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5843,
											"end": 5852,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5865,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5843,
											"end": 5865,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5843,
											"end": 5865,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5865,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5817,
											"end": 5865,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5955,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5956,
											"end": 5966,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5967,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5968,
											"end": 5975,
											"modifierDepth": 2,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 5945,
											"end": 5976,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5945,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5938,
											"end": 5976,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6064,
											"end": 6074,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6076,
											"end": 6091,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6031,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6049,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6024,
											"end": 6049,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6024,
											"end": 6049,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6063,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6017,
											"end": 6063,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 6017,
											"end": 6063,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "194"
										},
										{
											"begin": 6017,
											"end": 6092,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6157,
											"end": 6158,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6142,
											"end": 6154,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 6142,
											"end": 6158,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 6138,
											"end": 6235,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6138,
											"end": 6235,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 6138,
											"end": 6235,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 6199,
											"end": 6209,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6211,
											"end": 6223,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6185,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1132"
										},
										{
											"begin": 6174,
											"end": 6198,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6174,
											"end": 6198,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6198,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 6174,
											"end": 6198,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 6174,
											"end": 6224,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6138,
											"end": 6235,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "196"
										},
										{
											"begin": 6138,
											"end": 6235,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6277,
											"end": 6284,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 6265,
											"end": 6275,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "88D1C46373223A4F1F60DB2BADC985B05EC9C2B2EAB4537F0F8E1291B78B6E37"
										},
										{
											"begin": 6286,
											"end": 6301,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6303,
											"end": 6315,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 6250,
											"end": 6316,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6250,
											"end": 6316,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 6323,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 6323,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 6323,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5439,
											"end": 6323,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5317,
											"end": 6323,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5317,
											"end": 6323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1573,
											"end": 1611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 9944,
											"end": 10284,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10032,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10006,
											"end": 10016,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10006,
											"end": 10032,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 9998,
											"end": 10051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 9998,
											"end": 10051,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10075,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10078,
											"end": 10092,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 10078,
											"end": 10092,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10092,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10061,
											"end": 10092,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10119,
											"end": 10120,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10110,
											"end": 10116,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10110,
											"end": 10120,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 10102,
											"end": 10142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "tag",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 10102,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10170,
											"end": 10171,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10153,
											"end": 10167,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10153,
											"end": 10171,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10206,
											"end": 10218,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10220,
											"end": 10226,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10192,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1132"
										},
										{
											"begin": 10181,
											"end": 10205,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10205,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10205,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 10181,
											"end": 10205,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "tag",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 10181,
											"end": 10227,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "PUSH",
											"source": 11,
											"value": "C0819C13BE868895EB93E40EACEB96DE976442FA1D404E5C55F14BB65A8C489A"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10256,
											"end": 10268,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10270,
											"end": 10276,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 10242,
											"end": 10277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10242,
											"end": 10277,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 9988,
											"end": 10284,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9944,
											"end": 10284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "tag",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 10366,
											"end": 10440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10423,
											"end": 10433,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 10423,
											"end": 10431,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "216"
										},
										{
											"begin": 10423,
											"end": 10433,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10423,
											"end": 10433,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 10423,
											"end": 10433,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10366,
											"end": 10440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "tag",
											"source": 11,
											"value": "59"
										},
										{
											"begin": 10290,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10345,
											"end": 10353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 10345,
											"end": 10351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10345,
											"end": 10353,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10345,
											"end": 10353,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 10345,
											"end": 10353,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10290,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6431,
											"end": 6441,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6443,
											"end": 6450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2982,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2990,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2949,
											"end": 3011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "226"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "225"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3046,
											"end": 3053,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3029,
											"end": 3054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "228"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "227"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3071,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3021,
											"end": 3090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6493,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6506,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6507,
											"end": 6517,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6518,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6519,
											"end": 6526,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 6496,
											"end": 6527,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6496,
											"end": 6527,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6527,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6466,
											"end": 6527,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6577,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6568,
											"end": 6595,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6567,
											"end": 6595,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6546,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6537,
											"end": 6564,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6564,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 6537,
											"end": 6595,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6642,
											"end": 6649,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6630,
											"end": 6640,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D9A4263CD64BEF5364CF9865147C8561E0C7151A9E1D79D8AA67DF565AA96EFE"
										},
										{
											"begin": 6651,
											"end": 6660,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 6651,
											"end": 6678,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 6610,
											"end": 6679,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6610,
											"end": 6679,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 6456,
											"end": 6686,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6329,
											"end": 6686,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6329,
											"end": 6686,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1666,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "DIV",
											"source": 5
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 1685,
											"end": 1692,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1678,
											"end": 1692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1615,
											"end": 1699,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7714,
											"end": 7732,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 7714,
											"end": 7732,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7714,
											"end": 7732,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 7714,
											"end": 7732,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7686,
											"end": 7695,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2834,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2819,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2841,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2802,
											"end": 2864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "tag",
											"source": 11,
											"value": "243"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "tag",
											"source": 11,
											"value": "242"
										},
										{
											"begin": 2802,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7767,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7768,
											"end": 7777,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 7755,
											"end": 7778,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "246"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "245"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7755,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7748,
											"end": 7778,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7589,
											"end": 7785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 2244,
											"end": 2473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2313,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 2313,
											"end": 2325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 2313,
											"end": 2325,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2325,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2296,
											"end": 2325,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2357,
											"end": 2363,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2339,
											"end": 2351,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 2339,
											"end": 2353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2339,
											"end": 2353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2413,
											"end": 2419,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2386,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2420,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2335,
											"end": 2431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2459,
											"end": 2465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2440,
											"end": 2466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2440,
											"end": 2466,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2286,
											"end": 2473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2244,
											"end": 2473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9143,
											"end": 9152,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2834,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2819,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2802,
											"end": 2864,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "264"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "263"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9188,
											"end": 9189,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9176,
											"end": 9185,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9189,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1335,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 9193,
											"end": 9202,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9193,
											"end": 9221,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9193,
											"end": 9221,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "266"
										},
										{
											"begin": 9176,
											"end": 9221,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 9168,
											"end": 9237,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "268"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "267"
										},
										{
											"begin": 9168,
											"end": 9237,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9280,
											"end": 9289,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9259,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9260,
											"end": 9269,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 9247,
											"end": 9270,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "270"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "269"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9270,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9277,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 9247,
											"end": 9277,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9289,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9289,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9289,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9247,
											"end": 9289,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9335,
											"end": 9344,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5752C03E5C1D84A4868E347BE593E78A3F0F449821FF8E628806E528A877618"
										},
										{
											"begin": 9358,
											"end": 9370,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9371,
											"end": 9380,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 9358,
											"end": 9381,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "273"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "272"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9381,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9358,
											"end": 9399,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9425,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9426,
											"end": 9435,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 9413,
											"end": 9436,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "276"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "275"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9436,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9449,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 9413,
											"end": 9449,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9413,
											"end": 9449,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9463,
											"end": 9472,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9498,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9499,
											"end": 9508,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 9486,
											"end": 9509,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "279"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "278"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9509,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9528,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 9486,
											"end": 9528,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9486,
											"end": 9528,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 9304,
											"end": 9538,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "281"
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9304,
											"end": 9538,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1554,
											"end": 1555,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9023,
											"end": 9545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6847,
											"end": 6854,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 6877,
											"end": 6916,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 6902,
											"end": 6906,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6908,
											"end": 6915,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 6901,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6877,
											"end": 6916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6877,
											"end": 6916,
											"name": "tag",
											"source": 11,
											"value": "283"
										},
										{
											"begin": 6877,
											"end": 6916,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6870,
											"end": 6916,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6870,
											"end": 6916,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6736,
											"end": 6923,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7851,
											"end": 7869,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7888,
											"end": 7898,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7899,
											"end": 7903,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7888,
											"end": 7904,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "tag",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "285"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "tag",
											"source": 11,
											"value": "286"
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7881,
											"end": 7904,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7791,
											"end": 7911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1202,
											"end": 1206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 9678,
											"end": 9687,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9702,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 9678,
											"end": 9702,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "294"
										},
										{
											"begin": 9670,
											"end": 9719,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "293"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "292"
										},
										{
											"begin": 9670,
											"end": 9719,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9761,
											"end": 9762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9737,
											"end": 9763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9737,
											"end": 9763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9737,
											"end": 9749,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9737,
											"end": 9763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9737,
											"end": 9763,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9737,
											"end": 9763,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "297"
										},
										{
											"begin": 9729,
											"end": 9785,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "296"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "295"
										},
										{
											"begin": 9729,
											"end": 9785,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9825,
											"end": 9834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9804,
											"end": 9822,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 9804,
											"end": 9834,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9804,
											"end": 9834,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9804,
											"end": 9834,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9804,
											"end": 9834,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9859,
											"end": 9871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 9844,
											"end": 9856,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 9844,
											"end": 9871,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2CF325792651B724D47F21230BE0DD9729866CADD370618845E23A48555EF042"
										},
										{
											"begin": 9907,
											"end": 9916,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9918,
											"end": 9930,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "299"
										},
										{
											"begin": 9886,
											"end": 9931,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "298"
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9886,
											"end": 9931,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9551,
											"end": 9938,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7531,
											"end": 7538,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7557,
											"end": 7569,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7557,
											"end": 7576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7550,
											"end": 7576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7475,
											"end": 7583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1540,
											"end": 1567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1202,
											"end": 1206,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 1164,
											"end": 1206,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1164,
											"end": 1206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "tag",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1239,
											"end": 1256,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "304"
										},
										{
											"begin": 1239,
											"end": 1258,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3859,
											"end": 3868,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2841,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2819,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2810,
											"end": 2841,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 2802,
											"end": 2864,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "308"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "307"
										},
										{
											"begin": 2802,
											"end": 2864,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3893,
											"end": 3899,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3181,
											"end": 3182,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3178,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3172,
											"end": 3182,
											"modifierDepth": 3,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "312"
										},
										{
											"begin": 3164,
											"end": 3210,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "311"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "tag",
											"source": 11,
											"value": "310"
										},
										{
											"begin": 3164,
											"end": 3210,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3942,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3957,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3958,
											"end": 3967,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3945,
											"end": 3968,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "315"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "314"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3945,
											"end": 3968,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3968,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3915,
											"end": 3968,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 3993,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 3986,
											"end": 4002,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "319"
										},
										{
											"begin": 3978,
											"end": 4023,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "318"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "317"
										},
										{
											"begin": 3978,
											"end": 4023,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4051,
											"end": 4058,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4051,
											"end": 4077,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4051,
											"end": 4077,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4051,
											"end": 4077,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4047,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4077,
											"modifierDepth": 4,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4041,
											"end": 4077,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "322"
										},
										{
											"begin": 4033,
											"end": 4107,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "321"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "320"
										},
										{
											"begin": 4033,
											"end": 4107,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4182,
											"end": 4192,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4214,
											"end": 4218,
											"modifierDepth": 4,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 4233,
											"end": 4239,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4132,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4125,
											"end": 4150,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4168,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4168,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4168,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "324"
										},
										{
											"begin": 4118,
											"end": 4168,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "323"
										},
										{
											"begin": 4118,
											"end": 4249,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4270,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4271,
											"end": 4281,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4282,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4340,
											"end": 4349,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4381,
											"end": 4387,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4426,
											"end": 4441,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4485,
											"end": 4500,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4537,
											"end": 4542,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4301,
											"end": 4557,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4260,
											"end": 4567,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4608,
											"end": 4617,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4596,
											"end": 4606,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "20400DB7CF9BDFCB8B13CCFB8A7B4BB447C3244EFDBC2336E6F6E1673D7BD845"
										},
										{
											"begin": 4619,
											"end": 4625,
											"modifierDepth": 4,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4627,
											"end": 4642,
											"modifierDepth": 4,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 4583,
											"end": 4643,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "tag",
											"source": 11,
											"value": "326"
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4583,
											"end": 4643,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 3905,
											"end": 4650,
											"modifierDepth": 4,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2874,
											"end": 2875,
											"modifierDepth": 3,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1268,
											"end": 1269,
											"modifierDepth": 2,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "327"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3722,
											"end": 4650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "tag",
											"source": 11,
											"value": "112"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "PUSH",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1629,
											"end": 1658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "tag",
											"source": 11,
											"value": "116"
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 6,
											"value": "329"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4757,
											"end": 4767,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4769,
											"end": 4776,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2977,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2982,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2967,
											"end": 2983,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2967,
											"end": 2990,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2964,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2957,
											"end": 2990,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2949,
											"end": 3011,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "331"
										},
										{
											"begin": 2949,
											"end": 3011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3039,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3040,
											"end": 3044,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3045,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3046,
											"end": 3053,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 3029,
											"end": 3054,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "334"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "333"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3054,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3029,
											"end": 3071,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 3021,
											"end": 3090,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "337"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "336"
										},
										{
											"begin": 3021,
											"end": 3090,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4819,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4832,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4833,
											"end": 4843,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4844,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4845,
											"end": 4852,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 4822,
											"end": 4853,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "340"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "339"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 4822,
											"end": 4853,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4853,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4792,
											"end": 4853,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4883,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4886,
											"end": 4931,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4911,
											"end": 4921,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 4923,
											"end": 4930,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 4886,
											"end": 4910,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 4886,
											"end": 4931,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4886,
											"end": 4931,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "342"
										},
										{
											"begin": 4886,
											"end": 4931,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4931,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4863,
											"end": 4931,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4964,
											"end": 4965,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4949,
											"end": 4961,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4949,
											"end": 4965,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "345"
										},
										{
											"begin": 4941,
											"end": 4990,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "344"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "343"
										},
										{
											"begin": 4941,
											"end": 4990,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5038,
											"end": 5053,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5010,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5035,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 5001,
											"end": 5035,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5053,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5053,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5001,
											"end": 5053,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5077,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 5068,
											"end": 5095,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 5137,
											"end": 5149,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5120,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5133,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 5111,
											"end": 5133,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5133,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 5111,
											"end": 5149,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "347"
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 5111,
											"end": 5149,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "346"
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5205,
											"end": 5215,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5217,
											"end": 5229,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5191,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1132"
										},
										{
											"begin": 5180,
											"end": 5204,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5204,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5204,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 5180,
											"end": 5204,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "349"
										},
										{
											"begin": 5180,
											"end": 5230,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "348"
										},
										{
											"begin": 5064,
											"end": 5241,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5282,
											"end": 5289,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 5270,
											"end": 5280,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "F01DA32686223933D8A18A391060918C7F11A3648639EDD87AE013E2E2731743"
										},
										{
											"begin": 5291,
											"end": 5303,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 5256,
											"end": 5304,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "350"
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 5256,
											"end": 5304,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 4782,
											"end": 5311,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4782,
											"end": 5311,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2292,
											"end": 2293,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4656,
											"end": 5311,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 4656,
											"end": 5311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "tag",
											"source": 11,
											"value": "118"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 1288,
											"end": 1335,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1288,
											"end": 1335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1285,
											"end": 1292,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1311,
											"end": 1324,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1331,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "tag",
											"source": 11,
											"value": "124"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1274,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "1E13380"
										},
										{
											"begin": 1231,
											"end": 1282,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1231,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "354"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1754,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 1738,
											"end": 1751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 1738,
											"end": 1762,
											"modifierDepth": 1,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1819,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1802,
											"end": 1807,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 1802,
											"end": 1809,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 1802,
											"end": 1809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "38D16B8CAC22D99FC7C124B9CD0DE2D3FA1FAEF420BFE791D8C362D765E22700"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1777,
											"end": 1820,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "tag",
											"source": 11,
											"value": "130"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "1132"
										},
										{
											"begin": 1415,
											"end": 1450,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1415,
											"end": 1450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "358"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 6,
											"value": "166"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "366"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "365"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7041,
											"end": 7048,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7090,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7103,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7104,
											"end": 7108,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7109,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7110,
											"end": 7117,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 7093,
											"end": 7118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "tag",
											"source": 11,
											"value": "369"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "tag",
											"source": 11,
											"value": "368"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7093,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7064,
											"end": 7118,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7158,
											"end": 7159,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7132,
											"end": 7141,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7132,
											"end": 7154,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7132,
											"end": 7154,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7132,
											"end": 7154,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7132,
											"end": 7159,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 7128,
											"end": 7169,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7168,
											"end": 7169,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7161,
											"end": 7169,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7161,
											"end": 7169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7161,
											"end": 7169,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7161,
											"end": 7169,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 7161,
											"end": 7169,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7128,
											"end": 7169,
											"name": "tag",
											"source": 11,
											"value": "371"
										},
										{
											"begin": 7128,
											"end": 7169,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7206,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7221,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7222,
											"end": 7231,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7222,
											"end": 7241,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7222,
											"end": 7241,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7222,
											"end": 7241,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 7209,
											"end": 7242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "tag",
											"source": 11,
											"value": "373"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "tag",
											"source": 11,
											"value": "372"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 7209,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "A0"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7180,
											"end": 7242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 7292,
											"end": 7301,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "PUSH",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7292,
											"end": 7326,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7274,
											"end": 7289,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 7274,
											"end": 7326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "tag",
											"source": 11,
											"value": "375"
										},
										{
											"begin": 7274,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7326,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7252,
											"end": 7326,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1330,
											"end": 1335,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 1274,
											"end": 1282,
											"name": "PUSH",
											"source": 11,
											"value": "1E13380"
										},
										{
											"begin": 7427,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 7427,
											"end": 7461,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7427,
											"end": 7461,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7427,
											"end": 7461,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 7427,
											"end": 7461,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7427,
											"end": 7461,
											"name": "tag",
											"source": 11,
											"value": "376"
										},
										{
											"begin": 7427,
											"end": 7461,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7395,
											"end": 7406,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7385,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7392,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 7378,
											"end": 7392,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7378,
											"end": 7392,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7362,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7375,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 7353,
											"end": 7375,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7375,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 7353,
											"end": 7392,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7392,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7392,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 7353,
											"end": 7392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7392,
											"name": "tag",
											"source": 11,
											"value": "378"
										},
										{
											"begin": 7353,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 7353,
											"end": 7406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "377"
										},
										{
											"begin": 7353,
											"end": 7406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7353,
											"end": 7406,
											"name": "tag",
											"source": 11,
											"value": "379"
										},
										{
											"begin": 7353,
											"end": 7406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 7352,
											"end": 7462,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7462,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7462,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "381"
										},
										{
											"begin": 7352,
											"end": 7462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7352,
											"end": 7462,
											"name": "tag",
											"source": 11,
											"value": "380"
										},
										{
											"begin": 7352,
											"end": 7462,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7462,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 7345,
											"end": 7462,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "tag",
											"source": 11,
											"value": "367"
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 7469,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 6929,
											"end": 7469,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 8,
											"value": "195"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 8,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "211"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 8,
											"value": "384"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 8,
											"value": "383"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "tag",
											"source": 5,
											"value": "216"
										},
										{
											"begin": 2433,
											"end": 2550,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 1486,
											"end": 1500,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 1486,
											"end": 1502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "tag",
											"source": 5,
											"value": "388"
										},
										{
											"begin": 1486,
											"end": 1502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2501,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2491,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2491,
											"end": 2506,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 2530,
											"end": 2540,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2530,
											"end": 2542,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "391"
										},
										{
											"begin": 2530,
											"end": 2542,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2521,
											"end": 2543,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "392"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2543,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2433,
											"end": 2550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "tag",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 2186,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 1239,
											"end": 1256,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1239,
											"end": 1258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "tag",
											"source": 5,
											"value": "394"
										},
										{
											"begin": 1239,
											"end": 1258,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2255,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "3"
										},
										{
											"begin": 2245,
											"end": 2252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2245,
											"end": 2259,
											"modifierDepth": 1,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 2281,
											"end": 2291,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 2281,
											"end": 2293,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "396"
										},
										{
											"begin": 2281,
											"end": 2293,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2274,
											"end": 2294,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "tag",
											"source": 5,
											"value": "397"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2274,
											"end": 2294,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 5
										},
										{
											"begin": 2186,
											"end": 2301,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2100,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2093,
											"end": 2113,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 2148,
											"end": 2156,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2147,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 2123,
											"end": 2157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 2123,
											"end": 2157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2164,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "tag",
											"source": 5,
											"value": "305"
										},
										{
											"begin": 1767,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 1837,
											"end": 1843,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1837,
											"end": 1845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "tag",
											"source": 5,
											"value": "403"
										},
										{
											"begin": 1837,
											"end": 1845,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "406"
										},
										{
											"begin": 1828,
											"end": 1866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 5,
											"value": "405"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "tag",
											"source": 5,
											"value": "404"
										},
										{
											"begin": 1828,
											"end": 1866,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1767,
											"end": 1873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 8,
											"value": "324"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 8,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "410"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 8,
											"value": "409"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 8,
											"value": "408"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 8,
											"value": "385"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 8
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 8
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 8
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 8
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 8
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 8,
											"value": "412"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 8,
											"value": "413"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 8,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 8,
											"value": "414"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "94"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 8,
											"value": "416"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 8,
											"value": "415"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "tag",
											"source": 5,
											"value": "389"
										},
										{
											"begin": 1945,
											"end": 2051,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2011,
											"end": 2019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "tag",
											"source": 5,
											"value": "418"
										},
										{
											"begin": 2011,
											"end": 2019,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "421"
										},
										{
											"begin": 2003,
											"end": 2044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "420"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "tag",
											"source": 5,
											"value": "419"
										},
										{
											"begin": 2003,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1945,
											"end": 2051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "400"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "240"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 12,
											"value": "500"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "428"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 841,
											"end": 918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 878,
											"end": 885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 907,
											"end": 912,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 896,
											"end": 912,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 841,
											"end": 918,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 1015,
											"end": 1020,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 997,
											"end": 1021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 997,
											"end": 1021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 990,
											"end": 995,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 987,
											"end": 1022,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1033,
											"end": 1034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1026,
											"end": 1038,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 977,
											"end": 1040,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 924,
											"end": 1046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1098,
											"end": 1103,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1123,
											"end": 1143,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1114,
											"end": 1143,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 1179,
											"end": 1184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 1152,
											"end": 1185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "tag",
											"source": 12,
											"value": "511"
										},
										{
											"begin": 1152,
											"end": 1185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1052,
											"end": 1191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "tag",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1283,
											"end": 1289,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1299,
											"end": 1305,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1307,
											"end": 1313,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 1344,
											"end": 1353,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1335,
											"end": 1342,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1331,
											"end": 1354,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1327,
											"end": 1360,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 1363,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "tag",
											"source": 12,
											"value": "514"
										},
										{
											"begin": 1363,
											"end": 1442,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 1324,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1483,
											"end": 1484,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1544,
											"end": 1550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1533,
											"end": 1542,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1529,
											"end": 1551,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 1508,
											"end": 1561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 1508,
											"end": 1561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1498,
											"end": 1561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1454,
											"end": 1571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1610,
											"end": 1612,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 1681,
											"end": 1688,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1678,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1661,
											"end": 1670,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1657,
											"end": 1679,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1636,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "tag",
											"source": 12,
											"value": "516"
										},
										{
											"begin": 1636,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 1626,
											"end": 1689,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1581,
											"end": 1699,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 1809,
											"end": 1816,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1789,
											"end": 1798,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1785,
											"end": 1807,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1764,
											"end": 1817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 1764,
											"end": 1817,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1754,
											"end": 1817,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1709,
											"end": 1827,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1866,
											"end": 1868,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 1937,
											"end": 1944,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 1928,
											"end": 1934,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1917,
											"end": 1926,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 1913,
											"end": 1935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 1892,
											"end": 1945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 1892,
											"end": 1945,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1882,
											"end": 1945,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1837,
											"end": 1955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1197,
											"end": 1962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2058,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 1968,
											"end": 2058,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2002,
											"end": 2009,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2038,
											"end": 2051,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2031,
											"end": 2052,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2052,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2020,
											"end": 2052,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2058,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2058,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2058,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1968,
											"end": 2058,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2180,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2064,
											"end": 2180,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 2149,
											"end": 2154,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 2134,
											"end": 2155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "tag",
											"source": 12,
											"value": "521"
										},
										{
											"begin": 2134,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2127,
											"end": 2132,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2124,
											"end": 2156,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2174,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 2114,
											"end": 2174,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2170,
											"end": 2171,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2168,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2160,
											"end": 2172,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2114,
											"end": 2174,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 2114,
											"end": 2174,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2064,
											"end": 2180,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2319,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 2186,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2229,
											"end": 2234,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2267,
											"end": 2273,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2254,
											"end": 2274,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2245,
											"end": 2274,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2245,
											"end": 2274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 2307,
											"end": 2312,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 2283,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2283,
											"end": 2313,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 2283,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2319,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2319,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2319,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2319,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2390,
											"end": 2396,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2398,
											"end": 2404,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2447,
											"end": 2449,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2444,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2433,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2422,
											"end": 2445,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2418,
											"end": 2450,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2534,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 2415,
											"end": 2534,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 2453,
											"end": 2532,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 2453,
											"end": 2532,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2453,
											"end": 2532,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 2453,
											"end": 2532,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2415,
											"end": 2534,
											"name": "tag",
											"source": 12,
											"value": "526"
										},
										{
											"begin": 2415,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2573,
											"end": 2574,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2598,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2634,
											"end": 2640,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2623,
											"end": 2632,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2619,
											"end": 2641,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 2598,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2651,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 2598,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2651,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2588,
											"end": 2651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2544,
											"end": 2661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2700,
											"end": 2702,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2748,
											"end": 2757,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 2744,
											"end": 2766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2776,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 2726,
											"end": 2776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 2776,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 2726,
											"end": 2776,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 2776,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2716,
											"end": 2776,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2671,
											"end": 2786,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2325,
											"end": 2793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 3128,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 2799,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2858,
											"end": 2864,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2909,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2895,
											"end": 2904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2886,
											"end": 2893,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2882,
											"end": 2905,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2878,
											"end": 2910,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2994,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2994,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 2875,
											"end": 2994,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 2913,
											"end": 2992,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 2913,
											"end": 2992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2913,
											"end": 2992,
											"name": "tag",
											"source": 12,
											"value": "532"
										},
										{
											"begin": 2913,
											"end": 2992,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2875,
											"end": 2994,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 2875,
											"end": 2994,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3033,
											"end": 3034,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 3103,
											"end": 3110,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3094,
											"end": 3100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3083,
											"end": 3092,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3101,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 3058,
											"end": 3111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 3058,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3048,
											"end": 3111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3121,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 3128,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 3128,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 3128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 3128,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2799,
											"end": 3128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3134,
											"end": 3252,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3134,
											"end": 3252,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3221,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 3239,
											"end": 3244,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3221,
											"end": 3245,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 3221,
											"end": 3245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3221,
											"end": 3245,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 3221,
											"end": 3245,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3216,
											"end": 3219,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3134,
											"end": 3252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3134,
											"end": 3252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3134,
											"end": 3252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3480,
											"name": "tag",
											"source": 12,
											"value": "53"
										},
										{
											"begin": 3258,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3351,
											"end": 3355,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3391,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3378,
											"end": 3387,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3374,
											"end": 3392,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3366,
											"end": 3392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 3470,
											"end": 3471,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3459,
											"end": 3468,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3455,
											"end": 3472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3402,
											"end": 3473,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3402,
											"end": 3473,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 3402,
											"end": 3473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3480,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3258,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3595,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 3486,
											"end": 3595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 3582,
											"end": 3587,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3567,
											"end": 3588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3567,
											"end": 3588,
											"name": "tag",
											"source": 12,
											"value": "539"
										},
										{
											"begin": 3567,
											"end": 3588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3562,
											"end": 3565,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3555,
											"end": 3589,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3811,
											"name": "tag",
											"source": 12,
											"value": "66"
										},
										{
											"begin": 3601,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3688,
											"end": 3692,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3726,
											"end": 3728,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3715,
											"end": 3724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3711,
											"end": 3729,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3703,
											"end": 3729,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3703,
											"end": 3729,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3739,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3790,
											"end": 3799,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3786,
											"end": 3803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3777,
											"end": 3783,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3739,
											"end": 3804,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 3739,
											"end": 3804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3739,
											"end": 3804,
											"name": "tag",
											"source": 12,
											"value": "541"
										},
										{
											"begin": 3739,
											"end": 3804,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3811,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3811,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3601,
											"end": 3811,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3925,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 3817,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 3912,
											"end": 3917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 3894,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 3894,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3889,
											"end": 3892,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3882,
											"end": 3919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3817,
											"end": 3925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4039,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 3931,
											"end": 4039,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 4026,
											"end": 4031,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 4008,
											"end": 4032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 4008,
											"end": 4032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4003,
											"end": 4006,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3996,
											"end": 4033,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4039,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3931,
											"end": 4039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4144,
											"name": "tag",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 4045,
											"end": 4144,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 4131,
											"end": 4136,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 4116,
											"end": 4137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4116,
											"end": 4137,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 4116,
											"end": 4137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4111,
											"end": 4114,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4104,
											"end": 4138,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4144,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4045,
											"end": 4144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 5294,
											"name": "tag",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 4222,
											"end": 5294,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4377,
											"end": 4381,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 4372,
											"end": 4375,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4368,
											"end": 4382,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4470,
											"end": 4475,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4466,
											"end": 4482,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4460,
											"end": 4483,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 4553,
											"end": 4557,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4548,
											"end": 4551,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4544,
											"end": 4558,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4530,
											"end": 4542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4559,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 4496,
											"end": 4559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4496,
											"end": 4559,
											"name": "tag",
											"source": 12,
											"value": "549"
										},
										{
											"begin": 4496,
											"end": 4559,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4392,
											"end": 4569,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4659,
											"end": 4663,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4652,
											"end": 4657,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4648,
											"end": 4664,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4642,
											"end": 4665,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 4735,
											"end": 4739,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4730,
											"end": 4733,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4726,
											"end": 4740,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4712,
											"end": 4724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4678,
											"end": 4741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "tag",
											"source": 12,
											"value": "550"
										},
										{
											"begin": 4678,
											"end": 4741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4579,
											"end": 4751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4835,
											"end": 4839,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4828,
											"end": 4833,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4824,
											"end": 4840,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4818,
											"end": 4841,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4911,
											"end": 4915,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 4906,
											"end": 4909,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4902,
											"end": 4916,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4888,
											"end": 4900,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4854,
											"end": 4917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4854,
											"end": 4917,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 4854,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4761,
											"end": 4927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5023,
											"end": 5027,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5016,
											"end": 5021,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5012,
											"end": 5028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5006,
											"end": 5029,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 5099,
											"end": 5103,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 5094,
											"end": 5097,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5090,
											"end": 5104,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5076,
											"end": 5088,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 5042,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5042,
											"end": 5105,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 5042,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4937,
											"end": 5115,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5201,
											"end": 5205,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5194,
											"end": 5199,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5190,
											"end": 5206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5184,
											"end": 5207,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 5220,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 5271,
											"end": 5275,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 5266,
											"end": 5269,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5262,
											"end": 5276,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5248,
											"end": 5260,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5220,
											"end": 5277,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 5220,
											"end": 5277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5220,
											"end": 5277,
											"name": "tag",
											"source": 12,
											"value": "553"
										},
										{
											"begin": 5220,
											"end": 5277,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5125,
											"end": 5287,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4346,
											"end": 5294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 5294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 5294,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4222,
											"end": 5294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5639,
											"name": "tag",
											"source": 12,
											"value": "71"
										},
										{
											"begin": 5300,
											"end": 5639,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5489,
											"end": 5492,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 5478,
											"end": 5487,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5474,
											"end": 5493,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5466,
											"end": 5493,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5466,
											"end": 5493,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 5629,
											"end": 5630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5618,
											"end": 5627,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5614,
											"end": 5631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5605,
											"end": 5611,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "441"
										},
										{
											"begin": 5503,
											"end": 5632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 5503,
											"end": 5632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5639,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5639,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5639,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5300,
											"end": 5639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "tag",
											"source": 12,
											"value": "78"
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5713,
											"end": 5719,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5772,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 5758,
											"end": 5767,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5749,
											"end": 5756,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5745,
											"end": 5768,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5741,
											"end": 5773,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5857,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5857,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 5738,
											"end": 5857,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 5776,
											"end": 5855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 5776,
											"end": 5855,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5738,
											"end": 5857,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 5738,
											"end": 5857,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5896,
											"end": 5897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5921,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 5966,
											"end": 5973,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 5957,
											"end": 5963,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5946,
											"end": 5955,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 5942,
											"end": 5964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5974,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 5921,
											"end": 5974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5921,
											"end": 5974,
											"name": "tag",
											"source": 12,
											"value": "559"
										},
										{
											"begin": 5921,
											"end": 5974,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5974,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5911,
											"end": 5974,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5867,
											"end": 5984,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6023,
											"end": 6025,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6049,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 6094,
											"end": 6101,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6085,
											"end": 6091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6074,
											"end": 6083,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6070,
											"end": 6092,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6102,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6049,
											"end": 6102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6049,
											"end": 6102,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 6049,
											"end": 6102,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6102,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6039,
											"end": 6102,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5994,
											"end": 6112,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5645,
											"end": 6119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "tag",
											"source": 12,
											"value": "82"
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6193,
											"end": 6199,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 6247,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6229,
											"end": 6236,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6225,
											"end": 6248,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6221,
											"end": 6253,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6337,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6337,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 6218,
											"end": 6337,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 6256,
											"end": 6335,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 6256,
											"end": 6335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6256,
											"end": 6335,
											"name": "tag",
											"source": 12,
											"value": "563"
										},
										{
											"begin": 6256,
											"end": 6335,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6218,
											"end": 6337,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 6218,
											"end": 6337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 6446,
											"end": 6453,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6437,
											"end": 6443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6426,
											"end": 6435,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6422,
											"end": 6444,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6401,
											"end": 6454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "tag",
											"source": 12,
											"value": "564"
										},
										{
											"begin": 6401,
											"end": 6454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6454,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6454,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6347,
											"end": 6464,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6503,
											"end": 6505,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6529,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 6574,
											"end": 6581,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6565,
											"end": 6571,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6554,
											"end": 6563,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6550,
											"end": 6572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6529,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 6529,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6529,
											"end": 6582,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 6529,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6582,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6519,
											"end": 6582,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6474,
											"end": 6592,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6125,
											"end": 6599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6605,
											"end": 6934,
											"name": "tag",
											"source": 12,
											"value": "87"
										},
										{
											"begin": 6605,
											"end": 6934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6664,
											"end": 6670,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6713,
											"end": 6715,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6701,
											"end": 6710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6692,
											"end": 6699,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6688,
											"end": 6711,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6716,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6800,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6800,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 6681,
											"end": 6800,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 6719,
											"end": 6798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 6719,
											"end": 6798,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6681,
											"end": 6800,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 6681,
											"end": 6800,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6839,
											"end": 6840,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 6909,
											"end": 6916,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6900,
											"end": 6906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6889,
											"end": 6898,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6907,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 6864,
											"end": 6917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "tag",
											"source": 12,
											"value": "569"
										},
										{
											"begin": 6864,
											"end": 6917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6854,
											"end": 6917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6810,
											"end": 6927,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6605,
											"end": 6934,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6605,
											"end": 6934,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6605,
											"end": 6934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6605,
											"end": 6934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6605,
											"end": 6934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6940,
											"end": 7081,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 6940,
											"end": 7081,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7034,
											"end": 7040,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7068,
											"end": 7073,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7062,
											"end": 7074,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7052,
											"end": 7074,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7052,
											"end": 7074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6940,
											"end": 7081,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6940,
											"end": 7081,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6940,
											"end": 7081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6940,
											"end": 7081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7298,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 7087,
											"end": 7298,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7213,
											"end": 7224,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7247,
											"end": 7253,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7242,
											"end": 7245,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7235,
											"end": 7254,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 7287,
											"end": 7291,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7282,
											"end": 7285,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7263,
											"end": 7292,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7263,
											"end": 7292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7298,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7298,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7298,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7087,
											"end": 7298,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7463,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 7304,
											"end": 7463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7421,
											"end": 7424,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7451,
											"end": 7455,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7446,
											"end": 7449,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7442,
											"end": 7456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7456,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7434,
											"end": 7456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7463,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7304,
											"end": 7463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7537,
											"end": 8615,
											"name": "tag",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 7537,
											"end": 8615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 7673,
											"end": 7676,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7669,
											"end": 7683,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7770,
											"end": 7774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7763,
											"end": 7768,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7759,
											"end": 7775,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7753,
											"end": 7776,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7789,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 7846,
											"end": 7850,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7841,
											"end": 7844,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7837,
											"end": 7851,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7823,
											"end": 7835,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7789,
											"end": 7852,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7789,
											"end": 7852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7789,
											"end": 7852,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 7789,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7693,
											"end": 7862,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7952,
											"end": 7956,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7945,
											"end": 7950,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7941,
											"end": 7957,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7935,
											"end": 7958,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 8028,
											"end": 8032,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8023,
											"end": 8026,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8019,
											"end": 8033,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8005,
											"end": 8017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8034,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 7971,
											"end": 8034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7971,
											"end": 8034,
											"name": "tag",
											"source": 12,
											"value": "575"
										},
										{
											"begin": 7971,
											"end": 8034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7872,
											"end": 8044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8141,
											"end": 8145,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8134,
											"end": 8139,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8130,
											"end": 8146,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8124,
											"end": 8147,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8160,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 8217,
											"end": 8221,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8212,
											"end": 8215,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8208,
											"end": 8222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8194,
											"end": 8206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8160,
											"end": 8223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 8160,
											"end": 8223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8160,
											"end": 8223,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 8160,
											"end": 8223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8054,
											"end": 8233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8335,
											"end": 8339,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8328,
											"end": 8333,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8324,
											"end": 8340,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8318,
											"end": 8341,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 8411,
											"end": 8415,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8406,
											"end": 8409,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8416,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8388,
											"end": 8400,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 8354,
											"end": 8417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 8354,
											"end": 8417,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8243,
											"end": 8427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8522,
											"end": 8526,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8515,
											"end": 8520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8511,
											"end": 8527,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8528,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 8592,
											"end": 8596,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8587,
											"end": 8590,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 8583,
											"end": 8597,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8569,
											"end": 8581,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8598,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "440"
										},
										{
											"begin": 8541,
											"end": 8598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8541,
											"end": 8598,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 8541,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8437,
											"end": 8608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7647,
											"end": 8615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7537,
											"end": 8615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7537,
											"end": 8615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7537,
											"end": 8615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8908,
											"name": "tag",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 8621,
											"end": 8908,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8744,
											"end": 8754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8765,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 8861,
											"end": 8864,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8853,
											"end": 8859,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "445"
										},
										{
											"begin": 8765,
											"end": 8865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8765,
											"end": 8865,
											"name": "tag",
											"source": 12,
											"value": "580"
										},
										{
											"begin": 8765,
											"end": 8865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8897,
											"end": 8901,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 8892,
											"end": 8895,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8888,
											"end": 8902,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8874,
											"end": 8902,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8874,
											"end": 8902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8908,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8908,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8908,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8621,
											"end": 8908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9054,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 8914,
											"end": 9054,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9011,
											"end": 9015,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9043,
											"end": 9047,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9038,
											"end": 9041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9034,
											"end": 9048,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9026,
											"end": 9048,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9026,
											"end": 9048,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9054,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9054,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9054,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8914,
											"end": 9054,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 10080,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 9132,
											"end": 10080,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9305,
											"end": 9308,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9334,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 9409,
											"end": 9414,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 9334,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9334,
											"end": 9415,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 9334,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 9537,
											"end": 9543,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9532,
											"end": 9535,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 9431,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9431,
											"end": 9544,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 9431,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9424,
											"end": 9544,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9424,
											"end": 9544,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 9645,
											"end": 9650,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9651,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 9568,
											"end": 9651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9568,
											"end": 9651,
											"name": "tag",
											"source": 12,
											"value": "585"
										},
										{
											"begin": 9568,
											"end": 9651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9674,
											"end": 9681,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9705,
											"end": 9706,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9715,
											"end": 9721,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9712,
											"end": 9713,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9709,
											"end": 9722,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9791,
											"end": 9797,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9785,
											"end": 9798,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 9916,
											"end": 9929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9935,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "446"
										},
										{
											"begin": 9818,
											"end": 9935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9818,
											"end": 9935,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 9818,
											"end": 9935,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9935,
											"name": "SWAP8",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 9935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 10038,
											"end": 10044,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 10045,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 9958,
											"end": 10045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9958,
											"end": 10045,
											"name": "tag",
											"source": 12,
											"value": "590"
										},
										{
											"begin": 9958,
											"end": 10045,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9948,
											"end": 10045,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9948,
											"end": 10045,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9750,
											"end": 10055,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9737,
											"end": 9738,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9730,
											"end": 9739,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9725,
											"end": 9739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9725,
											"end": 9739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 9690,
											"end": 10055,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9694,
											"end": 9708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10071,
											"end": 10074,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10064,
											"end": 10074,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 10064,
											"end": 10074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9310,
											"end": 10080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9310,
											"end": 10080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9310,
											"end": 10080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 10080,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 10080,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 10080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 10080,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9132,
											"end": 10080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10567,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 10086,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10283,
											"end": 10287,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10321,
											"end": 10323,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10310,
											"end": 10319,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10298,
											"end": 10324,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10298,
											"end": 10324,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10370,
											"end": 10379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10364,
											"end": 10368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10360,
											"end": 10380,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10356,
											"end": 10357,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10345,
											"end": 10354,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10341,
											"end": 10358,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10334,
											"end": 10381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10398,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 10555,
											"end": 10559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10546,
											"end": 10552,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10398,
											"end": 10560,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 10398,
											"end": 10560,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10398,
											"end": 10560,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 10398,
											"end": 10560,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10560,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10390,
											"end": 10560,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10567,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10567,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10086,
											"end": 10567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10691,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 10573,
											"end": 10691,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 10678,
											"end": 10683,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 10660,
											"end": 10684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10660,
											"end": 10684,
											"name": "tag",
											"source": 12,
											"value": "594"
										},
										{
											"begin": 10660,
											"end": 10684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10658,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10648,
											"end": 10685,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10573,
											"end": 10691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10919,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 10697,
											"end": 10919,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10790,
											"end": 10794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10828,
											"end": 10830,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10817,
											"end": 10826,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10813,
											"end": 10831,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10805,
											"end": 10831,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10805,
											"end": 10831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10841,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 10909,
											"end": 10910,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10898,
											"end": 10907,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10894,
											"end": 10911,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10885,
											"end": 10891,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 10841,
											"end": 10912,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 10841,
											"end": 10912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10841,
											"end": 10912,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 10841,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10919,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10919,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10919,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10697,
											"end": 10919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10993,
											"end": 10999,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11001,
											"end": 11007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11050,
											"end": 11052,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11038,
											"end": 11047,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11029,
											"end": 11036,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11025,
											"end": 11048,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11021,
											"end": 11053,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 11056,
											"end": 11135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 11056,
											"end": 11135,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "tag",
											"source": 12,
											"value": "598"
										},
										{
											"begin": 11018,
											"end": 11137,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11176,
											"end": 11177,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 11246,
											"end": 11253,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11237,
											"end": 11243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11226,
											"end": 11235,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11222,
											"end": 11244,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 11201,
											"end": 11254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 11201,
											"end": 11254,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11191,
											"end": 11254,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11191,
											"end": 11254,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11147,
											"end": 11264,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11303,
											"end": 11305,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11329,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 11374,
											"end": 11381,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11365,
											"end": 11371,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11354,
											"end": 11363,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11372,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11329,
											"end": 11382,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 11329,
											"end": 11382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11329,
											"end": 11382,
											"name": "tag",
											"source": 12,
											"value": "601"
										},
										{
											"begin": 11329,
											"end": 11382,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11382,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11319,
											"end": 11382,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11274,
											"end": 11392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10925,
											"end": 11399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11465,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 11405,
											"end": 11465,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11433,
											"end": 11436,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11454,
											"end": 11459,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11447,
											"end": 11459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11465,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11465,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11465,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11405,
											"end": 11465,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11613,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 11471,
											"end": 11613,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11521,
											"end": 11530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 11572,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 11581,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 11599,
											"end": 11604,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 11605,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 11581,
											"end": 11605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11581,
											"end": 11605,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 11581,
											"end": 11605,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11572,
											"end": 11606,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 11572,
											"end": 11606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11572,
											"end": 11606,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 11572,
											"end": 11606,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 11554,
											"end": 11607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 11554,
											"end": 11607,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11541,
											"end": 11607,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11541,
											"end": 11607,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11613,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11613,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11613,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11471,
											"end": 11613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11745,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 11619,
											"end": 11745,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11669,
											"end": 11678,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11702,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 11733,
											"end": 11738,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11739,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 11702,
											"end": 11739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11702,
											"end": 11739,
											"name": "tag",
											"source": 12,
											"value": "608"
										},
										{
											"begin": 11702,
											"end": 11739,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11689,
											"end": 11739,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11689,
											"end": 11739,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11745,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11619,
											"end": 11745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11751,
											"end": 11891,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 11751,
											"end": 11891,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11815,
											"end": 11824,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11848,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 11879,
											"end": 11884,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11848,
											"end": 11885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 11848,
											"end": 11885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11848,
											"end": 11885,
											"name": "tag",
											"source": 12,
											"value": "610"
										},
										{
											"begin": 11848,
											"end": 11885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11835,
											"end": 11885,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11835,
											"end": 11885,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11751,
											"end": 11891,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11751,
											"end": 11891,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11751,
											"end": 11891,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11751,
											"end": 11891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 12056,
											"name": "tag",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 11897,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 12043,
											"end": 12048,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 11998,
											"end": 12049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11998,
											"end": 12049,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 11998,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11993,
											"end": 11996,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11986,
											"end": 12050,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 12056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 12056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11897,
											"end": 12056,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12312,
											"name": "tag",
											"source": 12,
											"value": "132"
										},
										{
											"begin": 12062,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12169,
											"end": 12173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12207,
											"end": 12209,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12196,
											"end": 12205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12192,
											"end": 12210,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12184,
											"end": 12210,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 12302,
											"end": 12303,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12291,
											"end": 12300,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12287,
											"end": 12304,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12278,
											"end": 12284,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "454"
										},
										{
											"begin": 12220,
											"end": 12305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12220,
											"end": 12305,
											"name": "tag",
											"source": 12,
											"value": "614"
										},
										{
											"begin": 12220,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12312,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12062,
											"end": 12312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12487,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 12318,
											"end": 12487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12413,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12436,
											"end": 12442,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12431,
											"end": 12434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12424,
											"end": 12443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12476,
											"end": 12480,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12471,
											"end": 12474,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12467,
											"end": 12481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12481,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12452,
											"end": 12481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12487,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12487,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12487,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12487,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12318,
											"end": 12487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12662,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 12493,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12633,
											"end": 12654,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964207374616B6520746F6B656E00000000000000000000000000"
										},
										{
											"begin": 12629,
											"end": 12630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12621,
											"end": 12627,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12617,
											"end": 12631,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12610,
											"end": 12655,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12662,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12493,
											"end": 12662,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12668,
											"end": 13034,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 12668,
											"end": 13034,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12810,
											"end": 12813,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12831,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 12895,
											"end": 12897,
											"name": "PUSH",
											"source": 12,
											"value": "13"
										},
										{
											"begin": 12890,
											"end": 12893,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12831,
											"end": 12898,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 12831,
											"end": 12898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12831,
											"end": 12898,
											"name": "tag",
											"source": 12,
											"value": "618"
										},
										{
											"begin": 12831,
											"end": 12898,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12824,
											"end": 12898,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 12996,
											"end": 12999,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 12907,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "tag",
											"source": 12,
											"value": "619"
										},
										{
											"begin": 12907,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13025,
											"end": 13027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13020,
											"end": 13023,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13016,
											"end": 13028,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13009,
											"end": 13028,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13009,
											"end": 13028,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12668,
											"end": 13034,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12668,
											"end": 13034,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12668,
											"end": 13034,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12668,
											"end": 13034,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13459,
											"name": "tag",
											"source": 12,
											"value": "139"
										},
										{
											"begin": 13040,
											"end": 13459,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13206,
											"end": 13210,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13244,
											"end": 13246,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13233,
											"end": 13242,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13229,
											"end": 13247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13221,
											"end": 13247,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13221,
											"end": 13247,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13293,
											"end": 13302,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13287,
											"end": 13291,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13283,
											"end": 13303,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 13279,
											"end": 13280,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13268,
											"end": 13277,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13264,
											"end": 13281,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13257,
											"end": 13304,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13321,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 13447,
											"end": 13451,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13321,
											"end": 13452,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 13321,
											"end": 13452,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13321,
											"end": 13452,
											"name": "tag",
											"source": 12,
											"value": "621"
										},
										{
											"begin": 13321,
											"end": 13452,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13313,
											"end": 13452,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13313,
											"end": 13452,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13459,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13459,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13459,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13040,
											"end": 13459,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13465,
											"end": 13631,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 13465,
											"end": 13631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13605,
											"end": 13623,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964206475726174696F6E00000000000000000000000000000000"
										},
										{
											"begin": 13601,
											"end": 13602,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13593,
											"end": 13599,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13589,
											"end": 13603,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13582,
											"end": 13624,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13465,
											"end": 13631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13465,
											"end": 13631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 14003,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 13637,
											"end": 14003,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13779,
											"end": 13782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13800,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 13864,
											"end": 13866,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 13859,
											"end": 13862,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13800,
											"end": 13867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 13800,
											"end": 13867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13800,
											"end": 13867,
											"name": "tag",
											"source": 12,
											"value": "624"
										},
										{
											"begin": 13800,
											"end": 13867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13793,
											"end": 13867,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13793,
											"end": 13867,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13876,
											"end": 13969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 13965,
											"end": 13968,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13876,
											"end": 13969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 13876,
											"end": 13969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13876,
											"end": 13969,
											"name": "tag",
											"source": 12,
											"value": "625"
										},
										{
											"begin": 13876,
											"end": 13969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13994,
											"end": 13996,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13989,
											"end": 13992,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13985,
											"end": 13997,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13978,
											"end": 13997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13978,
											"end": 13997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 14003,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 14003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 14003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13637,
											"end": 14003,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14428,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 14009,
											"end": 14428,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14175,
											"end": 14179,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14213,
											"end": 14215,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14202,
											"end": 14211,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14216,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14190,
											"end": 14216,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14190,
											"end": 14216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14262,
											"end": 14271,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14256,
											"end": 14260,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14252,
											"end": 14272,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14248,
											"end": 14249,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14237,
											"end": 14246,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14233,
											"end": 14250,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14226,
											"end": 14273,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 14416,
											"end": 14420,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14421,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 14290,
											"end": 14421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14290,
											"end": 14421,
											"name": "tag",
											"source": 12,
											"value": "627"
										},
										{
											"begin": 14290,
											"end": 14421,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14282,
											"end": 14421,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14282,
											"end": 14421,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14428,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14428,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14428,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14009,
											"end": 14428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14434,
											"end": 14595,
											"name": "tag",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 14434,
											"end": 14595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14574,
											"end": 14587,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420415059000000000000000000000000000000000000000000"
										},
										{
											"begin": 14570,
											"end": 14571,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14562,
											"end": 14568,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14558,
											"end": 14572,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14551,
											"end": 14588,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14434,
											"end": 14595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14434,
											"end": 14595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14601,
											"end": 14967,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 14601,
											"end": 14967,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14743,
											"end": 14746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14764,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 14828,
											"end": 14830,
											"name": "PUSH",
											"source": 12,
											"value": "B"
										},
										{
											"begin": 14823,
											"end": 14826,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14764,
											"end": 14831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 14764,
											"end": 14831,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14764,
											"end": 14831,
											"name": "tag",
											"source": 12,
											"value": "630"
										},
										{
											"begin": 14764,
											"end": 14831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14757,
											"end": 14831,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14757,
											"end": 14831,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14840,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 14929,
											"end": 14932,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14840,
											"end": 14933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 14840,
											"end": 14933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14840,
											"end": 14933,
											"name": "tag",
											"source": 12,
											"value": "631"
										},
										{
											"begin": 14840,
											"end": 14933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14958,
											"end": 14960,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14953,
											"end": 14956,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14949,
											"end": 14961,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14942,
											"end": 14961,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14942,
											"end": 14961,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14601,
											"end": 14967,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14601,
											"end": 14967,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14601,
											"end": 14967,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14601,
											"end": 14967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15392,
											"name": "tag",
											"source": 12,
											"value": "146"
										},
										{
											"begin": 14973,
											"end": 15392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15139,
											"end": 15143,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15177,
											"end": 15179,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15166,
											"end": 15175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15162,
											"end": 15180,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15154,
											"end": 15180,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15154,
											"end": 15180,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15226,
											"end": 15235,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15220,
											"end": 15224,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15216,
											"end": 15236,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15212,
											"end": 15213,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15201,
											"end": 15210,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15197,
											"end": 15214,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15190,
											"end": 15237,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 15380,
											"end": 15384,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15385,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 15254,
											"end": 15385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15254,
											"end": 15385,
											"name": "tag",
											"source": 12,
											"value": "633"
										},
										{
											"begin": 15254,
											"end": 15385,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15246,
											"end": 15385,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15246,
											"end": 15385,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15392,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15392,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15392,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14973,
											"end": 15392,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15398,
											"end": 15578,
											"name": "tag",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 15398,
											"end": 15578,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15446,
											"end": 15523,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15443,
											"end": 15444,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15436,
											"end": 15524,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15543,
											"end": 15547,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 15540,
											"end": 15541,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 15533,
											"end": 15548,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 15567,
											"end": 15571,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 15564,
											"end": 15565,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15557,
											"end": 15572,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15778,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 15584,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15628,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15644,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 15662,
											"end": 15663,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 15644,
											"end": 15664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15644,
											"end": 15664,
											"name": "tag",
											"source": 12,
											"value": "636"
										},
										{
											"begin": 15644,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15664,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15639,
											"end": 15664,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15678,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 15696,
											"end": 15697,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15678,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 15678,
											"end": 15698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15678,
											"end": 15698,
											"name": "tag",
											"source": 12,
											"value": "637"
										},
										{
											"begin": 15678,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 15698,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15673,
											"end": 15698,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15722,
											"end": 15723,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15719,
											"end": 15720,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15715,
											"end": 15724,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15707,
											"end": 15724,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15746,
											"end": 15747,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15740,
											"end": 15744,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15737,
											"end": 15748,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 15734,
											"end": 15771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 15751,
											"end": 15769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "tag",
											"source": 12,
											"value": "639"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15734,
											"end": 15771,
											"name": "tag",
											"source": 12,
											"value": "638"
										},
										{
											"begin": 15734,
											"end": 15771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15778,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15778,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15778,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15584,
											"end": 15778,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "tag",
											"source": 12,
											"value": "151"
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15961,
											"end": 15965,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15999,
											"end": 16002,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 15988,
											"end": 15997,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15984,
											"end": 16003,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16003,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15976,
											"end": 16003,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16013,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 16081,
											"end": 16082,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16070,
											"end": 16079,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16066,
											"end": 16083,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16057,
											"end": 16063,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 16013,
											"end": 16084,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 16013,
											"end": 16084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16013,
											"end": 16084,
											"name": "tag",
											"source": 12,
											"value": "641"
										},
										{
											"begin": 16013,
											"end": 16084,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 16162,
											"end": 16164,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16151,
											"end": 16160,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16147,
											"end": 16165,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16138,
											"end": 16144,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16166,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16094,
											"end": 16166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16094,
											"end": 16166,
											"name": "tag",
											"source": 12,
											"value": "642"
										},
										{
											"begin": 16094,
											"end": 16166,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16176,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 16244,
											"end": 16246,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16233,
											"end": 16242,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16229,
											"end": 16247,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16220,
											"end": 16226,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16176,
											"end": 16248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16176,
											"end": 16248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16176,
											"end": 16248,
											"name": "tag",
											"source": 12,
											"value": "643"
										},
										{
											"begin": 16176,
											"end": 16248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16258,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 16326,
											"end": 16328,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16315,
											"end": 16324,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16311,
											"end": 16329,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16302,
											"end": 16308,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16258,
											"end": 16330,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 16258,
											"end": 16330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16258,
											"end": 16330,
											"name": "tag",
											"source": 12,
											"value": "644"
										},
										{
											"begin": 16258,
											"end": 16330,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15784,
											"end": 16337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16343,
											"end": 16511,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 16343,
											"end": 16511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16483,
											"end": 16503,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964207061636B6167652049440000000000000000000000000000"
										},
										{
											"begin": 16479,
											"end": 16480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16477,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16467,
											"end": 16481,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16460,
											"end": 16504,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16343,
											"end": 16511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16343,
											"end": 16511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16883,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 16517,
											"end": 16883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16659,
											"end": 16662,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16680,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 16744,
											"end": 16746,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 16739,
											"end": 16742,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16680,
											"end": 16747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 16680,
											"end": 16747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16680,
											"end": 16747,
											"name": "tag",
											"source": 12,
											"value": "647"
										},
										{
											"begin": 16680,
											"end": 16747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16673,
											"end": 16747,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16673,
											"end": 16747,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16756,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 16845,
											"end": 16848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16756,
											"end": 16849,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 16756,
											"end": 16849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16756,
											"end": 16849,
											"name": "tag",
											"source": 12,
											"value": "648"
										},
										{
											"begin": 16756,
											"end": 16849,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16874,
											"end": 16876,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16869,
											"end": 16872,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16865,
											"end": 16877,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16877,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16858,
											"end": 16877,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16883,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16883,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16883,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16517,
											"end": 16883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16889,
											"end": 17308,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 16889,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17055,
											"end": 17059,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17093,
											"end": 17095,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17082,
											"end": 17091,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17078,
											"end": 17096,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17070,
											"end": 17096,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17070,
											"end": 17096,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17142,
											"end": 17151,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17136,
											"end": 17140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17132,
											"end": 17152,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17128,
											"end": 17129,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17117,
											"end": 17126,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17113,
											"end": 17130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17106,
											"end": 17153,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17170,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 17296,
											"end": 17300,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17170,
											"end": 17301,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 17170,
											"end": 17301,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17170,
											"end": 17301,
											"name": "tag",
											"source": 12,
											"value": "650"
										},
										{
											"begin": 17170,
											"end": 17301,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17162,
											"end": 17301,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17162,
											"end": 17301,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16889,
											"end": 17308,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16889,
											"end": 17308,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16889,
											"end": 17308,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16889,
											"end": 17308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17314,
											"end": 17494,
											"name": "tag",
											"source": 12,
											"value": "161"
										},
										{
											"begin": 17314,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17362,
											"end": 17439,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17359,
											"end": 17360,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17352,
											"end": 17440,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17459,
											"end": 17463,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 17456,
											"end": 17457,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17449,
											"end": 17464,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17483,
											"end": 17487,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17480,
											"end": 17481,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17473,
											"end": 17488,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17500,
											"end": 17666,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 17500,
											"end": 17666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17640,
											"end": 17658,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C6964207374616B6520494400000000000000000000000000000000"
										},
										{
											"begin": 17636,
											"end": 17637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17628,
											"end": 17634,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17624,
											"end": 17638,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17617,
											"end": 17659,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17500,
											"end": 17666,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17500,
											"end": 17666,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17672,
											"end": 18038,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 17672,
											"end": 18038,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17814,
											"end": 17817,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17835,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 17899,
											"end": 17901,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 17894,
											"end": 17897,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17835,
											"end": 17902,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 17835,
											"end": 17902,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17835,
											"end": 17902,
											"name": "tag",
											"source": 12,
											"value": "654"
										},
										{
											"begin": 17835,
											"end": 17902,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17828,
											"end": 17902,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17828,
											"end": 17902,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17911,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 18000,
											"end": 18003,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17911,
											"end": 18004,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 17911,
											"end": 18004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17911,
											"end": 18004,
											"name": "tag",
											"source": 12,
											"value": "655"
										},
										{
											"begin": 17911,
											"end": 18004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18029,
											"end": 18031,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18024,
											"end": 18027,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18020,
											"end": 18032,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18013,
											"end": 18032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18013,
											"end": 18032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17672,
											"end": 18038,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17672,
											"end": 18038,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17672,
											"end": 18038,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17672,
											"end": 18038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18463,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 18044,
											"end": 18463,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18210,
											"end": 18214,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18248,
											"end": 18250,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18237,
											"end": 18246,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18233,
											"end": 18251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 18251,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18225,
											"end": 18251,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18297,
											"end": 18306,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18291,
											"end": 18295,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18287,
											"end": 18307,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 18283,
											"end": 18284,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18272,
											"end": 18281,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18268,
											"end": 18285,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18261,
											"end": 18308,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18325,
											"end": 18456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 18451,
											"end": 18455,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18325,
											"end": 18456,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 18325,
											"end": 18456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18325,
											"end": 18456,
											"name": "tag",
											"source": 12,
											"value": "657"
										},
										{
											"begin": 18325,
											"end": 18456,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 18456,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18317,
											"end": 18456,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18463,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18463,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18463,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18044,
											"end": 18463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18469,
											"end": 18633,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 18469,
											"end": 18633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18609,
											"end": 18625,
											"name": "PUSH",
											"source": 12,
											"value": "496E616374697665207374616B65000000000000000000000000000000000000"
										},
										{
											"begin": 18605,
											"end": 18606,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18597,
											"end": 18603,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18593,
											"end": 18607,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18586,
											"end": 18626,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18469,
											"end": 18633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18469,
											"end": 18633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 19005,
											"name": "tag",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 18639,
											"end": 19005,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18781,
											"end": 18784,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18802,
											"end": 18869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 18866,
											"end": 18868,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 18861,
											"end": 18864,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18802,
											"end": 18869,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 18802,
											"end": 18869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18802,
											"end": 18869,
											"name": "tag",
											"source": 12,
											"value": "660"
										},
										{
											"begin": 18802,
											"end": 18869,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18795,
											"end": 18869,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18795,
											"end": 18869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18878,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 18967,
											"end": 18970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18878,
											"end": 18971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 18878,
											"end": 18971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18878,
											"end": 18971,
											"name": "tag",
											"source": 12,
											"value": "661"
										},
										{
											"begin": 18878,
											"end": 18971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18996,
											"end": 18998,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18991,
											"end": 18994,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18987,
											"end": 18999,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18980,
											"end": 18999,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18980,
											"end": 18999,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 19005,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 19005,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 19005,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18639,
											"end": 19005,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "tag",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19177,
											"end": 19181,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19215,
											"end": 19217,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 19204,
											"end": 19213,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19200,
											"end": 19218,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19192,
											"end": 19218,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19192,
											"end": 19218,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19264,
											"end": 19273,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19258,
											"end": 19262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19254,
											"end": 19274,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 19250,
											"end": 19251,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19239,
											"end": 19248,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19235,
											"end": 19252,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19228,
											"end": 19275,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 19418,
											"end": 19422,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "468"
										},
										{
											"begin": 19292,
											"end": 19423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "tag",
											"source": 12,
											"value": "663"
										},
										{
											"begin": 19292,
											"end": 19423,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19284,
											"end": 19423,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19284,
											"end": 19423,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19011,
											"end": 19430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19436,
											"end": 19627,
											"name": "tag",
											"source": 12,
											"value": "185"
										},
										{
											"begin": 19436,
											"end": 19627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19476,
											"end": 19479,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19495,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 19513,
											"end": 19514,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19495,
											"end": 19515,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 19495,
											"end": 19515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19495,
											"end": 19515,
											"name": "tag",
											"source": 12,
											"value": "665"
										},
										{
											"begin": 19495,
											"end": 19515,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19515,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19490,
											"end": 19515,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19529,
											"end": 19549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 19547,
											"end": 19548,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19529,
											"end": 19549,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 19529,
											"end": 19549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19529,
											"end": 19549,
											"name": "tag",
											"source": 12,
											"value": "666"
										},
										{
											"begin": 19529,
											"end": 19549,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19524,
											"end": 19549,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19524,
											"end": 19549,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19572,
											"end": 19573,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19569,
											"end": 19570,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19565,
											"end": 19574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19574,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19558,
											"end": 19574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19593,
											"end": 19596,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 19590,
											"end": 19591,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19587,
											"end": 19597,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19620,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19620,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 19584,
											"end": 19620,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 19600,
											"end": 19618,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "tag",
											"source": 12,
											"value": "668"
										},
										{
											"begin": 19600,
											"end": 19618,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19584,
											"end": 19620,
											"name": "tag",
											"source": 12,
											"value": "667"
										},
										{
											"begin": 19584,
											"end": 19620,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19436,
											"end": 19627,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 19436,
											"end": 19627,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19436,
											"end": 19627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19436,
											"end": 19627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19436,
											"end": 19627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19633,
											"end": 19801,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 19633,
											"end": 19801,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19773,
											"end": 19793,
											"name": "PUSH",
											"source": 12,
											"value": "5374616B65207374696C6C206C6F636B65640000000000000000000000000000"
										},
										{
											"begin": 19769,
											"end": 19770,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19761,
											"end": 19767,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19757,
											"end": 19771,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 19750,
											"end": 19794,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 19633,
											"end": 19801,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19633,
											"end": 19801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19949,
											"end": 19952,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 20034,
											"end": 20036,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 20029,
											"end": 20032,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 19970,
											"end": 20037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "tag",
											"source": 12,
											"value": "671"
										},
										{
											"begin": 19970,
											"end": 20037,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19963,
											"end": 20037,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19963,
											"end": 20037,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 20135,
											"end": 20138,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 20046,
											"end": 20139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "tag",
											"source": 12,
											"value": "672"
										},
										{
											"begin": 20046,
											"end": 20139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20164,
											"end": 20166,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20159,
											"end": 20162,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20155,
											"end": 20167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20148,
											"end": 20167,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20148,
											"end": 20167,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19807,
											"end": 20173,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19807,
											"end": 20173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "tag",
											"source": 12,
											"value": "188"
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20345,
											"end": 20349,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20383,
											"end": 20385,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20372,
											"end": 20381,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20368,
											"end": 20386,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20360,
											"end": 20386,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20360,
											"end": 20386,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20432,
											"end": 20441,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20426,
											"end": 20430,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20422,
											"end": 20442,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 20418,
											"end": 20419,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20407,
											"end": 20416,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20403,
											"end": 20420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20396,
											"end": 20443,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 20586,
											"end": 20590,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 20460,
											"end": 20591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "tag",
											"source": 12,
											"value": "674"
										},
										{
											"begin": 20460,
											"end": 20591,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20452,
											"end": 20591,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20452,
											"end": 20591,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20179,
											"end": 20598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20179,
											"end": 20598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "tag",
											"source": 12,
											"value": "199"
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20725,
											"end": 20729,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20763,
											"end": 20765,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 20752,
											"end": 20761,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 20748,
											"end": 20766,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20740,
											"end": 20766,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 20740,
											"end": 20766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20776,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 20844,
											"end": 20845,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 20833,
											"end": 20842,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20829,
											"end": 20846,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20820,
											"end": 20826,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 20776,
											"end": 20847,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 20776,
											"end": 20847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20776,
											"end": 20847,
											"name": "tag",
											"source": 12,
											"value": "676"
										},
										{
											"begin": 20776,
											"end": 20847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20857,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 20925,
											"end": 20927,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 20914,
											"end": 20923,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 20910,
											"end": 20928,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 20901,
											"end": 20907,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 20857,
											"end": 20929,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 20857,
											"end": 20929,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20857,
											"end": 20929,
											"name": "tag",
											"source": 12,
											"value": "677"
										},
										{
											"begin": 20857,
											"end": 20929,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20604,
											"end": 20936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 20942,
											"end": 21106,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 20942,
											"end": 21106,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21082,
											"end": 21098,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F7420617574686F72697A6564000000000000000000000000000000000000"
										},
										{
											"begin": 21078,
											"end": 21079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21070,
											"end": 21076,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21066,
											"end": 21080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21059,
											"end": 21099,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 20942,
											"end": 21106,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 20942,
											"end": 21106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21478,
											"name": "tag",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 21112,
											"end": 21478,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21254,
											"end": 21257,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21275,
											"end": 21342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 21339,
											"end": 21341,
											"name": "PUSH",
											"source": 12,
											"value": "E"
										},
										{
											"begin": 21334,
											"end": 21337,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21275,
											"end": 21342,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 21275,
											"end": 21342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21275,
											"end": 21342,
											"name": "tag",
											"source": 12,
											"value": "680"
										},
										{
											"begin": 21275,
											"end": 21342,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21268,
											"end": 21342,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21268,
											"end": 21342,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 21440,
											"end": 21443,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 21351,
											"end": 21444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "tag",
											"source": 12,
											"value": "681"
										},
										{
											"begin": 21351,
											"end": 21444,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21469,
											"end": 21471,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21464,
											"end": 21467,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21460,
											"end": 21472,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21453,
											"end": 21472,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21453,
											"end": 21472,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21478,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21478,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21478,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21112,
											"end": 21478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21484,
											"end": 21903,
											"name": "tag",
											"source": 12,
											"value": "205"
										},
										{
											"begin": 21484,
											"end": 21903,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21650,
											"end": 21654,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21688,
											"end": 21690,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 21677,
											"end": 21686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 21673,
											"end": 21691,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21665,
											"end": 21691,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21665,
											"end": 21691,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21737,
											"end": 21746,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21731,
											"end": 21735,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21727,
											"end": 21747,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 21723,
											"end": 21724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 21712,
											"end": 21721,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 21708,
											"end": 21725,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 21701,
											"end": 21748,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21765,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 21891,
											"end": 21895,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 21765,
											"end": 21896,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "472"
										},
										{
											"begin": 21765,
											"end": 21896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21765,
											"end": 21896,
											"name": "tag",
											"source": 12,
											"value": "683"
										},
										{
											"begin": 21765,
											"end": 21896,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 21757,
											"end": 21896,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21757,
											"end": 21896,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21484,
											"end": 21903,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 21484,
											"end": 21903,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 21484,
											"end": 21903,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21484,
											"end": 21903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 21909,
											"end": 22076,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 21909,
											"end": 22076,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22049,
											"end": 22068,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F206665657320617661696C61626C65000000000000000000000000000000"
										},
										{
											"begin": 22045,
											"end": 22046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22037,
											"end": 22043,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22033,
											"end": 22047,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22026,
											"end": 22069,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 21909,
											"end": 22076,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 21909,
											"end": 22076,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22448,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 22082,
											"end": 22448,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22224,
											"end": 22227,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22245,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 22309,
											"end": 22311,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 22304,
											"end": 22307,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22245,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 22245,
											"end": 22312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22245,
											"end": 22312,
											"name": "tag",
											"source": 12,
											"value": "686"
										},
										{
											"begin": 22245,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22238,
											"end": 22312,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22238,
											"end": 22312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22321,
											"end": 22414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 22410,
											"end": 22413,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22321,
											"end": 22414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 22321,
											"end": 22414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22321,
											"end": 22414,
											"name": "tag",
											"source": 12,
											"value": "687"
										},
										{
											"begin": 22321,
											"end": 22414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22439,
											"end": 22441,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22434,
											"end": 22437,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22430,
											"end": 22442,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22423,
											"end": 22442,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22423,
											"end": 22442,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22448,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22448,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22448,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22082,
											"end": 22448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22454,
											"end": 22873,
											"name": "tag",
											"source": 12,
											"value": "208"
										},
										{
											"begin": 22454,
											"end": 22873,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22620,
											"end": 22624,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22658,
											"end": 22660,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 22647,
											"end": 22656,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 22643,
											"end": 22661,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22635,
											"end": 22661,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22635,
											"end": 22661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22707,
											"end": 22716,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22701,
											"end": 22705,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22697,
											"end": 22717,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 22693,
											"end": 22694,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 22682,
											"end": 22691,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 22678,
											"end": 22695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 22671,
											"end": 22718,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 22735,
											"end": 22866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 22861,
											"end": 22865,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 22735,
											"end": 22866,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 22735,
											"end": 22866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22735,
											"end": 22866,
											"name": "tag",
											"source": 12,
											"value": "689"
										},
										{
											"begin": 22735,
											"end": 22866,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22727,
											"end": 22866,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22727,
											"end": 22866,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22454,
											"end": 22873,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 22454,
											"end": 22873,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 22454,
											"end": 22873,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22454,
											"end": 22873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23000,
											"end": 23004,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23038,
											"end": 23040,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 23027,
											"end": 23036,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23023,
											"end": 23041,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23015,
											"end": 23041,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23015,
											"end": 23041,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23051,
											"end": 23122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 23119,
											"end": 23120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23108,
											"end": 23117,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23104,
											"end": 23121,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23095,
											"end": 23101,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 23051,
											"end": 23122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 23051,
											"end": 23122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23051,
											"end": 23122,
											"name": "tag",
											"source": 12,
											"value": "691"
										},
										{
											"begin": 23051,
											"end": 23122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23132,
											"end": 23204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 23200,
											"end": 23202,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23189,
											"end": 23198,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23185,
											"end": 23203,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23176,
											"end": 23182,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 23132,
											"end": 23204,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 23132,
											"end": 23204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23132,
											"end": 23204,
											"name": "tag",
											"source": 12,
											"value": "692"
										},
										{
											"begin": 23132,
											"end": 23204,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 22879,
											"end": 23211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23217,
											"end": 23379,
											"name": "tag",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 23217,
											"end": 23379,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23357,
											"end": 23371,
											"name": "PUSH",
											"source": 12,
											"value": "46656520746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 23353,
											"end": 23354,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23345,
											"end": 23351,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23341,
											"end": 23355,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23334,
											"end": 23372,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 23217,
											"end": 23379,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23217,
											"end": 23379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23385,
											"end": 23751,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 23385,
											"end": 23751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23527,
											"end": 23530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23548,
											"end": 23615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 23612,
											"end": 23614,
											"name": "PUSH",
											"source": 12,
											"value": "C"
										},
										{
											"begin": 23607,
											"end": 23610,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23548,
											"end": 23615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 23548,
											"end": 23615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23548,
											"end": 23615,
											"name": "tag",
											"source": 12,
											"value": "695"
										},
										{
											"begin": 23548,
											"end": 23615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23541,
											"end": 23615,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23541,
											"end": 23615,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23624,
											"end": 23717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 23713,
											"end": 23716,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23624,
											"end": 23717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "475"
										},
										{
											"begin": 23624,
											"end": 23717,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23624,
											"end": 23717,
											"name": "tag",
											"source": 12,
											"value": "696"
										},
										{
											"begin": 23624,
											"end": 23717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23742,
											"end": 23744,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23737,
											"end": 23740,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23733,
											"end": 23745,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23726,
											"end": 23745,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23726,
											"end": 23745,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23385,
											"end": 23751,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23385,
											"end": 23751,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23385,
											"end": 23751,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23385,
											"end": 23751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 23757,
											"end": 24176,
											"name": "tag",
											"source": 12,
											"value": "294"
										},
										{
											"begin": 23757,
											"end": 24176,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 23923,
											"end": 23927,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23961,
											"end": 23963,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 23950,
											"end": 23959,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 23946,
											"end": 23964,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23938,
											"end": 23964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23938,
											"end": 23964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24010,
											"end": 24019,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24004,
											"end": 24008,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24000,
											"end": 24020,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 23996,
											"end": 23997,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 23985,
											"end": 23994,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 23981,
											"end": 23998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 23974,
											"end": 24021,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24038,
											"end": 24169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 24164,
											"end": 24168,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24038,
											"end": 24169,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 24038,
											"end": 24169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24038,
											"end": 24169,
											"name": "tag",
											"source": 12,
											"value": "698"
										},
										{
											"begin": 24038,
											"end": 24169,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24030,
											"end": 24169,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24030,
											"end": 24169,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23757,
											"end": 24176,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 23757,
											"end": 24176,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 23757,
											"end": 24176,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 23757,
											"end": 24176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24182,
											"end": 24349,
											"name": "tag",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 24182,
											"end": 24349,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24322,
											"end": 24341,
											"name": "PUSH",
											"source": 12,
											"value": "496E76616C696420636F6C6C6563746F72000000000000000000000000000000"
										},
										{
											"begin": 24318,
											"end": 24319,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24310,
											"end": 24316,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24306,
											"end": 24320,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24299,
											"end": 24342,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 24182,
											"end": 24349,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24182,
											"end": 24349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24355,
											"end": 24721,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 24355,
											"end": 24721,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24497,
											"end": 24500,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24518,
											"end": 24585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 24582,
											"end": 24584,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 24577,
											"end": 24580,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24585,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 24518,
											"end": 24585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24518,
											"end": 24585,
											"name": "tag",
											"source": 12,
											"value": "701"
										},
										{
											"begin": 24518,
											"end": 24585,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24511,
											"end": 24585,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24511,
											"end": 24585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24594,
											"end": 24687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 24683,
											"end": 24686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24594,
											"end": 24687,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "477"
										},
										{
											"begin": 24594,
											"end": 24687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24594,
											"end": 24687,
											"name": "tag",
											"source": 12,
											"value": "702"
										},
										{
											"begin": 24594,
											"end": 24687,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24712,
											"end": 24714,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24707,
											"end": 24710,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24703,
											"end": 24715,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24696,
											"end": 24715,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24696,
											"end": 24715,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24355,
											"end": 24721,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24355,
											"end": 24721,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24355,
											"end": 24721,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24355,
											"end": 24721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 24727,
											"end": 25146,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 24727,
											"end": 25146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 24893,
											"end": 24897,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24931,
											"end": 24933,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 24920,
											"end": 24929,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 24916,
											"end": 24934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24908,
											"end": 24934,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24908,
											"end": 24934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24980,
											"end": 24989,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24974,
											"end": 24978,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 24970,
											"end": 24990,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 24966,
											"end": 24967,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 24955,
											"end": 24964,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 24951,
											"end": 24968,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 24944,
											"end": 24991,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25008,
											"end": 25139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 25134,
											"end": 25138,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 25008,
											"end": 25139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 25008,
											"end": 25139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25008,
											"end": 25139,
											"name": "tag",
											"source": 12,
											"value": "704"
										},
										{
											"begin": 25008,
											"end": 25139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25000,
											"end": 25139,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25000,
											"end": 25139,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24727,
											"end": 25146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 24727,
											"end": 25146,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 24727,
											"end": 25146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 24727,
											"end": 25146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "tag",
											"source": 12,
											"value": "299"
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25273,
											"end": 25277,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25311,
											"end": 25313,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 25300,
											"end": 25309,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25296,
											"end": 25314,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25288,
											"end": 25314,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25288,
											"end": 25314,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25324,
											"end": 25395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 25392,
											"end": 25393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25381,
											"end": 25390,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25377,
											"end": 25394,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25368,
											"end": 25374,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 25324,
											"end": 25395,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 25324,
											"end": 25395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25324,
											"end": 25395,
											"name": "tag",
											"source": 12,
											"value": "706"
										},
										{
											"begin": 25324,
											"end": 25395,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25405,
											"end": 25477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 25473,
											"end": 25475,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 25462,
											"end": 25471,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25458,
											"end": 25476,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25449,
											"end": 25455,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 25405,
											"end": 25477,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 25405,
											"end": 25477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25405,
											"end": 25477,
											"name": "tag",
											"source": 12,
											"value": "707"
										},
										{
											"begin": 25405,
											"end": 25477,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25152,
											"end": 25484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25663,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 25490,
											"end": 25663,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25630,
											"end": 25655,
											"name": "PUSH",
											"source": 12,
											"value": "416D6F756E74206D75737420626520706F736974697665000000000000000000"
										},
										{
											"begin": 25626,
											"end": 25627,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25618,
											"end": 25624,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25614,
											"end": 25628,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 25607,
											"end": 25656,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25663,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25490,
											"end": 25663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25669,
											"end": 26035,
											"name": "tag",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 25669,
											"end": 26035,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25811,
											"end": 25814,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 25832,
											"end": 25899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 25896,
											"end": 25898,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 25891,
											"end": 25894,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 25832,
											"end": 25899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 25832,
											"end": 25899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25832,
											"end": 25899,
											"name": "tag",
											"source": 12,
											"value": "710"
										},
										{
											"begin": 25832,
											"end": 25899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 25825,
											"end": 25899,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25825,
											"end": 25899,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25908,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 25997,
											"end": 26000,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 25908,
											"end": 26001,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 25908,
											"end": 26001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 25908,
											"end": 26001,
											"name": "tag",
											"source": 12,
											"value": "711"
										},
										{
											"begin": 25908,
											"end": 26001,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26026,
											"end": 26028,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26021,
											"end": 26024,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26017,
											"end": 26029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26010,
											"end": 26029,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26010,
											"end": 26029,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25669,
											"end": 26035,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 25669,
											"end": 26035,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 25669,
											"end": 26035,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 25669,
											"end": 26035,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26460,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 26041,
											"end": 26460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26207,
											"end": 26211,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26245,
											"end": 26247,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26234,
											"end": 26243,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26230,
											"end": 26248,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26222,
											"end": 26248,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26222,
											"end": 26248,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26294,
											"end": 26303,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26288,
											"end": 26292,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26284,
											"end": 26304,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 26280,
											"end": 26281,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26269,
											"end": 26278,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26265,
											"end": 26282,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26258,
											"end": 26305,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26322,
											"end": 26453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 26448,
											"end": 26452,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 26322,
											"end": 26453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "480"
										},
										{
											"begin": 26322,
											"end": 26453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26322,
											"end": 26453,
											"name": "tag",
											"source": 12,
											"value": "713"
										},
										{
											"begin": 26322,
											"end": 26453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26314,
											"end": 26453,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26314,
											"end": 26453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26460,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26041,
											"end": 26460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26466,
											"end": 26632,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 26466,
											"end": 26632,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26606,
											"end": 26624,
											"name": "PUSH",
											"source": 12,
											"value": "5061636B61676520696E61637469766500000000000000000000000000000000"
										},
										{
											"begin": 26602,
											"end": 26603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26594,
											"end": 26600,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26590,
											"end": 26604,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26583,
											"end": 26625,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 26466,
											"end": 26632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26466,
											"end": 26632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26638,
											"end": 27004,
											"name": "tag",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 26638,
											"end": 27004,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26780,
											"end": 26783,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 26801,
											"end": 26868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 26865,
											"end": 26867,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 26860,
											"end": 26863,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 26801,
											"end": 26868,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 26801,
											"end": 26868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26801,
											"end": 26868,
											"name": "tag",
											"source": 12,
											"value": "716"
										},
										{
											"begin": 26801,
											"end": 26868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26794,
											"end": 26868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26794,
											"end": 26868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26877,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 26966,
											"end": 26969,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26877,
											"end": 26970,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 26877,
											"end": 26970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 26877,
											"end": 26970,
											"name": "tag",
											"source": 12,
											"value": "717"
										},
										{
											"begin": 26877,
											"end": 26970,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 26995,
											"end": 26997,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 26990,
											"end": 26993,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 26986,
											"end": 26998,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 26979,
											"end": 26998,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26979,
											"end": 26998,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26638,
											"end": 27004,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 26638,
											"end": 27004,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 26638,
											"end": 27004,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 26638,
											"end": 27004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27010,
											"end": 27429,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 27010,
											"end": 27429,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27176,
											"end": 27180,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27214,
											"end": 27216,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27203,
											"end": 27212,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27199,
											"end": 27217,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27191,
											"end": 27217,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27191,
											"end": 27217,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27263,
											"end": 27272,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27257,
											"end": 27261,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27253,
											"end": 27273,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 27249,
											"end": 27250,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27238,
											"end": 27247,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27234,
											"end": 27251,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27227,
											"end": 27274,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27291,
											"end": 27422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 27417,
											"end": 27421,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 27291,
											"end": 27422,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "482"
										},
										{
											"begin": 27291,
											"end": 27422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27291,
											"end": 27422,
											"name": "tag",
											"source": 12,
											"value": "719"
										},
										{
											"begin": 27291,
											"end": 27422,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27283,
											"end": 27422,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27283,
											"end": 27422,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27010,
											"end": 27429,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27010,
											"end": 27429,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27010,
											"end": 27429,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27010,
											"end": 27429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27435,
											"end": 27610,
											"name": "tag",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 27435,
											"end": 27610,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27575,
											"end": 27602,
											"name": "PUSH",
											"source": 12,
											"value": "496E73756666696369656E74207374616B6520616D6F756E7400000000000000"
										},
										{
											"begin": 27571,
											"end": 27572,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27563,
											"end": 27569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27559,
											"end": 27573,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27552,
											"end": 27603,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 27435,
											"end": 27610,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27435,
											"end": 27610,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27616,
											"end": 27982,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 27616,
											"end": 27982,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27758,
											"end": 27761,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 27779,
											"end": 27846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 27843,
											"end": 27845,
											"name": "PUSH",
											"source": 12,
											"value": "19"
										},
										{
											"begin": 27838,
											"end": 27841,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 27779,
											"end": 27846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 27779,
											"end": 27846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27779,
											"end": 27846,
											"name": "tag",
											"source": 12,
											"value": "722"
										},
										{
											"begin": 27779,
											"end": 27846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27772,
											"end": 27846,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27772,
											"end": 27846,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27855,
											"end": 27948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 27944,
											"end": 27947,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27855,
											"end": 27948,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "483"
										},
										{
											"begin": 27855,
											"end": 27948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27855,
											"end": 27948,
											"name": "tag",
											"source": 12,
											"value": "723"
										},
										{
											"begin": 27855,
											"end": 27948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 27973,
											"end": 27975,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 27968,
											"end": 27971,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 27964,
											"end": 27976,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 27957,
											"end": 27976,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27957,
											"end": 27976,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27616,
											"end": 27982,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27616,
											"end": 27982,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27616,
											"end": 27982,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27616,
											"end": 27982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28407,
											"name": "tag",
											"source": 12,
											"value": "322"
										},
										{
											"begin": 27988,
											"end": 28407,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28154,
											"end": 28158,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28192,
											"end": 28194,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28181,
											"end": 28190,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28177,
											"end": 28195,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28169,
											"end": 28195,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28169,
											"end": 28195,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28241,
											"end": 28250,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28235,
											"end": 28239,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28231,
											"end": 28251,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 28227,
											"end": 28228,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28216,
											"end": 28225,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28212,
											"end": 28229,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28205,
											"end": 28252,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28269,
											"end": 28400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 28395,
											"end": 28399,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 28269,
											"end": 28400,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 28269,
											"end": 28400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28269,
											"end": 28400,
											"name": "tag",
											"source": 12,
											"value": "725"
										},
										{
											"begin": 28269,
											"end": 28400,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28261,
											"end": 28400,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28261,
											"end": 28400,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28407,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28407,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28407,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 27988,
											"end": 28407,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28413,
											"end": 28583,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 28413,
											"end": 28583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28553,
											"end": 28575,
											"name": "PUSH",
											"source": 12,
											"value": "4E6F207265776172647320617661696C61626C65000000000000000000000000"
										},
										{
											"begin": 28549,
											"end": 28550,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28541,
											"end": 28547,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28537,
											"end": 28551,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28530,
											"end": 28576,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 28413,
											"end": 28583,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28413,
											"end": 28583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28589,
											"end": 28955,
											"name": "tag",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 28589,
											"end": 28955,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28731,
											"end": 28734,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 28752,
											"end": 28819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 28816,
											"end": 28818,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 28811,
											"end": 28814,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 28752,
											"end": 28819,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 28752,
											"end": 28819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28752,
											"end": 28819,
											"name": "tag",
											"source": 12,
											"value": "728"
										},
										{
											"begin": 28752,
											"end": 28819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28745,
											"end": 28819,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28745,
											"end": 28819,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28828,
											"end": 28921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 28917,
											"end": 28920,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28828,
											"end": 28921,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 28828,
											"end": 28921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28828,
											"end": 28921,
											"name": "tag",
											"source": 12,
											"value": "729"
										},
										{
											"begin": 28828,
											"end": 28921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 28946,
											"end": 28948,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 28941,
											"end": 28944,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 28937,
											"end": 28949,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 28930,
											"end": 28949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28930,
											"end": 28949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28589,
											"end": 28955,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28589,
											"end": 28955,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28589,
											"end": 28955,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28589,
											"end": 28955,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 28961,
											"end": 29380,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 28961,
											"end": 29380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29127,
											"end": 29131,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29165,
											"end": 29167,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29154,
											"end": 29163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29150,
											"end": 29168,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29142,
											"end": 29168,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29142,
											"end": 29168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29214,
											"end": 29223,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29208,
											"end": 29212,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29204,
											"end": 29224,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 29200,
											"end": 29201,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29189,
											"end": 29198,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29185,
											"end": 29202,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29178,
											"end": 29225,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29242,
											"end": 29373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 29368,
											"end": 29372,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 29242,
											"end": 29373,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "486"
										},
										{
											"begin": 29242,
											"end": 29373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29242,
											"end": 29373,
											"name": "tag",
											"source": 12,
											"value": "731"
										},
										{
											"begin": 29242,
											"end": 29373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29234,
											"end": 29373,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29234,
											"end": 29373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28961,
											"end": 29380,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 28961,
											"end": 29380,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 28961,
											"end": 29380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 28961,
											"end": 29380,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29386,
											"end": 29567,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 29386,
											"end": 29567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29526,
											"end": 29559,
											"name": "PUSH",
											"source": 12,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 29522,
											"end": 29523,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29514,
											"end": 29520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29510,
											"end": 29524,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29503,
											"end": 29560,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 29386,
											"end": 29567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29386,
											"end": 29567,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29573,
											"end": 29939,
											"name": "tag",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 29573,
											"end": 29939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29715,
											"end": 29718,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 29736,
											"end": 29803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "734"
										},
										{
											"begin": 29800,
											"end": 29802,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 29795,
											"end": 29798,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 29736,
											"end": 29803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 29736,
											"end": 29803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29736,
											"end": 29803,
											"name": "tag",
											"source": 12,
											"value": "734"
										},
										{
											"begin": 29736,
											"end": 29803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29729,
											"end": 29803,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29729,
											"end": 29803,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29812,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 29901,
											"end": 29904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29812,
											"end": 29905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 29812,
											"end": 29905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29812,
											"end": 29905,
											"name": "tag",
											"source": 12,
											"value": "735"
										},
										{
											"begin": 29812,
											"end": 29905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 29930,
											"end": 29932,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 29925,
											"end": 29928,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 29921,
											"end": 29933,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 29914,
											"end": 29933,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29914,
											"end": 29933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29573,
											"end": 29939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29573,
											"end": 29939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29573,
											"end": 29939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29573,
											"end": 29939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 29945,
											"end": 30364,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 29945,
											"end": 30364,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30111,
											"end": 30115,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30149,
											"end": 30151,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 30138,
											"end": 30147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30134,
											"end": 30152,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30126,
											"end": 30152,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30126,
											"end": 30152,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30198,
											"end": 30207,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30192,
											"end": 30196,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30188,
											"end": 30208,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 30184,
											"end": 30185,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30173,
											"end": 30182,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30169,
											"end": 30186,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 30162,
											"end": 30209,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30226,
											"end": 30357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "737"
										},
										{
											"begin": 30352,
											"end": 30356,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30226,
											"end": 30357,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "488"
										},
										{
											"begin": 30226,
											"end": 30357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30226,
											"end": 30357,
											"name": "tag",
											"source": 12,
											"value": "737"
										},
										{
											"begin": 30226,
											"end": 30357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30218,
											"end": 30357,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 30218,
											"end": 30357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29945,
											"end": 30364,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 29945,
											"end": 30364,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 29945,
											"end": 30364,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 29945,
											"end": 30364,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30370,
											"end": 30780,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 30370,
											"end": 30780,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30410,
											"end": 30417,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30433,
											"end": 30453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "739"
										},
										{
											"begin": 30451,
											"end": 30452,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30433,
											"end": 30453,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 30433,
											"end": 30453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30433,
											"end": 30453,
											"name": "tag",
											"source": 12,
											"value": "739"
										},
										{
											"begin": 30433,
											"end": 30453,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30428,
											"end": 30453,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30428,
											"end": 30453,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30467,
											"end": 30487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 30485,
											"end": 30486,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30467,
											"end": 30487,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 30467,
											"end": 30487,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30467,
											"end": 30487,
											"name": "tag",
											"source": 12,
											"value": "740"
										},
										{
											"begin": 30467,
											"end": 30487,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30462,
											"end": 30487,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 30462,
											"end": 30487,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30522,
											"end": 30523,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30519,
											"end": 30520,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30515,
											"end": 30524,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 30544,
											"end": 30574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 30562,
											"end": 30573,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 30544,
											"end": 30574,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 30544,
											"end": 30574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30544,
											"end": 30574,
											"name": "tag",
											"source": 12,
											"value": "741"
										},
										{
											"begin": 30544,
											"end": 30574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30533,
											"end": 30574,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30533,
											"end": 30574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30723,
											"end": 30724,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30714,
											"end": 30721,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 30710,
											"end": 30725,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 30707,
											"end": 30708,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 30704,
											"end": 30726,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 30684,
											"end": 30685,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 30677,
											"end": 30686,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 30657,
											"end": 30740,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 30634,
											"end": 30773,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "742"
										},
										{
											"begin": 30634,
											"end": 30773,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 30753,
											"end": 30771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "743"
										},
										{
											"begin": 30753,
											"end": 30771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "462"
										},
										{
											"begin": 30753,
											"end": 30771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30753,
											"end": 30771,
											"name": "tag",
											"source": 12,
											"value": "743"
										},
										{
											"begin": 30753,
											"end": 30771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30634,
											"end": 30773,
											"name": "tag",
											"source": 12,
											"value": "742"
										},
										{
											"begin": 30634,
											"end": 30773,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30418,
											"end": 30780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30370,
											"end": 30780,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 30370,
											"end": 30780,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30370,
											"end": 30780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30370,
											"end": 30780,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30370,
											"end": 30780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 30786,
											"end": 30966,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 30786,
											"end": 30966,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 30834,
											"end": 30911,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30831,
											"end": 30832,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30824,
											"end": 30912,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30931,
											"end": 30935,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 30928,
											"end": 30929,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 30921,
											"end": 30936,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 30955,
											"end": 30959,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 30952,
											"end": 30953,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 30945,
											"end": 30960,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 30972,
											"end": 31157,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 30972,
											"end": 31157,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31012,
											"end": 31013,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31029,
											"end": 31049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "746"
										},
										{
											"begin": 31047,
											"end": 31048,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31029,
											"end": 31049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 31029,
											"end": 31049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31029,
											"end": 31049,
											"name": "tag",
											"source": 12,
											"value": "746"
										},
										{
											"begin": 31029,
											"end": 31049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31024,
											"end": 31049,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31024,
											"end": 31049,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31063,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "747"
										},
										{
											"begin": 31081,
											"end": 31082,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31063,
											"end": 31083,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 31063,
											"end": 31083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31063,
											"end": 31083,
											"name": "tag",
											"source": 12,
											"value": "747"
										},
										{
											"begin": 31063,
											"end": 31083,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31058,
											"end": 31083,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 31058,
											"end": 31083,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31102,
											"end": 31103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31092,
											"end": 31127,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 31092,
											"end": 31127,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 31107,
											"end": 31125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 31107,
											"end": 31125,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 31107,
											"end": 31125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31107,
											"end": 31125,
											"name": "tag",
											"source": 12,
											"value": "749"
										},
										{
											"begin": 31107,
											"end": 31125,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31092,
											"end": 31127,
											"name": "tag",
											"source": 12,
											"value": "748"
										},
										{
											"begin": 31092,
											"end": 31127,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31149,
											"end": 31150,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31146,
											"end": 31147,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31142,
											"end": 31151,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 31137,
											"end": 31151,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31137,
											"end": 31151,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30972,
											"end": 31157,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 30972,
											"end": 31157,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 30972,
											"end": 31157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30972,
											"end": 31157,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 30972,
											"end": 31157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31163,
											"end": 31329,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 31163,
											"end": 31329,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31303,
											"end": 31321,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A2070617573656400000000000000000000000000000000"
										},
										{
											"begin": 31299,
											"end": 31300,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31291,
											"end": 31297,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31287,
											"end": 31301,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31280,
											"end": 31322,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31163,
											"end": 31329,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31163,
											"end": 31329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31335,
											"end": 31701,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 31335,
											"end": 31701,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31477,
											"end": 31480,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31498,
											"end": 31565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 31562,
											"end": 31564,
											"name": "PUSH",
											"source": 12,
											"value": "10"
										},
										{
											"begin": 31557,
											"end": 31560,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31498,
											"end": 31565,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 31498,
											"end": 31565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31498,
											"end": 31565,
											"name": "tag",
											"source": 12,
											"value": "752"
										},
										{
											"begin": 31498,
											"end": 31565,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31491,
											"end": 31565,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31491,
											"end": 31565,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31574,
											"end": 31667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "753"
										},
										{
											"begin": 31663,
											"end": 31666,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31574,
											"end": 31667,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 31574,
											"end": 31667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31574,
											"end": 31667,
											"name": "tag",
											"source": 12,
											"value": "753"
										},
										{
											"begin": 31574,
											"end": 31667,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31692,
											"end": 31694,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 31687,
											"end": 31690,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31683,
											"end": 31695,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31676,
											"end": 31695,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31676,
											"end": 31695,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31335,
											"end": 31701,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31335,
											"end": 31701,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31335,
											"end": 31701,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31335,
											"end": 31701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31707,
											"end": 32126,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 31707,
											"end": 32126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31873,
											"end": 31877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31911,
											"end": 31913,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 31900,
											"end": 31909,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 31896,
											"end": 31914,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31888,
											"end": 31914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31888,
											"end": 31914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31960,
											"end": 31969,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31954,
											"end": 31958,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31950,
											"end": 31970,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 31946,
											"end": 31947,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 31935,
											"end": 31944,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 31931,
											"end": 31948,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 31924,
											"end": 31971,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 31988,
											"end": 32119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "755"
										},
										{
											"begin": 32114,
											"end": 32118,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 31988,
											"end": 32119,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 31988,
											"end": 32119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 31988,
											"end": 32119,
											"name": "tag",
											"source": 12,
											"value": "755"
										},
										{
											"begin": 31988,
											"end": 32119,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 31980,
											"end": 32119,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31980,
											"end": 32119,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31707,
											"end": 32126,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 31707,
											"end": 32126,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 31707,
											"end": 32126,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 31707,
											"end": 32126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "tag",
											"source": 12,
											"value": "410"
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32281,
											"end": 32285,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32319,
											"end": 32321,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 32308,
											"end": 32317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32304,
											"end": 32322,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32296,
											"end": 32322,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32296,
											"end": 32322,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32332,
											"end": 32403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "757"
										},
										{
											"begin": 32400,
											"end": 32401,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32389,
											"end": 32398,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 32385,
											"end": 32402,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32376,
											"end": 32382,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 32332,
											"end": 32403,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 32332,
											"end": 32403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32332,
											"end": 32403,
											"name": "tag",
											"source": 12,
											"value": "757"
										},
										{
											"begin": 32332,
											"end": 32403,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32413,
											"end": 32485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "758"
										},
										{
											"begin": 32481,
											"end": 32483,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 32470,
											"end": 32479,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 32466,
											"end": 32484,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32457,
											"end": 32463,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 32413,
											"end": 32485,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 32413,
											"end": 32485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32413,
											"end": 32485,
											"name": "tag",
											"source": 12,
											"value": "758"
										},
										{
											"begin": 32413,
											"end": 32485,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32495,
											"end": 32567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "759"
										},
										{
											"begin": 32563,
											"end": 32565,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 32552,
											"end": 32561,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 32548,
											"end": 32566,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32539,
											"end": 32545,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 32495,
											"end": 32567,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 32495,
											"end": 32567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32495,
											"end": 32567,
											"name": "tag",
											"source": 12,
											"value": "759"
										},
										{
											"begin": 32495,
											"end": 32567,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32132,
											"end": 32574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32580,
											"end": 32750,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 32580,
											"end": 32750,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32720,
											"end": 32742,
											"name": "PUSH",
											"source": 12,
											"value": "5061757361626C653A206E6F7420706175736564000000000000000000000000"
										},
										{
											"begin": 32716,
											"end": 32717,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32708,
											"end": 32714,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32704,
											"end": 32718,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 32697,
											"end": 32743,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 32580,
											"end": 32750,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32580,
											"end": 32750,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32756,
											"end": 33122,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 32756,
											"end": 33122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32898,
											"end": 32901,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 32919,
											"end": 32986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "762"
										},
										{
											"begin": 32983,
											"end": 32985,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 32978,
											"end": 32981,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 32919,
											"end": 32986,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 32919,
											"end": 32986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32919,
											"end": 32986,
											"name": "tag",
											"source": 12,
											"value": "762"
										},
										{
											"begin": 32919,
											"end": 32986,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 32912,
											"end": 32986,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 32912,
											"end": 32986,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32995,
											"end": 33088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "763"
										},
										{
											"begin": 33084,
											"end": 33087,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 32995,
											"end": 33088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 32995,
											"end": 33088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 32995,
											"end": 33088,
											"name": "tag",
											"source": 12,
											"value": "763"
										},
										{
											"begin": 32995,
											"end": 33088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33113,
											"end": 33115,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 33108,
											"end": 33111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33104,
											"end": 33116,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33097,
											"end": 33116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33097,
											"end": 33116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32756,
											"end": 33122,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 32756,
											"end": 33122,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 32756,
											"end": 33122,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 32756,
											"end": 33122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33128,
											"end": 33547,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 33128,
											"end": 33547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33294,
											"end": 33298,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33332,
											"end": 33334,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 33321,
											"end": 33330,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 33317,
											"end": 33335,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33309,
											"end": 33335,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33309,
											"end": 33335,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33381,
											"end": 33390,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 33375,
											"end": 33379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 33371,
											"end": 33391,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 33367,
											"end": 33368,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 33356,
											"end": 33365,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 33352,
											"end": 33369,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 33345,
											"end": 33392,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 33409,
											"end": 33540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "765"
										},
										{
											"begin": 33535,
											"end": 33539,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 33409,
											"end": 33540,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 33409,
											"end": 33540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 33409,
											"end": 33540,
											"name": "tag",
											"source": 12,
											"value": "765"
										},
										{
											"begin": 33409,
											"end": 33540,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 33401,
											"end": 33540,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33401,
											"end": 33540,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33128,
											"end": 33547,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 33128,
											"end": 33547,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 33128,
											"end": 33547,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 33128,
											"end": 33547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/access/Ownable2Step.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Farming.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BPS_DENOMINATOR()": "e1a45218",
							"MAX_FEE_BPS()": "d55be8c6",
							"SECONDS_PER_YEAR()": "e6a69ab8",
							"acceptOwnership()": "79ba5097",
							"autoCompoundFeeBps()": "2ba662d6",
							"calculatePendingRewards(address,uint256)": "7fc7984d",
							"claimStakeRewards(uint256)": "dd69becd",
							"configureNewPackage(address,uint256,uint256,uint256)": "1bd9b708",
							"createStake(uint256,uint256)": "d7fa023d",
							"emergencyPause()": "51858e27",
							"emergencyUnpause()": "4a4e3bd5",
							"feeCollector()": "c415b95c",
							"feePoolBalance()": "db94ebc9",
							"getActivePackageCount()": "985145b5",
							"getPackageDetails(uint256)": "6c435e36",
							"getUserStakes(address)": "842e2981",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"pendingOwner()": "e30c3978",
							"renounceOwnership()": "715018a6",
							"rewardToken()": "f7c618c1",
							"toggleAutoCompound(uint256)": "5a4d8489",
							"transferOwnership(address)": "f2fde38b",
							"updateFeeParameters(uint256,address)": "973e46b1",
							"updatePackageAPY(uint256,uint256)": "7f6a9184",
							"updatePackageStatus(uint256,bool)": "217a51ee",
							"withdrawAccumulatedFees()": "2e185ec7",
							"withdrawStake(uint256)": "25d5971f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialFeeCollector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEnabled\",\"type\":\"bool\"}],\"name\":\"AutoCompoundToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFeeBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"FeeParametersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"FeesWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferStarted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"apyBps\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minStake\",\"type\":\"uint256\"}],\"name\":\"PackageConfigured\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"PackageStatusChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"StakeCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"principal\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"StakeWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BPS_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"autoCompoundFeeBps\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"}],\"name\":\"calculatePendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"}],\"name\":\"claimStakeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"stakeToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apyBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStake\",\"type\":\"uint256\"}],\"name\":\"configureNewPackage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyPause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyUnpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeCollector\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feePoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivePackageCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"}],\"name\":\"getPackageDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"stakeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lockDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apyBps\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minimumStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"internalType\":\"struct CAFIFarming.FarmPackage\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakedAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeStartTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lastRewardClaimTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isAutoCompounding\",\"type\":\"bool\"}],\"internalType\":\"struct CAFIFarming.UserStake[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pendingOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"}],\"name\":\"toggleAutoCompound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFeeBps\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"newCollector\",\"type\":\"address\"}],\"name\":\"updateFeeParameters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newApyBps\",\"type\":\"uint256\"}],\"name\":\"updatePackageAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"packageId\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"name\":\"updatePackageStatus\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawAccumulatedFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeId\",\"type\":\"uint256\"}],\"name\":\"withdrawStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Features adjustable APY packages with strict security controls\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"acceptOwnership()\":{\"details\":\"The new owner accepts the ownership transfer.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"pendingOwner()\":{\"details\":\"Returns the address of the pending owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one. Can only be called by the current owner. Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer.\"}},\"title\":\"CAFIFarming - Secure Staking Platform\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Implements time-locked staking with auto-compounding rewards\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"Farming.sol\":\"CAFIFarming\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/access/Ownable2Step.sol\":{\"keccak256\":\"0xdcad8898fda432696597752e8ec361b87d85c82cb258115427af006dacf7128c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2c9d517f0c136d54bd00cd57959d25681d4d6273f5bbbc263afe228303772f0\",\"dweb:/ipfs/QmReNFjXBiufByiAAzfSQ2SM5r3qeUErn46BmN3yVRvrek\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Farming.sol\":{\"keccak256\":\"0xb56b0ac048e06570d23b0f795ad9ed5bde25f0ca776ea12d1c32c2b7ef67ad7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c79af749eedab98da59c76b66a8eaa610949348b0b5f67ef3c96bf0f6c81e39d\",\"dweb:/ipfs/QmYZ3Xq9SgMcmkR5Zt8ie9Gg3Qhac45J2uy2b9PfYLvKD8\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Farming.sol:CAFIFarming",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 156,
								"contract": "Farming.sol:CAFIFarming",
								"label": "_pendingOwner",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 442,
								"contract": "Farming.sol:CAFIFarming",
								"label": "_status",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 341,
								"contract": "Farming.sol:CAFIFarming",
								"label": "_paused",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 1136,
								"contract": "Farming.sol:CAFIFarming",
								"label": "farmPackages",
								"offset": 0,
								"slot": "4",
								"type": "t_array(t_struct(FarmPackage)1109_storage)dyn_storage"
							},
							{
								"astId": 1138,
								"contract": "Farming.sol:CAFIFarming",
								"label": "feeCollector",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 1141,
								"contract": "Farming.sol:CAFIFarming",
								"label": "autoCompoundFeeBps",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1143,
								"contract": "Farming.sol:CAFIFarming",
								"label": "feePoolBalance",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1149,
								"contract": "Farming.sol:CAFIFarming",
								"label": "userStakes",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_array(t_struct(UserStake)1120_storage)dyn_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(FarmPackage)1109_storage)dyn_storage": {
								"base": "t_struct(FarmPackage)1109_storage",
								"encoding": "dynamic_array",
								"label": "struct CAFIFarming.FarmPackage[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(UserStake)1120_storage)dyn_storage": {
								"base": "t_struct(UserStake)1120_storage",
								"encoding": "dynamic_array",
								"label": "struct CAFIFarming.UserStake[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(UserStake)1120_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CAFIFarming.UserStake[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(UserStake)1120_storage)dyn_storage"
							},
							"t_struct(FarmPackage)1109_storage": {
								"encoding": "inplace",
								"label": "struct CAFIFarming.FarmPackage",
								"members": [
									{
										"astId": 1100,
										"contract": "Farming.sol:CAFIFarming",
										"label": "stakeTokenAddress",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 1102,
										"contract": "Farming.sol:CAFIFarming",
										"label": "lockDuration",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1104,
										"contract": "Farming.sol:CAFIFarming",
										"label": "apyBps",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1106,
										"contract": "Farming.sol:CAFIFarming",
										"label": "minimumStakeAmount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1108,
										"contract": "Farming.sol:CAFIFarming",
										"label": "isActive",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_struct(UserStake)1120_storage": {
								"encoding": "inplace",
								"label": "struct CAFIFarming.UserStake",
								"members": [
									{
										"astId": 1111,
										"contract": "Farming.sol:CAFIFarming",
										"label": "packageId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1113,
										"contract": "Farming.sol:CAFIFarming",
										"label": "stakedAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1115,
										"contract": "Farming.sol:CAFIFarming",
										"label": "stakeStartTimestamp",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1117,
										"contract": "Farming.sol:CAFIFarming",
										"label": "lastRewardClaimTimestamp",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1119,
										"contract": "Farming.sol:CAFIFarming",
										"label": "isAutoCompounding",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Implements time-locked staking with auto-compounding rewards",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1068
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1069,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1068,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1068,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1068
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1050,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/Ownable2Step.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
					"exportedSymbols": {
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "./Ownable.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 148,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 153,
										"name": "Ownable",
										"nameLocations": [
											"1018:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "1018:7:1"
									},
									"id": 154,
									"nodeType": "InheritanceSpecifier",
									"src": "1018:7:1"
								}
							],
							"canonicalName": "Ownable2Step",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 152,
								"nodeType": "StructuredDocumentation",
								"src": "173:810:1",
								"text": " @dev Contract module which provides access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n This extension of the {Ownable} contract includes a two-step mechanism to transfer\n ownership, where the new owner must call {acceptOwnership} in order to replace the\n old one. This can help prevent common mistakes, such as transfers of ownership to\n incorrect accounts, or to contracts that are unable to interact with the\n permission system.\n The initial owner is specified at deployment time in the constructor for `Ownable`. This\n can later be changed with {transferOwnership} and {acceptOwnership}.\n This module is used through inheritance. It will make available all functions\n from parent (Ownable)."
							},
							"fullyImplemented": true,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								147,
								1068
							],
							"name": "Ownable2Step",
							"nameLocation": "1002:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 156,
									"mutability": "mutable",
									"name": "_pendingOwner",
									"nameLocation": "1048:13:1",
									"nodeType": "VariableDeclaration",
									"scope": 233,
									"src": "1032:29:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 155,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1032:7:1",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "38d16b8cac22d99fc7c124b9cd0de2d3fa1faef420bfe791d8c362d765e22700",
									"id": 162,
									"name": "OwnershipTransferStarted",
									"nameLocation": "1074:24:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1115:13:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1099:29:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1099:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1146:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 162,
												"src": "1130:24:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1098:57:1"
									},
									"src": "1068:88:1"
								},
								{
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "1294:37:1",
										"statements": [
											{
												"expression": {
													"id": 168,
													"name": "_pendingOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 156,
													"src": "1311:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 167,
												"id": 169,
												"nodeType": "Return",
												"src": "1304:20:1"
											}
										]
									},
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "1162:65:1",
										"text": " @dev Returns the address of the pending owner."
									},
									"functionSelector": "e30c3978",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "pendingOwner",
									"nameLocation": "1241:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1253:2:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "1285:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1284:9:1"
									},
									"scope": 233,
									"src": "1232:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										126
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "1728:99:1",
										"statements": [
											{
												"expression": {
													"id": 182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1738:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 181,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 174,
														"src": "1754:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1738:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 183,
												"nodeType": "ExpressionStatement",
												"src": "1738:24:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "1802:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1802:7:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "1811:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "OwnershipTransferStarted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "1777:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1777:43:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "EmitStatement",
												"src": "1772:48:1"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "1337:307:1",
										"text": " @dev Starts the ownership transfer of the contract to a new account. Replaces the pending transfer if there is one.\n Can only be called by the current owner.\n Setting `newOwner` to the zero address is allowed; this can be used to cancel an initiated ownership transfer."
									},
									"functionSelector": "f2fde38b",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 177,
												"name": "onlyOwner",
												"nameLocations": [
													"1718:9:1"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1718:9:1"
											},
											"nodeType": "ModifierInvocation",
											"src": "1718:9:1"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1658:17:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 176,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1709:8:1"
									},
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1684:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "1676:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1676:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1675:18:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1728:0:1"
									},
									"scope": 233,
									"src": "1649:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										146
									],
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "2083:81:1",
										"statements": [
											{
												"expression": {
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "2093:20:1",
													"subExpression": {
														"id": 198,
														"name": "_pendingOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "2100:13:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "2093:20:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2148:8:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 201,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "2123:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_Ownable2Step_$233_$",
																"typeString": "type(contract super Ownable2Step)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2129:18:1",
														"memberName": "_transferOwnership",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 146,
														"src": "2123:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2123:34:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 206,
												"nodeType": "ExpressionStatement",
												"src": "2123:34:1"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "1833:173:1",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`) and deletes any pending owner.\n Internal function without access restriction."
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2020:18:1",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 196,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2074:8:1"
									},
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2047:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "2039:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2038:18:1"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2083:0:1"
									},
									"scope": 233,
									"src": "2011:153:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "2286:187:1",
										"statements": [
											{
												"assignments": [
													213
												],
												"declarations": [
													{
														"constant": false,
														"id": 213,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "2304:6:1",
														"nodeType": "VariableDeclaration",
														"scope": 231,
														"src": "2296:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 212,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2296:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 216,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 214,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "2313:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2313:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2296:29:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 217,
															"name": "pendingOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2339:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 218,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2339:14:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 219,
														"name": "sender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 213,
														"src": "2357:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2339:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 226,
												"nodeType": "IfStatement",
												"src": "2335:96:1",
												"trueBody": {
													"id": 225,
													"nodeType": "Block",
													"src": "2365:66:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 222,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 213,
																		"src": "2413:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 221,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "2386:26:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2386:34:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 224,
															"nodeType": "RevertStatement",
															"src": "2379:41:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 228,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 213,
															"src": "2459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 227,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															208
														],
														"referencedDeclaration": 208,
														"src": "2440:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2440:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "2440:26:1"
											}
										]
									},
									"documentation": {
										"id": 209,
										"nodeType": "StructuredDocumentation",
										"src": "2170:69:1",
										"text": " @dev The new owner accepts the ownership transfer."
									},
									"functionSelector": "79ba5097",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "acceptOwnership",
									"nameLocation": "2253:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2268:2:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2286:0:1"
									},
									"scope": 233,
									"src": "2244:229:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 234,
							"src": "984:1491:1",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								162
							]
						}
					],
					"src": "107:2369:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							315
						],
						"IERC165": [
							1080
						],
						"IERC20": [
							574
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 324,
							"src": "133:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 574,
										"src": "141:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 239,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 320,
							"src": "170:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 238,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1080,
										"src": "178:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 241,
										"name": "IERC20",
										"nameLocations": [
											"590:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 574,
										"src": "590:6:2"
									},
									"id": 242,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:2"
								},
								{
									"baseName": {
										"id": 243,
										"name": "IERC165",
										"nameLocations": [
											"598:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1080,
										"src": "598:7:2"
									},
									"id": 244,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:2"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:2",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								1080,
								574
							],
							"name": "IERC1363",
							"nameLocation": "578:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1548:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 246,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1560:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 248,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "1593:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 251,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:2"
									},
									"scope": 315,
									"src": "1523:76:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 266,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2088:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2100:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2115:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 260,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "2154:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 263,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:2"
									},
									"scope": 315,
									"src": "2063:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 278,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2653:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2667:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:2"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 278,
												"src": "2712:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:2"
									},
									"scope": 315,
									"src": "2624:94:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 279,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 292,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3294:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3308:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3320:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3335:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 286,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:2"
									},
									"returnParameters": {
										"id": 291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 292,
												"src": "3374:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 289,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:2"
									},
									"scope": 315,
									"src": "3265:115:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 293,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 302,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3805:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3822:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:2"
									},
									"returnParameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3855:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 299,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:2"
									},
									"scope": 315,
									"src": "3781:80:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4374:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4391:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4406:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:2"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "4445:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 311,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:2"
									},
									"scope": 315,
									"src": "4350:101:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 316,
							"src": "568:3885:2",
							"usedErrors": [],
							"usedEvents": [
								508,
								517
							]
						}
					],
					"src": "107:4347:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1080
						]
					},
					"id": 320,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 319,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 320,
							"sourceUnit": 1081,
							"src": "132:59:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 318,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1080,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							574
						]
					},
					"id": 324,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 321,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 323,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 324,
							"sourceUnit": 575,
							"src": "131:49:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 322,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 574,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1068
						],
						"Pausable": [
							431
						]
					},
					"id": 432,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 325,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 326,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 432,
							"sourceUnit": 1069,
							"src": "130:30:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 328,
										"name": "Context",
										"nameLocations": [
											"632:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1068,
										"src": "632:7:5"
									},
									"id": 329,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:5"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 327,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:5",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 431,
							"linearizedBaseContracts": [
								431,
								1068
							],
							"name": "Pausable",
							"nameLocation": "620:8:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:5",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 334,
									"name": "Paused",
									"nameLocation": "730:6:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 334,
												"src": "737:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:5"
									},
									"src": "724:30:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 335,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:5",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 339,
									"name": "Unpaused",
									"nameLocation": "841:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "850:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:5"
									},
									"src": "835:32:5"
								},
								{
									"constant": false,
									"id": 341,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:5",
									"nodeType": "VariableDeclaration",
									"scope": 431,
									"src": "873:20:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 340,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 349,
										"nodeType": "Block",
										"src": "986:32:5",
										"statements": [
											{
												"expression": {
													"id": 347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 345,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "996:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 348,
												"nodeType": "ExpressionStatement",
												"src": "996:15:5"
											}
										]
									},
									"documentation": {
										"id": 342,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:5",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 350,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:5"
									},
									"returnParameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:5"
									},
									"scope": 431,
									"src": "972:46:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "1229:47:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 353,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "1239:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 355,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:5"
											},
											{
												"id": 356,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:5"
											}
										]
									},
									"documentation": {
										"id": 351,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:5",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 358,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:5"
									},
									"src": "1204:72:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 365,
										"nodeType": "Block",
										"src": "1476:44:5",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 361,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1486:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:5"
											},
											{
												"id": 364,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:5"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:5",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 366,
									"name": "whenPaused",
									"nameLocation": "1463:10:5",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:5"
									},
									"src": "1454:66:5",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "1668:31:5",
										"statements": [
											{
												"expression": {
													"id": 372,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 341,
													"src": "1685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 371,
												"id": 373,
												"nodeType": "Return",
												"src": "1678:14:5"
											}
										]
									},
									"documentation": {
										"id": 367,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:5",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:5"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "1662:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 369,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:5"
									},
									"scope": 431,
									"src": "1615:84:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "1818:55:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:5",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 380,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 375,
																	"src": "1837:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 383,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 379,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 385,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:5"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:5",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:5"
									},
									"scope": 431,
									"src": "1767:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "1993:58:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 392,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 375,
																"src": "2011:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 393,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 391,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:5"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:5",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:5"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:5"
									},
									"scope": 431,
									"src": "1945:106:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 413,
										"nodeType": "Block",
										"src": "2235:66:5",
										"statements": [
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 404,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2245:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 405,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 409,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "2281:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 408,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "2274:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 412,
												"nodeType": "EmitStatement",
												"src": "2269:25:5"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:5",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 414,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 402,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 401,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 358,
												"src": "2221:13:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:5"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:5"
									},
									"returnParameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:5"
									},
									"scope": 431,
									"src": "2186:115:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "2481:69:5",
										"statements": [
											{
												"expression": {
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 420,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "2491:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:5"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 425,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "2530:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 424,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "2521:8:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 428,
												"nodeType": "EmitStatement",
												"src": "2516:27:5"
											}
										]
									},
									"documentation": {
										"id": 415,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:5",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 418,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 417,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 366,
												"src": "2470:10:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:5"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:5"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:5"
									},
									"scope": 431,
									"src": "2433:117:5",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 432,
							"src": "602:1950:5",
							"usedErrors": [],
							"usedEvents": [
								334,
								339
							]
						}
					],
					"src": "105:2448:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							496
						]
					},
					"id": 497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 433,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 434,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:6",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 496,
							"linearizedBaseContracts": [
								496
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 437,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:6",
									"nodeType": "VariableDeclaration",
									"scope": 496,
									"src": "1676:41:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 436,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 440,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:6",
									"nodeType": "VariableDeclaration",
									"scope": 496,
									"src": "1723:37:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 438,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 439,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 442,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 496,
									"src": "1767:23:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 441,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 449,
										"nodeType": "Block",
										"src": "1811:39:6",
										"statements": [
											{
												"expression": {
													"id": 447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 445,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "1821:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 446,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "1831:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 448,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:6"
											}
										]
									},
									"id": 450,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:6"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:6"
									},
									"scope": 496,
									"src": "1797:53:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 460,
										"nodeType": "Block",
										"src": "2251:79:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 453,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "2261:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:6"
											},
											{
												"id": 456,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:6"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 457,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 484,
														"src": "2303:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 459,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:6"
											}
										]
									},
									"documentation": {
										"id": 451,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:6",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 461,
									"name": "nonReentrant",
									"nameLocation": "2236:12:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:6"
									},
									"src": "2227:103:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 475,
										"nodeType": "Block",
										"src": "2375:248:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 465,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "2468:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 466,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 440,
																"src": "2479:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 468,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 470,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:6"
											},
											{
												"expression": {
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 471,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2598:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 472,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "2608:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:6"
											}
										]
									},
									"id": 476,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:6"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:6"
									},
									"scope": 496,
									"src": "2336:287:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 483,
										"nodeType": "Block",
										"src": "2667:171:6",
										"statements": [
											{
												"expression": {
													"id": 481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 479,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "2809:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 480,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2819:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 482,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:6"
											}
										]
									},
									"id": 484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 477,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:6"
									},
									"returnParameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:6"
									},
									"scope": 496,
									"src": "2629:209:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "3081:43:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 490,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "3098:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 491,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 440,
														"src": "3109:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 489,
												"id": 493,
												"nodeType": "Return",
												"src": "3091:26:6"
											}
										]
									},
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:6",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:6"
									},
									"returnParameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "3075:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:6"
									},
									"scope": 496,
									"src": "3017:107:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 497,
							"src": "888:2238:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							574
						]
					},
					"id": 575,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 499,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:7",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 574,
							"linearizedBaseContracts": [
								574
							],
							"name": "IERC20",
							"nameLocation": "214:6:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 500,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:7",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 508,
									"name": "Transfer",
									"nameLocation": "396:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "405:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 504,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "427:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "447:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:7"
									},
									"src": "390:72:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 509,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:7",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 517,
									"name": "Approval",
									"nameLocation": "627:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "636:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 510,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "659:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "684:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:7"
									},
									"src": "621:78:7"
								},
								{
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:7",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:7"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "821:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:7"
									},
									"scope": 574,
									"src": "775:55:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:7",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 531,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "931:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:7"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 531,
												"src": "971:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:7"
									},
									"scope": 574,
									"src": "912:68:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 532,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:7",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 541,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1222:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1234:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:7"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "1267:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 538,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:7"
									},
									"scope": 574,
									"src": "1204:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:7",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 551,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1567:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1582:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:7"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 551,
												"src": "1622:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 548,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:7"
									},
									"scope": 574,
									"src": "1548:83:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 552,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:7",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 561,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 557,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2326:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2343:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 555,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:7"
									},
									"returnParameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "2376:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 558,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:7"
									},
									"scope": 574,
									"src": "2309:73:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:7",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2712:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2726:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2738:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:7"
									},
									"returnParameters": {
										"id": 572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "2771:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:7"
									},
									"scope": 574,
									"src": "2690:87:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 575,
							"src": "204:2575:7",
							"usedErrors": [],
							"usedEvents": [
								508,
								517
							]
						}
					],
					"src": "106:2674:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							315
						],
						"IERC20": [
							574
						],
						"SafeERC20": [
							1038
						]
					},
					"id": 1039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 576,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 578,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 575,
							"src": "141:37:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 577,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 574,
										"src": "149:6:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 580,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 316,
							"src": "179:58:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 579,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "187:8:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 581,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:8",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1038,
							"linearizedBaseContracts": [
								1038
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:8",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 586,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 586,
												"src": "823:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:8"
									},
									"src": "792:46:8"
								},
								{
									"documentation": {
										"id": 587,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:8",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 595,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "959:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:8",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "976:24:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1002:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:8"
									},
									"src": "920:109:8"
								},
								{
									"body": {
										"id": 618,
										"nodeType": "Block",
										"src": "1291:88:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 607,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 599,
															"src": "1321:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 610,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 599,
																		"src": "1343:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 541,
																	"src": "1343:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 612,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 601,
																			"src": "1360:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 613,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 603,
																			"src": "1364:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 614,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 608,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 615,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 606,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1301:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 616,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 617,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:8"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:8",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 619,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1241:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 598,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 597,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "1241:6:8"
													},
													"referencedDeclaration": 574,
													"src": "1241:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1255:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 600,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "1267:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:8"
									},
									"returnParameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:8"
									},
									"scope": 1038,
									"src": "1219:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 645,
										"nodeType": "Block",
										"src": "1708:98:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 633,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 623,
															"src": "1738:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 636,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "1760:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 573,
																	"src": "1760:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 638,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 625,
																			"src": "1781:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 639,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "1787:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 640,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 629,
																			"src": "1791:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 641,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 634,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 635,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 632,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 996,
														"src": "1718:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 644,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:8"
											}
										]
									},
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:8",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 646,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1644:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 622,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 621,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "1644:6:8"
													},
													"referencedDeclaration": 574,
													"src": "1644:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1658:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1672:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 626,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 646,
												"src": "1684:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 628,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:8"
									},
									"returnParameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:8"
									},
									"scope": 1038,
									"src": "1618:188:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 671,
										"nodeType": "Block",
										"src": "2033:99:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 660,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 650,
															"src": "2074:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 663,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 650,
																		"src": "2096:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:8",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 541,
																	"src": "2096:14:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 665,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 652,
																			"src": "2113:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 666,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 654,
																			"src": "2117:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 667,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 661,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 659,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "2050:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 658,
												"id": 670,
												"nodeType": "Return",
												"src": "2043:82:8"
											}
										]
									},
									"documentation": {
										"id": 647,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:8",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 672,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1968:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 649,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 648,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "1968:6:8"
													},
													"referencedDeclaration": 574,
													"src": "1968:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1982:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "1994:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:8"
									},
									"returnParameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "2027:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 656,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:8"
									},
									"scope": 1038,
									"src": "1943:189:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "2381:109:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 688,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 676,
															"src": "2422:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 691,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 676,
																		"src": "2444:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 692,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:8",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 573,
																	"src": "2444:18:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 693,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 678,
																			"src": "2465:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 694,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 680,
																			"src": "2471:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 695,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 682,
																			"src": "2475:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 696,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 689,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:8",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 687,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1037,
														"src": "2398:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 686,
												"id": 699,
												"nodeType": "Return",
												"src": "2391:92:8"
											}
										]
									},
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:8",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 676,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2302:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 675,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 674,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "2302:6:8"
													},
													"referencedDeclaration": 574,
													"src": "2302:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2316:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 680,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2330:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 679,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2342:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 681,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:8"
									},
									"returnParameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "2375:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 684,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:8"
									},
									"scope": 1038,
									"src": "2273:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3232:139:8",
										"statements": [
											{
												"assignments": [
													713
												],
												"declarations": [
													{
														"constant": false,
														"id": 713,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 731,
														"src": "3242:20:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 712,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 722,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 718,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1038",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1038",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 716,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:8",
																	"typeDescriptions": {}
																}
															},
															"id": 719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 720,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3296:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 714,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3265:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														"id": 715,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:8",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 551,
														"src": "3265:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 724,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "3327:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 725,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "3334:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 713,
																"src": "3343:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 727,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 709,
																"src": "3358:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 822,
														"src": "3314:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:8"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:8",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3177:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 704,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 703,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "3177:6:8"
													},
													"referencedDeclaration": 574,
													"src": "3177:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3191:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 732,
												"src": "3208:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:8"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:8"
									},
									"scope": 1038,
									"src": "3146:225:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 774,
										"nodeType": "Block",
										"src": "4137:370:8",
										"statements": [
											{
												"id": 773,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:8",
												"statements": [
													{
														"assignments": [
															744
														],
														"declarations": [
															{
																"constant": false,
																"id": 744,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:8",
																"nodeType": "VariableDeclaration",
																"scope": 773,
																"src": "4171:24:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 743,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 753,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 749,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1038",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1038",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 747,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 751,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "4229:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 745,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "4198:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$574",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:8",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 551,
																"src": "4198:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 752,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 754,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 744,
																"src": "4255:16:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 755,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 740,
																"src": "4274:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 764,
														"nodeType": "IfStatement",
														"src": "4251:160:8",
														"trueBody": {
															"id": 763,
															"nodeType": "Block",
															"src": "4293:118:8",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 738,
																				"src": "4351:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 744,
																				"src": "4360:16:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 760,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 740,
																				"src": "4378:17:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 757,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 595,
																			"src": "4318:32:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 761,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 762,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 766,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "4437:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$574",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 767,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 738,
																	"src": "4444:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 770,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 768,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 744,
																		"src": "4453:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 769,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 740,
																		"src": "4472:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$574",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 765,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "4424:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 772,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:8",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "4070:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 735,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 734,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "4070:6:8"
													},
													"referencedDeclaration": 574,
													"src": "4070:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "4084:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "4101:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 739,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:8"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:8"
									},
									"scope": 1038,
									"src": "4039:468:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "5161:303:8",
										"statements": [
											{
												"assignments": [
													787
												],
												"declarations": [
													{
														"constant": false,
														"id": 787,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:8",
														"nodeType": "VariableDeclaration",
														"scope": 821,
														"src": "5171:25:8",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 786,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 796,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 790,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "5214:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$574",
																	"typeString": "contract IERC20"
																}
															},
															"id": 791,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:8",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 561,
															"src": "5214:13:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 792,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 781,
																	"src": "5230:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 793,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 783,
																	"src": "5239:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 794,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 788,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 789,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:8",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:8"
											},
											{
												"condition": {
													"id": 801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:8",
													"subExpression": {
														"arguments": [
															{
																"id": 798,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "5286:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$574",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 799,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 787,
																"src": "5293:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$574",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 797,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1037,
															"src": "5262:23:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 800,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 820,
												"nodeType": "IfStatement",
												"src": "5257:201:8",
												"trueBody": {
													"id": 819,
													"nodeType": "Block",
													"src": "5308:150:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 803,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "5342:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 806,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 779,
																					"src": "5364:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$574",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 807,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:8",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 561,
																				"src": "5364:13:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 808,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 781,
																						"src": "5380:7:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 809,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 810,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 804,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 805,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:8",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 811,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 802,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "5322:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 813,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:8"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 815,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 779,
																		"src": "5427:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 816,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 787,
																		"src": "5434:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 814,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "5407:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 818,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:8",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5106:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 778,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 777,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "5106:6:8"
													},
													"referencedDeclaration": 574,
													"src": "5106:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5120:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 822,
												"src": "5137:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:8"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:8"
									},
									"scope": 1038,
									"src": "5084:380:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "5911:219:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 835,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 828,
																"src": "5925:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 836,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 838,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 849,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 828,
																	"src": "6034:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 850,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 830,
																	"src": "6038:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 851,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 832,
																	"src": "6045:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 847,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 826,
																	"src": "6012:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$315",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:8",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 266,
																"src": "6012:21:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 862,
													"nodeType": "IfStatement",
													"src": "6007:117:8",
													"trueBody": {
														"id": 861,
														"nodeType": "Block",
														"src": "6052:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 857,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 826,
																					"src": "6106:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 856,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 855,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 858,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 854,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "6073:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 860,
																"nodeType": "RevertStatement",
																"src": "6066:47:8"
															}
														]
													}
												},
												"id": 863,
												"nodeType": "IfStatement",
												"src": "5921:203:8",
												"trueBody": {
													"id": 846,
													"nodeType": "Block",
													"src": "5946:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 841,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 826,
																		"src": "5973:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 842,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "5980:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 843,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 830,
																		"src": "5984:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 840,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "5960:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 845,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:8",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 833,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5840:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$315",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 825,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 824,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "5840:8:8"
													},
													"referencedDeclaration": 315,
													"src": "5840:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$315",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5856:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5868:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "5883:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 831,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:8"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:8"
									},
									"scope": 1038,
									"src": "5808:322:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 911,
										"nodeType": "Block",
										"src": "6649:239:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 884,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 880,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 873,
																"src": "6663:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 882,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 883,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 895,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 871,
																	"src": "6786:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 896,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "6792:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 897,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 875,
																	"src": "6796:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 898,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 877,
																	"src": "6803:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 893,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "6760:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$315",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:8",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 292,
																"src": "6760:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 909,
													"nodeType": "IfStatement",
													"src": "6755:127:8",
													"trueBody": {
														"id": 908,
														"nodeType": "Block",
														"src": "6810:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 904,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 869,
																					"src": "6864:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 903,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 902,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 905,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 901,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "6831:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 907,
																"nodeType": "RevertStatement",
																"src": "6824:47:8"
															}
														]
													}
												},
												"id": 910,
												"nodeType": "IfStatement",
												"src": "6659:223:8",
												"trueBody": {
													"id": 892,
													"nodeType": "Block",
													"src": "6684:65:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 886,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 869,
																		"src": "6715:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 887,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 871,
																		"src": "6722:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 888,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 873,
																		"src": "6728:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 889,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "6732:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 885,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 646,
																	"src": "6698:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 890,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 891,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:8",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 912,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "6527:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$315",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 868,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 867,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "6527:8:8"
													},
													"referencedDeclaration": 315,
													"src": "6527:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$315",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "6551:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "6573:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "6593:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "6616:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 876,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:8"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:8"
									},
									"scope": 1038,
									"src": "6482:406:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 954,
										"nodeType": "Block",
										"src": "7655:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 925,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 918,
																"src": "7669:2:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 927,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 928,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 943,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:8",
														"subExpression": {
															"arguments": [
																{
																	"id": 939,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 918,
																	"src": "7777:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 940,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "7781:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 941,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "7788:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 937,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "7756:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$315",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:8",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 314,
																"src": "7756:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 952,
													"nodeType": "IfStatement",
													"src": "7751:116:8",
													"trueBody": {
														"id": 951,
														"nodeType": "Block",
														"src": "7795:72:8",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 947,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 916,
																					"src": "7849:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$315",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 946,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 945,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:8",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:8",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 944,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "7816:24:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 949,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 950,
																"nodeType": "RevertStatement",
																"src": "7809:47:8"
															}
														]
													}
												},
												"id": 953,
												"nodeType": "IfStatement",
												"src": "7665:202:8",
												"trueBody": {
													"id": 936,
													"nodeType": "Block",
													"src": "7690:55:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 931,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 916,
																		"src": "7717:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 932,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 918,
																		"src": "7724:2:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 933,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "7728:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$315",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 930,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 822,
																	"src": "7704:12:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 935,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:8",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "7584:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$315",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 915,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 914,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 315,
														"src": "7584:8:8"
													},
													"referencedDeclaration": 315,
													"src": "7584:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$315",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 918,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "7600:10:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "7612:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 955,
												"src": "7627:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 921,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:8"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:8"
									},
									"scope": 1038,
									"src": "7553:320:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 995,
										"nodeType": "Block",
										"src": "8440:650:8",
										"statements": [
											{
												"assignments": [
													965
												],
												"declarations": [
													{
														"constant": false,
														"id": 965,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "8450:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 964,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 966,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:8"
											},
											{
												"assignments": [
													968
												],
												"declarations": [
													{
														"constant": false,
														"id": 968,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 995,
														"src": "8478:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 967,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 969,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:8"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:8",
													"nodeType": "YulBlock",
													"src": "8532:396:8",
													"statements": [
														{
															"nativeSrc": "8546:75:8",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:8"
																		},
																		"nativeSrc": "8566:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:8",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:8"
																		},
																		"nativeSrc": "8583:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:8"
																		},
																		"nativeSrc": "8600:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:8",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:8"
																},
																"nativeSrc": "8561:60:8",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:8"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:8",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:8",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:8",
																"nodeType": "YulBlock",
																"src": "8682:157:8",
																"statements": [
																	{
																		"nativeSrc": "8700:22:8",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:8",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:8",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:8",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:8"
																			},
																			"nativeSrc": "8711:11:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:8"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:8",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:8",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:8"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:8",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:8",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:8"
																					},
																					"nativeSrc": "8762:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:8"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:8",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:8"
																			},
																			"nativeSrc": "8739:40:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:8"
																		},
																		"nativeSrc": "8739:40:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:8"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:8"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:8",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:8"
																					},
																					"nativeSrc": "8808:16:8",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:8"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:8",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:8"
																			},
																			"nativeSrc": "8796:29:8",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:8"
																		},
																		"nativeSrc": "8796:29:8",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:8"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:8",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:8"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:8",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:8"
																},
																"nativeSrc": "8666:15:8",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:8"
															},
															"nativeSrc": "8663:176:8",
															"nodeType": "YulIf",
															"src": "8663:176:8"
														},
														{
															"nativeSrc": "8852:30:8",
															"nodeType": "YulAssignment",
															"src": "8852:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:8"
																},
																"nativeSrc": "8866:16:8",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:8"
																}
															]
														},
														{
															"nativeSrc": "8895:23:8",
															"nodeType": "YulAssignment",
															"src": "8895:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:8",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:8"
																},
																"nativeSrc": "8910:8:8",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:8",
														"valueSize": 1
													},
													{
														"declaration": 961,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:8",
														"valueSize": 1
													},
													{
														"declaration": 965,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:8",
														"valueSize": 1
													},
													{
														"declaration": 968,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:8",
														"valueSize": 1
													},
													{
														"declaration": 959,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 970,
												"nodeType": "InlineAssembly",
												"src": "8507:421:8"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 971,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "8942:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 984,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 982,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 968,
															"src": "8994:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:8",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 976,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 959,
																			"src": "8968:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$574",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$574",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 974,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:8",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 977,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:8",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:8",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 980,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 994,
												"nodeType": "IfStatement",
												"src": "8938:146:8",
												"trueBody": {
													"id": 993,
													"nodeType": "Block",
													"src": "9012:72:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 989,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 959,
																				"src": "9066:5:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$574",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$574",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 987,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 986,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 586,
																	"src": "9033:24:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 991,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 992,
															"nodeType": "RevertStatement",
															"src": "9026:47:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 956,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 959,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "8399:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 958,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 957,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "8399:6:8"
													},
													"referencedDeclaration": 574,
													"src": "8399:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 961,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 996,
												"src": "8413:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 960,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:8"
									},
									"returnParameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:8"
									},
									"scope": 1038,
									"src": "8370:720:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "9681:391:8",
										"statements": [
											{
												"assignments": [
													1008
												],
												"declarations": [
													{
														"constant": false,
														"id": 1008,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:8",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "9691:12:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1007,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1009,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:8"
											},
											{
												"assignments": [
													1011
												],
												"declarations": [
													{
														"constant": false,
														"id": 1011,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:8",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "9713:18:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1010,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1012,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:8"
											},
											{
												"assignments": [
													1014
												],
												"declarations": [
													{
														"constant": false,
														"id": 1014,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:8",
														"nodeType": "VariableDeclaration",
														"scope": 1036,
														"src": "9741:19:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1013,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:8"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:8",
													"nodeType": "YulBlock",
													"src": "9795:174:8",
													"statements": [
														{
															"nativeSrc": "9809:71:8",
															"nodeType": "YulAssignment",
															"src": "9809:71:8",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:8"
																		},
																		"nativeSrc": "9825:5:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:8"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:8",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:8",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:8",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:8"
																		},
																		"nativeSrc": "9842:15:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:8"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:8"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:8"
																		},
																		"nativeSrc": "9859:11:8",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:8"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:8",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:8",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:8",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:8",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:8"
																},
																"nativeSrc": "9820:60:8",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:8"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:8",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:8"
																}
															]
														},
														{
															"nativeSrc": "9893:30:8",
															"nodeType": "YulAssignment",
															"src": "9893:30:8",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:8",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:8"
																},
																"nativeSrc": "9907:16:8",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:8"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:8",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:8"
																}
															]
														},
														{
															"nativeSrc": "9936:23:8",
															"nodeType": "YulAssignment",
															"src": "9936:23:8",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:8",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:8",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:8",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:8"
																},
																"nativeSrc": "9951:8:8",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:8"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:8",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:8"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 1002,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1002,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:8",
														"valueSize": 1
													},
													{
														"declaration": 1011,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:8",
														"valueSize": 1
													},
													{
														"declaration": 1014,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:8",
														"valueSize": 1
													},
													{
														"declaration": 1008,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:8",
														"valueSize": 1
													},
													{
														"declaration": 1000,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:8",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 1016,
												"nodeType": "InlineAssembly",
												"src": "9770:199:8"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1017,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1008,
														"src": "9985:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1018,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "9997:10:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1029,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1014,
																		"src": "10048:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1032,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:8",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 1023,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1000,
																						"src": "10023:5:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$574",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$574",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 1022,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 1021,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:8",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:8",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1026,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:8",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 1033,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1006,
												"id": 1035,
												"nodeType": "Return",
												"src": "9978:87:8"
											}
										]
									},
									"documentation": {
										"id": 997,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:8",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1000,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "9625:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$574",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 999,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 998,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 574,
														"src": "9625:6:8"
													},
													"referencedDeclaration": 574,
													"src": "9625:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "9639:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1001,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:8"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "9675:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1004,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:8"
									},
									"scope": 1038,
									"src": "9592:480:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1039,
							"src": "698:9376:8",
							"usedErrors": [
								586,
								595
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1068
						]
					},
					"id": 1069,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1041,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1068,
							"linearizedBaseContracts": [
								1068
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1049,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1046,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1045,
												"id": 1048,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1050,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1043,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1068,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1055,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1054,
												"id": 1057,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1052,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1068,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1066,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1064,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1063,
												"id": 1065,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1067,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1060,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1067,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1068,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1069,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1080
						]
					},
					"id": 1081,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1070,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1071,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:10",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1080,
							"linearizedBaseContracts": [
								1080
							],
							"name": "IERC165",
							"nameLocation": "432:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1072,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:10",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1079,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1075,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1074,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:10",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "818:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1073,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:10"
									},
									"returnParameters": {
										"id": 1078,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1079,
												"src": "861:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1076,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:10"
									},
									"scope": 1080,
									"src": "791:76:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1081,
							"src": "422:447:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:10"
				},
				"id": 10
			},
			"Farming.sol": {
				"ast": {
					"absolutePath": "Farming.sol",
					"exportedSymbols": {
						"CAFIFarming": [
							1944
						],
						"Context": [
							1068
						],
						"IERC1363": [
							315
						],
						"IERC20": [
							574
						],
						"Ownable": [
							147
						],
						"Ownable2Step": [
							233
						],
						"Pausable": [
							431
						],
						"ReentrancyGuard": [
							496
						],
						"SafeERC20": [
							1038
						]
					},
					"id": 1945,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1082,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1083,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 575,
							"src": "58:56:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1084,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 1039,
							"src": "115:65:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"file": "@openzeppelin/contracts/access/Ownable2Step.sol",
							"id": 1085,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 234,
							"src": "181:57:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1086,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 497,
							"src": "239:62:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1087,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1945,
							"sourceUnit": 432,
							"src": "302:55:11",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1089,
										"name": "Ownable2Step",
										"nameLocations": [
											"582:12:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 233,
										"src": "582:12:11"
									},
									"id": 1090,
									"nodeType": "InheritanceSpecifier",
									"src": "582:12:11"
								},
								{
									"baseName": {
										"id": 1091,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"596:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 496,
										"src": "596:15:11"
									},
									"id": 1092,
									"nodeType": "InheritanceSpecifier",
									"src": "596:15:11"
								},
								{
									"baseName": {
										"id": 1093,
										"name": "Pausable",
										"nameLocations": [
											"613:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 431,
										"src": "613:8:11"
									},
									"id": 1094,
									"nodeType": "InheritanceSpecifier",
									"src": "613:8:11"
								}
							],
							"canonicalName": "CAFIFarming",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1088,
								"nodeType": "StructuredDocumentation",
								"src": "359:198:11",
								"text": " @title CAFIFarming - Secure Staking Platform\n @notice Implements time-locked staking with auto-compounding rewards\n @dev Features adjustable APY packages with strict security controls"
							},
							"fullyImplemented": true,
							"id": 1944,
							"linearizedBaseContracts": [
								1944,
								431,
								496,
								233,
								147,
								1068
							],
							"name": "CAFIFarming",
							"nameLocation": "567:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1098,
									"libraryName": {
										"id": 1095,
										"name": "SafeERC20",
										"nameLocations": [
											"634:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "634:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "628:27:11",
									"typeName": {
										"id": 1097,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1096,
											"name": "IERC20",
											"nameLocations": [
												"648:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 574,
											"src": "648:6:11"
										},
										"referencedDeclaration": 574,
										"src": "648:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$574",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"canonicalName": "CAFIFarming.FarmPackage",
									"id": 1109,
									"members": [
										{
											"constant": false,
											"id": 1100,
											"mutability": "mutable",
											"name": "stakeTokenAddress",
											"nameLocation": "747:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 1109,
											"src": "739:25:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1099,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "739:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1102,
											"mutability": "mutable",
											"name": "lockDuration",
											"nameLocation": "782:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1109,
											"src": "774:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1101,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "774:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1104,
											"mutability": "mutable",
											"name": "apyBps",
											"nameLocation": "812:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 1109,
											"src": "804:14:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1103,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "804:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1106,
											"mutability": "mutable",
											"name": "minimumStakeAmount",
											"nameLocation": "873:18:11",
											"nodeType": "VariableDeclaration",
											"scope": 1109,
											"src": "865:26:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1105,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "865:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1108,
											"mutability": "mutable",
											"name": "isActive",
											"nameLocation": "906:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 1109,
											"src": "901:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1107,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "901:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "FarmPackage",
									"nameLocation": "717:11:11",
									"nodeType": "StructDefinition",
									"scope": 1944,
									"src": "710:211:11",
									"visibility": "public"
								},
								{
									"canonicalName": "CAFIFarming.UserStake",
									"id": 1120,
									"members": [
										{
											"constant": false,
											"id": 1111,
											"mutability": "mutable",
											"name": "packageId",
											"nameLocation": "962:9:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "954:17:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1110,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "954:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1113,
											"mutability": "mutable",
											"name": "stakedAmount",
											"nameLocation": "989:12:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "981:20:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1112,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "981:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1115,
											"mutability": "mutable",
											"name": "stakeStartTimestamp",
											"nameLocation": "1019:19:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "1011:27:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1114,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1011:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1117,
											"mutability": "mutable",
											"name": "lastRewardClaimTimestamp",
											"nameLocation": "1056:24:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "1048:32:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1116,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1048:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1119,
											"mutability": "mutable",
											"name": "isAutoCompounding",
											"nameLocation": "1095:17:11",
											"nodeType": "VariableDeclaration",
											"scope": 1120,
											"src": "1090:22:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1118,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1090:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "UserStake",
									"nameLocation": "934:9:11",
									"nodeType": "StructDefinition",
									"scope": 1944,
									"src": "927:192:11",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d55be8c6",
									"id": 1123,
									"mutability": "constant",
									"name": "MAX_FEE_BPS",
									"nameLocation": "1188:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1164:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1121,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1164:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31303030",
										"id": 1122,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1202:4:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e6a69ab8",
									"id": 1126,
									"mutability": "constant",
									"name": "SECONDS_PER_YEAR",
									"nameLocation": "1255:16:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1231:51:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1124,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1231:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 1125,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1274:8:11",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e1a45218",
									"id": 1129,
									"mutability": "constant",
									"name": "BPS_DENOMINATOR",
									"nameLocation": "1312:15:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1288:47:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1127,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1288:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1128,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1330:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 1132,
									"mutability": "immutable",
									"name": "rewardToken",
									"nameLocation": "1439:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1415:35:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$574",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1131,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1130,
											"name": "IERC20",
											"nameLocations": [
												"1415:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 574,
											"src": "1415:6:11"
										},
										"referencedDeclaration": 574,
										"src": "1415:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$574",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1136,
									"mutability": "mutable",
									"name": "farmPackages",
									"nameLocation": "1522:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1500:34:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
										"typeString": "struct CAFIFarming.FarmPackage[]"
									},
									"typeName": {
										"baseType": {
											"id": 1134,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1133,
												"name": "FarmPackage",
												"nameLocations": [
													"1500:11:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1109,
												"src": "1500:11:11"
											},
											"referencedDeclaration": 1109,
											"src": "1500:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
												"typeString": "struct CAFIFarming.FarmPackage"
											}
										},
										"id": 1135,
										"nodeType": "ArrayTypeName",
										"src": "1500:13:11",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage_ptr",
											"typeString": "struct CAFIFarming.FarmPackage[]"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "c415b95c",
									"id": 1138,
									"mutability": "mutable",
									"name": "feeCollector",
									"nameLocation": "1555:12:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1540:27:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1137,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1540:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ba662d6",
									"id": 1141,
									"mutability": "mutable",
									"name": "autoCompoundFeeBps",
									"nameLocation": "1588:18:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1573:38:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1139,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1573:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 1140,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1609:2:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "db94ebc9",
									"id": 1143,
									"mutability": "mutable",
									"name": "feePoolBalance",
									"nameLocation": "1644:14:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1629:29:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1142,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1629:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1149,
									"mutability": "mutable",
									"name": "userStakes",
									"nameLocation": "1743:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1944,
									"src": "1703:50:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct CAFIFarming.UserStake[])"
									},
									"typeName": {
										"id": 1148,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1144,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1711:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1703:31:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct CAFIFarming.UserStake[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1146,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1145,
													"name": "UserStake",
													"nameLocations": [
														"1722:9:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1120,
													"src": "1722:9:11"
												},
												"referencedDeclaration": 1120,
												"src": "1722:9:11",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
													"typeString": "struct CAFIFarming.UserStake"
												}
											},
											"id": 1147,
											"nodeType": "ArrayTypeName",
											"src": "1722:11:11",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_ptr",
												"typeString": "struct CAFIFarming.UserStake[]"
											}
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "20400db7cf9bdfcb8b13ccfb8a7b4bb447c3244efdbc2336e6f6e1673d7bd845",
									"id": 1159,
									"name": "StakeCreated",
									"nameLocation": "1802:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1151,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1840:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1824:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "1870:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1854:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1152,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1897:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1889:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1921:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1913:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1913:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:122:11"
									},
									"src": "1796:141:11"
								},
								{
									"anonymous": false,
									"eventSelector": "88d1c46373223a4f1f60db2badc985b05ec9c2b2eab4537f0f8e1291b78b6e37",
									"id": 1169,
									"name": "StakeWithdrawn",
									"nameLocation": "1948:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1161,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1988:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "1972:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1972:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1163,
												"indexed": true,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "2018:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2002:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2002:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"indexed": false,
												"mutability": "mutable",
												"name": "principal",
												"nameLocation": "2043:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2035:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "2070:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1169,
												"src": "2062:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2062:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1962:120:11"
									},
									"src": "1942:141:11"
								},
								{
									"anonymous": false,
									"eventSelector": "f01da32686223933d8a18a391060918c7f11a3648639edd87ae013e2e2731743",
									"id": 1177,
									"name": "RewardClaimed",
									"nameLocation": "2094:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2133:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2117:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2117:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"indexed": true,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "2163:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2147:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2147:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1175,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2188:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1177,
												"src": "2180:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1174,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2180:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:93:11"
									},
									"src": "2088:113:11"
								},
								{
									"anonymous": false,
									"eventSelector": "d9a4263cd64bef5364cf9865147c8561e0c7151a9e1d79d8aa67df565aa96efe",
									"id": 1185,
									"name": "AutoCompoundToggled",
									"nameLocation": "2212:19:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1184,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1179,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2257:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2241:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1178,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2241:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1181,
												"indexed": true,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "2287:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2271:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1180,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2271:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"indexed": false,
												"mutability": "mutable",
												"name": "isEnabled",
												"nameLocation": "2309:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1185,
												"src": "2304:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1182,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2304:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2231:93:11"
									},
									"src": "2206:119:11"
								},
								{
									"anonymous": false,
									"eventSelector": "05752c03e5c1d84a4868e347be593e78a3f0f449821ff8e628806e528a877618",
									"id": 1197,
									"name": "PackageConfigured",
									"nameLocation": "2336:17:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "2379:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2363:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2363:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeToken",
												"nameLocation": "2406:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2398:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2398:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": false,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "2434:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2426:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"indexed": false,
												"mutability": "mutable",
												"name": "apyBps",
												"nameLocation": "2460:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2452:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2452:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"indexed": false,
												"mutability": "mutable",
												"name": "minStake",
												"nameLocation": "2484:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2476:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2476:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:145:11"
									},
									"src": "2330:169:11"
								},
								{
									"anonymous": false,
									"eventSelector": "27ffac29f91e32ed296e1ae41a59f23ebefbcac53eb28251a6fd6a5be271970a",
									"id": 1203,
									"name": "PackageStatusChanged",
									"nameLocation": "2510:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1199,
												"indexed": true,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "2547:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2531:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2531:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1201,
												"indexed": false,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "2563:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "2558:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2558:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2530:42:11"
									},
									"src": "2504:69:11"
								},
								{
									"anonymous": false,
									"eventSelector": "2cf325792651b724d47f21230be0dd9729866cadd370618845e23a48555ef042",
									"id": 1209,
									"name": "FeeParametersUpdated",
									"nameLocation": "2584:20:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFeeBps",
												"nameLocation": "2613:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2605:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2605:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": false,
												"mutability": "mutable",
												"name": "newCollector",
												"nameLocation": "2632:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1209,
												"src": "2624:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2624:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2604:41:11"
									},
									"src": "2578:68:11"
								},
								{
									"anonymous": false,
									"eventSelector": "c0819c13be868895eb93e40eaceb96de976442fa1d404e5c55f14bb65a8c489a",
									"id": 1215,
									"name": "FeesWithdrawn",
									"nameLocation": "2657:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"indexed": false,
												"mutability": "mutable",
												"name": "collector",
												"nameLocation": "2679:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2671:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1210,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2671:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2698:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2690:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1212,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2690:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2670:35:11"
									},
									"src": "2651:55:11"
								},
								{
									"body": {
										"id": 1228,
										"nodeType": "Block",
										"src": "2792:90:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1220,
																"name": "packageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "2810:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1221,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "2822:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2835:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2822:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2810:31:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207061636b616765204944",
															"id": 1224,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2843:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																"typeString": "literal_string \"Invalid package ID\""
															},
															"value": "Invalid package ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_869aa1881ef970f2546deeddd03f50eca1d6c92f8d9259f0e8761f226409b42d",
																"typeString": "literal_string \"Invalid package ID\""
															}
														],
														"id": 1219,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2802:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2802:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1226,
												"nodeType": "ExpressionStatement",
												"src": "2802:62:11"
											},
											{
												"id": 1227,
												"nodeType": "PlaceholderStatement",
												"src": "2874:1:11"
											}
										]
									},
									"id": 1229,
									"name": "validPackage",
									"nameLocation": "2760:12:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "2781:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1229,
												"src": "2773:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2773:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2772:19:11"
									},
									"src": "2751:131:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1258,
										"nodeType": "Block",
										"src": "2939:169:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1236,
																"name": "stakeId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1233,
																"src": "2957:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1237,
																		"name": "userStakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1149,
																		"src": "2967:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
																		}
																	},
																	"id": 1239,
																	"indexExpression": {
																		"id": 1238,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1231,
																		"src": "2978:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2967:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2984:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2967:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2957:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b65204944",
															"id": 1242,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2992:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b",
																"typeString": "literal_string \"Invalid stake ID\""
															},
															"value": "Invalid stake ID"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1ebcf0bfb6b77336694bbd83791a751069a3d8786196a04d63b7874ae40887b",
																"typeString": "literal_string \"Invalid stake ID\""
															}
														],
														"id": 1235,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2949:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2949:62:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1244,
												"nodeType": "ExpressionStatement",
												"src": "2949:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1246,
																			"name": "userStakes",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1149,
																			"src": "3029:10:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
																			}
																		},
																		"id": 1248,
																		"indexExpression": {
																			"id": 1247,
																			"name": "user",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1231,
																			"src": "3040:4:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3029:16:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
																			"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
																		}
																	},
																	"id": 1250,
																	"indexExpression": {
																		"id": 1249,
																		"name": "stakeId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1233,
																		"src": "3046:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3029:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_UserStake_$1120_storage",
																		"typeString": "struct CAFIFarming.UserStake storage ref"
																	}
																},
																"id": 1251,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3055:12:11",
																"memberName": "stakedAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1113,
																"src": "3029:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3070:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3029:42:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e616374697665207374616b65",
															"id": 1254,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3073:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4",
																"typeString": "literal_string \"Inactive stake\""
															},
															"value": "Inactive stake"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae87db1d2a9d5943a68599fd130a5c06015402b6c91f840c2a2e288f87f41ea4",
																"typeString": "literal_string \"Inactive stake\""
															}
														],
														"id": 1245,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3021:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3021:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "ExpressionStatement",
												"src": "3021:69:11"
											},
											{
												"id": 1257,
												"nodeType": "PlaceholderStatement",
												"src": "3100:1:11"
											}
										]
									},
									"id": 1259,
									"name": "validStake",
									"nameLocation": "2897:10:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2916:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "2908:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2908:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "2930:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "2922:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2922:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2907:31:11"
									},
									"src": "2888:220:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "3154:74:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1264,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1261,
																"src": "3172:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3181:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3172:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416d6f756e74206d75737420626520706f736974697665",
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3184:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																"typeString": "literal_string \"Amount must be positive\""
															},
															"value": "Amount must be positive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbff1a1f6c2af74648d360c36de5f47b5c561797f493e9c58d33289d0ad24acc",
																"typeString": "literal_string \"Amount must be positive\""
															}
														],
														"id": 1263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3164:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3164:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "3164:46:11"
											},
											{
												"id": 1270,
												"nodeType": "PlaceholderStatement",
												"src": "3220:1:11"
											}
										]
									},
									"id": 1272,
									"name": "positiveAmount",
									"nameLocation": "3123:14:11",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1261,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3146:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "3138:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3137:16:11"
									},
									"src": "3114:114:11",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1314,
										"nodeType": "Block",
										"src": "3418:254:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1290,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1285,
																"name": "rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "3436:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3466:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3458:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1286,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3458:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3458:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3436:32:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420746f6b656e",
															"id": 1291,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3470:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															},
															"value": "Invalid reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															}
														],
														"id": 1284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3428:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3428:65:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1293,
												"nodeType": "ExpressionStatement",
												"src": "3428:65:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1295,
																"name": "initialFeeCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1276,
																"src": "3511:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1298,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3542:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3534:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1296,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3534:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3511:33:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642066656520636f6c6c6563746f72",
															"id": 1301,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3546:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345",
																"typeString": "literal_string \"Invalid fee collector\""
															},
															"value": "Invalid fee collector"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9995f8e1da87a0eb523366f83f97e57ccbd459bbdc8bb370b12ced91dcc91345",
																"typeString": "literal_string \"Invalid fee collector\""
															}
														],
														"id": 1294,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3503:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3503:67:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1303,
												"nodeType": "ExpressionStatement",
												"src": "3503:67:11"
											},
											{
												"expression": {
													"id": 1308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1304,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "3581:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$574",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1306,
																"name": "rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "3602:18:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1305,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 574,
															"src": "3595:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$574_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3595:26:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$574",
															"typeString": "contract IERC20"
														}
													},
													"src": "3581:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$574",
														"typeString": "contract IERC20"
													}
												},
												"id": 1309,
												"nodeType": "ExpressionStatement",
												"src": "3581:40:11"
											},
											{
												"expression": {
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1310,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "3631:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1311,
														"name": "initialFeeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1276,
														"src": "3646:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3631:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1313,
												"nodeType": "ExpressionStatement",
												"src": "3631:34:11"
											}
										]
									},
									"id": 1315,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1281,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1278,
													"src": "3404:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1282,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1280,
												"name": "Ownable",
												"nameLocations": [
													"3396:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "3396:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3396:21:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "rewardTokenAddress",
												"nameLocation": "3304:18:11",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3296:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3296:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1276,
												"mutability": "mutable",
												"name": "initialFeeCollector",
												"nameLocation": "3340:19:11",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3332:27:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1275,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "3377:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1315,
												"src": "3369:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3369:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3286:109:11"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3418:0:11"
									},
									"scope": 1944,
									"src": "3275:397:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1392,
										"nodeType": "Block",
										"src": "3905:745:11",
										"statements": [
											{
												"assignments": [
													1334
												],
												"declarations": [
													{
														"constant": false,
														"id": 1334,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "3935:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1392,
														"src": "3915:27:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1333,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1332,
																"name": "FarmPackage",
																"nameLocations": [
																	"3915:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1109,
																"src": "3915:11:11"
															},
															"referencedDeclaration": 1109,
															"src": "3915:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1338,
												"initialValue": {
													"baseExpression": {
														"id": 1335,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "3945:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1337,
													"indexExpression": {
														"id": 1336,
														"name": "packageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1317,
														"src": "3958:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3945:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3915:53:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1340,
																"name": "package",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "3986:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
																	"typeString": "struct CAFIFarming.FarmPackage storage pointer"
																}
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3994:8:11",
															"memberName": "isActive",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1108,
															"src": "3986:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061636b61676520696e616374697665",
															"id": 1342,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4004:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6",
																"typeString": "literal_string \"Package inactive\""
															},
															"value": "Package inactive"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ab6ea7ccfca5d60a2b665099f377c8de53dffb1c8b5c6aecb43c2aab4aa14cb6",
																"typeString": "literal_string \"Package inactive\""
															}
														],
														"id": 1339,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3978:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3978:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1344,
												"nodeType": "ExpressionStatement",
												"src": "3978:45:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1346,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1319,
																"src": "4041:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1347,
																	"name": "package",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1334,
																	"src": "4051:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
																		"typeString": "struct CAFIFarming.FarmPackage storage pointer"
																	}
																},
																"id": 1348,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4059:18:11",
																"memberName": "minimumStakeAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1106,
																"src": "4051:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4041:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74207374616b6520616d6f756e74",
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4079:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5",
																"typeString": "literal_string \"Insufficient stake amount\""
															},
															"value": "Insufficient stake amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74548bcdf90b232adb643fb082cf52e9429c9ca5b44d9e3dedd8bcb1f56c5fe5",
																"typeString": "literal_string \"Insufficient stake amount\""
															}
														],
														"id": 1345,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4033:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4033:74:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "4033:74:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1358,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4182:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4186:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4182:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1362,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4214:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CAFIFarming_$1944",
																		"typeString": "contract CAFIFarming"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CAFIFarming_$1944",
																		"typeString": "contract CAFIFarming"
																	}
																],
																"id": 1361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4206:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1360,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4206:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4206:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1364,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4233:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1354,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1334,
																		"src": "4125:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage storage pointer"
																		}
																	},
																	"id": 1355,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4133:17:11",
																	"memberName": "stakeTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1100,
																	"src": "4125:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1353,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "4118:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$574_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4118:33:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4152:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 646,
														"src": "4118:50:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$574_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4118:131:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1366,
												"nodeType": "ExpressionStatement",
												"src": "4118:131:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1373,
																	"name": "packageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1317,
																	"src": "4340:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1374,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1319,
																	"src": "4381:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1375,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4426:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1376,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4432:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4426:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1377,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4485:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4491:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4485:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4537:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1372,
																"name": "UserStake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "4301:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_UserStake_$1120_storage_ptr_$",
																	"typeString": "type(struct CAFIFarming.UserStake storage pointer)"
																}
															},
															"id": 1380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"4329:9:11",
																"4367:12:11",
																"4405:19:11",
																"4459:24:11",
																"4518:17:11"
															],
															"names": [
																"packageId",
																"stakedAmount",
																"stakeStartTimestamp",
																"lastRewardClaimTimestamp",
																"isAutoCompounding"
															],
															"nodeType": "FunctionCall",
															"src": "4301:256:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1367,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "4260:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
																}
															},
															"id": 1370,
															"indexExpression": {
																"expression": {
																	"id": 1368,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4271:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4275:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4271:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4260:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
																"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
															}
														},
														"id": 1371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4283:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4260:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_ptr_$_t_struct$_UserStake_$1120_storage_$returns$__$attached_to$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CAFIFarming.UserStake storage ref[] storage pointer,struct CAFIFarming.UserStake storage ref)"
														}
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4260:307:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "4260:307:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4596:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4600:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4596:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1386,
															"name": "packageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1317,
															"src": "4608:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1387,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1319,
															"src": "4619:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1388,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4627:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1389,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4633:9:11",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4627:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1383,
														"name": "StakeCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1159,
														"src": "4583:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4583:60:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1391,
												"nodeType": "EmitStatement",
												"src": "4578:65:11"
											}
										]
									},
									"functionSelector": "d7fa023d",
									"id": 1393,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1322,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1321,
												"name": "nonReentrant",
												"nameLocations": [
													"3803:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 461,
												"src": "3803:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3803:12:11"
										},
										{
											"id": 1324,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1323,
												"name": "whenNotPaused",
												"nameLocations": [
													"3824:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 358,
												"src": "3824:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3824:13:11"
										},
										{
											"arguments": [
												{
													"id": 1326,
													"name": "packageId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1317,
													"src": "3859:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1327,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1325,
												"name": "validPackage",
												"nameLocations": [
													"3846:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "3846:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3846:23:11"
										},
										{
											"arguments": [
												{
													"id": 1329,
													"name": "amount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1319,
													"src": "3893:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1330,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1328,
												"name": "positiveAmount",
												"nameLocations": [
													"3878:14:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1272,
												"src": "3878:14:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "3878:22:11"
										}
									],
									"name": "createStake",
									"nameLocation": "3731:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "3751:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "3743:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1316,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3743:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3770:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1393,
												"src": "3762:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3742:35:11"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3905:0:11"
									},
									"scope": 1944,
									"src": "3722:928:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1463,
										"nodeType": "Block",
										"src": "4782:529:11",
										"statements": [
											{
												"assignments": [
													1407
												],
												"declarations": [
													{
														"constant": false,
														"id": 1407,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "4810:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1463,
														"src": "4792:27:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1406,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1405,
																"name": "UserStake",
																"nameLocations": [
																	"4792:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "4792:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "4792:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1414,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1408,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "4822:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1411,
														"indexExpression": {
															"expression": {
																"id": 1409,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4833:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1410,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4837:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4833:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4822:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1413,
													"indexExpression": {
														"id": 1412,
														"name": "stakeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1395,
														"src": "4845:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4822:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$1120_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4792:61:11"
											},
											{
												"assignments": [
													1416
												],
												"declarations": [
													{
														"constant": false,
														"id": 1416,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "4871:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1463,
														"src": "4863:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1415,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4863:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1422,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1418,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4911:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4915:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4911:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1420,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "4923:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1417,
														"name": "_calculateAccruedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "4886:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4886:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4863:68:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1424,
																"name": "rewardAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1416,
																"src": "4949:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4964:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4949:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4967:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 1423,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4941:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4941:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1429,
												"nodeType": "ExpressionStatement",
												"src": "4941:49:11"
											},
											{
												"expression": {
													"id": 1435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1430,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1407,
															"src": "5001:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake storage pointer"
															}
														},
														"id": 1432,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5011:24:11",
														"memberName": "lastRewardClaimTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "5001:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1433,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5038:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5044:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5038:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5001:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1436,
												"nodeType": "ExpressionStatement",
												"src": "5001:52:11"
											},
											{
												"condition": {
													"expression": {
														"id": 1437,
														"name": "stakeInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1407,
														"src": "5068:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake storage pointer"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5078:17:11",
													"memberName": "isAutoCompounding",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1119,
													"src": "5068:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1454,
													"nodeType": "Block",
													"src": "5166:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1449,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "5205:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5209:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "5205:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1451,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1416,
																		"src": "5217:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1446,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "5180:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1448,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5192:12:11",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "5180:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$574_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5180:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1453,
															"nodeType": "ExpressionStatement",
															"src": "5180:50:11"
														}
													]
												},
												"id": 1455,
												"nodeType": "IfStatement",
												"src": "5064:177:11",
												"trueBody": {
													"id": 1445,
													"nodeType": "Block",
													"src": "5097:63:11",
													"statements": [
														{
															"expression": {
																"id": 1443,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 1439,
																		"name": "stakeInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1407,
																		"src": "5111:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																			"typeString": "struct CAFIFarming.UserStake storage pointer"
																		}
																	},
																	"id": 1441,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5121:12:11",
																	"memberName": "stakedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1113,
																	"src": "5111:22:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1442,
																	"name": "rewardAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1416,
																	"src": "5137:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5111:38:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1444,
															"nodeType": "ExpressionStatement",
															"src": "5111:38:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1457,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5270:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5274:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5270:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1459,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1395,
															"src": "5282:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1460,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1416,
															"src": "5291:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1456,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1177,
														"src": "5256:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5256:48:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "EmitStatement",
												"src": "5251:53:11"
											}
										]
									},
									"functionSelector": "dd69becd",
									"id": 1464,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1398,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1397,
												"name": "nonReentrant",
												"nameLocations": [
													"4725:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 461,
												"src": "4725:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4725:12:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1400,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4757:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4761:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4757:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1402,
													"name": "stakeId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1395,
													"src": "4769:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1403,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1399,
												"name": "validStake",
												"nameLocations": [
													"4746:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1259,
												"src": "4746:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "4746:31:11"
										}
									],
									"name": "claimStakeRewards",
									"nameLocation": "4665:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "4691:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1464,
												"src": "4683:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:17:11"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4782:0:11"
									},
									"scope": 1944,
									"src": "4656:655:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "5439:884:11",
										"statements": [
											{
												"assignments": [
													1478
												],
												"declarations": [
													{
														"constant": false,
														"id": 1478,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "5466:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "5449:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1477,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1476,
																"name": "UserStake",
																"nameLocations": [
																	"5449:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "5449:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "5449:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1485,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1479,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "5478:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1482,
														"indexExpression": {
															"expression": {
																"id": 1480,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5489:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5493:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5489:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5478:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1484,
													"indexExpression": {
														"id": 1483,
														"name": "stakeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1466,
														"src": "5501:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5478:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$1120_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5449:60:11"
											},
											{
												"assignments": [
													1488
												],
												"declarations": [
													{
														"constant": false,
														"id": 1488,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "5538:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "5519:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1487,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1486,
																"name": "FarmPackage",
																"nameLocations": [
																	"5519:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1109,
																"src": "5519:11:11"
															},
															"referencedDeclaration": 1109,
															"src": "5519:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1493,
												"initialValue": {
													"baseExpression": {
														"id": 1489,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "5548:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1492,
													"indexExpression": {
														"expression": {
															"id": 1490,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1478,
															"src": "5561:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5571:9:11",
														"memberName": "packageId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "5561:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5548:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5519:62:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1495,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5613:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1496,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5619:9:11",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5613:15:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1497,
																		"name": "stakeInfo",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1478,
																		"src": "5632:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																			"typeString": "struct CAFIFarming.UserStake memory"
																		}
																	},
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5642:19:11",
																	"memberName": "stakeStartTimestamp",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1115,
																	"src": "5632:29:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 1499,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1488,
																		"src": "5664:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage memory"
																		}
																	},
																	"id": 1500,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5672:12:11",
																	"memberName": "lockDuration",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1102,
																	"src": "5664:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5632:52:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5613:71:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b65207374696c6c206c6f636b6564",
															"id": 1503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5698:20:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc",
																"typeString": "literal_string \"Stake still locked\""
															},
															"value": "Stake still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c246f8a2787aae15000b3a21cd2f61e5e1658e2eccf9466f058d961b9f12eedc",
																"typeString": "literal_string \"Stake still locked\""
															}
														],
														"id": 1494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5592:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:136:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1505,
												"nodeType": "ExpressionStatement",
												"src": "5592:136:11"
											},
											{
												"assignments": [
													1507
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "rewardAmount",
														"nameLocation": "5747:12:11",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "5739:20:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1506,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5739:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1513,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1509,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5787:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1510,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5791:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5787:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1511,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5799:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1508,
														"name": "_calculateAccruedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "5762:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5762:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5739:68:11"
											},
											{
												"assignments": [
													1515
												],
												"declarations": [
													{
														"constant": false,
														"id": 1515,
														"mutability": "mutable",
														"name": "principalAmount",
														"nameLocation": "5825:15:11",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "5817:23:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1514,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5817:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1518,
												"initialValue": {
													"expression": {
														"id": 1516,
														"name": "stakeInfo",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1478,
														"src": "5843:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
															"typeString": "struct CAFIFarming.UserStake memory"
														}
													},
													"id": 1517,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5853:12:11",
													"memberName": "stakedAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1113,
													"src": "5843:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5817:48:11"
											},
											{
												"expression": {
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5938:38:11",
													"subExpression": {
														"baseExpression": {
															"baseExpression": {
																"id": 1519,
																"name": "userStakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1149,
																"src": "5945:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
																}
															},
															"id": 1522,
															"indexExpression": {
																"expression": {
																	"id": 1520,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5956:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5960:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5956:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5945:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
																"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
															}
														},
														"id": 1524,
														"indexExpression": {
															"id": 1523,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "5968:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5945:31:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "5938:38:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1532,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6064:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6068:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6064:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1534,
															"name": "principalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "6076:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 1528,
																		"name": "package",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1488,
																		"src": "6024:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
																			"typeString": "struct CAFIFarming.FarmPackage memory"
																		}
																	},
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6032:17:11",
																	"memberName": "stakeTokenAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1100,
																	"src": "6024:25:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1527,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 574,
																"src": "6017:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$574_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6017:33:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														"id": 1531,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6051:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 619,
														"src": "6017:46:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$574_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6017:75:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "ExpressionStatement",
												"src": "6017:75:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1537,
														"name": "rewardAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "6142:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6157:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6142:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1549,
												"nodeType": "IfStatement",
												"src": "6138:97:11",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "6160:75:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1543,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "6199:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 1544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6203:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "6199:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1545,
																		"name": "rewardAmount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1507,
																		"src": "6211:12:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1540,
																		"name": "rewardToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1132,
																		"src": "6174:11:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$574",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6186:12:11",
																	"memberName": "safeTransfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 619,
																	"src": "6174:24:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$574_$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6174:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "6174:50:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1551,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6265:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6269:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6265:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1466,
															"src": "6277:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1554,
															"name": "principalAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1515,
															"src": "6286:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1555,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "6303:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1550,
														"name": "StakeWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1169,
														"src": "6250:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6250:66:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "EmitStatement",
												"src": "6245:71:11"
											}
										]
									},
									"functionSelector": "25d5971f",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1469,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1468,
												"name": "nonReentrant",
												"nameLocations": [
													"5382:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 461,
												"src": "5382:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5382:12:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1471,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5414:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5418:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5414:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1473,
													"name": "stakeId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1466,
													"src": "5426:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1474,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1470,
												"name": "validStake",
												"nameLocations": [
													"5403:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1259,
												"src": "5403:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "5403:31:11"
										}
									],
									"name": "withdrawStake",
									"nameLocation": "5326:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "5348:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "5340:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5340:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5339:17:11"
									},
									"returnParameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5439:0:11"
									},
									"scope": 1944,
									"src": "5317:1006:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "6456:230:11",
										"statements": [
											{
												"assignments": [
													1573
												],
												"declarations": [
													{
														"constant": false,
														"id": 1573,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "6484:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1597,
														"src": "6466:27:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1572,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1571,
																"name": "UserStake",
																"nameLocations": [
																	"6466:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "6466:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "6466:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1574,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "6496:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1577,
														"indexExpression": {
															"expression": {
																"id": 1575,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6507:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1576,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6511:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6507:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6496:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1579,
													"indexExpression": {
														"id": 1578,
														"name": "stakeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1561,
														"src": "6519:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6496:31:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$1120_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6466:61:11"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1581,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1573,
															"src": "6537:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake storage pointer"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6547:17:11",
														"memberName": "isAutoCompounding",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1119,
														"src": "6537:27:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6567:28:11",
														"subExpression": {
															"expression": {
																"id": 1584,
																"name": "stakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "6568:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																	"typeString": "struct CAFIFarming.UserStake storage pointer"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6578:17:11",
															"memberName": "isAutoCompounding",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "6568:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6537:58:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "6537:58:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1590,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6630:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1591,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6634:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6630:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1592,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "6642:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1593,
																"name": "stakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1573,
																"src": "6651:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																	"typeString": "struct CAFIFarming.UserStake storage pointer"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6661:17:11",
															"memberName": "isAutoCompounding",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1119,
															"src": "6651:27:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1589,
														"name": "AutoCompoundToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1185,
														"src": "6610:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6610:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "EmitStatement",
												"src": "6605:74:11"
											}
										]
									},
									"functionSelector": "5a4d8489",
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1564,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1563,
												"name": "nonReentrant",
												"nameLocations": [
													"6399:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 461,
												"src": "6399:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6399:12:11"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1566,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6431:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6435:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6431:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1568,
													"name": "stakeId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1561,
													"src": "6443:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1569,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1565,
												"name": "validStake",
												"nameLocations": [
													"6420:10:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1259,
												"src": "6420:10:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "6420:31:11"
										}
									],
									"name": "toggleAutoCompound",
									"nameLocation": "6338:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1561,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "6365:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "6357:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6357:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6356:17:11"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6456:0:11"
									},
									"scope": 1944,
									"src": "6329:357:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "6860:63:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1608,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1600,
															"src": "6902:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1609,
															"name": "stakeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1602,
															"src": "6908:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1607,
														"name": "_calculateAccruedRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1669,
														"src": "6877:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1610,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6877:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1606,
												"id": 1611,
												"nodeType": "Return",
												"src": "6870:46:11"
											}
										]
									},
									"functionSelector": "7fc7984d",
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculatePendingRewards",
									"nameLocation": "6745:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6777:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6769:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1599,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6769:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "6791:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6783:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1601,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6783:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:31:11"
									},
									"returnParameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "6847:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1604,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6847:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6846:9:11"
									},
									"scope": 1944,
									"src": "6736:187:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1668,
										"nodeType": "Block",
										"src": "7054:415:11",
										"statements": [
											{
												"assignments": [
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "stakeInfo",
														"nameLocation": "7081:9:11",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "7064:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														},
														"typeName": {
															"id": 1623,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1622,
																"name": "UserStake",
																"nameLocations": [
																	"7064:9:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1120,
																"src": "7064:9:11"
															},
															"referencedDeclaration": 1120,
															"src": "7064:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
																"typeString": "struct CAFIFarming.UserStake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1625,
															"name": "userStakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "7093:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
															}
														},
														"id": 1627,
														"indexExpression": {
															"id": 1626,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "7104:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7093:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
														}
													},
													"id": 1629,
													"indexExpression": {
														"id": 1628,
														"name": "stakeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1617,
														"src": "7110:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7093:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UserStake_$1120_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7064:54:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1631,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "7132:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1632,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7142:12:11",
														"memberName": "stakedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1113,
														"src": "7132:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7158:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7132:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "7128:41:11",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7168:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 1621,
													"id": 1636,
													"nodeType": "Return",
													"src": "7161:8:11"
												}
											},
											{
												"assignments": [
													1640
												],
												"declarations": [
													{
														"constant": false,
														"id": 1640,
														"mutability": "mutable",
														"name": "package",
														"nameLocation": "7199:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "7180:26:11",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
															"typeString": "struct CAFIFarming.FarmPackage"
														},
														"typeName": {
															"id": 1639,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1638,
																"name": "FarmPackage",
																"nameLocations": [
																	"7180:11:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1109,
																"src": "7180:11:11"
															},
															"referencedDeclaration": 1109,
															"src": "7180:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
																"typeString": "struct CAFIFarming.FarmPackage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1645,
												"initialValue": {
													"baseExpression": {
														"id": 1641,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "7209:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1644,
													"indexExpression": {
														"expression": {
															"id": 1642,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "7222:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7232:9:11",
														"memberName": "packageId",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1111,
														"src": "7222:19:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7209:33:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7180:62:11"
											},
											{
												"assignments": [
													1647
												],
												"declarations": [
													{
														"constant": false,
														"id": 1647,
														"mutability": "mutable",
														"name": "elapsedTime",
														"nameLocation": "7260:11:11",
														"nodeType": "VariableDeclaration",
														"scope": 1668,
														"src": "7252:19:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1646,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7252:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1653,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1648,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7274:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7280:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7274:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1650,
															"name": "stakeInfo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "7292:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																"typeString": "struct CAFIFarming.UserStake memory"
															}
														},
														"id": 1651,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7302:24:11",
														"memberName": "lastRewardClaimTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "7292:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7274:52:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7252:74:11"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1654,
																			"name": "stakeInfo",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1624,
																			"src": "7353:9:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_UserStake_$1120_memory_ptr",
																				"typeString": "struct CAFIFarming.UserStake memory"
																			}
																		},
																		"id": 1655,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7363:12:11",
																		"memberName": "stakedAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1113,
																		"src": "7353:22:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"expression": {
																			"id": 1656,
																			"name": "package",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1640,
																			"src": "7378:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
																				"typeString": "struct CAFIFarming.FarmPackage memory"
																			}
																		},
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7386:6:11",
																		"memberName": "apyBps",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1104,
																		"src": "7378:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7353:39:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1659,
																	"name": "elapsedTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "7395:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7353:53:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1661,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7352:55:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1662,
																	"name": "SECONDS_PER_YEAR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1126,
																	"src": "7427:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1663,
																	"name": "BPS_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "7446:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7427:34:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1665,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7426:36:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7352:110:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1667,
												"nodeType": "Return",
												"src": "7345:117:11"
											}
										]
									},
									"id": 1669,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAccruedRewards",
									"nameLocation": "6938:24:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6971:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6963:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6963:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "stakeId",
												"nameLocation": "6985:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "6977:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1616,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6977:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6962:31:11"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1669,
												"src": "7041:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7041:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7040:9:11"
									},
									"scope": 1944,
									"src": "6929:540:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "7540:43:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1674,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "7557:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7570:6:11",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "7557:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1673,
												"id": 1676,
												"nodeType": "Return",
												"src": "7550:26:11"
											}
										]
									},
									"functionSelector": "985145b5",
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActivePackageCount",
									"nameLocation": "7484:21:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7505:2:11"
									},
									"returnParameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "7531:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7531:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7530:9:11"
									},
									"scope": 1944,
									"src": "7475:108:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1693,
										"nodeType": "Block",
										"src": "7738:47:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1689,
														"name": "farmPackages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1136,
														"src": "7755:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
															"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
														}
													},
													"id": 1691,
													"indexExpression": {
														"id": 1690,
														"name": "packageId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1680,
														"src": "7768:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7755:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
														"typeString": "struct CAFIFarming.FarmPackage storage ref"
													}
												},
												"functionReturnParameters": 1688,
												"id": 1692,
												"nodeType": "Return",
												"src": "7748:30:11"
											}
										]
									},
									"functionSelector": "6c435e36",
									"id": 1694,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1683,
													"name": "packageId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1680,
													"src": "7686:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1682,
												"name": "validPackage",
												"nameLocations": [
													"7673:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "7673:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7673:23:11"
										}
									],
									"name": "getPackageDetails",
									"nameLocation": "7598:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1681,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1680,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "7624:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "7616:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1679,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7616:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7615:19:11"
									},
									"returnParameters": {
										"id": 1688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1687,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1694,
												"src": "7714:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
													"typeString": "struct CAFIFarming.FarmPackage"
												},
												"typeName": {
													"id": 1686,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1685,
														"name": "FarmPackage",
														"nameLocations": [
															"7714:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1109,
														"src": "7714:11:11"
													},
													"referencedDeclaration": 1109,
													"src": "7714:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_FarmPackage_$1109_storage_ptr",
														"typeString": "struct CAFIFarming.FarmPackage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7713:20:11"
									},
									"scope": 1944,
									"src": "7589:196:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "7871:40:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1703,
														"name": "userStakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1149,
														"src": "7888:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct CAFIFarming.UserStake storage ref[] storage ref)"
														}
													},
													"id": 1705,
													"indexExpression": {
														"id": 1704,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1696,
														"src": "7899:4:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7888:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage",
														"typeString": "struct CAFIFarming.UserStake storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1702,
												"id": 1706,
												"nodeType": "Return",
												"src": "7881:23:11"
											}
										]
									},
									"functionSelector": "842e2981",
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUserStakes",
									"nameLocation": "7800:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "7822:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "7814:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7814:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7813:14:11"
									},
									"returnParameters": {
										"id": 1702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "7851:18:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct CAFIFarming.UserStake[]"
												},
												"typeName": {
													"baseType": {
														"id": 1699,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1698,
															"name": "UserStake",
															"nameLocations": [
																"7851:9:11"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 1120,
															"src": "7851:9:11"
														},
														"referencedDeclaration": 1120,
														"src": "7851:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_UserStake_$1120_storage_ptr",
															"typeString": "struct CAFIFarming.UserStake"
														}
													},
													"id": 1700,
													"nodeType": "ArrayTypeName",
													"src": "7851:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_UserStake_$1120_storage_$dyn_storage_ptr",
														"typeString": "struct CAFIFarming.UserStake[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7850:20:11"
									},
									"scope": 1944,
									"src": "7791:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "8120:641:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1722,
																"name": "stakeToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1710,
																"src": "8138:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1725,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8160:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8152:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1723,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8152:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8152:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8138:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520746f6b656e",
															"id": 1728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8164:21:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
																"typeString": "literal_string \"Invalid stake token\""
															},
															"value": "Invalid stake token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b364625548658238260fc754e02ba9b5633ef890d9f126ca4b99e0da80d5d624",
																"typeString": "literal_string \"Invalid stake token\""
															}
														],
														"id": 1721,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8130:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8130:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1730,
												"nodeType": "ExpressionStatement",
												"src": "8130:56:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1732,
																"name": "duration",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "8204:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8215:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8204:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206475726174696f6e",
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8218:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
																"typeString": "literal_string \"Invalid duration\""
															},
															"value": "Invalid duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24673d1b0003a199275166474575e96e531c915eb950e021102fb167de0d7af4",
																"typeString": "literal_string \"Invalid duration\""
															}
														],
														"id": 1731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8196:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8196:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1737,
												"nodeType": "ExpressionStatement",
												"src": "8196:41:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1739,
																	"name": "apyBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "8255:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8264:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "8255:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1742,
																	"name": "apyBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "8269:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1743,
																	"name": "BPS_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "8279:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8269:25:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "8255:39:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420415059",
															"id": 1746,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8296:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															},
															"value": "Invalid APY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															}
														],
														"id": 1738,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8247:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:63:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1748,
												"nodeType": "ExpressionStatement",
												"src": "8247:63:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1753,
																	"name": "stakeToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1710,
																	"src": "8401:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1754,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1712,
																	"src": "8443:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1755,
																	"name": "apyBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1714,
																	"src": "8477:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1756,
																	"name": "minStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1716,
																	"src": "8521:8:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "74727565",
																	"id": 1757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8557:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 1752,
																"name": "FarmPackage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1109,
																"src": "8352:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_FarmPackage_$1109_storage_ptr_$",
																	"typeString": "type(struct CAFIFarming.FarmPackage storage pointer)"
																}
															},
															"id": 1758,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"8382:17:11",
																"8429:12:11",
																"8469:6:11",
																"8501:18:11",
																"8547:8:11"
															],
															"names": [
																"stakeTokenAddress",
																"lockDuration",
																"apyBps",
																"minimumStakeAmount",
																"isActive"
															],
															"nodeType": "FunctionCall",
															"src": "8352:224:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
																"typeString": "struct CAFIFarming.FarmPackage memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_FarmPackage_$1109_memory_ptr",
																"typeString": "struct CAFIFarming.FarmPackage memory"
															}
														],
														"expression": {
															"id": 1749,
															"name": "farmPackages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1136,
															"src": "8321:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
															}
														},
														"id": 1751,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8334:4:11",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8321:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage_ptr_$_t_struct$_FarmPackage_$1109_storage_$returns$__$attached_to$_t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CAFIFarming.FarmPackage storage ref[] storage pointer,struct CAFIFarming.FarmPackage storage ref)"
														}
													},
													"id": 1759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8321:265:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1760,
												"nodeType": "ExpressionStatement",
												"src": "8321:265:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1762,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "8633:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8646:6:11",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8633:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"hexValue": "31",
																"id": 1764,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8655:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "8633:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1766,
															"name": "stakeToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1710,
															"src": "8670:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1767,
															"name": "duration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "8694:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1768,
															"name": "apyBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "8716:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1769,
															"name": "minStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1716,
															"src": "8736:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1761,
														"name": "PackageConfigured",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "8602:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256)"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8602:152:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "EmitStatement",
												"src": "8597:157:11"
											}
										]
									},
									"functionSelector": "1bd9b708",
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1719,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1718,
												"name": "onlyOwner",
												"nameLocations": [
													"8110:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8110:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8110:9:11"
										}
									],
									"name": "configureNewPackage",
									"nameLocation": "7971:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1710,
												"mutability": "mutable",
												"name": "stakeToken",
												"nameLocation": "8008:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "8000:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "8036:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "8028:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8028:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "apyBps",
												"nameLocation": "8062:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "8054:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8054:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "minStake",
												"nameLocation": "8086:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "8078:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7990:110:11"
									},
									"returnParameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8120:0:11"
									},
									"scope": 1944,
									"src": "7962:799:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1797,
										"nodeType": "Block",
										"src": "8901:116:11",
										"statements": [
											{
												"expression": {
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1785,
																"name": "farmPackages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "8911:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																	"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																}
															},
															"id": 1787,
															"indexExpression": {
																"id": 1786,
																"name": "packageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1775,
																"src": "8924:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8911:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
																"typeString": "struct CAFIFarming.FarmPackage storage ref"
															}
														},
														"id": 1788,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8935:8:11",
														"memberName": "isActive",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1108,
														"src": "8911:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1789,
														"name": "isActive",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "8946:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8911:43:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "8911:43:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1793,
															"name": "packageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "8990:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1794,
															"name": "isActive",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "9001:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1792,
														"name": "PackageStatusChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1203,
														"src": "8969:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8969:41:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1796,
												"nodeType": "EmitStatement",
												"src": "8964:46:11"
											}
										]
									},
									"functionSelector": "217a51ee",
									"id": 1798,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1780,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1779,
												"name": "onlyOwner",
												"nameLocations": [
													"8855:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8855:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8855:9:11"
										},
										{
											"arguments": [
												{
													"id": 1782,
													"name": "packageId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1775,
													"src": "8886:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1783,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1781,
												"name": "validPackage",
												"nameLocations": [
													"8873:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "8873:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "8873:23:11"
										}
									],
									"name": "updatePackageStatus",
									"nameLocation": "8776:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "8804:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "8796:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8796:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "isActive",
												"nameLocation": "8820:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1798,
												"src": "8815:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1776,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8815:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8795:34:11"
									},
									"returnParameters": {
										"id": 1784,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8901:0:11"
									},
									"scope": 1944,
									"src": "8767:250:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1845,
										"nodeType": "Block",
										"src": "9158:387:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1813,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1811,
																	"name": "newApyBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "9176:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9188:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "9176:13:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1816,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1814,
																	"name": "newApyBps",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "9193:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1815,
																	"name": "BPS_DENOMINATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1129,
																	"src": "9206:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9193:28:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "9176:45:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420415059",
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9223:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															},
															"value": "Invalid APY"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9b2cbb3c123ca52f61cd891dc537a12e731bf3d9f1f17491b387d931c1c8c2b1",
																"typeString": "literal_string \"Invalid APY\""
															}
														],
														"id": 1810,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9168:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9168:69:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1820,
												"nodeType": "ExpressionStatement",
												"src": "9168:69:11"
											},
											{
												"expression": {
													"id": 1826,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1821,
																"name": "farmPackages",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1136,
																"src": "9247:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																	"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																}
															},
															"id": 1823,
															"indexExpression": {
																"id": 1822,
																"name": "packageId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1800,
																"src": "9260:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "9247:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
																"typeString": "struct CAFIFarming.FarmPackage storage ref"
															}
														},
														"id": 1824,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "9271:6:11",
														"memberName": "apyBps",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1104,
														"src": "9247:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1825,
														"name": "newApyBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "9280:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9247:42:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1827,
												"nodeType": "ExpressionStatement",
												"src": "9247:42:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1829,
															"name": "packageId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1800,
															"src": "9335:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1830,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "9358:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1832,
																"indexExpression": {
																	"id": 1831,
																	"name": "packageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "9371:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9358:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
																	"typeString": "struct CAFIFarming.FarmPackage storage ref"
																}
															},
															"id": 1833,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9382:17:11",
															"memberName": "stakeTokenAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1100,
															"src": "9358:41:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1834,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "9413:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1836,
																"indexExpression": {
																	"id": 1835,
																	"name": "packageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "9426:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9413:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
																	"typeString": "struct CAFIFarming.FarmPackage storage ref"
																}
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9437:12:11",
															"memberName": "lockDuration",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1102,
															"src": "9413:36:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1838,
															"name": "newApyBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "9463:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"baseExpression": {
																	"id": 1839,
																	"name": "farmPackages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1136,
																	"src": "9486:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_FarmPackage_$1109_storage_$dyn_storage",
																		"typeString": "struct CAFIFarming.FarmPackage storage ref[] storage ref"
																	}
																},
																"id": 1841,
																"indexExpression": {
																	"id": 1840,
																	"name": "packageId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1800,
																	"src": "9499:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9486:23:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_FarmPackage_$1109_storage",
																	"typeString": "struct CAFIFarming.FarmPackage storage ref"
																}
															},
															"id": 1842,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "9510:18:11",
															"memberName": "minimumStakeAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1106,
															"src": "9486:42:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1828,
														"name": "PackageConfigured",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1197,
														"src": "9304:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,address,uint256,uint256,uint256)"
														}
													},
													"id": 1843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9304:234:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1844,
												"nodeType": "EmitStatement",
												"src": "9299:239:11"
											}
										]
									},
									"functionSelector": "7f6a9184",
									"id": 1846,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "onlyOwner",
												"nameLocations": [
													"9112:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9112:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9112:9:11"
										},
										{
											"arguments": [
												{
													"id": 1807,
													"name": "packageId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1800,
													"src": "9143:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 1808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1806,
												"name": "validPackage",
												"nameLocations": [
													"9130:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1229,
												"src": "9130:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9130:23:11"
										}
									],
									"name": "updatePackageAPY",
									"nameLocation": "9032:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "packageId",
												"nameLocation": "9057:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "9049:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9049:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "newApyBps",
												"nameLocation": "9076:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1846,
												"src": "9068:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9068:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9048:38:11"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9158:0:11"
									},
									"scope": 1944,
									"src": "9023:522:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1885,
										"nodeType": "Block",
										"src": "9660:278:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1856,
																"name": "newFeeBps",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1848,
																"src": "9678:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1857,
																"name": "MAX_FEE_BPS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1123,
																"src": "9691:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9678:24:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46656520746f6f2068696768",
															"id": 1859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9704:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															},
															"value": "Fee too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48d9dea795d8d010580a5b191d0fe7c1ee70cd850707a0d7e7aba7c702de6be1",
																"typeString": "literal_string \"Fee too high\""
															}
														],
														"id": 1855,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9670:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9670:49:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1861,
												"nodeType": "ExpressionStatement",
												"src": "9670:49:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1868,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1863,
																"name": "newCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1850,
																"src": "9737:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1866,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9761:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1865,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9753:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1864,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9753:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 1867,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9753:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9737:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420636f6c6c6563746f72",
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9765:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d",
																"typeString": "literal_string \"Invalid collector\""
															},
															"value": "Invalid collector"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_da7bcca988cdea3b6cb0c11685617c691d3c14f5715598e1f0ca62312f8d2c4d",
																"typeString": "literal_string \"Invalid collector\""
															}
														],
														"id": 1862,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9729:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9729:56:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1871,
												"nodeType": "ExpressionStatement",
												"src": "9729:56:11"
											},
											{
												"expression": {
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1872,
														"name": "autoCompoundFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1141,
														"src": "9804:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1873,
														"name": "newFeeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1848,
														"src": "9825:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9804:30:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1875,
												"nodeType": "ExpressionStatement",
												"src": "9804:30:11"
											},
											{
												"expression": {
													"id": 1878,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1876,
														"name": "feeCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1138,
														"src": "9844:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1877,
														"name": "newCollector",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1850,
														"src": "9859:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9844:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1879,
												"nodeType": "ExpressionStatement",
												"src": "9844:27:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1881,
															"name": "newFeeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1848,
															"src": "9907:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1882,
															"name": "newCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1850,
															"src": "9918:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1880,
														"name": "FeeParametersUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "9886:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (uint256,address)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9886:45:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "EmitStatement",
												"src": "9881:50:11"
											}
										]
									},
									"functionSelector": "973e46b1",
									"id": 1886,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1853,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1852,
												"name": "onlyOwner",
												"nameLocations": [
													"9646:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9646:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9646:9:11"
										}
									],
									"name": "updateFeeParameters",
									"nameLocation": "9560:19:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "newFeeBps",
												"nameLocation": "9588:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "9580:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9580:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "newCollector",
												"nameLocation": "9607:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "9599:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9599:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9579:41:11"
									},
									"returnParameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9660:0:11"
									},
									"scope": 1944,
									"src": "9551:387:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1924,
										"nodeType": "Block",
										"src": "9988:296:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1893,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1890,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "10006:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10010:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "10006:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1892,
																"name": "feeCollector",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1138,
																"src": "10020:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "10006:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420617574686f72697a6564",
															"id": 1894,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10034:16:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															},
															"value": "Not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36",
																"typeString": "literal_string \"Not authorized\""
															}
														],
														"id": 1889,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9998:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9998:53:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1896,
												"nodeType": "ExpressionStatement",
												"src": "9998:53:11"
											},
											{
												"assignments": [
													1898
												],
												"declarations": [
													{
														"constant": false,
														"id": 1898,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "10069:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 1924,
														"src": "10061:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1897,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10061:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1900,
												"initialValue": {
													"id": 1899,
													"name": "feePoolBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1143,
													"src": "10078:14:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10061:31:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1902,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1898,
																"src": "10110:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10119:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10110:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f206665657320617661696c61626c65",
															"id": 1905,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10122:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31",
																"typeString": "literal_string \"No fees available\""
															},
															"value": "No fees available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d7878ffdf4a9bea86e9761fce078b0a5d26fef457dee26f2a85c274d71a82f31",
																"typeString": "literal_string \"No fees available\""
															}
														],
														"id": 1901,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10102:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10102:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1907,
												"nodeType": "ExpressionStatement",
												"src": "10102:40:11"
											},
											{
												"expression": {
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1908,
														"name": "feePoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1143,
														"src": "10153:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1909,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "10170:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "10153:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "10153:18:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1915,
															"name": "feeCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "10206:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1916,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "10220:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1912,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1132,
															"src": "10181:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$574",
																"typeString": "contract IERC20"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "10193:12:11",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 619,
														"src": "10181:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$574_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$574_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10181:46:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1918,
												"nodeType": "ExpressionStatement",
												"src": "10181:46:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1920,
															"name": "feeCollector",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1138,
															"src": "10256:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1921,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1898,
															"src": "10270:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1919,
														"name": "FeesWithdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "10242:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10242:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1923,
												"nodeType": "EmitStatement",
												"src": "10237:40:11"
											}
										]
									},
									"functionSelector": "2e185ec7",
									"id": 1925,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdrawAccumulatedFees",
									"nameLocation": "9953:23:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9976:2:11"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9988:0:11"
									},
									"scope": 1944,
									"src": "9944:340:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1933,
										"nodeType": "Block",
										"src": "10335:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1930,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 414,
														"src": "10345:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10345:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1932,
												"nodeType": "ExpressionStatement",
												"src": "10345:8:11"
											}
										]
									},
									"functionSelector": "51858e27",
									"id": 1934,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1928,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1927,
												"name": "onlyOwner",
												"nameLocations": [
													"10325:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10325:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10325:9:11"
										}
									],
									"name": "emergencyPause",
									"nameLocation": "10299:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10313:2:11"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10335:0:11"
									},
									"scope": 1944,
									"src": "10290:70:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1942,
										"nodeType": "Block",
										"src": "10413:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1939,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 430,
														"src": "10423:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10423:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1941,
												"nodeType": "ExpressionStatement",
												"src": "10423:10:11"
											}
										]
									},
									"functionSelector": "4a4e3bd5",
									"id": 1943,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1937,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1936,
												"name": "onlyOwner",
												"nameLocations": [
													"10403:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "10403:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "10403:9:11"
										}
									],
									"name": "emergencyUnpause",
									"nameLocation": "10375:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10391:2:11"
									},
									"returnParameters": {
										"id": 1938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10413:0:11"
									},
									"scope": 1944,
									"src": "10366:74:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1945,
							"src": "558:9884:11",
							"usedErrors": [
								13,
								18,
								586
							],
							"usedEvents": [
								24,
								162,
								334,
								339,
								1159,
								1169,
								1177,
								1185,
								1197,
								1203,
								1209,
								1215
							]
						}
					],
					"src": "32:10410:11"
				},
				"id": 11
			}
		}
	}
}