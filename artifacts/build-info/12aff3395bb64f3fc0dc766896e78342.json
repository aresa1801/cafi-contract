{
	"id": "12aff3395bb64f3fc0dc766896e78342",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"Staking.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title AutoStaking\n * @dev Contract for staking tokens with fixed lock periods and auto-compounding rewards.\n */\ncontract AutoStaking is Ownable, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Token contracts\n    IERC20 public immutable stakingToken;\n    IERC20 public rewardToken;\n\n    // Constants\n    uint256 public constant SECONDS_PER_YEAR = 365 days;\n    uint256 public constant AUTO_COMPOUND_FEE = 50; // 0.5%\n    uint256 public constant MAX_APY = 10000; // 100%\n\n    // Staking parameters\n    uint256[3] public lockPeriods = [30 days, 60 days, 90 days];\n    uint256[3] public apyRates = [500, 1000, 1500]; // basis points\n\n    // User stakes\n    struct StakeInfo {\n        uint256 amount;\n        uint256 stakeTime;\n        uint256 unlockTime;\n        bool claimed;\n        bool autoStaking;\n        uint256 compoundedAmount;\n    }\n\n    mapping(address => StakeInfo[]) public stakes;\n    mapping(address => uint256) public pendingRewardWithdrawals;\n\n    // Global stats\n    uint256 public totalStaked;\n    uint256 public rewardPoolBalance;\n    address public feeReceiver;\n\n    // Events\n    event Staked(address indexed user, uint256 amount, uint256 periodIndex, bool autoStake);\n    event Claimed(address indexed user, uint256 amount, uint256 stakeIndex);\n    event WithdrawnRewards(address indexed account, uint256 amount);\n    event AutoStakeToggled(address indexed user, uint256 stakeIndex, bool status);\n    event RewardTokenUpdated(address indexed newRewardToken);\n    event FeeReceiverUpdated(address indexed newFeeReceiver);\n    event APYUpdated(uint256 periodIndex, uint256 newAPY);\n    event RewardPoolFundsAdded(address indexed sender, uint256 amount);\n    event AutoCompounded(address indexed user, uint256 stakeIndex, uint256 compoundedAmount);\n    event ContractPaused(bool indexed isPaused); // ðŸ”¥ Penambahan event\n\n    // Modifiers\n    modifier onlyEOA() {\n        require(tx.origin == msg.sender, \"Only EOA can call\");\n        _;\n    }\n\n    modifier whenNotPaused() {\n        require(!paused, \"Contract paused\");\n        _;\n    }\n\n    // Paused state\n    bool public paused;\n\n    constructor(\n        address _stakingTokenAddress,\n        address _rewardTokenAddress,\n        address _feeReceiver\n    ) Ownable(msg.sender) ReentrancyGuard() {\n        require(_stakingTokenAddress != address(0), \"Invalid staking token\");\n        require(_rewardTokenAddress != address(0), \"Invalid reward token\");\n        require(_feeReceiver != address(0), \"Invalid fee receiver\");\n\n        stakingToken = IERC20(_stakingTokenAddress);\n        rewardToken = IERC20(_rewardTokenAddress);\n        feeReceiver = _feeReceiver;\n    }\n\n    // ===================== Core Functions =====================\n    /**\n     * @notice Stake tokens for a fixed period\n     */\n    function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA whenNotPaused {\n        require(periodIndex < lockPeriods.length, \"Invalid period index\");\n        require(amount > 0, \"Zero amount\");\n\n        stakingToken.safeTransferFrom(msg.sender, address(this), amount);\n\n        uint256 unlockTime = block.timestamp + lockPeriods[periodIndex];\n\n        stakes[msg.sender].push(StakeInfo({\n            amount: amount,\n            stakeTime: block.timestamp,\n            unlockTime: unlockTime,\n            claimed: false,\n            autoStaking: autoStake,\n            compoundedAmount: 0\n        }));\n\n        totalStaked += amount;\n\n        emit Staked(msg.sender, amount, periodIndex, autoStake);\n    }\n\n    /**\n     * @notice Calculate accrued reward for a stake\n     */\n    function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {\n        require(account != address(0), \"Invalid account\");\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo memory info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n\n        uint256 endTime = info.unlockTime;\n        if (info.autoStaking && block.timestamp > endTime) {\n            endTime = block.timestamp;\n        }\n\n        uint256 timeHeld = endTime - info.stakeTime;\n        uint256 periodIndex = getPeriodIndex(info.unlockTime - info.stakeTime);\n        uint256 principal = info.amount + info.compoundedAmount;\n\n        return (principal * apyRates[periodIndex] * timeHeld) / (10000 * SECONDS_PER_YEAR);\n    }\n\n    /**\n     * @notice Get period index from duration\n     */\n    function getPeriodIndex(uint256 duration) internal view returns (uint256) {\n        for (uint256 i = 0; i < lockPeriods.length; i++) {\n            if (duration == lockPeriods[i]) {\n                return i;\n            }\n        }\n        revert(\"Unsupported lock period\");\n    }\n\n    /**\n     * @notice Claim reward for a specific stake\n     */\n    function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {\n        address account = msg.sender;\n        StakeInfo storage info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n        require(block.timestamp >= info.unlockTime, \"Still locked\");\n\n        uint256 reward = calculateReward(account, stakeIndex);\n        require(rewardPoolBalance >= reward, \"Insufficient reward pool\");\n\n        info.claimed = true;\n\n        if (info.autoStaking && info.compoundedAmount > 0) {\n            uint256 totalToTransfer = info.compoundedAmount + reward;\n            uint256 fee = (totalToTransfer * AUTO_COMPOUND_FEE) / 10000;\n            uint256 userAmount = totalToTransfer - fee;\n\n            pendingRewardWithdrawals[account] += userAmount;\n            pendingRewardWithdrawals[feeReceiver] += fee;\n            rewardPoolBalance -= totalToTransfer;\n        } else {\n            pendingRewardWithdrawals[account] += reward;\n            rewardPoolBalance -= reward;\n        }\n\n        emit Claimed(account, reward, stakeIndex);\n    }\n\n    /**\n     * @notice Withdraw pending rewards\n     */\n    function withdrawRewards() external nonReentrant whenNotPaused {\n        uint256 amount = pendingRewardWithdrawals[msg.sender];\n        require(amount > 0, \"No rewards to withdraw\");\n\n        pendingRewardWithdrawals[msg.sender] = 0;\n        rewardToken.safeTransfer(msg.sender, amount);\n\n        emit WithdrawnRewards(msg.sender, amount);\n    }\n\n    /**\n     * @notice Toggle auto-staking for a stake\n     */\n    function toggleAutoStake(uint256 stakeIndex) external whenNotPaused {\n        address account = msg.sender;\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo storage info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n\n        info.autoStaking = !info.autoStaking;\n        emit AutoStakeToggled(account, stakeIndex, info.autoStaking);\n    }\n\n    /**\n     * @notice Compound reward into new stake\n     */\n    function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {\n        address account = msg.sender;\n        require(stakeIndex < stakes[account].length, \"Invalid stake index\");\n\n        StakeInfo storage info = stakes[account][stakeIndex];\n        require(!info.claimed, \"Already claimed\");\n        require(info.autoStaking, \"Auto-staking disabled\");\n        require(block.timestamp >= info.unlockTime, \"Still locked\");\n\n        uint256 reward = calculateReward(account, stakeIndex);\n        require(rewardPoolBalance >= reward, \"Insufficient reward pool\");\n\n        info.stakeTime = block.timestamp;\n        info.unlockTime = block.timestamp + (info.unlockTime - info.stakeTime); // Same period\n        info.compoundedAmount += reward;\n        rewardPoolBalance -= reward;\n\n        emit AutoCompounded(account, stakeIndex, info.compoundedAmount);\n    }\n\n    /**\n     * @notice Add funds to reward pool\n     */\n    function addRewardPoolFunds(uint256 amount) external onlyOwner {\n        require(amount > 0, \"Zero amount\");\n        rewardToken.safeTransferFrom(msg.sender, address(this), amount);\n        rewardPoolBalance += amount;\n\n        emit RewardPoolFundsAdded(msg.sender, amount);\n    }\n\n    /**\n     * @notice Update APY rate for a period\n     */\n    function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {\n        require(periodIndex < lockPeriods.length, \"Invalid period index\");\n        require(newAPY <= MAX_APY, \"APY too high\"); // Max 100%\n\n        apyRates[periodIndex] = newAPY;\n        emit APYUpdated(periodIndex, newAPY);\n    }\n\n    /**\n     * @notice Update reward token address\n     */\n    function updateRewardToken(address newRewardToken) external onlyOwner {\n        require(newRewardToken != address(0), \"Zero address not allowed\");\n        rewardToken = IERC20(newRewardToken);\n        emit RewardTokenUpdated(newRewardToken);\n    }\n\n    /**\n     * @notice Update fee receiver address\n     */\n    function updateFeeReceiver(address newFeeReceiver) external onlyOwner {\n        require(newFeeReceiver != address(0), \"Zero address not allowed\");\n        feeReceiver = newFeeReceiver;\n        emit FeeReceiverUpdated(newFeeReceiver);\n    }\n\n    /**\n     * @notice Toggle contract pause\n     */\n    function togglePause() external onlyOwner {\n        paused = !paused;\n        emit ContractPaused(paused);\n    }\n\n    /**\n     * @notice Get active stakes for an account\n     */\n    function getActiveStakes(address user) external view returns (StakeInfo[] memory) {\n        return stakes[user];\n    }\n\n    /**\n     * @notice Get current reward pool balance\n     */\n    function getRewardPoolBalance() external view returns (uint256) {\n        return rewardPoolBalance;\n    }\n\n    /**\n     * @notice Get fee receiver address\n     */\n    function getFeeReceiver() external view returns (address) {\n        return feeReceiver;\n    }\n\n    /**\n     * @notice Get lock period in seconds\n     */\n    function getLockPeriod(uint256 index) external view returns (uint256) {\n        require(index < lockPeriods.length, \"Invalid period index\");\n        return lockPeriods[index];\n    }\n\n    /**\n     * @notice Estimate mint gas\n     */\n    function estimateMintGas() external pure returns (uint256) {\n        return 200_000;\n    }\n}"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.3.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC1363} from \"../../../interfaces/IERC1363.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC-20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    /**\n     * @dev An operation with an ERC-20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransfer(IERC20 token, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful.\n     */\n    function trySafeTransferFrom(IERC20 token, address from, address to, uint256 value) internal returns (bool) {\n        return _callOptionalReturnBool(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     *\n     * IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n     * smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n     * this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n     * that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     *\n     * NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n     * only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n     * set here.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            safeTransfer(token, to, value);\n        } else if (!token.transferAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n     * has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function transferFromAndCallRelaxed(\n        IERC1363 token,\n        address from,\n        address to,\n        uint256 value,\n        bytes memory data\n    ) internal {\n        if (to.code.length == 0) {\n            safeTransferFrom(token, from, to, value);\n        } else if (!token.transferFromAndCall(from, to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n     * code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n     * targeting contracts.\n     *\n     * NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n     * Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n     * once without retrying, and relies on the returned value to be true.\n     *\n     * Reverts if the returned value is other than `true`.\n     */\n    function approveAndCallRelaxed(IERC1363 token, address to, uint256 value, bytes memory data) internal {\n        if (to.code.length == 0) {\n            forceApprove(token, to, value);\n        } else if (!token.approveAndCall(to, value, data)) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements.\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            let success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            // bubble errors\n            if iszero(success) {\n                let ptr := mload(0x40)\n                returndatacopy(ptr, 0, returndatasize())\n                revert(ptr, returndatasize())\n            }\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n\n        if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        bool success;\n        uint256 returnSize;\n        uint256 returnValue;\n        assembly (\"memory-safe\") {\n            success := call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20)\n            returnSize := returndatasize()\n            returnValue := mload(0)\n        }\n        return success && (returnSize == 0 ? address(token).code.length > 0 : returnValue == 1);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/IERC1363.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @title IERC1363\n * @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n *\n * Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n * after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\n */\ninterface IERC1363 is IERC20, IERC165 {\n    /*\n     * Note: the ERC-165 identifier for this interface is 0xb0202a11.\n     * 0xb0202a11 ===\n     *   bytes4(keccak256('transferAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('transferAndCall(address,uint256,bytes)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256)')) ^\n     *   bytes4(keccak256('transferFromAndCall(address,address,uint256,bytes)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256)')) ^\n     *   bytes4(keccak256('approveAndCall(address,uint256,bytes)'))\n     */\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferAndCall(address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n     * and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n     * @param from The address which you want to send tokens from.\n     * @param to The address which you want to transfer to.\n     * @param value The amount of tokens to be transferred.\n     * @param data Additional data with no specified format, sent in call to `to`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function transferFromAndCall(address from, address to, uint256 value, bytes calldata data) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n     * @param spender The address which will spend the funds.\n     * @param value The amount of tokens to be spent.\n     * @param data Additional data with no specified format, sent in call to `spender`.\n     * @return A boolean value indicating whether the operation succeeded unless throwing.\n     */\n    function approveAndCall(address spender, uint256 value, bytes calldata data) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../token/ERC20/IERC20.sol\";\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[ERC].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"IERC1363": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "approveAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFromAndCall",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"approveAndCall(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"approveAndCall(address,uint256,bytes)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `spender`.",
									"spender": "The address which will spend the funds.",
									"value": "The amount of tokens to be spent."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferAndCall(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferAndCall(address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFromAndCall(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							},
							"transferFromAndCall(address,address,uint256,bytes)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.",
								"params": {
									"data": "Additional data with no specified format, sent in call to `to`.",
									"from": "The address which you want to send tokens from.",
									"to": "The address which you want to transfer to.",
									"value": "The amount of tokens to be transferred."
								},
								"returns": {
									"_0": "A boolean value indicating whether the operation succeeded unless throwing."
								}
							}
						},
						"title": "IERC1363",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"approveAndCall(address,uint256)": "3177029f",
							"approveAndCall(address,uint256,bytes)": "cae9ca51",
							"balanceOf(address)": "70a08231",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferAndCall(address,uint256)": "1296ee62",
							"transferAndCall(address,uint256,bytes)": "4000aea0",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferFromAndCall(address,address,uint256)": "d8fbe994",
							"transferFromAndCall(address,address,uint256,bytes)": "c1d34b89"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFromAndCall\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363]. Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"approveAndCall(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"approveAndCall(address,uint256,bytes)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `spender`.\",\"spender\":\"The address which will spend the funds.\",\"value\":\"The amount of tokens to be spent.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferAndCall(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferAndCall(address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to` and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFromAndCall(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}},\"transferFromAndCall(address,address,uint256,bytes)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism and then calls {IERC1363Receiver-onTransferReceived} on `to`.\",\"params\":{\"data\":\"Additional data with no specified format, sent in call to `to`.\",\"from\":\"The address which you want to send tokens from.\",\"to\":\"The address which you want to transfer to.\",\"value\":\"The amount of tokens to be transferred.\"},\"returns\":{\"_0\":\"A boolean value indicating whether the operation succeeded unless throwing.\"}}},\"title\":\"IERC1363\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":\"IERC1363\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 248,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":698:10074  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP1 0x2E PUSH13 0x721CB58E8775412412193813E7 0xB4 LOG3 PUSH26 0x566D16D597D369D59EFF2768CA64736F6C634300081E00330000 ",
							"sourceMap": "698:9376:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"approveAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite",
								"transferAndCallRelaxed(contract IERC1363,address,uint256,bytes memory)": "infinite",
								"transferFromAndCallRelaxed(contract IERC1363,address,address,uint256,bytes memory)": "infinite",
								"trySafeTransfer(contract IERC20,address,uint256)": "infinite",
								"trySafeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 698,
									"end": 10074,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220902e6c721cb58e8775412412193813e7b4a379566d16d597d369d59eff2768ca64736f6c634300081e0033",
									".code": [
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 10074,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC-20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[ERC]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Staking.sol": {
				"AutoStaking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakingTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_rewardTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_feeReceiver",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "APYUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "compoundedAmount",
									"type": "uint256"
								}
							],
							"name": "AutoCompounded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "status",
									"type": "bool"
								}
							],
							"name": "AutoStakeToggled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "Claimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bool",
									"name": "isPaused",
									"type": "bool"
								}
							],
							"name": "ContractPaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newFeeReceiver",
									"type": "address"
								}
							],
							"name": "FeeReceiverUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardPoolFundsAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "newRewardToken",
									"type": "address"
								}
							],
							"name": "RewardTokenUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "autoStake",
									"type": "bool"
								}
							],
							"name": "Staked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "WithdrawnRewards",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "AUTO_COMPOUND_FEE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_APY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "SECONDS_PER_YEAR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "addRewardPoolFunds",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "apyRates",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "calculateReward",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "compoundReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "estimateMintGas",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								}
							],
							"name": "getActiveStakes",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "stakeTime",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "unlockTime",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "claimed",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "autoStaking",
											"type": "bool"
										},
										{
											"internalType": "uint256",
											"name": "compoundedAmount",
											"type": "uint256"
										}
									],
									"internalType": "struct AutoStaking.StakeInfo[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getFeeReceiver",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "getLockPeriod",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewardPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "lockPeriods",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "pendingRewardWithdrawals",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPoolBalance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newAPY",
									"type": "uint256"
								}
							],
							"name": "setAPY",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "periodIndex",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "autoStake",
									"type": "bool"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakeTime",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "unlockTime",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "claimed",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "autoStaking",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "compoundedAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "stakeIndex",
									"type": "uint256"
								}
							],
							"name": "toggleAutoStake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "togglePause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newFeeReceiver",
									"type": "address"
								}
							],
							"name": "updateFeeReceiver",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newRewardToken",
									"type": "address"
								}
							],
							"name": "updateRewardToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract for staking tokens with fixed lock periods and auto-compounding rewards.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC-20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"title": "AutoStaking",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Staking.sol\":418:10462  contract AutoStaking is Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0xa0)\n    /* \"Staking.sol\":817:876  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Staking.sol\":850:857  30 days */\n  0x278d00\n    /* \"Staking.sol\":817:876  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":859:866  60 days */\n  0x4f1a00\n    /* \"Staking.sol\":817:876  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  0xffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":868:875  90 days */\n  0x76a700\n    /* \"Staking.sol\":817:876  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n  0xffffff\n  and\n  dup2\n  mstore\n  pop\n  0x03\n  swap1\n  0x03\n  tag_1\n  swap3\n  swap2\n  swap1\n  tag_2\n  jump\t// in\ntag_1:\n  pop\n    /* \"Staking.sol\":882:928  uint256[3] public apyRates = [500, 1000, 1500] */\n  mload(0x40)\n  dup1\n  0x60\n  add\n  0x40\n  mstore\n  dup1\n    /* \"Staking.sol\":912:915  500 */\n  0x01f4\n    /* \"Staking.sol\":882:928  uint256[3] public apyRates = [500, 1000, 1500] */\n  0xffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":917:921  1000 */\n  0x03e8\n    /* \"Staking.sol\":882:928  uint256[3] public apyRates = [500, 1000, 1500] */\n  0xffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n    /* \"Staking.sol\":923:927  1500 */\n  0x05dc\n    /* \"Staking.sol\":882:928  uint256[3] public apyRates = [500, 1000, 1500] */\n  0xffff\n  and\n  dup2\n  mstore\n  pop\n  0x06\n  swap1\n  0x03\n  tag_3\n  swap3\n  swap2\n  swap1\n  tag_4\n  jump\t// in\ntag_3:\n  pop\n    /* \"Staking.sol\":2423:2955  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_5\n  jumpi\n  revert(0x00, 0x00)\ntag_5:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n    /* \"Staking.sol\":2554:2564  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  dup1\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":2634:2635  0 */\n  0x00\n    /* \"Staking.sol\":2602:2636  _stakingTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking.sol\":2602:2622  _stakingTokenAddress */\n  dup4\n    /* \"Staking.sol\":2602:2636  _stakingTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Staking.sol\":2594:2662  require(_stakingTokenAddress != address(0), \"Invalid staking token\") */\n  tag_19\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_20\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_19:\n    /* \"Staking.sol\":2711:2712  0 */\n  0x00\n    /* \"Staking.sol\":2680:2713  _rewardTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking.sol\":2680:2699  _rewardTokenAddress */\n  dup3\n    /* \"Staking.sol\":2680:2713  _rewardTokenAddress != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Staking.sol\":2672:2738  require(_rewardTokenAddress != address(0), \"Invalid reward token\") */\n  tag_22\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_23\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_22:\n    /* \"Staking.sol\":2780:2781  0 */\n  0x00\n    /* \"Staking.sol\":2756:2782  _feeReceiver != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"Staking.sol\":2756:2768  _feeReceiver */\n  dup2\n    /* \"Staking.sol\":2756:2782  _feeReceiver != address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"Staking.sol\":2748:2807  require(_feeReceiver != address(0), \"Invalid fee receiver\") */\n  tag_25\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_26\n  swap1\n  tag_27\n  jump\t// in\ntag_26:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_25:\n    /* \"Staking.sol\":2840:2860  _stakingTokenAddress */\n  dup3\n    /* \"Staking.sol\":2818:2861  stakingToken = IERC20(_stakingTokenAddress) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"Staking.sol\":2892:2911  _rewardTokenAddress */\n  dup2\n    /* \"Staking.sol\":2871:2882  rewardToken */\n  0x02\n  0x00\n    /* \"Staking.sol\":2871:2912  rewardToken = IERC20(_rewardTokenAddress) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":2936:2948  _feeReceiver */\n  dup1\n    /* \"Staking.sol\":2922:2933  feeReceiver */\n  0x0d\n  0x00\n    /* \"Staking.sol\":2922:2948  feeReceiver = _feeReceiver */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Staking.sol\":2423:2955  constructor(... */\n  pop\n  pop\n  pop\n    /* \"Staking.sol\":418:10462  contract AutoStaking is Ownable, ReentrancyGuard {... */\n  jump(tag_28)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"Staking.sol\":418:10462  contract AutoStaking is Ownable, ReentrancyGuard {... */\ntag_2:\n  dup3\n  0x03\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_30\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_31:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_32\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_31)\ntag_32:\ntag_30:\n  pop\n  swap1\n  pop\n  tag_33\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_33:\n  pop\n  swap1\n  jump\t// out\ntag_4:\n  dup3\n  0x03\n  dup2\n  add\n  swap3\n  dup3\n  iszero\n  tag_35\n  jumpi\n  swap2\n  0x20\n  mul\n  dup3\n  add\ntag_36:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_37\n  jumpi\n  dup3\n  mload\n  dup3\n  swap1\n  0xffff\n  and\n  swap1\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_36)\ntag_37:\ntag_35:\n  pop\n  swap1\n  pop\n  tag_38\n  swap2\n  swap1\n  tag_34\n  jump\t// in\ntag_38:\n  pop\n  swap1\n  jump\t// out\ntag_34:\ntag_39:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_40\n  jumpi\n  0x00\n  dup2\n  0x00\n  swap1\n  sstore\n  pop\n  0x01\n  add\n  jump(tag_39)\ntag_40:\n  pop\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_42:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_44:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_45:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_62\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_44\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_46:\n    /* \"#utility.yul\":641:665   */\n  tag_64\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_45\n  jump\t// in\ntag_64:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_65\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_65:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_47:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_67\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_46\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1508   */\ntag_7:\n    /* \"#utility.yul\":933:939   */\n  0x00\n    /* \"#utility.yul\":941:947   */\n  0x00\n    /* \"#utility.yul\":949:955   */\n  0x00\n    /* \"#utility.yul\":998:1000   */\n  0x60\n    /* \"#utility.yul\":986:995   */\n  dup5\n    /* \"#utility.yul\":977:984   */\n  dup7\n    /* \"#utility.yul\":973:996   */\n  sub\n    /* \"#utility.yul\":969:1001   */\n  slt\n    /* \"#utility.yul\":966:1085   */\n  iszero\n  tag_69\n  jumpi\n    /* \"#utility.yul\":1004:1083   */\n  tag_70\n  tag_42\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":966:1085   */\ntag_69:\n    /* \"#utility.yul\":1124:1125   */\n  0x00\n    /* \"#utility.yul\":1149:1213   */\n  tag_71\n    /* \"#utility.yul\":1205:1212   */\n  dup7\n    /* \"#utility.yul\":1196:1202   */\n  dup3\n    /* \"#utility.yul\":1185:1194   */\n  dup8\n    /* \"#utility.yul\":1181:1203   */\n  add\n    /* \"#utility.yul\":1149:1213   */\n  tag_47\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":1139:1213   */\n  swap4\n  pop\n    /* \"#utility.yul\":1095:1223   */\n  pop\n    /* \"#utility.yul\":1262:1264   */\n  0x20\n    /* \"#utility.yul\":1288:1352   */\n  tag_72\n    /* \"#utility.yul\":1344:1351   */\n  dup7\n    /* \"#utility.yul\":1335:1341   */\n  dup3\n    /* \"#utility.yul\":1324:1333   */\n  dup8\n    /* \"#utility.yul\":1320:1342   */\n  add\n    /* \"#utility.yul\":1288:1352   */\n  tag_47\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1278:1352   */\n  swap3\n  pop\n    /* \"#utility.yul\":1233:1362   */\n  pop\n    /* \"#utility.yul\":1401:1403   */\n  0x40\n    /* \"#utility.yul\":1427:1491   */\n  tag_73\n    /* \"#utility.yul\":1483:1490   */\n  dup7\n    /* \"#utility.yul\":1474:1480   */\n  dup3\n    /* \"#utility.yul\":1463:1472   */\n  dup8\n    /* \"#utility.yul\":1459:1481   */\n  add\n    /* \"#utility.yul\":1427:1491   */\n  tag_47\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":1417:1491   */\n  swap2\n  pop\n    /* \"#utility.yul\":1372:1501   */\n  pop\n    /* \"#utility.yul\":845:1508   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\n    /* \"#utility.yul\":1514:1632   */\ntag_48:\n    /* \"#utility.yul\":1601:1625   */\n  tag_75\n    /* \"#utility.yul\":1619:1624   */\n  dup2\n    /* \"#utility.yul\":1601:1625   */\n  tag_45\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":1596:1599   */\n  dup3\n    /* \"#utility.yul\":1589:1626   */\n  mstore\n    /* \"#utility.yul\":1514:1632   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1638:1860   */\ntag_14:\n    /* \"#utility.yul\":1731:1735   */\n  0x00\n    /* \"#utility.yul\":1769:1771   */\n  0x20\n    /* \"#utility.yul\":1758:1767   */\n  dup3\n    /* \"#utility.yul\":1754:1772   */\n  add\n    /* \"#utility.yul\":1746:1772   */\n  swap1\n  pop\n    /* \"#utility.yul\":1782:1853   */\n  tag_77\n    /* \"#utility.yul\":1850:1851   */\n  0x00\n    /* \"#utility.yul\":1839:1848   */\n  dup4\n    /* \"#utility.yul\":1835:1852   */\n  add\n    /* \"#utility.yul\":1826:1832   */\n  dup5\n    /* \"#utility.yul\":1782:1853   */\n  tag_48\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":1638:1860   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1866:2035   */\ntag_49:\n    /* \"#utility.yul\":1950:1961   */\n  0x00\n    /* \"#utility.yul\":1984:1990   */\n  dup3\n    /* \"#utility.yul\":1979:1982   */\n  dup3\n    /* \"#utility.yul\":1972:1991   */\n  mstore\n    /* \"#utility.yul\":2024:2028   */\n  0x20\n    /* \"#utility.yul\":2019:2022   */\n  dup3\n    /* \"#utility.yul\":2015:2029   */\n  add\n    /* \"#utility.yul\":2000:2029   */\n  swap1\n  pop\n    /* \"#utility.yul\":1866:2035   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2041:2212   */\ntag_50:\n    /* \"#utility.yul\":2181:2204   */\n  0x496e76616c6964207374616b696e6720746f6b656e0000000000000000000000\n    /* \"#utility.yul\":2177:2178   */\n  0x00\n    /* \"#utility.yul\":2169:2175   */\n  dup3\n    /* \"#utility.yul\":2165:2179   */\n  add\n    /* \"#utility.yul\":2158:2205   */\n  mstore\n    /* \"#utility.yul\":2041:2212   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2218:2584   */\ntag_51:\n    /* \"#utility.yul\":2360:2363   */\n  0x00\n    /* \"#utility.yul\":2381:2448   */\n  tag_81\n    /* \"#utility.yul\":2445:2447   */\n  0x15\n    /* \"#utility.yul\":2440:2443   */\n  dup4\n    /* \"#utility.yul\":2381:2448   */\n  tag_49\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2374:2448   */\n  swap2\n  pop\n    /* \"#utility.yul\":2457:2550   */\n  tag_82\n    /* \"#utility.yul\":2546:2549   */\n  dup3\n    /* \"#utility.yul\":2457:2550   */\n  tag_50\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2575:2577   */\n  0x20\n    /* \"#utility.yul\":2570:2573   */\n  dup3\n    /* \"#utility.yul\":2566:2578   */\n  add\n    /* \"#utility.yul\":2559:2578   */\n  swap1\n  pop\n    /* \"#utility.yul\":2218:2584   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2590:3009   */\ntag_21:\n    /* \"#utility.yul\":2756:2760   */\n  0x00\n    /* \"#utility.yul\":2794:2796   */\n  0x20\n    /* \"#utility.yul\":2783:2792   */\n  dup3\n    /* \"#utility.yul\":2779:2797   */\n  add\n    /* \"#utility.yul\":2771:2797   */\n  swap1\n  pop\n    /* \"#utility.yul\":2843:2852   */\n  dup2\n    /* \"#utility.yul\":2837:2841   */\n  dup2\n    /* \"#utility.yul\":2833:2853   */\n  sub\n    /* \"#utility.yul\":2829:2830   */\n  0x00\n    /* \"#utility.yul\":2818:2827   */\n  dup4\n    /* \"#utility.yul\":2814:2831   */\n  add\n    /* \"#utility.yul\":2807:2854   */\n  mstore\n    /* \"#utility.yul\":2871:3002   */\n  tag_84\n    /* \"#utility.yul\":2997:3001   */\n  dup2\n    /* \"#utility.yul\":2871:3002   */\n  tag_51\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":2863:3002   */\n  swap1\n  pop\n    /* \"#utility.yul\":2590:3009   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3015:3185   */\ntag_52:\n    /* \"#utility.yul\":3155:3177   */\n  0x496e76616c69642072657761726420746f6b656e000000000000000000000000\n    /* \"#utility.yul\":3151:3152   */\n  0x00\n    /* \"#utility.yul\":3143:3149   */\n  dup3\n    /* \"#utility.yul\":3139:3153   */\n  add\n    /* \"#utility.yul\":3132:3178   */\n  mstore\n    /* \"#utility.yul\":3015:3185   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3191:3557   */\ntag_53:\n    /* \"#utility.yul\":3333:3336   */\n  0x00\n    /* \"#utility.yul\":3354:3421   */\n  tag_87\n    /* \"#utility.yul\":3418:3420   */\n  0x14\n    /* \"#utility.yul\":3413:3416   */\n  dup4\n    /* \"#utility.yul\":3354:3421   */\n  tag_49\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":3347:3421   */\n  swap2\n  pop\n    /* \"#utility.yul\":3430:3523   */\n  tag_88\n    /* \"#utility.yul\":3519:3522   */\n  dup3\n    /* \"#utility.yul\":3430:3523   */\n  tag_52\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":3548:3550   */\n  0x20\n    /* \"#utility.yul\":3543:3546   */\n  dup3\n    /* \"#utility.yul\":3539:3551   */\n  add\n    /* \"#utility.yul\":3532:3551   */\n  swap1\n  pop\n    /* \"#utility.yul\":3191:3557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3563:3982   */\ntag_24:\n    /* \"#utility.yul\":3729:3733   */\n  0x00\n    /* \"#utility.yul\":3767:3769   */\n  0x20\n    /* \"#utility.yul\":3756:3765   */\n  dup3\n    /* \"#utility.yul\":3752:3770   */\n  add\n    /* \"#utility.yul\":3744:3770   */\n  swap1\n  pop\n    /* \"#utility.yul\":3816:3825   */\n  dup2\n    /* \"#utility.yul\":3810:3814   */\n  dup2\n    /* \"#utility.yul\":3806:3826   */\n  sub\n    /* \"#utility.yul\":3802:3803   */\n  0x00\n    /* \"#utility.yul\":3791:3800   */\n  dup4\n    /* \"#utility.yul\":3787:3804   */\n  add\n    /* \"#utility.yul\":3780:3827   */\n  mstore\n    /* \"#utility.yul\":3844:3975   */\n  tag_90\n    /* \"#utility.yul\":3970:3974   */\n  dup2\n    /* \"#utility.yul\":3844:3975   */\n  tag_53\n  jump\t// in\ntag_90:\n    /* \"#utility.yul\":3836:3975   */\n  swap1\n  pop\n    /* \"#utility.yul\":3563:3982   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3988:4158   */\ntag_54:\n    /* \"#utility.yul\":4128:4150   */\n  0x496e76616c696420666565207265636569766572000000000000000000000000\n    /* \"#utility.yul\":4124:4125   */\n  0x00\n    /* \"#utility.yul\":4116:4122   */\n  dup3\n    /* \"#utility.yul\":4112:4126   */\n  add\n    /* \"#utility.yul\":4105:4151   */\n  mstore\n    /* \"#utility.yul\":3988:4158   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4164:4530   */\ntag_55:\n    /* \"#utility.yul\":4306:4309   */\n  0x00\n    /* \"#utility.yul\":4327:4394   */\n  tag_93\n    /* \"#utility.yul\":4391:4393   */\n  0x14\n    /* \"#utility.yul\":4386:4389   */\n  dup4\n    /* \"#utility.yul\":4327:4394   */\n  tag_49\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":4320:4394   */\n  swap2\n  pop\n    /* \"#utility.yul\":4403:4496   */\n  tag_94\n    /* \"#utility.yul\":4492:4495   */\n  dup3\n    /* \"#utility.yul\":4403:4496   */\n  tag_54\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4521:4523   */\n  0x20\n    /* \"#utility.yul\":4516:4519   */\n  dup3\n    /* \"#utility.yul\":4512:4524   */\n  add\n    /* \"#utility.yul\":4505:4524   */\n  swap1\n  pop\n    /* \"#utility.yul\":4164:4530   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4536:4955   */\ntag_27:\n    /* \"#utility.yul\":4702:4706   */\n  0x00\n    /* \"#utility.yul\":4740:4742   */\n  0x20\n    /* \"#utility.yul\":4729:4738   */\n  dup3\n    /* \"#utility.yul\":4725:4743   */\n  add\n    /* \"#utility.yul\":4717:4743   */\n  swap1\n  pop\n    /* \"#utility.yul\":4789:4798   */\n  dup2\n    /* \"#utility.yul\":4783:4787   */\n  dup2\n    /* \"#utility.yul\":4779:4799   */\n  sub\n    /* \"#utility.yul\":4775:4776   */\n  0x00\n    /* \"#utility.yul\":4764:4773   */\n  dup4\n    /* \"#utility.yul\":4760:4777   */\n  add\n    /* \"#utility.yul\":4753:4800   */\n  mstore\n    /* \"#utility.yul\":4817:4948   */\n  tag_96\n    /* \"#utility.yul\":4943:4947   */\n  dup2\n    /* \"#utility.yul\":4817:4948   */\n  tag_55\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4809:4948   */\n  swap1\n  pop\n    /* \"#utility.yul\":4536:4955   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"Staking.sol\":418:10462  contract AutoStaking is Ownable, ReentrancyGuard {... */\ntag_28:\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x05f14bbde4435ecbe5273cf423314527515a37e93321dc3a13f762431443ebf5\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"Staking.sol\":418:10462  contract AutoStaking is Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xc7b8981c\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      gt\n      tag_37\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf55ad3ec\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_33\n      jumpi\n      dup1\n      0xf8cf31cb\n      eq\n      tag_34\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0xc7b8981c\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xd854fb75\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe6a69ab8\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe8a35392\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0xb3f00674\n      gt\n      tag_38\n      jumpi\n      dup1\n      0xb3f00674\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xbbd36b61\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc4ae3168\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc69bebe4\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_38:\n      dup1\n      0x817b1cd2\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x95a29060\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xae169a50\n      eq\n      tag_22\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x584b62a1\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x715018a6\n      gt\n      tag_40\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x72f702f3\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x794a62d3\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x7a5c08ae\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x584b62a1\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5acd2e4c\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x6b494def\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x3d92f4e2\n      gt\n      tag_41\n      jumpi\n      dup1\n      0x3d92f4e2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x4060e257\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4c8f2a78\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x561b2463\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0x0630e463\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1747e0b0\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x1852e8d9\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x38bceaac\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"Staking.sol\":1212:1271  mapping(address => uint256) public pendingRewardWithdrawals */\n    tag_3:\n      tag_42\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      tag_45\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":9623:9741  function getActiveStakes(address user) external view returns (StakeInfo[] memory) {... */\n    tag_4:\n      tag_48\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_49\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":3907:4701  function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_5:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":677:723  uint256 public constant AUTO_COMPOUND_FEE = 50 */\n    tag_6:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":737:776  uint256 public constant MAX_APY = 10000 */\n    tag_7:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":7172:8053  function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {... */\n    tag_8:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n    tag_64:\n      stop\n        /* \"Staking.sol\":817:876  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n    tag_9:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":3090:3833  function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA whenNotPaused {... */\n    tag_10:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      stop\n        /* \"Staking.sol\":1161:1206  mapping(address => StakeInfo[]) public stakes */\n    tag_11:\n      tag_76\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_77:\n      tag_78\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      tag_79\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":8461:8766  function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {... */\n    tag_12:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      stop\n        /* \"Staking.sol\":2398:2416  bool public paused */\n    tag_13:\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":882:928  uint256[3] public apyRates = [500, 1000, 1500] */\n    tag_14:\n      tag_89\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_90\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_90:\n      tag_91\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_92\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_15:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      stop\n        /* \"Staking.sol\":529:565  IERC20 public immutable stakingToken */\n    tag_16:\n      tag_95\n      tag_96\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":10370:10460  function estimateMintGas() external pure returns (uint256) {... */\n    tag_17:\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1330:1362  uint256 public rewardPoolBalance */\n    tag_18:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      mload(0x40)\n      tag_104\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":1298:1324  uint256 public totalStaked */\n    tag_19:\n      tag_105\n      tag_106\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_20:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":6683:7104  function toggleAutoStake(uint256 stakeIndex) external whenNotPaused {... */\n    tag_21:\n      tag_112\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n    tag_112:\n      stop\n        /* \"Staking.sol\":5119:6207  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {... */\n    tag_22:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      stop\n        /* \"Staking.sol\":1368:1394  address public feeReceiver */\n    tag_23:\n      tag_118\n      tag_119\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      tag_120\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_120:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":8115:8395  function addRewardPoolFunds(uint256 amount) external onlyOwner {... */\n    tag_24:\n      tag_121\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_122\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_122:\n      tag_123\n      jump\t// in\n    tag_121:\n      stop\n        /* \"Staking.sol\":9441:9553  function togglePause() external onlyOwner {... */\n    tag_25:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      stop\n        /* \"Staking.sol\":9143:9382  function updateFeeReceiver(address newFeeReceiver) external onlyOwner {... */\n    tag_26:\n      tag_126\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_127:\n      tag_128\n      jump\t// in\n    tag_126:\n      stop\n        /* \"Staking.sol\":6269:6614  function withdrawRewards() external nonReentrant whenNotPaused {... */\n    tag_27:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      stop\n        /* \"Staking.sol\":9810:9915  function getRewardPoolBalance() external view returns (uint256) {... */\n    tag_28:\n      tag_131\n      tag_132\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":620:671  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_29:\n      tag_134\n      tag_135\n      jump\t// in\n    tag_134:\n      mload(0x40)\n      tag_136\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":9977:10070  function getFeeReceiver() external view returns (address) {... */\n    tag_30:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      tag_139\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_31:\n      tag_140\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_141\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_141:\n      tag_142\n      jump\t// in\n    tag_140:\n      stop\n        /* \"Staking.sol\":10134:10315  function getLockPeriod(uint256 index) external view returns (uint256) {... */\n    tag_32:\n      tag_143\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_144\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_144:\n      tag_145\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      tag_146\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":571:596  IERC20 public rewardToken */\n    tag_33:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      tag_149\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_149:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Staking.sol\":8831:9078  function updateRewardToken(address newRewardToken) external onlyOwner {... */\n    tag_34:\n      tag_150\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_151\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_151:\n      tag_152\n      jump\t// in\n    tag_150:\n      stop\n        /* \"Staking.sol\":1212:1271  mapping(address => uint256) public pendingRewardWithdrawals */\n    tag_45:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":9623:9741  function getActiveStakes(address user) external view returns (StakeInfo[] memory) {... */\n    tag_50:\n        /* \"Staking.sol\":9685:9703  StakeInfo[] memory */\n      0x60\n        /* \"Staking.sol\":9722:9728  stakes */\n      0x09\n        /* \"Staking.sol\":9722:9734  stakes[user] */\n      0x00\n        /* \"Staking.sol\":9729:9733  user */\n      dup4\n        /* \"Staking.sol\":9722:9734  stakes[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":9715:9734  return stakes[user] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      swap1\n    tag_154:\n      dup3\n      dup3\n      lt\n      iszero\n      tag_155\n      jumpi\n      dup4\n      dup3\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_154)\n    tag_155:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":9623:9741  function getActiveStakes(address user) external view returns (StakeInfo[] memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking.sol\":3907:4701  function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {... */\n    tag_56:\n        /* \"Staking.sol\":3990:3997  uint256 */\n      0x00\n        /* \"Staking.sol\":4036:4037  0 */\n      0x00\n        /* \"Staking.sol\":4017:4038  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":4017:4024  account */\n      dup4\n        /* \"Staking.sol\":4017:4038  account != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":4009:4058  require(account != address(0), \"Invalid account\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_158:\n        /* \"Staking.sol\":4089:4095  stakes */\n      0x09\n        /* \"Staking.sol\":4089:4104  stakes[account] */\n      0x00\n        /* \"Staking.sol\":4096:4103  account */\n      dup5\n        /* \"Staking.sol\":4089:4104  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":4089:4111  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":4076:4086  stakeIndex */\n      dup3\n        /* \"Staking.sol\":4076:4111  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":4068:4135  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"Staking.sol\":4146:4167  StakeInfo memory info */\n      0x00\n        /* \"Staking.sol\":4170:4176  stakes */\n      0x09\n        /* \"Staking.sol\":4170:4185  stakes[account] */\n      0x00\n        /* \"Staking.sol\":4177:4184  account */\n      dup6\n        /* \"Staking.sol\":4170:4185  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":4186:4196  stakeIndex */\n      dup4\n        /* \"Staking.sol\":4170:4197  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_164\n      jumpi\n      tag_165\n      tag_166\n      jump\t// in\n    tag_165:\n    tag_164:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":4146:4197  StakeInfo memory info = stakes[account][stakeIndex] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"Staking.sol\":4216:4220  info */\n      dup1\n        /* \"Staking.sol\":4216:4228  info.claimed */\n      0x60\n      add\n      mload\n        /* \"Staking.sol\":4215:4228  !info.claimed */\n      iszero\n        /* \"Staking.sol\":4207:4248  require(!info.claimed, \"Already claimed\") */\n      tag_168\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_168:\n        /* \"Staking.sol\":4259:4274  uint256 endTime */\n      0x00\n        /* \"Staking.sol\":4277:4281  info */\n      dup2\n        /* \"Staking.sol\":4277:4292  info.unlockTime */\n      0x40\n      add\n      mload\n        /* \"Staking.sol\":4259:4292  uint256 endTime = info.unlockTime */\n      swap1\n      pop\n        /* \"Staking.sol\":4306:4310  info */\n      dup2\n        /* \"Staking.sol\":4306:4322  info.autoStaking */\n      0x80\n      add\n      mload\n        /* \"Staking.sol\":4306:4351  info.autoStaking && block.timestamp > endTime */\n      dup1\n      iszero\n      tag_171\n      jumpi\n      pop\n        /* \"Staking.sol\":4344:4351  endTime */\n      dup1\n        /* \"Staking.sol\":4326:4341  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":4326:4351  block.timestamp > endTime */\n      gt\n        /* \"Staking.sol\":4306:4351  info.autoStaking && block.timestamp > endTime */\n    tag_171:\n        /* \"Staking.sol\":4302:4403  if (info.autoStaking && block.timestamp > endTime) {... */\n      iszero\n      tag_172\n      jumpi\n        /* \"Staking.sol\":4377:4392  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":4367:4392  endTime = block.timestamp */\n      swap1\n      pop\n        /* \"Staking.sol\":4302:4403  if (info.autoStaking && block.timestamp > endTime) {... */\n    tag_172:\n        /* \"Staking.sol\":4413:4429  uint256 timeHeld */\n      0x00\n        /* \"Staking.sol\":4442:4446  info */\n      dup3\n        /* \"Staking.sol\":4442:4456  info.stakeTime */\n      0x20\n      add\n      mload\n        /* \"Staking.sol\":4432:4439  endTime */\n      dup3\n        /* \"Staking.sol\":4432:4456  endTime - info.stakeTime */\n      tag_173\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n        /* \"Staking.sol\":4413:4456  uint256 timeHeld = endTime - info.stakeTime */\n      swap1\n      pop\n        /* \"Staking.sol\":4466:4485  uint256 periodIndex */\n      0x00\n        /* \"Staking.sol\":4488:4536  getPeriodIndex(info.unlockTime - info.stakeTime) */\n      tag_175\n        /* \"Staking.sol\":4521:4525  info */\n      dup5\n        /* \"Staking.sol\":4521:4535  info.stakeTime */\n      0x20\n      add\n      mload\n        /* \"Staking.sol\":4503:4507  info */\n      dup6\n        /* \"Staking.sol\":4503:4518  info.unlockTime */\n      0x40\n      add\n      mload\n        /* \"Staking.sol\":4503:4535  info.unlockTime - info.stakeTime */\n      tag_176\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_176:\n        /* \"Staking.sol\":4488:4502  getPeriodIndex */\n      tag_177\n        /* \"Staking.sol\":4488:4536  getPeriodIndex(info.unlockTime - info.stakeTime) */\n      jump\t// in\n    tag_175:\n        /* \"Staking.sol\":4466:4536  uint256 periodIndex = getPeriodIndex(info.unlockTime - info.stakeTime) */\n      swap1\n      pop\n        /* \"Staking.sol\":4546:4563  uint256 principal */\n      0x00\n        /* \"Staking.sol\":4580:4584  info */\n      dup5\n        /* \"Staking.sol\":4580:4601  info.compoundedAmount */\n      0xa0\n      add\n      mload\n        /* \"Staking.sol\":4566:4570  info */\n      dup6\n        /* \"Staking.sol\":4566:4577  info.amount */\n      0x00\n      add\n      mload\n        /* \"Staking.sol\":4566:4601  info.amount + info.compoundedAmount */\n      tag_178\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_178:\n        /* \"Staking.sol\":4546:4601  uint256 principal = info.amount + info.compoundedAmount */\n      swap1\n      pop\n        /* \"Staking.sol\":663:671  365 days */\n      0x01e13380\n        /* \"Staking.sol\":4669:4674  10000 */\n      0x2710\n        /* \"Staking.sol\":4669:4693  10000 * SECONDS_PER_YEAR */\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"Staking.sol\":4656:4664  timeHeld */\n      dup4\n        /* \"Staking.sol\":4632:4640  apyRates */\n      0x06\n        /* \"Staking.sol\":4641:4652  periodIndex */\n      dup5\n        /* \"Staking.sol\":4632:4653  apyRates[periodIndex] */\n      0x03\n      dup2\n      lt\n      tag_182\n      jumpi\n      tag_183\n      tag_166\n      jump\t// in\n    tag_183:\n    tag_182:\n      add\n      sload\n        /* \"Staking.sol\":4620:4629  principal */\n      dup4\n        /* \"Staking.sol\":4620:4653  principal * apyRates[periodIndex] */\n      tag_185\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_185:\n        /* \"Staking.sol\":4620:4664  principal * apyRates[periodIndex] * timeHeld */\n      tag_186\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_186:\n        /* \"Staking.sol\":4619:4694  (principal * apyRates[periodIndex] * timeHeld) / (10000 * SECONDS_PER_YEAR) */\n      tag_187\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"Staking.sol\":4612:4694  return (principal * apyRates[periodIndex] * timeHeld) / (10000 * SECONDS_PER_YEAR) */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":3907:4701  function calculateReward(address account, uint256 stakeIndex) public view returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":677:723  uint256 public constant AUTO_COMPOUND_FEE = 50 */\n    tag_59:\n        /* \"Staking.sol\":721:723  50 */\n      0x32\n        /* \"Staking.sol\":677:723  uint256 public constant AUTO_COMPOUND_FEE = 50 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":737:776  uint256 public constant MAX_APY = 10000 */\n    tag_62:\n        /* \"Staking.sol\":771:776  10000 */\n      0x2710\n        /* \"Staking.sol\":737:776  uint256 public constant MAX_APY = 10000 */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":7172:8053  function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {... */\n    tag_67:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_190\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_191\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_190:\n        /* \"Staking.sol\":2228:2238  msg.sender */\n      caller\n        /* \"Staking.sol\":2215:2238  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2215:2224  tx.origin */\n      origin\n        /* \"Staking.sol\":2215:2238  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2207:2260  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_193\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_193:\n        /* \"Staking.sol\":2328:2334  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":2327:2334  !paused */\n      iszero\n        /* \"Staking.sol\":2319:2354  require(!paused, \"Contract paused\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"Staking.sol\":7270:7285  address account */\n      0x00\n        /* \"Staking.sol\":7288:7298  msg.sender */\n      caller\n        /* \"Staking.sol\":7270:7298  address account = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":7329:7335  stakes */\n      0x09\n        /* \"Staking.sol\":7329:7344  stakes[account] */\n      0x00\n        /* \"Staking.sol\":7336:7343  account */\n      dup3\n        /* \"Staking.sol\":7329:7344  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":7329:7351  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":7316:7326  stakeIndex */\n      dup3\n        /* \"Staking.sol\":7316:7351  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":7308:7375  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_201\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_202\n      swap1\n      tag_163\n      jump\t// in\n    tag_202:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_201:\n        /* \"Staking.sol\":7386:7408  StakeInfo storage info */\n      0x00\n        /* \"Staking.sol\":7411:7417  stakes */\n      0x09\n        /* \"Staking.sol\":7411:7426  stakes[account] */\n      0x00\n        /* \"Staking.sol\":7418:7425  account */\n      dup4\n        /* \"Staking.sol\":7411:7426  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":7427:7437  stakeIndex */\n      dup4\n        /* \"Staking.sol\":7411:7438  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_203\n      jumpi\n      tag_204\n      tag_166\n      jump\t// in\n    tag_204:\n    tag_203:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":7386:7438  StakeInfo storage info = stakes[account][stakeIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":7457:7461  info */\n      dup1\n        /* \"Staking.sol\":7457:7469  info.claimed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7456:7469  !info.claimed */\n      iszero\n        /* \"Staking.sol\":7448:7489  require(!info.claimed, \"Already claimed\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_170\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"Staking.sol\":7507:7511  info */\n      dup1\n        /* \"Staking.sol\":7507:7523  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7499:7549  require(info.autoStaking, \"Auto-staking disabled\") */\n      tag_208\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_209\n      swap1\n      tag_210\n      jump\t// in\n    tag_209:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_208:\n        /* \"Staking.sol\":7586:7590  info */\n      dup1\n        /* \"Staking.sol\":7586:7601  info.unlockTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":7567:7582  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7567:7601  block.timestamp >= info.unlockTime */\n      lt\n      iszero\n        /* \"Staking.sol\":7559:7618  require(block.timestamp >= info.unlockTime, \"Still locked\") */\n      tag_211\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_211:\n        /* \"Staking.sol\":7629:7643  uint256 reward */\n      0x00\n        /* \"Staking.sol\":7646:7682  calculateReward(account, stakeIndex) */\n      tag_214\n        /* \"Staking.sol\":7662:7669  account */\n      dup4\n        /* \"Staking.sol\":7671:7681  stakeIndex */\n      dup6\n        /* \"Staking.sol\":7646:7661  calculateReward */\n      tag_56\n        /* \"Staking.sol\":7646:7682  calculateReward(account, stakeIndex) */\n      jump\t// in\n    tag_214:\n        /* \"Staking.sol\":7629:7682  uint256 reward = calculateReward(account, stakeIndex) */\n      swap1\n      pop\n        /* \"Staking.sol\":7721:7727  reward */\n      dup1\n        /* \"Staking.sol\":7700:7717  rewardPoolBalance */\n      sload(0x0c)\n        /* \"Staking.sol\":7700:7727  rewardPoolBalance >= reward */\n      lt\n      iszero\n        /* \"Staking.sol\":7692:7756  require(rewardPoolBalance >= reward, \"Insufficient reward pool\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_216\n      swap1\n      tag_217\n      jump\t// in\n    tag_216:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_215:\n        /* \"Staking.sol\":7784:7799  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7767:7771  info */\n      dup3\n        /* \"Staking.sol\":7767:7781  info.stakeTime */\n      0x01\n      add\n        /* \"Staking.sol\":7767:7799  info.stakeTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7864:7868  info */\n      dup2\n        /* \"Staking.sol\":7864:7878  info.stakeTime */\n      0x01\n      add\n      sload\n        /* \"Staking.sol\":7846:7850  info */\n      dup3\n        /* \"Staking.sol\":7846:7861  info.unlockTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":7846:7878  info.unlockTime - info.stakeTime */\n      tag_218\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_218:\n        /* \"Staking.sol\":7827:7842  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":7827:7879  block.timestamp + (info.unlockTime - info.stakeTime) */\n      tag_219\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_219:\n        /* \"Staking.sol\":7809:7813  info */\n      dup3\n        /* \"Staking.sol\":7809:7824  info.unlockTime */\n      0x02\n      add\n        /* \"Staking.sol\":7809:7879  info.unlockTime = block.timestamp + (info.unlockTime - info.stakeTime) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7929:7935  reward */\n      dup1\n        /* \"Staking.sol\":7904:7908  info */\n      dup3\n        /* \"Staking.sol\":7904:7925  info.compoundedAmount */\n      0x04\n      add\n      0x00\n        /* \"Staking.sol\":7904:7935  info.compoundedAmount += reward */\n      dup3\n      dup3\n      sload\n      tag_220\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_220:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7966:7972  reward */\n      dup1\n        /* \"Staking.sol\":7945:7962  rewardPoolBalance */\n      0x0c\n      0x00\n        /* \"Staking.sol\":7945:7972  rewardPoolBalance -= reward */\n      dup3\n      dup3\n      sload\n      tag_221\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_221:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":8003:8010  account */\n      dup3\n        /* \"Staking.sol\":7988:8046  AutoCompounded(account, stakeIndex, info.compoundedAmount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x593662cbe53e88df3fef748665b8c3d3142e5d34dc1b24290f7e953537a00183\n        /* \"Staking.sol\":8012:8022  stakeIndex */\n      dup6\n        /* \"Staking.sol\":8024:8028  info */\n      dup5\n        /* \"Staking.sol\":8024:8045  info.compoundedAmount */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":7988:8046  AutoCompounded(account, stakeIndex, info.compoundedAmount) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":7260:8053  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_224\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_225\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_224:\n        /* \"Staking.sol\":7172:8053  function compoundReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":817:876  uint256[3] public lockPeriods = [30 days, 60 days, 90 days] */\n    tag_70:\n      0x03\n      dup2\n      0x03\n      dup2\n      lt\n      tag_226\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_226:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":3090:3833  function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA whenNotPaused {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_229\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_191\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_229:\n        /* \"Staking.sol\":2228:2238  msg.sender */\n      caller\n        /* \"Staking.sol\":2215:2238  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2215:2224  tx.origin */\n      origin\n        /* \"Staking.sol\":2215:2238  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2207:2260  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_231\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap1\n      tag_195\n      jump\t// in\n    tag_232:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_231:\n        /* \"Staking.sol\":2328:2334  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":2327:2334  !paused */\n      iszero\n        /* \"Staking.sol\":2319:2354  require(!paused, \"Contract paused\") */\n      tag_234\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_235\n      swap1\n      tag_199\n      jump\t// in\n    tag_235:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_234:\n        /* \"Staking.sol\":3234:3252  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":3220:3231  periodIndex */\n      dup3\n        /* \"Staking.sol\":3220:3252  periodIndex < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":3212:3277  require(periodIndex < lockPeriods.length, \"Invalid period index\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"Staking.sol\":3304:3305  0 */\n      0x00\n        /* \"Staking.sol\":3295:3301  amount */\n      dup4\n        /* \"Staking.sol\":3295:3305  amount > 0 */\n      gt\n        /* \"Staking.sol\":3287:3321  require(amount > 0, \"Zero amount\") */\n      tag_240\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_241\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_240:\n        /* \"Staking.sol\":3332:3396  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_243\n        /* \"Staking.sol\":3362:3372  msg.sender */\n      caller\n        /* \"Staking.sol\":3382:3386  this */\n      address\n        /* \"Staking.sol\":3389:3395  amount */\n      dup6\n        /* \"Staking.sol\":3332:3344  stakingToken */\n      immutable(\"0x05f14bbde4435ecbe5273cf423314527515a37e93321dc3a13f762431443ebf5\")\n        /* \"Staking.sol\":3332:3361  stakingToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_244\n      swap1\n        /* \"Staking.sol\":3332:3396  stakingToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_243:\n        /* \"Staking.sol\":3407:3425  uint256 unlockTime */\n      0x00\n        /* \"Staking.sol\":3446:3457  lockPeriods */\n      0x03\n        /* \"Staking.sol\":3458:3469  periodIndex */\n      dup4\n        /* \"Staking.sol\":3446:3470  lockPeriods[periodIndex] */\n      0x03\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_246\n      tag_166\n      jump\t// in\n    tag_246:\n    tag_245:\n      add\n      sload\n        /* \"Staking.sol\":3428:3443  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":3428:3470  block.timestamp + lockPeriods[periodIndex] */\n      tag_248\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_248:\n        /* \"Staking.sol\":3407:3470  uint256 unlockTime = block.timestamp + lockPeriods[periodIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":3481:3487  stakes */\n      0x09\n        /* \"Staking.sol\":3481:3499  stakes[msg.sender] */\n      0x00\n        /* \"Staking.sol\":3488:3498  msg.sender */\n      caller\n        /* \"Staking.sol\":3481:3499  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"Staking.sol\":3537:3543  amount */\n      dup7\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3568:3583  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3609:3619  unlockTime */\n      dup4\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3642:3647  false */\n      0x00\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3674:3683  autoStake */\n      dup5\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"Staking.sol\":3715:3716  0 */\n      0x00\n        /* \"Staking.sol\":3505:3727  StakeInfo({... */\n      dup2\n      mstore\n      pop\n        /* \"Staking.sol\":3481:3728  stakes[msg.sender].push(StakeInfo({... */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      pop\n      pop\n        /* \"Staking.sol\":3754:3760  amount */\n      dup4\n        /* \"Staking.sol\":3739:3750  totalStaked */\n      0x0b\n      0x00\n        /* \"Staking.sol\":3739:3760  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_250\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_250:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":3783:3793  msg.sender */\n      caller\n        /* \"Staking.sol\":3776:3826  Staked(msg.sender, amount, periodIndex, autoStake) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3df45cb339f96ae4bdb793efcb6e22100dd0dc4fd739a4ee2033fe67ea35af96\n        /* \"Staking.sol\":3795:3801  amount */\n      dup6\n        /* \"Staking.sol\":3803:3814  periodIndex */\n      dup6\n        /* \"Staking.sol\":3816:3825  autoStake */\n      dup6\n        /* \"Staking.sol\":3776:3826  Staked(msg.sender, amount, periodIndex, autoStake) */\n      mload(0x40)\n      tag_251\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":3202:3833  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_225\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_253:\n        /* \"Staking.sol\":3090:3833  function stake(uint256 amount, uint256 periodIndex, bool autoStake) external nonReentrant onlyEOA whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":1161:1206  mapping(address => StakeInfo[]) public stakes */\n    tag_78:\n      mstore(0x20, 0x09)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_254\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_254:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"Staking.sol\":8461:8766  function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {... */\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_257\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_257:\n        /* \"Staking.sol\":8565:8583  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":8551:8562  periodIndex */\n      dup3\n        /* \"Staking.sol\":8551:8583  periodIndex < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":8543:8608  require(periodIndex < lockPeriods.length, \"Invalid period index\") */\n      tag_260\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap1\n      tag_239\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_260:\n        /* \"Staking.sol\":771:776  10000 */\n      0x2710\n        /* \"Staking.sol\":8626:8632  newAPY */\n      dup2\n        /* \"Staking.sol\":8626:8643  newAPY <= MAX_APY */\n      gt\n      iszero\n        /* \"Staking.sol\":8618:8660  require(newAPY <= MAX_APY, \"APY too high\") */\n      tag_262\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_263\n      swap1\n      tag_264\n      jump\t// in\n    tag_263:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_262:\n        /* \"Staking.sol\":8707:8713  newAPY */\n      dup1\n        /* \"Staking.sol\":8683:8691  apyRates */\n      0x06\n        /* \"Staking.sol\":8692:8703  periodIndex */\n      dup4\n        /* \"Staking.sol\":8683:8704  apyRates[periodIndex] */\n      0x03\n      dup2\n      lt\n      tag_265\n      jumpi\n      tag_266\n      tag_166\n      jump\t// in\n    tag_266:\n    tag_265:\n      add\n        /* \"Staking.sol\":8683:8713  apyRates[periodIndex] = newAPY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":8728:8759  APYUpdated(periodIndex, newAPY) */\n      0x787a1fca55641ce34a438271930bbb9401df20db2b4f510d4f252227d85df43d\n        /* \"Staking.sol\":8739:8750  periodIndex */\n      dup3\n        /* \"Staking.sol\":8752:8758  newAPY */\n      dup3\n        /* \"Staking.sol\":8728:8759  APYUpdated(periodIndex, newAPY) */\n      mload(0x40)\n      tag_268\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"Staking.sol\":8461:8766  function setAPY(uint256 periodIndex, uint256 newAPY) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Staking.sol\":2398:2416  bool public paused */\n    tag_86:\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":882:928  uint256[3] public apyRates = [500, 1000, 1500] */\n    tag_91:\n      0x06\n      dup2\n      0x03\n      dup2\n      lt\n      tag_269\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_269:\n      add\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_272\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_272:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_274\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_274:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"Staking.sol\":529:565  IERC20 public immutable stakingToken */\n    tag_96:\n      immutable(\"0x05f14bbde4435ecbe5273cf423314527515a37e93321dc3a13f762431443ebf5\")\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":10370:10460  function estimateMintGas() external pure returns (uint256) {... */\n    tag_100:\n        /* \"Staking.sol\":10420:10427  uint256 */\n      0x00\n        /* \"Staking.sol\":10446:10453  200_000 */\n      0x030d40\n        /* \"Staking.sol\":10439:10453  return 200_000 */\n      swap1\n      pop\n        /* \"Staking.sol\":10370:10460  function estimateMintGas() external pure returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking.sol\":1330:1362  uint256 public rewardPoolBalance */\n    tag_103:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":1298:1324  uint256 public totalStaked */\n    tag_106:\n      sload(0x0b)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Staking.sol\":6683:7104  function toggleAutoStake(uint256 stakeIndex) external whenNotPaused {... */\n    tag_114:\n        /* \"Staking.sol\":2328:2334  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":2327:2334  !paused */\n      iszero\n        /* \"Staking.sol\":2319:2354  require(!paused, \"Contract paused\") */\n      tag_279\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_280\n      swap1\n      tag_199\n      jump\t// in\n    tag_280:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_279:\n        /* \"Staking.sol\":6761:6776  address account */\n      0x00\n        /* \"Staking.sol\":6779:6789  msg.sender */\n      caller\n        /* \"Staking.sol\":6761:6789  address account = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":6820:6826  stakes */\n      0x09\n        /* \"Staking.sol\":6820:6835  stakes[account] */\n      0x00\n        /* \"Staking.sol\":6827:6834  account */\n      dup3\n        /* \"Staking.sol\":6820:6835  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":6820:6842  stakes[account].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"Staking.sol\":6807:6817  stakeIndex */\n      dup3\n        /* \"Staking.sol\":6807:6842  stakeIndex < stakes[account].length */\n      lt\n        /* \"Staking.sol\":6799:6866  require(stakeIndex < stakes[account].length, \"Invalid stake index\") */\n      tag_282\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap1\n      tag_163\n      jump\t// in\n    tag_283:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_282:\n        /* \"Staking.sol\":6877:6899  StakeInfo storage info */\n      0x00\n        /* \"Staking.sol\":6902:6908  stakes */\n      0x09\n        /* \"Staking.sol\":6902:6917  stakes[account] */\n      0x00\n        /* \"Staking.sol\":6909:6916  account */\n      dup4\n        /* \"Staking.sol\":6902:6917  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":6918:6928  stakeIndex */\n      dup4\n        /* \"Staking.sol\":6902:6929  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_284\n      jumpi\n      tag_285\n      tag_166\n      jump\t// in\n    tag_285:\n    tag_284:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":6877:6929  StakeInfo storage info = stakes[account][stakeIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":6948:6952  info */\n      dup1\n        /* \"Staking.sol\":6948:6960  info.claimed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":6947:6960  !info.claimed */\n      iszero\n        /* \"Staking.sol\":6939:6980  require(!info.claimed, \"Already claimed\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_288\n      swap1\n      tag_170\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_287:\n        /* \"Staking.sol\":7011:7015  info */\n      dup1\n        /* \"Staking.sol\":7011:7027  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7010:7027  !info.autoStaking */\n      iszero\n        /* \"Staking.sol\":6991:6995  info */\n      dup2\n        /* \"Staking.sol\":6991:7007  info.autoStaking */\n      0x03\n      add\n      0x01\n        /* \"Staking.sol\":6991:7027  info.autoStaking = !info.autoStaking */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":7059:7066  account */\n      dup2\n        /* \"Staking.sol\":7042:7097  AutoStakeToggled(account, stakeIndex, info.autoStaking) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfa2d7b35e7cc82247c5ae7e8ae2dc078c2b144b76a6b1068887b3c8892c15da5\n        /* \"Staking.sol\":7068:7078  stakeIndex */\n      dup5\n        /* \"Staking.sol\":7080:7084  info */\n      dup4\n        /* \"Staking.sol\":7080:7096  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":7042:7097  AutoStakeToggled(account, stakeIndex, info.autoStaking) */\n      mload(0x40)\n      tag_289\n      swap3\n      swap2\n      swap1\n      tag_290\n      jump\t// in\n    tag_289:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":6751:7104  {... */\n      pop\n      pop\n        /* \"Staking.sol\":6683:7104  function toggleAutoStake(uint256 stakeIndex) external whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":5119:6207  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {... */\n    tag_117:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_292\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_191\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_292:\n        /* \"Staking.sol\":2228:2238  msg.sender */\n      caller\n        /* \"Staking.sol\":2215:2238  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":2215:2224  tx.origin */\n      origin\n        /* \"Staking.sol\":2215:2238  tx.origin == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Staking.sol\":2207:2260  require(tx.origin == msg.sender, \"Only EOA can call\") */\n      tag_294\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_295\n      swap1\n      tag_195\n      jump\t// in\n    tag_295:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_294:\n        /* \"Staking.sol\":2328:2334  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":2327:2334  !paused */\n      iszero\n        /* \"Staking.sol\":2319:2354  require(!paused, \"Contract paused\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_199\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"Staking.sol\":5214:5229  address account */\n      0x00\n        /* \"Staking.sol\":5232:5242  msg.sender */\n      caller\n        /* \"Staking.sol\":5214:5242  address account = msg.sender */\n      swap1\n      pop\n        /* \"Staking.sol\":5252:5274  StakeInfo storage info */\n      0x00\n        /* \"Staking.sol\":5277:5283  stakes */\n      0x09\n        /* \"Staking.sol\":5277:5292  stakes[account] */\n      0x00\n        /* \"Staking.sol\":5284:5291  account */\n      dup4\n        /* \"Staking.sol\":5277:5292  stakes[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":5293:5303  stakeIndex */\n      dup4\n        /* \"Staking.sol\":5277:5304  stakes[account][stakeIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_300\n      jumpi\n      tag_301\n      tag_166\n      jump\t// in\n    tag_301:\n    tag_300:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"Staking.sol\":5252:5304  StakeInfo storage info = stakes[account][stakeIndex] */\n      swap1\n      pop\n        /* \"Staking.sol\":5323:5327  info */\n      dup1\n        /* \"Staking.sol\":5323:5335  info.claimed */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":5322:5335  !info.claimed */\n      iszero\n        /* \"Staking.sol\":5314:5355  require(!info.claimed, \"Already claimed\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap1\n      tag_170\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_303:\n        /* \"Staking.sol\":5392:5396  info */\n      dup1\n        /* \"Staking.sol\":5392:5407  info.unlockTime */\n      0x02\n      add\n      sload\n        /* \"Staking.sol\":5373:5388  block.timestamp */\n      timestamp\n        /* \"Staking.sol\":5373:5407  block.timestamp >= info.unlockTime */\n      lt\n      iszero\n        /* \"Staking.sol\":5365:5424  require(block.timestamp >= info.unlockTime, \"Still locked\") */\n      tag_305\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_306\n      swap1\n      tag_213\n      jump\t// in\n    tag_306:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_305:\n        /* \"Staking.sol\":5435:5449  uint256 reward */\n      0x00\n        /* \"Staking.sol\":5452:5488  calculateReward(account, stakeIndex) */\n      tag_307\n        /* \"Staking.sol\":5468:5475  account */\n      dup4\n        /* \"Staking.sol\":5477:5487  stakeIndex */\n      dup6\n        /* \"Staking.sol\":5452:5467  calculateReward */\n      tag_56\n        /* \"Staking.sol\":5452:5488  calculateReward(account, stakeIndex) */\n      jump\t// in\n    tag_307:\n        /* \"Staking.sol\":5435:5488  uint256 reward = calculateReward(account, stakeIndex) */\n      swap1\n      pop\n        /* \"Staking.sol\":5527:5533  reward */\n      dup1\n        /* \"Staking.sol\":5506:5523  rewardPoolBalance */\n      sload(0x0c)\n        /* \"Staking.sol\":5506:5533  rewardPoolBalance >= reward */\n      lt\n      iszero\n        /* \"Staking.sol\":5498:5562  require(rewardPoolBalance >= reward, \"Insufficient reward pool\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_309\n      swap1\n      tag_217\n      jump\t// in\n    tag_309:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_308:\n        /* \"Staking.sol\":5588:5592  true */\n      0x01\n        /* \"Staking.sol\":5573:5577  info */\n      dup3\n        /* \"Staking.sol\":5573:5585  info.claimed */\n      0x03\n      add\n      0x00\n        /* \"Staking.sol\":5573:5592  info.claimed = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5607:5611  info */\n      dup2\n        /* \"Staking.sol\":5607:5623  info.autoStaking */\n      0x03\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":5607:5652  info.autoStaking && info.compoundedAmount > 0 */\n      dup1\n      iszero\n      tag_310\n      jumpi\n      pop\n        /* \"Staking.sol\":5651:5652  0 */\n      0x00\n        /* \"Staking.sol\":5627:5631  info */\n      dup3\n        /* \"Staking.sol\":5627:5648  info.compoundedAmount */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":5627:5652  info.compoundedAmount > 0 */\n      gt\n        /* \"Staking.sol\":5607:5652  info.autoStaking && info.compoundedAmount > 0 */\n    tag_310:\n        /* \"Staking.sol\":5603:6149  if (info.autoStaking && info.compoundedAmount > 0) {... */\n      iszero\n      tag_311\n      jumpi\n        /* \"Staking.sol\":5668:5691  uint256 totalToTransfer */\n      0x00\n        /* \"Staking.sol\":5718:5724  reward */\n      dup2\n        /* \"Staking.sol\":5694:5698  info */\n      dup4\n        /* \"Staking.sol\":5694:5715  info.compoundedAmount */\n      0x04\n      add\n      sload\n        /* \"Staking.sol\":5694:5724  info.compoundedAmount + reward */\n      tag_312\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_312:\n        /* \"Staking.sol\":5668:5724  uint256 totalToTransfer = info.compoundedAmount + reward */\n      swap1\n      pop\n        /* \"Staking.sol\":5738:5749  uint256 fee */\n      0x00\n        /* \"Staking.sol\":5792:5797  10000 */\n      0x2710\n        /* \"Staking.sol\":721:723  50 */\n      0x32\n        /* \"Staking.sol\":5753:5768  totalToTransfer */\n      dup4\n        /* \"Staking.sol\":5753:5788  totalToTransfer * AUTO_COMPOUND_FEE */\n      tag_313\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_313:\n        /* \"Staking.sol\":5752:5797  (totalToTransfer * AUTO_COMPOUND_FEE) / 10000 */\n      tag_314\n      swap2\n      swap1\n      tag_188\n      jump\t// in\n    tag_314:\n        /* \"Staking.sol\":5738:5797  uint256 fee = (totalToTransfer * AUTO_COMPOUND_FEE) / 10000 */\n      swap1\n      pop\n        /* \"Staking.sol\":5811:5829  uint256 userAmount */\n      0x00\n        /* \"Staking.sol\":5850:5853  fee */\n      dup2\n        /* \"Staking.sol\":5832:5847  totalToTransfer */\n      dup4\n        /* \"Staking.sol\":5832:5853  totalToTransfer - fee */\n      tag_315\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_315:\n        /* \"Staking.sol\":5811:5853  uint256 userAmount = totalToTransfer - fee */\n      swap1\n      pop\n        /* \"Staking.sol\":5905:5915  userAmount */\n      dup1\n        /* \"Staking.sol\":5868:5892  pendingRewardWithdrawals */\n      0x0a\n        /* \"Staking.sol\":5868:5901  pendingRewardWithdrawals[account] */\n      0x00\n        /* \"Staking.sol\":5893:5900  account */\n      dup9\n        /* \"Staking.sol\":5868:5901  pendingRewardWithdrawals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":5868:5915  pendingRewardWithdrawals[account] += userAmount */\n      dup3\n      dup3\n      sload\n      tag_316\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_316:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5970:5973  fee */\n      dup2\n        /* \"Staking.sol\":5929:5953  pendingRewardWithdrawals */\n      0x0a\n        /* \"Staking.sol\":5929:5966  pendingRewardWithdrawals[feeReceiver] */\n      0x00\n        /* \"Staking.sol\":5954:5965  feeReceiver */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":5929:5966  pendingRewardWithdrawals[feeReceiver] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":5929:5973  pendingRewardWithdrawals[feeReceiver] += fee */\n      dup3\n      dup3\n      sload\n      tag_317\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_317:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":6008:6023  totalToTransfer */\n      dup3\n        /* \"Staking.sol\":5987:6004  rewardPoolBalance */\n      0x0c\n      0x00\n        /* \"Staking.sol\":5987:6023  rewardPoolBalance -= totalToTransfer */\n      dup3\n      dup3\n      sload\n      tag_318\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_318:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5654:6034  {... */\n      pop\n      pop\n      pop\n        /* \"Staking.sol\":5603:6149  if (info.autoStaking && info.compoundedAmount > 0) {... */\n      jump(tag_319)\n    tag_311:\n        /* \"Staking.sol\":6091:6097  reward */\n      dup1\n        /* \"Staking.sol\":6054:6078  pendingRewardWithdrawals */\n      0x0a\n        /* \"Staking.sol\":6054:6087  pendingRewardWithdrawals[account] */\n      0x00\n        /* \"Staking.sol\":6079:6086  account */\n      dup6\n        /* \"Staking.sol\":6054:6087  pendingRewardWithdrawals[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Staking.sol\":6054:6097  pendingRewardWithdrawals[account] += reward */\n      dup3\n      dup3\n      sload\n      tag_320\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_320:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":6132:6138  reward */\n      dup1\n        /* \"Staking.sol\":6111:6128  rewardPoolBalance */\n      0x0c\n      0x00\n        /* \"Staking.sol\":6111:6138  rewardPoolBalance -= reward */\n      dup3\n      dup3\n      sload\n      tag_321\n      swap2\n      swap1\n      tag_174\n      jump\t// in\n    tag_321:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":5603:6149  if (info.autoStaking && info.compoundedAmount > 0) {... */\n    tag_319:\n        /* \"Staking.sol\":6172:6179  account */\n      dup3\n        /* \"Staking.sol\":6164:6200  Claimed(account, reward, stakeIndex) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a\n        /* \"Staking.sol\":6181:6187  reward */\n      dup3\n        /* \"Staking.sol\":6189:6199  stakeIndex */\n      dup7\n        /* \"Staking.sol\":6164:6200  Claimed(account, reward, stakeIndex) */\n      mload(0x40)\n      tag_322\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_322:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":5204:6207  {... */\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_323\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_225\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_323:\n        /* \"Staking.sol\":5119:6207  function claimReward(uint256 stakeIndex) external nonReentrant onlyEOA whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":1368:1394  address public feeReceiver */\n    tag_119:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":8115:8395  function addRewardPoolFunds(uint256 amount) external onlyOwner {... */\n    tag_123:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_325\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_325:\n        /* \"Staking.sol\":8205:8206  0 */\n      0x00\n        /* \"Staking.sol\":8196:8202  amount */\n      dup2\n        /* \"Staking.sol\":8196:8206  amount > 0 */\n      gt\n        /* \"Staking.sol\":8188:8222  require(amount > 0, \"Zero amount\") */\n      tag_327\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_328\n      swap1\n      tag_242\n      jump\t// in\n    tag_328:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_327:\n        /* \"Staking.sol\":8232:8295  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_329\n        /* \"Staking.sol\":8261:8271  msg.sender */\n      caller\n        /* \"Staking.sol\":8281:8285  this */\n      address\n        /* \"Staking.sol\":8288:8294  amount */\n      dup4\n        /* \"Staking.sol\":8232:8243  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":8232:8260  rewardToken.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_244\n      swap1\n        /* \"Staking.sol\":8232:8295  rewardToken.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_329:\n        /* \"Staking.sol\":8326:8332  amount */\n      dup1\n        /* \"Staking.sol\":8305:8322  rewardPoolBalance */\n      0x0c\n      0x00\n        /* \"Staking.sol\":8305:8332  rewardPoolBalance += amount */\n      dup3\n      dup3\n      sload\n      tag_330\n      swap2\n      swap1\n      tag_179\n      jump\t// in\n    tag_330:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":8369:8379  msg.sender */\n      caller\n        /* \"Staking.sol\":8348:8388  RewardPoolFundsAdded(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xd15dafc20a4e1ccff3e1b0a321ba0ee5c9b2aa1b9c7cae08fb5a324537536244\n        /* \"Staking.sol\":8381:8387  amount */\n      dup3\n        /* \"Staking.sol\":8348:8388  RewardPoolFundsAdded(msg.sender, amount) */\n      mload(0x40)\n      tag_331\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_331:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":8115:8395  function addRewardPoolFunds(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":9441:9553  function togglePause() external onlyOwner {... */\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_333\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_333:\n        /* \"Staking.sol\":9503:9509  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":9502:9509  !paused */\n      iszero\n        /* \"Staking.sol\":9493:9499  paused */\n      0x0d\n      0x14\n        /* \"Staking.sol\":9493:9509  paused = !paused */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":9539:9545  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":9524:9546  ContractPaused(paused) */\n      iszero\n      iszero\n      0x752d7e161ff5146f80e3820893176eb40532811e5e20400dfdde57455213706a\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":9441:9553  function togglePause() external onlyOwner {... */\n      jump\t// out\n        /* \"Staking.sol\":9143:9382  function updateFeeReceiver(address newFeeReceiver) external onlyOwner {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_336:\n        /* \"Staking.sol\":9257:9258  0 */\n      0x00\n        /* \"Staking.sol\":9231:9259  newFeeReceiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":9231:9245  newFeeReceiver */\n      dup2\n        /* \"Staking.sol\":9231:9259  newFeeReceiver != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":9223:9288  require(newFeeReceiver != address(0), \"Zero address not allowed\") */\n      tag_338\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_339\n      swap1\n      tag_340\n      jump\t// in\n    tag_339:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_338:\n        /* \"Staking.sol\":9312:9326  newFeeReceiver */\n      dup1\n        /* \"Staking.sol\":9298:9309  feeReceiver */\n      0x0d\n      0x00\n        /* \"Staking.sol\":9298:9326  feeReceiver = newFeeReceiver */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":9360:9374  newFeeReceiver */\n      dup1\n        /* \"Staking.sol\":9341:9375  FeeReceiverUpdated(newFeeReceiver) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":9143:9382  function updateFeeReceiver(address newFeeReceiver) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":6269:6614  function withdrawRewards() external nonReentrant whenNotPaused {... */\n    tag_130:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_342\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_191\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_342:\n        /* \"Staking.sol\":2328:2334  paused */\n      0x0d\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Staking.sol\":2327:2334  !paused */\n      iszero\n        /* \"Staking.sol\":2319:2354  require(!paused, \"Contract paused\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_345\n      swap1\n      tag_199\n      jump\t// in\n    tag_345:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_344:\n        /* \"Staking.sol\":6342:6356  uint256 amount */\n      0x00\n        /* \"Staking.sol\":6359:6383  pendingRewardWithdrawals */\n      0x0a\n        /* \"Staking.sol\":6359:6395  pendingRewardWithdrawals[msg.sender] */\n      0x00\n        /* \"Staking.sol\":6384:6394  msg.sender */\n      caller\n        /* \"Staking.sol\":6359:6395  pendingRewardWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Staking.sol\":6342:6395  uint256 amount = pendingRewardWithdrawals[msg.sender] */\n      swap1\n      pop\n        /* \"Staking.sol\":6422:6423  0 */\n      0x00\n        /* \"Staking.sol\":6413:6419  amount */\n      dup2\n        /* \"Staking.sol\":6413:6423  amount > 0 */\n      gt\n        /* \"Staking.sol\":6405:6450  require(amount > 0, \"No rewards to withdraw\") */\n      tag_347\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_348\n      swap1\n      tag_349\n      jump\t// in\n    tag_348:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_347:\n        /* \"Staking.sol\":6500:6501  0 */\n      0x00\n        /* \"Staking.sol\":6461:6485  pendingRewardWithdrawals */\n      0x0a\n        /* \"Staking.sol\":6461:6497  pendingRewardWithdrawals[msg.sender] */\n      0x00\n        /* \"Staking.sol\":6486:6496  msg.sender */\n      caller\n        /* \"Staking.sol\":6461:6497  pendingRewardWithdrawals[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Staking.sol\":6461:6501  pendingRewardWithdrawals[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":6511:6555  rewardToken.safeTransfer(msg.sender, amount) */\n      tag_350\n        /* \"Staking.sol\":6536:6546  msg.sender */\n      caller\n        /* \"Staking.sol\":6548:6554  amount */\n      dup3\n        /* \"Staking.sol\":6511:6522  rewardToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":6511:6535  rewardToken.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_351\n      swap1\n        /* \"Staking.sol\":6511:6555  rewardToken.safeTransfer(msg.sender, amount) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_350:\n        /* \"Staking.sol\":6588:6598  msg.sender */\n      caller\n        /* \"Staking.sol\":6571:6607  WithdrawnRewards(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xbd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e616\n        /* \"Staking.sol\":6600:6606  amount */\n      dup3\n        /* \"Staking.sol\":6571:6607  WithdrawnRewards(msg.sender, amount) */\n      mload(0x40)\n      tag_352\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_352:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":6332:6614  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_353\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_225\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_353:\n        /* \"Staking.sol\":6269:6614  function withdrawRewards() external nonReentrant whenNotPaused {... */\n      jump\t// out\n        /* \"Staking.sol\":9810:9915  function getRewardPoolBalance() external view returns (uint256) {... */\n    tag_132:\n        /* \"Staking.sol\":9865:9872  uint256 */\n      0x00\n        /* \"Staking.sol\":9891:9908  rewardPoolBalance */\n      sload(0x0c)\n        /* \"Staking.sol\":9884:9908  return rewardPoolBalance */\n      swap1\n      pop\n        /* \"Staking.sol\":9810:9915  function getRewardPoolBalance() external view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Staking.sol\":620:671  uint256 public constant SECONDS_PER_YEAR = 365 days */\n    tag_135:\n        /* \"Staking.sol\":663:671  365 days */\n      0x01e13380\n        /* \"Staking.sol\":620:671  uint256 public constant SECONDS_PER_YEAR = 365 days */\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":9977:10070  function getFeeReceiver() external view returns (address) {... */\n    tag_138:\n        /* \"Staking.sol\":10026:10033  address */\n      0x00\n        /* \"Staking.sol\":10052:10063  feeReceiver */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":10045:10063  return feeReceiver */\n      swap1\n      pop\n        /* \"Staking.sol\":9977:10070  function getFeeReceiver() external view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_142:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_357\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_359\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_360\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_360:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_359:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_361\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_275\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_361:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":10134:10315  function getLockPeriod(uint256 index) external view returns (uint256) {... */\n    tag_145:\n        /* \"Staking.sol\":10195:10202  uint256 */\n      0x00\n        /* \"Staking.sol\":10230:10248  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":10222:10227  index */\n      dup3\n        /* \"Staking.sol\":10222:10248  index < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":10214:10273  require(index < lockPeriods.length, \"Invalid period index\") */\n      tag_363\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_364\n      swap1\n      tag_239\n      jump\t// in\n    tag_364:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_363:\n        /* \"Staking.sol\":10290:10301  lockPeriods */\n      0x03\n        /* \"Staking.sol\":10302:10307  index */\n      dup3\n        /* \"Staking.sol\":10290:10308  lockPeriods[index] */\n      0x03\n      dup2\n      lt\n      tag_365\n      jumpi\n      tag_366\n      tag_166\n      jump\t// in\n    tag_366:\n    tag_365:\n      add\n      sload\n        /* \"Staking.sol\":10283:10308  return lockPeriods[index] */\n      swap1\n      pop\n        /* \"Staking.sol\":10134:10315  function getLockPeriod(uint256 index) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Staking.sol\":571:596  IERC20 public rewardToken */\n    tag_148:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"Staking.sol\":8831:9078  function updateRewardToken(address newRewardToken) external onlyOwner {... */\n    tag_152:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_369\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_258\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_369:\n        /* \"Staking.sol\":8945:8946  0 */\n      0x00\n        /* \"Staking.sol\":8919:8947  newRewardToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Staking.sol\":8919:8933  newRewardToken */\n      dup2\n        /* \"Staking.sol\":8919:8947  newRewardToken != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Staking.sol\":8911:8976  require(newRewardToken != address(0), \"Zero address not allowed\") */\n      tag_371\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap1\n      tag_340\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_371:\n        /* \"Staking.sol\":9007:9021  newRewardToken */\n      dup1\n        /* \"Staking.sol\":8986:8997  rewardToken */\n      0x02\n      0x00\n        /* \"Staking.sol\":8986:9022  rewardToken = IERC20(newRewardToken) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Staking.sol\":9056:9070  newRewardToken */\n      dup1\n        /* \"Staking.sol\":9037:9071  RewardTokenUpdated(newRewardToken) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"Staking.sol\":8831:9078  function updateRewardToken(address newRewardToken) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"Staking.sol\":4769:5048  function getPeriodIndex(uint256 duration) internal view returns (uint256) {... */\n    tag_177:\n        /* \"Staking.sol\":4834:4841  uint256 */\n      0x00\n        /* \"Staking.sol\":4858:4867  uint256 i */\n      0x00\n        /* \"Staking.sol\":4870:4871  0 */\n      0x00\n        /* \"Staking.sol\":4858:4871  uint256 i = 0 */\n      swap1\n      pop\n        /* \"Staking.sol\":4853:4999  for (uint256 i = 0; i < lockPeriods.length; i++) {... */\n    tag_374:\n        /* \"Staking.sol\":4877:4895  lockPeriods.length */\n      0x03\n        /* \"Staking.sol\":4873:4874  i */\n      dup2\n        /* \"Staking.sol\":4873:4895  i < lockPeriods.length */\n      lt\n        /* \"Staking.sol\":4853:4999  for (uint256 i = 0; i < lockPeriods.length; i++) {... */\n      iszero\n      tag_375\n      jumpi\n        /* \"Staking.sol\":4932:4943  lockPeriods */\n      0x03\n        /* \"Staking.sol\":4944:4945  i */\n      dup2\n        /* \"Staking.sol\":4932:4946  lockPeriods[i] */\n      0x03\n      dup2\n      lt\n      tag_377\n      jumpi\n      tag_378\n      tag_166\n      jump\t// in\n    tag_378:\n    tag_377:\n      add\n      sload\n        /* \"Staking.sol\":4920:4928  duration */\n      dup4\n        /* \"Staking.sol\":4920:4946  duration == lockPeriods[i] */\n      sub\n        /* \"Staking.sol\":4916:4989  if (duration == lockPeriods[i]) {... */\n      tag_380\n      jumpi\n        /* \"Staking.sol\":4973:4974  i */\n      dup1\n        /* \"Staking.sol\":4966:4974  return i */\n      swap2\n      pop\n      pop\n      jump(tag_373)\n        /* \"Staking.sol\":4916:4989  if (duration == lockPeriods[i]) {... */\n    tag_380:\n        /* \"Staking.sol\":4897:4900  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"Staking.sol\":4853:4999  for (uint256 i = 0; i < lockPeriods.length; i++) {... */\n      jump(tag_374)\n    tag_375:\n      pop\n        /* \"Staking.sol\":5008:5041  revert(\"Unsupported lock period\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_381\n      swap1\n      tag_382\n      jump\t// in\n    tag_381:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"Staking.sol\":4769:5048  function getPeriodIndex(uint256 duration) internal view returns (uint256) {... */\n    tag_373:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_191:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x01)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_385\n      swap1\n      tag_386\n      jump\t// in\n    tag_385:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_384:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_225:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_389\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1738:1743  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1765  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1760:1778  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1781:1785  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1787:1789  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1791:1796  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1745:1798  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_390\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_391\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1737  _callOptionalReturn */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1718:1799  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1618:1806  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_258:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_394\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_395\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_394:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_396\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_109\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_396:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_398\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_395\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_398:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_399\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_399:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_275:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_402\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1321:1326  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1348  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1343:1357  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1360:1362  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1364:1369  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1328:1371  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_403\n      swap3\n      swap2\n      swap1\n      tag_404\n      jump\t// in\n    tag_403:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1320  _callOptionalReturn */\n      tag_392\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1301:1372  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1219:1379  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_392:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8450:8468  uint256 returnSize */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8478:8497  uint256 returnValue */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8616:8620  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8613:8614  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8606:8610  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8600:8611  mload(data) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8593:8597  0x20 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8587:8591  data */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8583:8598  add(data, 0x20) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8580:8581  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8573:8578  token */\n      dup9\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8566:8571  gas() */\n      gas\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8561:8621  call(gas(), token, 0, add(data, 0x20), mload(data), 0, 0x20) */\n      call\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8673:8680  success */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n      tag_406\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8717:8721  0x40 */\n      0x40\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8711:8722  mload(0x40) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8762:8778  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8759:8760  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8754:8757  ptr */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8739:8779  returndatacopy(ptr, 0, returndatasize()) */\n      returndatacopy\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8808:8824  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8803:8806  ptr */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8796:8825  revert(ptr, returndatasize()) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8663:8839  if iszero(success) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8866:8882  returndatasize() */\n      returndatasize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8852:8882  returnSize := returndatasize() */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8916:8917  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8910:8918  mload(0) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8895:8918  returnValue := mload(0) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8532:8928  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8956:8957  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8952  returnSize */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:8957  returnSize == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9009:9010  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9005  returnValue */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8994:9010  returnValue != 1 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n      jump(tag_408)\n    tag_407:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8990:8991  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8968:8973  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8986  address(token).code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8960:8991  address(token).code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8942:9010  returnSize == 0 ? address(token).code.length == 0 : returnValue != 1 */\n    tag_408:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n      iszero\n      tag_409\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9066:9071  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":9033:9073  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_410\n      swap2\n      swap1\n      tag_111\n      jump\t// in\n    tag_410:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8938:9084  if (returnSize == 0 ? address(token).code.length == 0 : returnValue != 1) {... */\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8440:9090  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":8370:9090  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_413:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_415:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_416:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_481\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_415\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_417:\n        /* \"#utility.yul\":641:665   */\n      tag_483\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_416\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_484\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      0x00\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_484:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_418:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_486\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_417\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_44:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_489\n      tag_413\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":917:1036   */\n    tag_488:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_490\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_418\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1253   */\n    tag_419:\n        /* \"#utility.yul\":1213:1220   */\n      0x00\n        /* \"#utility.yul\":1242:1247   */\n      dup2\n        /* \"#utility.yul\":1231:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_420:\n        /* \"#utility.yul\":1346:1370   */\n      tag_493\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_419\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_47:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_495\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_420\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:1751   */\n    tag_421:\n        /* \"#utility.yul\":1704:1710   */\n      0x00\n        /* \"#utility.yul\":1738:1743   */\n      dup2\n        /* \"#utility.yul\":1732:1744   */\n      mload\n        /* \"#utility.yul\":1722:1744   */\n      swap1\n      pop\n        /* \"#utility.yul\":1611:1751   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1757:1967   */\n    tag_422:\n        /* \"#utility.yul\":1882:1893   */\n      0x00\n        /* \"#utility.yul\":1916:1922   */\n      dup3\n        /* \"#utility.yul\":1911:1914   */\n      dup3\n        /* \"#utility.yul\":1904:1923   */\n      mstore\n        /* \"#utility.yul\":1956:1960   */\n      0x20\n        /* \"#utility.yul\":1951:1954   */\n      dup3\n        /* \"#utility.yul\":1947:1961   */\n      add\n        /* \"#utility.yul\":1932:1961   */\n      swap1\n      pop\n        /* \"#utility.yul\":1757:1967   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1973:2131   */\n    tag_423:\n        /* \"#utility.yul\":2066:2070   */\n      0x00\n        /* \"#utility.yul\":2089:2092   */\n      dup2\n        /* \"#utility.yul\":2081:2092   */\n      swap1\n      pop\n        /* \"#utility.yul\":2119:2123   */\n      0x20\n        /* \"#utility.yul\":2114:2117   */\n      dup3\n        /* \"#utility.yul\":2110:2124   */\n      add\n        /* \"#utility.yul\":2102:2124   */\n      swap1\n      pop\n        /* \"#utility.yul\":1973:2131   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2137:2245   */\n    tag_424:\n        /* \"#utility.yul\":2214:2238   */\n      tag_500\n        /* \"#utility.yul\":2232:2237   */\n      dup2\n        /* \"#utility.yul\":2214:2238   */\n      tag_419\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":2209:2212   */\n      dup3\n        /* \"#utility.yul\":2202:2239   */\n      mstore\n        /* \"#utility.yul\":2137:2245   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2251:2341   */\n    tag_425:\n        /* \"#utility.yul\":2285:2292   */\n      0x00\n        /* \"#utility.yul\":2328:2333   */\n      dup2\n        /* \"#utility.yul\":2321:2334   */\n      iszero\n        /* \"#utility.yul\":2314:2335   */\n      iszero\n        /* \"#utility.yul\":2303:2335   */\n      swap1\n      pop\n        /* \"#utility.yul\":2251:2341   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2347:2446   */\n    tag_426:\n        /* \"#utility.yul\":2418:2439   */\n      tag_503\n        /* \"#utility.yul\":2433:2438   */\n      dup2\n        /* \"#utility.yul\":2418:2439   */\n      tag_425\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":2413:2416   */\n      dup3\n        /* \"#utility.yul\":2406:2440   */\n      mstore\n        /* \"#utility.yul\":2347:2446   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2520:3738   */\n    tag_427:\n        /* \"#utility.yul\":2659:2663   */\n      0xc0\n        /* \"#utility.yul\":2654:2657   */\n      dup3\n        /* \"#utility.yul\":2650:2664   */\n      add\n        /* \"#utility.yul\":2748:2752   */\n      0x00\n        /* \"#utility.yul\":2741:2746   */\n      dup3\n        /* \"#utility.yul\":2737:2753   */\n      add\n        /* \"#utility.yul\":2731:2754   */\n      mload\n        /* \"#utility.yul\":2767:2830   */\n      tag_505\n        /* \"#utility.yul\":2824:2828   */\n      0x00\n        /* \"#utility.yul\":2819:2822   */\n      dup6\n        /* \"#utility.yul\":2815:2829   */\n      add\n        /* \"#utility.yul\":2801:2813   */\n      dup3\n        /* \"#utility.yul\":2767:2830   */\n      tag_424\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":2674:2840   */\n      pop\n        /* \"#utility.yul\":2927:2931   */\n      0x20\n        /* \"#utility.yul\":2920:2925   */\n      dup3\n        /* \"#utility.yul\":2916:2932   */\n      add\n        /* \"#utility.yul\":2910:2933   */\n      mload\n        /* \"#utility.yul\":2946:3009   */\n      tag_506\n        /* \"#utility.yul\":3003:3007   */\n      0x20\n        /* \"#utility.yul\":2998:3001   */\n      dup6\n        /* \"#utility.yul\":2994:3008   */\n      add\n        /* \"#utility.yul\":2980:2992   */\n      dup3\n        /* \"#utility.yul\":2946:3009   */\n      tag_424\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":2850:3019   */\n      pop\n        /* \"#utility.yul\":3107:3111   */\n      0x40\n        /* \"#utility.yul\":3100:3105   */\n      dup3\n        /* \"#utility.yul\":3096:3112   */\n      add\n        /* \"#utility.yul\":3090:3113   */\n      mload\n        /* \"#utility.yul\":3126:3189   */\n      tag_507\n        /* \"#utility.yul\":3183:3187   */\n      0x40\n        /* \"#utility.yul\":3178:3181   */\n      dup6\n        /* \"#utility.yul\":3174:3188   */\n      add\n        /* \"#utility.yul\":3160:3172   */\n      dup3\n        /* \"#utility.yul\":3126:3189   */\n      tag_424\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":3029:3199   */\n      pop\n        /* \"#utility.yul\":3284:3288   */\n      0x60\n        /* \"#utility.yul\":3277:3282   */\n      dup3\n        /* \"#utility.yul\":3273:3289   */\n      add\n        /* \"#utility.yul\":3267:3290   */\n      mload\n        /* \"#utility.yul\":3303:3360   */\n      tag_508\n        /* \"#utility.yul\":3354:3358   */\n      0x60\n        /* \"#utility.yul\":3349:3352   */\n      dup6\n        /* \"#utility.yul\":3345:3359   */\n      add\n        /* \"#utility.yul\":3331:3343   */\n      dup3\n        /* \"#utility.yul\":3303:3360   */\n      tag_426\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":3209:3370   */\n      pop\n        /* \"#utility.yul\":3459:3463   */\n      0x80\n        /* \"#utility.yul\":3452:3457   */\n      dup3\n        /* \"#utility.yul\":3448:3464   */\n      add\n        /* \"#utility.yul\":3442:3465   */\n      mload\n        /* \"#utility.yul\":3478:3535   */\n      tag_509\n        /* \"#utility.yul\":3529:3533   */\n      0x80\n        /* \"#utility.yul\":3524:3527   */\n      dup6\n        /* \"#utility.yul\":3520:3534   */\n      add\n        /* \"#utility.yul\":3506:3518   */\n      dup3\n        /* \"#utility.yul\":3478:3535   */\n      tag_426\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":3380:3545   */\n      pop\n        /* \"#utility.yul\":3639:3643   */\n      0xa0\n        /* \"#utility.yul\":3632:3637   */\n      dup3\n        /* \"#utility.yul\":3628:3644   */\n      add\n        /* \"#utility.yul\":3622:3645   */\n      mload\n        /* \"#utility.yul\":3658:3721   */\n      tag_510\n        /* \"#utility.yul\":3715:3719   */\n      0xa0\n        /* \"#utility.yul\":3710:3713   */\n      dup6\n        /* \"#utility.yul\":3706:3720   */\n      add\n        /* \"#utility.yul\":3692:3704   */\n      dup3\n        /* \"#utility.yul\":3658:3721   */\n      tag_424\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":3555:3731   */\n      pop\n        /* \"#utility.yul\":2628:3738   */\n      pop\n        /* \"#utility.yul\":2520:3738   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3744:4027   */\n    tag_428:\n        /* \"#utility.yul\":3865:3875   */\n      0x00\n        /* \"#utility.yul\":3886:3984   */\n      tag_512\n        /* \"#utility.yul\":3980:3983   */\n      dup4\n        /* \"#utility.yul\":3972:3978   */\n      dup4\n        /* \"#utility.yul\":3886:3984   */\n      tag_427\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":4016:4020   */\n      0xc0\n        /* \"#utility.yul\":4011:4014   */\n      dup4\n        /* \"#utility.yul\":4007:4021   */\n      add\n        /* \"#utility.yul\":3993:4021   */\n      swap1\n      pop\n        /* \"#utility.yul\":3744:4027   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4033:4172   */\n    tag_429:\n        /* \"#utility.yul\":4129:4133   */\n      0x00\n        /* \"#utility.yul\":4161:4165   */\n      0x20\n        /* \"#utility.yul\":4156:4159   */\n      dup3\n        /* \"#utility.yul\":4152:4166   */\n      add\n        /* \"#utility.yul\":4144:4166   */\n      swap1\n      pop\n        /* \"#utility.yul\":4033:4172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:5190   */\n    tag_430:\n        /* \"#utility.yul\":4421:4424   */\n      0x00\n        /* \"#utility.yul\":4450:4530   */\n      tag_515\n        /* \"#utility.yul\":4524:4529   */\n      dup3\n        /* \"#utility.yul\":4450:4530   */\n      tag_421\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":4546:4658   */\n      tag_516\n        /* \"#utility.yul\":4651:4657   */\n      dup2\n        /* \"#utility.yul\":4646:4649   */\n      dup6\n        /* \"#utility.yul\":4546:4658   */\n      tag_422\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":4539:4658   */\n      swap4\n      pop\n        /* \"#utility.yul\":4682:4764   */\n      tag_517\n        /* \"#utility.yul\":4758:4763   */\n      dup4\n        /* \"#utility.yul\":4682:4764   */\n      tag_423\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":4787:4794   */\n      dup1\n        /* \"#utility.yul\":4818:4819   */\n      0x00\n        /* \"#utility.yul\":4803:5165   */\n    tag_518:\n        /* \"#utility.yul\":4828:4834   */\n      dup4\n        /* \"#utility.yul\":4825:4826   */\n      dup2\n        /* \"#utility.yul\":4822:4835   */\n      lt\n        /* \"#utility.yul\":4803:5165   */\n      iszero\n      tag_520\n      jumpi\n        /* \"#utility.yul\":4904:4910   */\n      dup2\n        /* \"#utility.yul\":4898:4911   */\n      mload\n        /* \"#utility.yul\":4931:5046   */\n      tag_521\n        /* \"#utility.yul\":5042:5045   */\n      dup9\n        /* \"#utility.yul\":5027:5040   */\n      dup3\n        /* \"#utility.yul\":4931:5046   */\n      tag_428\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":4924:5046   */\n      swap8\n      pop\n        /* \"#utility.yul\":5069:5155   */\n      tag_522\n        /* \"#utility.yul\":5148:5154   */\n      dup4\n        /* \"#utility.yul\":5069:5155   */\n      tag_429\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":5059:5155   */\n      swap3\n      pop\n        /* \"#utility.yul\":4863:5165   */\n      pop\n        /* \"#utility.yul\":4850:4851   */\n      0x01\n        /* \"#utility.yul\":4847:4848   */\n      dup2\n        /* \"#utility.yul\":4843:4852   */\n      add\n        /* \"#utility.yul\":4838:4852   */\n      swap1\n      pop\n        /* \"#utility.yul\":4803:5165   */\n      jump(tag_518)\n    tag_520:\n        /* \"#utility.yul\":4807:4821   */\n      pop\n        /* \"#utility.yul\":5181:5184   */\n      dup6\n        /* \"#utility.yul\":5174:5184   */\n      swap4\n      pop\n        /* \"#utility.yul\":4426:5190   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":4250:5190   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5196:5673   */\n    tag_52:\n        /* \"#utility.yul\":5391:5395   */\n      0x00\n        /* \"#utility.yul\":5429:5431   */\n      0x20\n        /* \"#utility.yul\":5418:5427   */\n      dup3\n        /* \"#utility.yul\":5414:5432   */\n      add\n        /* \"#utility.yul\":5406:5432   */\n      swap1\n      pop\n        /* \"#utility.yul\":5478:5487   */\n      dup2\n        /* \"#utility.yul\":5472:5476   */\n      dup2\n        /* \"#utility.yul\":5468:5488   */\n      sub\n        /* \"#utility.yul\":5464:5465   */\n      0x00\n        /* \"#utility.yul\":5453:5462   */\n      dup4\n        /* \"#utility.yul\":5449:5466   */\n      add\n        /* \"#utility.yul\":5442:5489   */\n      mstore\n        /* \"#utility.yul\":5506:5666   */\n      tag_524\n        /* \"#utility.yul\":5661:5665   */\n      dup2\n        /* \"#utility.yul\":5652:5658   */\n      dup5\n        /* \"#utility.yul\":5506:5666   */\n      tag_430\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":5498:5666   */\n      swap1\n      pop\n        /* \"#utility.yul\":5196:5673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5679:5801   */\n    tag_431:\n        /* \"#utility.yul\":5752:5776   */\n      tag_526\n        /* \"#utility.yul\":5770:5775   */\n      dup2\n        /* \"#utility.yul\":5752:5776   */\n      tag_419\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":5745:5750   */\n      dup2\n        /* \"#utility.yul\":5742:5777   */\n      eq\n        /* \"#utility.yul\":5732:5795   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":5791:5792   */\n      0x00\n        /* \"#utility.yul\":5788:5789   */\n      0x00\n        /* \"#utility.yul\":5781:5793   */\n      revert\n        /* \"#utility.yul\":5732:5795   */\n    tag_527:\n        /* \"#utility.yul\":5679:5801   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5807:5946   */\n    tag_432:\n        /* \"#utility.yul\":5853:5858   */\n      0x00\n        /* \"#utility.yul\":5891:5897   */\n      dup2\n        /* \"#utility.yul\":5878:5898   */\n      calldataload\n        /* \"#utility.yul\":5869:5898   */\n      swap1\n      pop\n        /* \"#utility.yul\":5907:5940   */\n      tag_529\n        /* \"#utility.yul\":5934:5939   */\n      dup2\n        /* \"#utility.yul\":5907:5940   */\n      tag_431\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":5807:5946   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5952:6426   */\n    tag_55:\n        /* \"#utility.yul\":6020:6026   */\n      0x00\n        /* \"#utility.yul\":6028:6034   */\n      0x00\n        /* \"#utility.yul\":6077:6079   */\n      0x40\n        /* \"#utility.yul\":6065:6074   */\n      dup4\n        /* \"#utility.yul\":6056:6063   */\n      dup6\n        /* \"#utility.yul\":6052:6075   */\n      sub\n        /* \"#utility.yul\":6048:6080   */\n      slt\n        /* \"#utility.yul\":6045:6164   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":6083:6162   */\n      tag_532\n      tag_413\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":6045:6164   */\n    tag_531:\n        /* \"#utility.yul\":6203:6204   */\n      0x00\n        /* \"#utility.yul\":6228:6281   */\n      tag_533\n        /* \"#utility.yul\":6273:6280   */\n      dup6\n        /* \"#utility.yul\":6264:6270   */\n      dup3\n        /* \"#utility.yul\":6253:6262   */\n      dup7\n        /* \"#utility.yul\":6249:6271   */\n      add\n        /* \"#utility.yul\":6228:6281   */\n      tag_418\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":6218:6281   */\n      swap3\n      pop\n        /* \"#utility.yul\":6174:6291   */\n      pop\n        /* \"#utility.yul\":6330:6332   */\n      0x20\n        /* \"#utility.yul\":6356:6409   */\n      tag_534\n        /* \"#utility.yul\":6401:6408   */\n      dup6\n        /* \"#utility.yul\":6392:6398   */\n      dup3\n        /* \"#utility.yul\":6381:6390   */\n      dup7\n        /* \"#utility.yul\":6377:6399   */\n      add\n        /* \"#utility.yul\":6356:6409   */\n      tag_432\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":6346:6409   */\n      swap2\n      pop\n        /* \"#utility.yul\":6301:6419   */\n      pop\n        /* \"#utility.yul\":5952:6426   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6432:6761   */\n    tag_66:\n        /* \"#utility.yul\":6491:6497   */\n      0x00\n        /* \"#utility.yul\":6540:6542   */\n      0x20\n        /* \"#utility.yul\":6528:6537   */\n      dup3\n        /* \"#utility.yul\":6519:6526   */\n      dup5\n        /* \"#utility.yul\":6515:6538   */\n      sub\n        /* \"#utility.yul\":6511:6543   */\n      slt\n        /* \"#utility.yul\":6508:6627   */\n      iszero\n      tag_536\n      jumpi\n        /* \"#utility.yul\":6546:6625   */\n      tag_537\n      tag_413\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":6508:6627   */\n    tag_536:\n        /* \"#utility.yul\":6666:6667   */\n      0x00\n        /* \"#utility.yul\":6691:6744   */\n      tag_538\n        /* \"#utility.yul\":6736:6743   */\n      dup5\n        /* \"#utility.yul\":6727:6733   */\n      dup3\n        /* \"#utility.yul\":6716:6725   */\n      dup6\n        /* \"#utility.yul\":6712:6734   */\n      add\n        /* \"#utility.yul\":6691:6744   */\n      tag_432\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":6681:6744   */\n      swap2\n      pop\n        /* \"#utility.yul\":6637:6754   */\n      pop\n        /* \"#utility.yul\":6432:6761   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6767:6883   */\n    tag_433:\n        /* \"#utility.yul\":6837:6858   */\n      tag_540\n        /* \"#utility.yul\":6852:6857   */\n      dup2\n        /* \"#utility.yul\":6837:6858   */\n      tag_425\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":6830:6835   */\n      dup2\n        /* \"#utility.yul\":6827:6859   */\n      eq\n        /* \"#utility.yul\":6817:6877   */\n      tag_541\n      jumpi\n        /* \"#utility.yul\":6873:6874   */\n      0x00\n        /* \"#utility.yul\":6870:6871   */\n      0x00\n        /* \"#utility.yul\":6863:6875   */\n      revert\n        /* \"#utility.yul\":6817:6877   */\n    tag_541:\n        /* \"#utility.yul\":6767:6883   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6889:7022   */\n    tag_434:\n        /* \"#utility.yul\":6932:6937   */\n      0x00\n        /* \"#utility.yul\":6970:6976   */\n      dup2\n        /* \"#utility.yul\":6957:6977   */\n      calldataload\n        /* \"#utility.yul\":6948:6977   */\n      swap1\n      pop\n        /* \"#utility.yul\":6986:7016   */\n      tag_543\n        /* \"#utility.yul\":7010:7015   */\n      dup2\n        /* \"#utility.yul\":6986:7016   */\n      tag_433\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":6889:7022   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7028:7641   */\n    tag_74:\n        /* \"#utility.yul\":7102:7108   */\n      0x00\n        /* \"#utility.yul\":7110:7116   */\n      0x00\n        /* \"#utility.yul\":7118:7124   */\n      0x00\n        /* \"#utility.yul\":7167:7169   */\n      0x60\n        /* \"#utility.yul\":7155:7164   */\n      dup5\n        /* \"#utility.yul\":7146:7153   */\n      dup7\n        /* \"#utility.yul\":7142:7165   */\n      sub\n        /* \"#utility.yul\":7138:7170   */\n      slt\n        /* \"#utility.yul\":7135:7254   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":7173:7252   */\n      tag_546\n      tag_413\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":7135:7254   */\n    tag_545:\n        /* \"#utility.yul\":7293:7294   */\n      0x00\n        /* \"#utility.yul\":7318:7371   */\n      tag_547\n        /* \"#utility.yul\":7363:7370   */\n      dup7\n        /* \"#utility.yul\":7354:7360   */\n      dup3\n        /* \"#utility.yul\":7343:7352   */\n      dup8\n        /* \"#utility.yul\":7339:7361   */\n      add\n        /* \"#utility.yul\":7318:7371   */\n      tag_432\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":7308:7371   */\n      swap4\n      pop\n        /* \"#utility.yul\":7264:7381   */\n      pop\n        /* \"#utility.yul\":7420:7422   */\n      0x20\n        /* \"#utility.yul\":7446:7499   */\n      tag_548\n        /* \"#utility.yul\":7491:7498   */\n      dup7\n        /* \"#utility.yul\":7482:7488   */\n      dup3\n        /* \"#utility.yul\":7471:7480   */\n      dup8\n        /* \"#utility.yul\":7467:7489   */\n      add\n        /* \"#utility.yul\":7446:7499   */\n      tag_432\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":7436:7499   */\n      swap3\n      pop\n        /* \"#utility.yul\":7391:7509   */\n      pop\n        /* \"#utility.yul\":7548:7550   */\n      0x40\n        /* \"#utility.yul\":7574:7624   */\n      tag_549\n        /* \"#utility.yul\":7616:7623   */\n      dup7\n        /* \"#utility.yul\":7607:7613   */\n      dup3\n        /* \"#utility.yul\":7596:7605   */\n      dup8\n        /* \"#utility.yul\":7592:7614   */\n      add\n        /* \"#utility.yul\":7574:7624   */\n      tag_434\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":7564:7624   */\n      swap2\n      pop\n        /* \"#utility.yul\":7519:7634   */\n      pop\n        /* \"#utility.yul\":7028:7641   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7647:7756   */\n    tag_435:\n        /* \"#utility.yul\":7728:7749   */\n      tag_551\n        /* \"#utility.yul\":7743:7748   */\n      dup2\n        /* \"#utility.yul\":7728:7749   */\n      tag_425\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":7723:7726   */\n      dup3\n        /* \"#utility.yul\":7716:7750   */\n      mstore\n        /* \"#utility.yul\":7647:7756   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7762:8513   */\n    tag_80:\n        /* \"#utility.yul\":7983:7987   */\n      0x00\n        /* \"#utility.yul\":8021:8024   */\n      0xc0\n        /* \"#utility.yul\":8010:8019   */\n      dup3\n        /* \"#utility.yul\":8006:8025   */\n      add\n        /* \"#utility.yul\":7998:8025   */\n      swap1\n      pop\n        /* \"#utility.yul\":8035:8106   */\n      tag_553\n        /* \"#utility.yul\":8103:8104   */\n      0x00\n        /* \"#utility.yul\":8092:8101   */\n      dup4\n        /* \"#utility.yul\":8088:8105   */\n      add\n        /* \"#utility.yul\":8079:8085   */\n      dup10\n        /* \"#utility.yul\":8035:8106   */\n      tag_420\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":8116:8188   */\n      tag_554\n        /* \"#utility.yul\":8184:8186   */\n      0x20\n        /* \"#utility.yul\":8173:8182   */\n      dup4\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8160:8166   */\n      dup9\n        /* \"#utility.yul\":8116:8188   */\n      tag_420\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":8198:8270   */\n      tag_555\n        /* \"#utility.yul\":8266:8268   */\n      0x40\n        /* \"#utility.yul\":8255:8264   */\n      dup4\n        /* \"#utility.yul\":8251:8269   */\n      add\n        /* \"#utility.yul\":8242:8248   */\n      dup8\n        /* \"#utility.yul\":8198:8270   */\n      tag_420\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":8280:8346   */\n      tag_556\n        /* \"#utility.yul\":8342:8344   */\n      0x60\n        /* \"#utility.yul\":8331:8340   */\n      dup4\n        /* \"#utility.yul\":8327:8345   */\n      add\n        /* \"#utility.yul\":8318:8324   */\n      dup7\n        /* \"#utility.yul\":8280:8346   */\n      tag_435\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":8356:8423   */\n      tag_557\n        /* \"#utility.yul\":8418:8421   */\n      0x80\n        /* \"#utility.yul\":8407:8416   */\n      dup4\n        /* \"#utility.yul\":8403:8422   */\n      add\n        /* \"#utility.yul\":8394:8400   */\n      dup6\n        /* \"#utility.yul\":8356:8423   */\n      tag_435\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":8433:8506   */\n      tag_558\n        /* \"#utility.yul\":8501:8504   */\n      0xa0\n        /* \"#utility.yul\":8490:8499   */\n      dup4\n        /* \"#utility.yul\":8486:8505   */\n      add\n        /* \"#utility.yul\":8477:8483   */\n      dup5\n        /* \"#utility.yul\":8433:8506   */\n      tag_420\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":7762:8513   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8519:8993   */\n    tag_83:\n        /* \"#utility.yul\":8587:8593   */\n      0x00\n        /* \"#utility.yul\":8595:8601   */\n      0x00\n        /* \"#utility.yul\":8644:8646   */\n      0x40\n        /* \"#utility.yul\":8632:8641   */\n      dup4\n        /* \"#utility.yul\":8623:8630   */\n      dup6\n        /* \"#utility.yul\":8619:8642   */\n      sub\n        /* \"#utility.yul\":8615:8647   */\n      slt\n        /* \"#utility.yul\":8612:8731   */\n      iszero\n      tag_560\n      jumpi\n        /* \"#utility.yul\":8650:8729   */\n      tag_561\n      tag_413\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":8612:8731   */\n    tag_560:\n        /* \"#utility.yul\":8770:8771   */\n      0x00\n        /* \"#utility.yul\":8795:8848   */\n      tag_562\n        /* \"#utility.yul\":8840:8847   */\n      dup6\n        /* \"#utility.yul\":8831:8837   */\n      dup3\n        /* \"#utility.yul\":8820:8829   */\n      dup7\n        /* \"#utility.yul\":8816:8838   */\n      add\n        /* \"#utility.yul\":8795:8848   */\n      tag_432\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":8785:8848   */\n      swap3\n      pop\n        /* \"#utility.yul\":8741:8858   */\n      pop\n        /* \"#utility.yul\":8897:8899   */\n      0x20\n        /* \"#utility.yul\":8923:8976   */\n      tag_563\n        /* \"#utility.yul\":8968:8975   */\n      dup6\n        /* \"#utility.yul\":8959:8965   */\n      dup3\n        /* \"#utility.yul\":8948:8957   */\n      dup7\n        /* \"#utility.yul\":8944:8966   */\n      add\n        /* \"#utility.yul\":8923:8976   */\n      tag_432\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":8913:8976   */\n      swap2\n      pop\n        /* \"#utility.yul\":8868:8986   */\n      pop\n        /* \"#utility.yul\":8519:8993   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8999:9209   */\n    tag_88:\n        /* \"#utility.yul\":9086:9090   */\n      0x00\n        /* \"#utility.yul\":9124:9126   */\n      0x20\n        /* \"#utility.yul\":9113:9122   */\n      dup3\n        /* \"#utility.yul\":9109:9127   */\n      add\n        /* \"#utility.yul\":9101:9127   */\n      swap1\n      pop\n        /* \"#utility.yul\":9137:9202   */\n      tag_565\n        /* \"#utility.yul\":9199:9200   */\n      0x00\n        /* \"#utility.yul\":9188:9197   */\n      dup4\n        /* \"#utility.yul\":9184:9201   */\n      add\n        /* \"#utility.yul\":9175:9181   */\n      dup5\n        /* \"#utility.yul\":9137:9202   */\n      tag_435\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":8999:9209   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9275   */\n    tag_436:\n        /* \"#utility.yul\":9243:9246   */\n      0x00\n        /* \"#utility.yul\":9264:9269   */\n      dup2\n        /* \"#utility.yul\":9257:9269   */\n      swap1\n      pop\n        /* \"#utility.yul\":9215:9275   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9281:9423   */\n    tag_437:\n        /* \"#utility.yul\":9331:9340   */\n      0x00\n        /* \"#utility.yul\":9364:9417   */\n      tag_568\n        /* \"#utility.yul\":9382:9416   */\n      tag_569\n        /* \"#utility.yul\":9391:9415   */\n      tag_570\n        /* \"#utility.yul\":9409:9414   */\n      dup5\n        /* \"#utility.yul\":9391:9415   */\n      tag_415\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":9382:9416   */\n      tag_436\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":9364:9417   */\n      tag_415\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":9351:9417   */\n      swap1\n      pop\n        /* \"#utility.yul\":9281:9423   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9429:9555   */\n    tag_438:\n        /* \"#utility.yul\":9479:9488   */\n      0x00\n        /* \"#utility.yul\":9512:9549   */\n      tag_572\n        /* \"#utility.yul\":9543:9548   */\n      dup3\n        /* \"#utility.yul\":9512:9549   */\n      tag_437\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":9499:9549   */\n      swap1\n      pop\n        /* \"#utility.yul\":9429:9555   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9561:9701   */\n    tag_439:\n        /* \"#utility.yul\":9625:9634   */\n      0x00\n        /* \"#utility.yul\":9658:9695   */\n      tag_574\n        /* \"#utility.yul\":9689:9694   */\n      dup3\n        /* \"#utility.yul\":9658:9695   */\n      tag_438\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":9645:9695   */\n      swap1\n      pop\n        /* \"#utility.yul\":9561:9701   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9707:9866   */\n    tag_440:\n        /* \"#utility.yul\":9808:9859   */\n      tag_576\n        /* \"#utility.yul\":9853:9858   */\n      dup2\n        /* \"#utility.yul\":9808:9859   */\n      tag_439\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":9803:9806   */\n      dup3\n        /* \"#utility.yul\":9796:9860   */\n      mstore\n        /* \"#utility.yul\":9707:9866   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9872:10122   */\n    tag_98:\n        /* \"#utility.yul\":9979:9983   */\n      0x00\n        /* \"#utility.yul\":10017:10019   */\n      0x20\n        /* \"#utility.yul\":10006:10015   */\n      dup3\n        /* \"#utility.yul\":10002:10020   */\n      add\n        /* \"#utility.yul\":9994:10020   */\n      swap1\n      pop\n        /* \"#utility.yul\":10030:10115   */\n      tag_578\n        /* \"#utility.yul\":10112:10113   */\n      0x00\n        /* \"#utility.yul\":10101:10110   */\n      dup4\n        /* \"#utility.yul\":10097:10114   */\n      add\n        /* \"#utility.yul\":10088:10094   */\n      dup5\n        /* \"#utility.yul\":10030:10115   */\n      tag_440\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":9872:10122   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10128:10246   */\n    tag_441:\n        /* \"#utility.yul\":10215:10239   */\n      tag_580\n        /* \"#utility.yul\":10233:10238   */\n      dup2\n        /* \"#utility.yul\":10215:10239   */\n      tag_416\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":10210:10213   */\n      dup3\n        /* \"#utility.yul\":10203:10240   */\n      mstore\n        /* \"#utility.yul\":10128:10246   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10252:10474   */\n    tag_111:\n        /* \"#utility.yul\":10345:10349   */\n      0x00\n        /* \"#utility.yul\":10383:10385   */\n      0x20\n        /* \"#utility.yul\":10372:10381   */\n      dup3\n        /* \"#utility.yul\":10368:10386   */\n      add\n        /* \"#utility.yul\":10360:10386   */\n      swap1\n      pop\n        /* \"#utility.yul\":10396:10467   */\n      tag_582\n        /* \"#utility.yul\":10464:10465   */\n      0x00\n        /* \"#utility.yul\":10453:10462   */\n      dup4\n        /* \"#utility.yul\":10449:10466   */\n      add\n        /* \"#utility.yul\":10440:10446   */\n      dup5\n        /* \"#utility.yul\":10396:10467   */\n      tag_441\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":10252:10474   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10480:10649   */\n    tag_442:\n        /* \"#utility.yul\":10564:10575   */\n      0x00\n        /* \"#utility.yul\":10598:10604   */\n      dup3\n        /* \"#utility.yul\":10593:10596   */\n      dup3\n        /* \"#utility.yul\":10586:10605   */\n      mstore\n        /* \"#utility.yul\":10638:10642   */\n      0x20\n        /* \"#utility.yul\":10633:10636   */\n      dup3\n        /* \"#utility.yul\":10629:10643   */\n      add\n        /* \"#utility.yul\":10614:10643   */\n      swap1\n      pop\n        /* \"#utility.yul\":10480:10649   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10655:10820   */\n    tag_443:\n        /* \"#utility.yul\":10795:10812   */\n      0x496e76616c6964206163636f756e740000000000000000000000000000000000\n        /* \"#utility.yul\":10791:10792   */\n      0x00\n        /* \"#utility.yul\":10783:10789   */\n      dup3\n        /* \"#utility.yul\":10779:10793   */\n      add\n        /* \"#utility.yul\":10772:10813   */\n      mstore\n        /* \"#utility.yul\":10655:10820   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10826:11192   */\n    tag_444:\n        /* \"#utility.yul\":10968:10971   */\n      0x00\n        /* \"#utility.yul\":10989:11056   */\n      tag_586\n        /* \"#utility.yul\":11053:11055   */\n      0x0f\n        /* \"#utility.yul\":11048:11051   */\n      dup4\n        /* \"#utility.yul\":10989:11056   */\n      tag_442\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":10982:11056   */\n      swap2\n      pop\n        /* \"#utility.yul\":11065:11158   */\n      tag_587\n        /* \"#utility.yul\":11154:11157   */\n      dup3\n        /* \"#utility.yul\":11065:11158   */\n      tag_443\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":11183:11185   */\n      0x20\n        /* \"#utility.yul\":11178:11181   */\n      dup3\n        /* \"#utility.yul\":11174:11186   */\n      add\n        /* \"#utility.yul\":11167:11186   */\n      swap1\n      pop\n        /* \"#utility.yul\":10826:11192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11198:11617   */\n    tag_160:\n        /* \"#utility.yul\":11364:11368   */\n      0x00\n        /* \"#utility.yul\":11402:11404   */\n      0x20\n        /* \"#utility.yul\":11391:11400   */\n      dup3\n        /* \"#utility.yul\":11387:11405   */\n      add\n        /* \"#utility.yul\":11379:11405   */\n      swap1\n      pop\n        /* \"#utility.yul\":11451:11460   */\n      dup2\n        /* \"#utility.yul\":11445:11449   */\n      dup2\n        /* \"#utility.yul\":11441:11461   */\n      sub\n        /* \"#utility.yul\":11437:11438   */\n      0x00\n        /* \"#utility.yul\":11426:11435   */\n      dup4\n        /* \"#utility.yul\":11422:11439   */\n      add\n        /* \"#utility.yul\":11415:11462   */\n      mstore\n        /* \"#utility.yul\":11479:11610   */\n      tag_589\n        /* \"#utility.yul\":11605:11609   */\n      dup2\n        /* \"#utility.yul\":11479:11610   */\n      tag_444\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":11471:11610   */\n      swap1\n      pop\n        /* \"#utility.yul\":11198:11617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11623:11792   */\n    tag_445:\n        /* \"#utility.yul\":11763:11784   */\n      0x496e76616c6964207374616b6520696e64657800000000000000000000000000\n        /* \"#utility.yul\":11759:11760   */\n      0x00\n        /* \"#utility.yul\":11751:11757   */\n      dup3\n        /* \"#utility.yul\":11747:11761   */\n      add\n        /* \"#utility.yul\":11740:11785   */\n      mstore\n        /* \"#utility.yul\":11623:11792   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11798:12164   */\n    tag_446:\n        /* \"#utility.yul\":11940:11943   */\n      0x00\n        /* \"#utility.yul\":11961:12028   */\n      tag_592\n        /* \"#utility.yul\":12025:12027   */\n      0x13\n        /* \"#utility.yul\":12020:12023   */\n      dup4\n        /* \"#utility.yul\":11961:12028   */\n      tag_442\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":11954:12028   */\n      swap2\n      pop\n        /* \"#utility.yul\":12037:12130   */\n      tag_593\n        /* \"#utility.yul\":12126:12129   */\n      dup3\n        /* \"#utility.yul\":12037:12130   */\n      tag_445\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":12155:12157   */\n      0x20\n        /* \"#utility.yul\":12150:12153   */\n      dup3\n        /* \"#utility.yul\":12146:12158   */\n      add\n        /* \"#utility.yul\":12139:12158   */\n      swap1\n      pop\n        /* \"#utility.yul\":11798:12164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12170:12589   */\n    tag_163:\n        /* \"#utility.yul\":12336:12340   */\n      0x00\n        /* \"#utility.yul\":12374:12376   */\n      0x20\n        /* \"#utility.yul\":12363:12372   */\n      dup3\n        /* \"#utility.yul\":12359:12377   */\n      add\n        /* \"#utility.yul\":12351:12377   */\n      swap1\n      pop\n        /* \"#utility.yul\":12423:12432   */\n      dup2\n        /* \"#utility.yul\":12417:12421   */\n      dup2\n        /* \"#utility.yul\":12413:12433   */\n      sub\n        /* \"#utility.yul\":12409:12410   */\n      0x00\n        /* \"#utility.yul\":12398:12407   */\n      dup4\n        /* \"#utility.yul\":12394:12411   */\n      add\n        /* \"#utility.yul\":12387:12434   */\n      mstore\n        /* \"#utility.yul\":12451:12582   */\n      tag_595\n        /* \"#utility.yul\":12577:12581   */\n      dup2\n        /* \"#utility.yul\":12451:12582   */\n      tag_446\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":12443:12582   */\n      swap1\n      pop\n        /* \"#utility.yul\":12170:12589   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12595:12775   */\n    tag_166:\n        /* \"#utility.yul\":12643:12720   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12640:12641   */\n      0x00\n        /* \"#utility.yul\":12633:12721   */\n      mstore\n        /* \"#utility.yul\":12740:12744   */\n      0x32\n        /* \"#utility.yul\":12737:12738   */\n      0x04\n        /* \"#utility.yul\":12730:12745   */\n      mstore\n        /* \"#utility.yul\":12764:12768   */\n      0x24\n        /* \"#utility.yul\":12761:12762   */\n      0x00\n        /* \"#utility.yul\":12754:12769   */\n      revert\n        /* \"#utility.yul\":12781:12946   */\n    tag_447:\n        /* \"#utility.yul\":12921:12938   */\n      0x416c726561647920636c61696d65640000000000000000000000000000000000\n        /* \"#utility.yul\":12917:12918   */\n      0x00\n        /* \"#utility.yul\":12909:12915   */\n      dup3\n        /* \"#utility.yul\":12905:12919   */\n      add\n        /* \"#utility.yul\":12898:12939   */\n      mstore\n        /* \"#utility.yul\":12781:12946   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12952:13318   */\n    tag_448:\n        /* \"#utility.yul\":13094:13097   */\n      0x00\n        /* \"#utility.yul\":13115:13182   */\n      tag_599\n        /* \"#utility.yul\":13179:13181   */\n      0x0f\n        /* \"#utility.yul\":13174:13177   */\n      dup4\n        /* \"#utility.yul\":13115:13182   */\n      tag_442\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":13108:13182   */\n      swap2\n      pop\n        /* \"#utility.yul\":13191:13284   */\n      tag_600\n        /* \"#utility.yul\":13280:13283   */\n      dup3\n        /* \"#utility.yul\":13191:13284   */\n      tag_447\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":13309:13311   */\n      0x20\n        /* \"#utility.yul\":13304:13307   */\n      dup3\n        /* \"#utility.yul\":13300:13312   */\n      add\n        /* \"#utility.yul\":13293:13312   */\n      swap1\n      pop\n        /* \"#utility.yul\":12952:13318   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13324:13743   */\n    tag_170:\n        /* \"#utility.yul\":13490:13494   */\n      0x00\n        /* \"#utility.yul\":13528:13530   */\n      0x20\n        /* \"#utility.yul\":13517:13526   */\n      dup3\n        /* \"#utility.yul\":13513:13531   */\n      add\n        /* \"#utility.yul\":13505:13531   */\n      swap1\n      pop\n        /* \"#utility.yul\":13577:13586   */\n      dup2\n        /* \"#utility.yul\":13571:13575   */\n      dup2\n        /* \"#utility.yul\":13567:13587   */\n      sub\n        /* \"#utility.yul\":13563:13564   */\n      0x00\n        /* \"#utility.yul\":13552:13561   */\n      dup4\n        /* \"#utility.yul\":13548:13565   */\n      add\n        /* \"#utility.yul\":13541:13588   */\n      mstore\n        /* \"#utility.yul\":13605:13736   */\n      tag_602\n        /* \"#utility.yul\":13731:13735   */\n      dup2\n        /* \"#utility.yul\":13605:13736   */\n      tag_448\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":13597:13736   */\n      swap1\n      pop\n        /* \"#utility.yul\":13324:13743   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13749:13929   */\n    tag_449:\n        /* \"#utility.yul\":13797:13874   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13794:13795   */\n      0x00\n        /* \"#utility.yul\":13787:13875   */\n      mstore\n        /* \"#utility.yul\":13894:13898   */\n      0x11\n        /* \"#utility.yul\":13891:13892   */\n      0x04\n        /* \"#utility.yul\":13884:13899   */\n      mstore\n        /* \"#utility.yul\":13918:13922   */\n      0x24\n        /* \"#utility.yul\":13915:13916   */\n      0x00\n        /* \"#utility.yul\":13908:13923   */\n      revert\n        /* \"#utility.yul\":13935:14129   */\n    tag_174:\n        /* \"#utility.yul\":13975:13979   */\n      0x00\n        /* \"#utility.yul\":13995:14015   */\n      tag_605\n        /* \"#utility.yul\":14013:14014   */\n      dup3\n        /* \"#utility.yul\":13995:14015   */\n      tag_419\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":13990:14015   */\n      swap2\n      pop\n        /* \"#utility.yul\":14029:14049   */\n      tag_606\n        /* \"#utility.yul\":14047:14048   */\n      dup4\n        /* \"#utility.yul\":14029:14049   */\n      tag_419\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":14024:14049   */\n      swap3\n      pop\n        /* \"#utility.yul\":14073:14074   */\n      dup3\n        /* \"#utility.yul\":14070:14071   */\n      dup3\n        /* \"#utility.yul\":14066:14075   */\n      sub\n        /* \"#utility.yul\":14058:14075   */\n      swap1\n      pop\n        /* \"#utility.yul\":14097:14098   */\n      dup2\n        /* \"#utility.yul\":14091:14095   */\n      dup2\n        /* \"#utility.yul\":14088:14099   */\n      gt\n        /* \"#utility.yul\":14085:14122   */\n      iszero\n      tag_607\n      jumpi\n        /* \"#utility.yul\":14102:14120   */\n      tag_608\n      tag_449\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":14085:14122   */\n    tag_607:\n        /* \"#utility.yul\":13935:14129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14135:14326   */\n    tag_179:\n        /* \"#utility.yul\":14175:14178   */\n      0x00\n        /* \"#utility.yul\":14194:14214   */\n      tag_610\n        /* \"#utility.yul\":14212:14213   */\n      dup3\n        /* \"#utility.yul\":14194:14214   */\n      tag_419\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":14189:14214   */\n      swap2\n      pop\n        /* \"#utility.yul\":14228:14248   */\n      tag_611\n        /* \"#utility.yul\":14246:14247   */\n      dup4\n        /* \"#utility.yul\":14228:14248   */\n      tag_419\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":14223:14248   */\n      swap3\n      pop\n        /* \"#utility.yul\":14271:14272   */\n      dup3\n        /* \"#utility.yul\":14268:14269   */\n      dup3\n        /* \"#utility.yul\":14264:14273   */\n      add\n        /* \"#utility.yul\":14257:14273   */\n      swap1\n      pop\n        /* \"#utility.yul\":14292:14295   */\n      dup1\n        /* \"#utility.yul\":14289:14290   */\n      dup3\n        /* \"#utility.yul\":14286:14296   */\n      gt\n        /* \"#utility.yul\":14283:14319   */\n      iszero\n      tag_612\n      jumpi\n        /* \"#utility.yul\":14299:14317   */\n      tag_613\n      tag_449\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":14283:14319   */\n    tag_612:\n        /* \"#utility.yul\":14135:14326   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14332:14742   */\n    tag_181:\n        /* \"#utility.yul\":14372:14379   */\n      0x00\n        /* \"#utility.yul\":14395:14415   */\n      tag_615\n        /* \"#utility.yul\":14413:14414   */\n      dup3\n        /* \"#utility.yul\":14395:14415   */\n      tag_419\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":14390:14415   */\n      swap2\n      pop\n        /* \"#utility.yul\":14429:14449   */\n      tag_616\n        /* \"#utility.yul\":14447:14448   */\n      dup4\n        /* \"#utility.yul\":14429:14449   */\n      tag_419\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":14424:14449   */\n      swap3\n      pop\n        /* \"#utility.yul\":14484:14485   */\n      dup3\n        /* \"#utility.yul\":14481:14482   */\n      dup3\n        /* \"#utility.yul\":14477:14486   */\n      mul\n        /* \"#utility.yul\":14506:14536   */\n      tag_617\n        /* \"#utility.yul\":14524:14535   */\n      dup2\n        /* \"#utility.yul\":14506:14536   */\n      tag_419\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":14495:14536   */\n      swap2\n      pop\n        /* \"#utility.yul\":14685:14686   */\n      dup3\n        /* \"#utility.yul\":14676:14683   */\n      dup3\n        /* \"#utility.yul\":14672:14687   */\n      div\n        /* \"#utility.yul\":14669:14670   */\n      dup5\n        /* \"#utility.yul\":14666:14688   */\n      eq\n        /* \"#utility.yul\":14646:14647   */\n      dup4\n        /* \"#utility.yul\":14639:14648   */\n      iszero\n        /* \"#utility.yul\":14619:14702   */\n      or\n        /* \"#utility.yul\":14596:14735   */\n      tag_618\n      jumpi\n        /* \"#utility.yul\":14715:14733   */\n      tag_619\n      tag_449\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":14596:14735   */\n    tag_618:\n        /* \"#utility.yul\":14380:14742   */\n      pop\n        /* \"#utility.yul\":14332:14742   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14748:14928   */\n    tag_450:\n        /* \"#utility.yul\":14796:14873   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14793:14794   */\n      0x00\n        /* \"#utility.yul\":14786:14874   */\n      mstore\n        /* \"#utility.yul\":14893:14897   */\n      0x12\n        /* \"#utility.yul\":14890:14891   */\n      0x04\n        /* \"#utility.yul\":14883:14898   */\n      mstore\n        /* \"#utility.yul\":14917:14921   */\n      0x24\n        /* \"#utility.yul\":14914:14915   */\n      0x00\n        /* \"#utility.yul\":14907:14922   */\n      revert\n        /* \"#utility.yul\":14934:15119   */\n    tag_188:\n        /* \"#utility.yul\":14974:14975   */\n      0x00\n        /* \"#utility.yul\":14991:15011   */\n      tag_622\n        /* \"#utility.yul\":15009:15010   */\n      dup3\n        /* \"#utility.yul\":14991:15011   */\n      tag_419\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":14986:15011   */\n      swap2\n      pop\n        /* \"#utility.yul\":15025:15045   */\n      tag_623\n        /* \"#utility.yul\":15043:15044   */\n      dup4\n        /* \"#utility.yul\":15025:15045   */\n      tag_419\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":15020:15045   */\n      swap3\n      pop\n        /* \"#utility.yul\":15064:15065   */\n      dup3\n        /* \"#utility.yul\":15054:15089   */\n      tag_624\n      jumpi\n        /* \"#utility.yul\":15069:15087   */\n      tag_625\n      tag_450\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":15054:15089   */\n    tag_624:\n        /* \"#utility.yul\":15111:15112   */\n      dup3\n        /* \"#utility.yul\":15108:15109   */\n      dup3\n        /* \"#utility.yul\":15104:15113   */\n      div\n        /* \"#utility.yul\":15099:15113   */\n      swap1\n      pop\n        /* \"#utility.yul\":14934:15119   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15125:15292   */\n    tag_451:\n        /* \"#utility.yul\":15265:15284   */\n      0x4f6e6c7920454f412063616e2063616c6c000000000000000000000000000000\n        /* \"#utility.yul\":15261:15262   */\n      0x00\n        /* \"#utility.yul\":15253:15259   */\n      dup3\n        /* \"#utility.yul\":15249:15263   */\n      add\n        /* \"#utility.yul\":15242:15285   */\n      mstore\n        /* \"#utility.yul\":15125:15292   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15298:15664   */\n    tag_452:\n        /* \"#utility.yul\":15440:15443   */\n      0x00\n        /* \"#utility.yul\":15461:15528   */\n      tag_628\n        /* \"#utility.yul\":15525:15527   */\n      0x11\n        /* \"#utility.yul\":15520:15523   */\n      dup4\n        /* \"#utility.yul\":15461:15528   */\n      tag_442\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":15454:15528   */\n      swap2\n      pop\n        /* \"#utility.yul\":15537:15630   */\n      tag_629\n        /* \"#utility.yul\":15626:15629   */\n      dup3\n        /* \"#utility.yul\":15537:15630   */\n      tag_451\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":15655:15657   */\n      0x20\n        /* \"#utility.yul\":15650:15653   */\n      dup3\n        /* \"#utility.yul\":15646:15658   */\n      add\n        /* \"#utility.yul\":15639:15658   */\n      swap1\n      pop\n        /* \"#utility.yul\":15298:15664   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15670:16089   */\n    tag_195:\n        /* \"#utility.yul\":15836:15840   */\n      0x00\n        /* \"#utility.yul\":15874:15876   */\n      0x20\n        /* \"#utility.yul\":15863:15872   */\n      dup3\n        /* \"#utility.yul\":15859:15877   */\n      add\n        /* \"#utility.yul\":15851:15877   */\n      swap1\n      pop\n        /* \"#utility.yul\":15923:15932   */\n      dup2\n        /* \"#utility.yul\":15917:15921   */\n      dup2\n        /* \"#utility.yul\":15913:15933   */\n      sub\n        /* \"#utility.yul\":15909:15910   */\n      0x00\n        /* \"#utility.yul\":15898:15907   */\n      dup4\n        /* \"#utility.yul\":15894:15911   */\n      add\n        /* \"#utility.yul\":15887:15934   */\n      mstore\n        /* \"#utility.yul\":15951:16082   */\n      tag_631\n        /* \"#utility.yul\":16077:16081   */\n      dup2\n        /* \"#utility.yul\":15951:16082   */\n      tag_452\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":15943:16082   */\n      swap1\n      pop\n        /* \"#utility.yul\":15670:16089   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16095:16260   */\n    tag_453:\n        /* \"#utility.yul\":16235:16252   */\n      0x436f6e7472616374207061757365640000000000000000000000000000000000\n        /* \"#utility.yul\":16231:16232   */\n      0x00\n        /* \"#utility.yul\":16223:16229   */\n      dup3\n        /* \"#utility.yul\":16219:16233   */\n      add\n        /* \"#utility.yul\":16212:16253   */\n      mstore\n        /* \"#utility.yul\":16095:16260   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16266:16632   */\n    tag_454:\n        /* \"#utility.yul\":16408:16411   */\n      0x00\n        /* \"#utility.yul\":16429:16496   */\n      tag_634\n        /* \"#utility.yul\":16493:16495   */\n      0x0f\n        /* \"#utility.yul\":16488:16491   */\n      dup4\n        /* \"#utility.yul\":16429:16496   */\n      tag_442\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":16422:16496   */\n      swap2\n      pop\n        /* \"#utility.yul\":16505:16598   */\n      tag_635\n        /* \"#utility.yul\":16594:16597   */\n      dup3\n        /* \"#utility.yul\":16505:16598   */\n      tag_453\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":16623:16625   */\n      0x20\n        /* \"#utility.yul\":16618:16621   */\n      dup3\n        /* \"#utility.yul\":16614:16626   */\n      add\n        /* \"#utility.yul\":16607:16626   */\n      swap1\n      pop\n        /* \"#utility.yul\":16266:16632   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16638:17057   */\n    tag_199:\n        /* \"#utility.yul\":16804:16808   */\n      0x00\n        /* \"#utility.yul\":16842:16844   */\n      0x20\n        /* \"#utility.yul\":16831:16840   */\n      dup3\n        /* \"#utility.yul\":16827:16845   */\n      add\n        /* \"#utility.yul\":16819:16845   */\n      swap1\n      pop\n        /* \"#utility.yul\":16891:16900   */\n      dup2\n        /* \"#utility.yul\":16885:16889   */\n      dup2\n        /* \"#utility.yul\":16881:16901   */\n      sub\n        /* \"#utility.yul\":16877:16878   */\n      0x00\n        /* \"#utility.yul\":16866:16875   */\n      dup4\n        /* \"#utility.yul\":16862:16879   */\n      add\n        /* \"#utility.yul\":16855:16902   */\n      mstore\n        /* \"#utility.yul\":16919:17050   */\n      tag_637\n        /* \"#utility.yul\":17045:17049   */\n      dup2\n        /* \"#utility.yul\":16919:17050   */\n      tag_454\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":16911:17050   */\n      swap1\n      pop\n        /* \"#utility.yul\":16638:17057   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17063:17234   */\n    tag_455:\n        /* \"#utility.yul\":17203:17226   */\n      0x4175746f2d7374616b696e672064697361626c65640000000000000000000000\n        /* \"#utility.yul\":17199:17200   */\n      0x00\n        /* \"#utility.yul\":17191:17197   */\n      dup3\n        /* \"#utility.yul\":17187:17201   */\n      add\n        /* \"#utility.yul\":17180:17227   */\n      mstore\n        /* \"#utility.yul\":17063:17234   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17240:17606   */\n    tag_456:\n        /* \"#utility.yul\":17382:17385   */\n      0x00\n        /* \"#utility.yul\":17403:17470   */\n      tag_640\n        /* \"#utility.yul\":17467:17469   */\n      0x15\n        /* \"#utility.yul\":17462:17465   */\n      dup4\n        /* \"#utility.yul\":17403:17470   */\n      tag_442\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":17396:17470   */\n      swap2\n      pop\n        /* \"#utility.yul\":17479:17572   */\n      tag_641\n        /* \"#utility.yul\":17568:17571   */\n      dup3\n        /* \"#utility.yul\":17479:17572   */\n      tag_455\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":17597:17599   */\n      0x20\n        /* \"#utility.yul\":17592:17595   */\n      dup3\n        /* \"#utility.yul\":17588:17600   */\n      add\n        /* \"#utility.yul\":17581:17600   */\n      swap1\n      pop\n        /* \"#utility.yul\":17240:17606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17612:18031   */\n    tag_210:\n        /* \"#utility.yul\":17778:17782   */\n      0x00\n        /* \"#utility.yul\":17816:17818   */\n      0x20\n        /* \"#utility.yul\":17805:17814   */\n      dup3\n        /* \"#utility.yul\":17801:17819   */\n      add\n        /* \"#utility.yul\":17793:17819   */\n      swap1\n      pop\n        /* \"#utility.yul\":17865:17874   */\n      dup2\n        /* \"#utility.yul\":17859:17863   */\n      dup2\n        /* \"#utility.yul\":17855:17875   */\n      sub\n        /* \"#utility.yul\":17851:17852   */\n      0x00\n        /* \"#utility.yul\":17840:17849   */\n      dup4\n        /* \"#utility.yul\":17836:17853   */\n      add\n        /* \"#utility.yul\":17829:17876   */\n      mstore\n        /* \"#utility.yul\":17893:18024   */\n      tag_643\n        /* \"#utility.yul\":18019:18023   */\n      dup2\n        /* \"#utility.yul\":17893:18024   */\n      tag_456\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":17885:18024   */\n      swap1\n      pop\n        /* \"#utility.yul\":17612:18031   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18037:18199   */\n    tag_457:\n        /* \"#utility.yul\":18177:18191   */\n      0x5374696c6c206c6f636b65640000000000000000000000000000000000000000\n        /* \"#utility.yul\":18173:18174   */\n      0x00\n        /* \"#utility.yul\":18165:18171   */\n      dup3\n        /* \"#utility.yul\":18161:18175   */\n      add\n        /* \"#utility.yul\":18154:18192   */\n      mstore\n        /* \"#utility.yul\":18037:18199   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18205:18571   */\n    tag_458:\n        /* \"#utility.yul\":18347:18350   */\n      0x00\n        /* \"#utility.yul\":18368:18435   */\n      tag_646\n        /* \"#utility.yul\":18432:18434   */\n      0x0c\n        /* \"#utility.yul\":18427:18430   */\n      dup4\n        /* \"#utility.yul\":18368:18435   */\n      tag_442\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":18361:18435   */\n      swap2\n      pop\n        /* \"#utility.yul\":18444:18537   */\n      tag_647\n        /* \"#utility.yul\":18533:18536   */\n      dup3\n        /* \"#utility.yul\":18444:18537   */\n      tag_457\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":18562:18564   */\n      0x20\n        /* \"#utility.yul\":18557:18560   */\n      dup3\n        /* \"#utility.yul\":18553:18565   */\n      add\n        /* \"#utility.yul\":18546:18565   */\n      swap1\n      pop\n        /* \"#utility.yul\":18205:18571   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18577:18996   */\n    tag_213:\n        /* \"#utility.yul\":18743:18747   */\n      0x00\n        /* \"#utility.yul\":18781:18783   */\n      0x20\n        /* \"#utility.yul\":18770:18779   */\n      dup3\n        /* \"#utility.yul\":18766:18784   */\n      add\n        /* \"#utility.yul\":18758:18784   */\n      swap1\n      pop\n        /* \"#utility.yul\":18830:18839   */\n      dup2\n        /* \"#utility.yul\":18824:18828   */\n      dup2\n        /* \"#utility.yul\":18820:18840   */\n      sub\n        /* \"#utility.yul\":18816:18817   */\n      0x00\n        /* \"#utility.yul\":18805:18814   */\n      dup4\n        /* \"#utility.yul\":18801:18818   */\n      add\n        /* \"#utility.yul\":18794:18841   */\n      mstore\n        /* \"#utility.yul\":18858:18989   */\n      tag_649\n        /* \"#utility.yul\":18984:18988   */\n      dup2\n        /* \"#utility.yul\":18858:18989   */\n      tag_458\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":18850:18989   */\n      swap1\n      pop\n        /* \"#utility.yul\":18577:18996   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19002:19176   */\n    tag_459:\n        /* \"#utility.yul\":19142:19168   */\n      0x496e73756666696369656e742072657761726420706f6f6c0000000000000000\n        /* \"#utility.yul\":19138:19139   */\n      0x00\n        /* \"#utility.yul\":19130:19136   */\n      dup3\n        /* \"#utility.yul\":19126:19140   */\n      add\n        /* \"#utility.yul\":19119:19169   */\n      mstore\n        /* \"#utility.yul\":19002:19176   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19182:19548   */\n    tag_460:\n        /* \"#utility.yul\":19324:19327   */\n      0x00\n        /* \"#utility.yul\":19345:19412   */\n      tag_652\n        /* \"#utility.yul\":19409:19411   */\n      0x18\n        /* \"#utility.yul\":19404:19407   */\n      dup4\n        /* \"#utility.yul\":19345:19412   */\n      tag_442\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":19338:19412   */\n      swap2\n      pop\n        /* \"#utility.yul\":19421:19514   */\n      tag_653\n        /* \"#utility.yul\":19510:19513   */\n      dup3\n        /* \"#utility.yul\":19421:19514   */\n      tag_459\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":19539:19541   */\n      0x20\n        /* \"#utility.yul\":19534:19537   */\n      dup3\n        /* \"#utility.yul\":19530:19542   */\n      add\n        /* \"#utility.yul\":19523:19542   */\n      swap1\n      pop\n        /* \"#utility.yul\":19182:19548   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19554:19973   */\n    tag_217:\n        /* \"#utility.yul\":19720:19724   */\n      0x00\n        /* \"#utility.yul\":19758:19760   */\n      0x20\n        /* \"#utility.yul\":19747:19756   */\n      dup3\n        /* \"#utility.yul\":19743:19761   */\n      add\n        /* \"#utility.yul\":19735:19761   */\n      swap1\n      pop\n        /* \"#utility.yul\":19807:19816   */\n      dup2\n        /* \"#utility.yul\":19801:19805   */\n      dup2\n        /* \"#utility.yul\":19797:19817   */\n      sub\n        /* \"#utility.yul\":19793:19794   */\n      0x00\n        /* \"#utility.yul\":19782:19791   */\n      dup4\n        /* \"#utility.yul\":19778:19795   */\n      add\n        /* \"#utility.yul\":19771:19818   */\n      mstore\n        /* \"#utility.yul\":19835:19966   */\n      tag_655\n        /* \"#utility.yul\":19961:19965   */\n      dup2\n        /* \"#utility.yul\":19835:19966   */\n      tag_460\n      jump\t// in\n    tag_655:\n        /* \"#utility.yul\":19827:19966   */\n      swap1\n      pop\n        /* \"#utility.yul\":19554:19973   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19979:20311   */\n    tag_223:\n        /* \"#utility.yul\":20100:20104   */\n      0x00\n        /* \"#utility.yul\":20138:20140   */\n      0x40\n        /* \"#utility.yul\":20127:20136   */\n      dup3\n        /* \"#utility.yul\":20123:20141   */\n      add\n        /* \"#utility.yul\":20115:20141   */\n      swap1\n      pop\n        /* \"#utility.yul\":20151:20222   */\n      tag_657\n        /* \"#utility.yul\":20219:20220   */\n      0x00\n        /* \"#utility.yul\":20208:20217   */\n      dup4\n        /* \"#utility.yul\":20204:20221   */\n      add\n        /* \"#utility.yul\":20195:20201   */\n      dup6\n        /* \"#utility.yul\":20151:20222   */\n      tag_420\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":20232:20304   */\n      tag_658\n        /* \"#utility.yul\":20300:20302   */\n      0x20\n        /* \"#utility.yul\":20289:20298   */\n      dup4\n        /* \"#utility.yul\":20285:20303   */\n      add\n        /* \"#utility.yul\":20276:20282   */\n      dup5\n        /* \"#utility.yul\":20232:20304   */\n      tag_420\n      jump\t// in\n    tag_658:\n        /* \"#utility.yul\":19979:20311   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20317:20487   */\n    tag_461:\n        /* \"#utility.yul\":20457:20479   */\n      0x496e76616c696420706572696f6420696e646578000000000000000000000000\n        /* \"#utility.yul\":20453:20454   */\n      0x00\n        /* \"#utility.yul\":20445:20451   */\n      dup3\n        /* \"#utility.yul\":20441:20455   */\n      add\n        /* \"#utility.yul\":20434:20480   */\n      mstore\n        /* \"#utility.yul\":20317:20487   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20493:20859   */\n    tag_462:\n        /* \"#utility.yul\":20635:20638   */\n      0x00\n        /* \"#utility.yul\":20656:20723   */\n      tag_661\n        /* \"#utility.yul\":20720:20722   */\n      0x14\n        /* \"#utility.yul\":20715:20718   */\n      dup4\n        /* \"#utility.yul\":20656:20723   */\n      tag_442\n      jump\t// in\n    tag_661:\n        /* \"#utility.yul\":20649:20723   */\n      swap2\n      pop\n        /* \"#utility.yul\":20732:20825   */\n      tag_662\n        /* \"#utility.yul\":20821:20824   */\n      dup3\n        /* \"#utility.yul\":20732:20825   */\n      tag_461\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":20850:20852   */\n      0x20\n        /* \"#utility.yul\":20845:20848   */\n      dup3\n        /* \"#utility.yul\":20841:20853   */\n      add\n        /* \"#utility.yul\":20834:20853   */\n      swap1\n      pop\n        /* \"#utility.yul\":20493:20859   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20865:21284   */\n    tag_239:\n        /* \"#utility.yul\":21031:21035   */\n      0x00\n        /* \"#utility.yul\":21069:21071   */\n      0x20\n        /* \"#utility.yul\":21058:21067   */\n      dup3\n        /* \"#utility.yul\":21054:21072   */\n      add\n        /* \"#utility.yul\":21046:21072   */\n      swap1\n      pop\n        /* \"#utility.yul\":21118:21127   */\n      dup2\n        /* \"#utility.yul\":21112:21116   */\n      dup2\n        /* \"#utility.yul\":21108:21128   */\n      sub\n        /* \"#utility.yul\":21104:21105   */\n      0x00\n        /* \"#utility.yul\":21093:21102   */\n      dup4\n        /* \"#utility.yul\":21089:21106   */\n      add\n        /* \"#utility.yul\":21082:21129   */\n      mstore\n        /* \"#utility.yul\":21146:21277   */\n      tag_664\n        /* \"#utility.yul\":21272:21276   */\n      dup2\n        /* \"#utility.yul\":21146:21277   */\n      tag_462\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":21138:21277   */\n      swap1\n      pop\n        /* \"#utility.yul\":20865:21284   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21290:21451   */\n    tag_463:\n        /* \"#utility.yul\":21430:21443   */\n      0x5a65726f20616d6f756e74000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21426:21427   */\n      0x00\n        /* \"#utility.yul\":21418:21424   */\n      dup3\n        /* \"#utility.yul\":21414:21428   */\n      add\n        /* \"#utility.yul\":21407:21444   */\n      mstore\n        /* \"#utility.yul\":21290:21451   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21457:21823   */\n    tag_464:\n        /* \"#utility.yul\":21599:21602   */\n      0x00\n        /* \"#utility.yul\":21620:21687   */\n      tag_667\n        /* \"#utility.yul\":21684:21686   */\n      0x0b\n        /* \"#utility.yul\":21679:21682   */\n      dup4\n        /* \"#utility.yul\":21620:21687   */\n      tag_442\n      jump\t// in\n    tag_667:\n        /* \"#utility.yul\":21613:21687   */\n      swap2\n      pop\n        /* \"#utility.yul\":21696:21789   */\n      tag_668\n        /* \"#utility.yul\":21785:21788   */\n      dup3\n        /* \"#utility.yul\":21696:21789   */\n      tag_463\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":21814:21816   */\n      0x20\n        /* \"#utility.yul\":21809:21812   */\n      dup3\n        /* \"#utility.yul\":21805:21817   */\n      add\n        /* \"#utility.yul\":21798:21817   */\n      swap1\n      pop\n        /* \"#utility.yul\":21457:21823   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21829:22248   */\n    tag_242:\n        /* \"#utility.yul\":21995:21999   */\n      0x00\n        /* \"#utility.yul\":22033:22035   */\n      0x20\n        /* \"#utility.yul\":22022:22031   */\n      dup3\n        /* \"#utility.yul\":22018:22036   */\n      add\n        /* \"#utility.yul\":22010:22036   */\n      swap1\n      pop\n        /* \"#utility.yul\":22082:22091   */\n      dup2\n        /* \"#utility.yul\":22076:22080   */\n      dup2\n        /* \"#utility.yul\":22072:22092   */\n      sub\n        /* \"#utility.yul\":22068:22069   */\n      0x00\n        /* \"#utility.yul\":22057:22066   */\n      dup4\n        /* \"#utility.yul\":22053:22070   */\n      add\n        /* \"#utility.yul\":22046:22093   */\n      mstore\n        /* \"#utility.yul\":22110:22241   */\n      tag_670\n        /* \"#utility.yul\":22236:22240   */\n      dup2\n        /* \"#utility.yul\":22110:22241   */\n      tag_464\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":22102:22241   */\n      swap1\n      pop\n        /* \"#utility.yul\":21829:22248   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22254:22684   */\n    tag_252:\n        /* \"#utility.yul\":22397:22401   */\n      0x00\n        /* \"#utility.yul\":22435:22437   */\n      0x60\n        /* \"#utility.yul\":22424:22433   */\n      dup3\n        /* \"#utility.yul\":22420:22438   */\n      add\n        /* \"#utility.yul\":22412:22438   */\n      swap1\n      pop\n        /* \"#utility.yul\":22448:22519   */\n      tag_672\n        /* \"#utility.yul\":22516:22517   */\n      0x00\n        /* \"#utility.yul\":22505:22514   */\n      dup4\n        /* \"#utility.yul\":22501:22518   */\n      add\n        /* \"#utility.yul\":22492:22498   */\n      dup7\n        /* \"#utility.yul\":22448:22519   */\n      tag_420\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":22529:22601   */\n      tag_673\n        /* \"#utility.yul\":22597:22599   */\n      0x20\n        /* \"#utility.yul\":22586:22595   */\n      dup4\n        /* \"#utility.yul\":22582:22600   */\n      add\n        /* \"#utility.yul\":22573:22579   */\n      dup6\n        /* \"#utility.yul\":22529:22601   */\n      tag_420\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":22611:22677   */\n      tag_674\n        /* \"#utility.yul\":22673:22675   */\n      0x40\n        /* \"#utility.yul\":22662:22671   */\n      dup4\n        /* \"#utility.yul\":22658:22676   */\n      add\n        /* \"#utility.yul\":22649:22655   */\n      dup5\n        /* \"#utility.yul\":22611:22677   */\n      tag_435\n      jump\t// in\n    tag_674:\n        /* \"#utility.yul\":22254:22684   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22690:22852   */\n    tag_465:\n        /* \"#utility.yul\":22830:22844   */\n      0x41505920746f6f20686967680000000000000000000000000000000000000000\n        /* \"#utility.yul\":22826:22827   */\n      0x00\n        /* \"#utility.yul\":22818:22824   */\n      dup3\n        /* \"#utility.yul\":22814:22828   */\n      add\n        /* \"#utility.yul\":22807:22845   */\n      mstore\n        /* \"#utility.yul\":22690:22852   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22858:23224   */\n    tag_466:\n        /* \"#utility.yul\":23000:23003   */\n      0x00\n        /* \"#utility.yul\":23021:23088   */\n      tag_677\n        /* \"#utility.yul\":23085:23087   */\n      0x0c\n        /* \"#utility.yul\":23080:23083   */\n      dup4\n        /* \"#utility.yul\":23021:23088   */\n      tag_442\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":23014:23088   */\n      swap2\n      pop\n        /* \"#utility.yul\":23097:23190   */\n      tag_678\n        /* \"#utility.yul\":23186:23189   */\n      dup3\n        /* \"#utility.yul\":23097:23190   */\n      tag_465\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":23215:23217   */\n      0x20\n        /* \"#utility.yul\":23210:23213   */\n      dup3\n        /* \"#utility.yul\":23206:23218   */\n      add\n        /* \"#utility.yul\":23199:23218   */\n      swap1\n      pop\n        /* \"#utility.yul\":22858:23224   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23230:23649   */\n    tag_264:\n        /* \"#utility.yul\":23396:23400   */\n      0x00\n        /* \"#utility.yul\":23434:23436   */\n      0x20\n        /* \"#utility.yul\":23423:23432   */\n      dup3\n        /* \"#utility.yul\":23419:23437   */\n      add\n        /* \"#utility.yul\":23411:23437   */\n      swap1\n      pop\n        /* \"#utility.yul\":23483:23492   */\n      dup2\n        /* \"#utility.yul\":23477:23481   */\n      dup2\n        /* \"#utility.yul\":23473:23493   */\n      sub\n        /* \"#utility.yul\":23469:23470   */\n      0x00\n        /* \"#utility.yul\":23458:23467   */\n      dup4\n        /* \"#utility.yul\":23454:23471   */\n      add\n        /* \"#utility.yul\":23447:23494   */\n      mstore\n        /* \"#utility.yul\":23511:23642   */\n      tag_680\n        /* \"#utility.yul\":23637:23641   */\n      dup2\n        /* \"#utility.yul\":23511:23642   */\n      tag_466\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":23503:23642   */\n      swap1\n      pop\n        /* \"#utility.yul\":23230:23649   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23655:23975   */\n    tag_290:\n        /* \"#utility.yul\":23770:23774   */\n      0x00\n        /* \"#utility.yul\":23808:23810   */\n      0x40\n        /* \"#utility.yul\":23797:23806   */\n      dup3\n        /* \"#utility.yul\":23793:23811   */\n      add\n        /* \"#utility.yul\":23785:23811   */\n      swap1\n      pop\n        /* \"#utility.yul\":23821:23892   */\n      tag_682\n        /* \"#utility.yul\":23889:23890   */\n      0x00\n        /* \"#utility.yul\":23878:23887   */\n      dup4\n        /* \"#utility.yul\":23874:23891   */\n      add\n        /* \"#utility.yul\":23865:23871   */\n      dup6\n        /* \"#utility.yul\":23821:23892   */\n      tag_420\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":23902:23968   */\n      tag_683\n        /* \"#utility.yul\":23964:23966   */\n      0x20\n        /* \"#utility.yul\":23953:23962   */\n      dup4\n        /* \"#utility.yul\":23949:23967   */\n      add\n        /* \"#utility.yul\":23940:23946   */\n      dup5\n        /* \"#utility.yul\":23902:23968   */\n      tag_435\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":23655:23975   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23981:24155   */\n    tag_467:\n        /* \"#utility.yul\":24121:24147   */\n      0x5a65726f2061646472657373206e6f7420616c6c6f7765640000000000000000\n        /* \"#utility.yul\":24117:24118   */\n      0x00\n        /* \"#utility.yul\":24109:24115   */\n      dup3\n        /* \"#utility.yul\":24105:24119   */\n      add\n        /* \"#utility.yul\":24098:24148   */\n      mstore\n        /* \"#utility.yul\":23981:24155   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24161:24527   */\n    tag_468:\n        /* \"#utility.yul\":24303:24306   */\n      0x00\n        /* \"#utility.yul\":24324:24391   */\n      tag_686\n        /* \"#utility.yul\":24388:24390   */\n      0x18\n        /* \"#utility.yul\":24383:24386   */\n      dup4\n        /* \"#utility.yul\":24324:24391   */\n      tag_442\n      jump\t// in\n    tag_686:\n        /* \"#utility.yul\":24317:24391   */\n      swap2\n      pop\n        /* \"#utility.yul\":24400:24493   */\n      tag_687\n        /* \"#utility.yul\":24489:24492   */\n      dup3\n        /* \"#utility.yul\":24400:24493   */\n      tag_467\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":24518:24520   */\n      0x20\n        /* \"#utility.yul\":24513:24516   */\n      dup3\n        /* \"#utility.yul\":24509:24521   */\n      add\n        /* \"#utility.yul\":24502:24521   */\n      swap1\n      pop\n        /* \"#utility.yul\":24161:24527   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24533:24952   */\n    tag_340:\n        /* \"#utility.yul\":24699:24703   */\n      0x00\n        /* \"#utility.yul\":24737:24739   */\n      0x20\n        /* \"#utility.yul\":24726:24735   */\n      dup3\n        /* \"#utility.yul\":24722:24740   */\n      add\n        /* \"#utility.yul\":24714:24740   */\n      swap1\n      pop\n        /* \"#utility.yul\":24786:24795   */\n      dup2\n        /* \"#utility.yul\":24780:24784   */\n      dup2\n        /* \"#utility.yul\":24776:24796   */\n      sub\n        /* \"#utility.yul\":24772:24773   */\n      0x00\n        /* \"#utility.yul\":24761:24770   */\n      dup4\n        /* \"#utility.yul\":24757:24774   */\n      add\n        /* \"#utility.yul\":24750:24797   */\n      mstore\n        /* \"#utility.yul\":24814:24945   */\n      tag_689\n        /* \"#utility.yul\":24940:24944   */\n      dup2\n        /* \"#utility.yul\":24814:24945   */\n      tag_468\n      jump\t// in\n    tag_689:\n        /* \"#utility.yul\":24806:24945   */\n      swap1\n      pop\n        /* \"#utility.yul\":24533:24952   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24958:25130   */\n    tag_469:\n        /* \"#utility.yul\":25098:25122   */\n      0x4e6f207265776172647320746f20776974686472617700000000000000000000\n        /* \"#utility.yul\":25094:25095   */\n      0x00\n        /* \"#utility.yul\":25086:25092   */\n      dup3\n        /* \"#utility.yul\":25082:25096   */\n      add\n        /* \"#utility.yul\":25075:25123   */\n      mstore\n        /* \"#utility.yul\":24958:25130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25136:25502   */\n    tag_470:\n        /* \"#utility.yul\":25278:25281   */\n      0x00\n        /* \"#utility.yul\":25299:25366   */\n      tag_692\n        /* \"#utility.yul\":25363:25365   */\n      0x16\n        /* \"#utility.yul\":25358:25361   */\n      dup4\n        /* \"#utility.yul\":25299:25366   */\n      tag_442\n      jump\t// in\n    tag_692:\n        /* \"#utility.yul\":25292:25366   */\n      swap2\n      pop\n        /* \"#utility.yul\":25375:25468   */\n      tag_693\n        /* \"#utility.yul\":25464:25467   */\n      dup3\n        /* \"#utility.yul\":25375:25468   */\n      tag_469\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":25493:25495   */\n      0x20\n        /* \"#utility.yul\":25488:25491   */\n      dup3\n        /* \"#utility.yul\":25484:25496   */\n      add\n        /* \"#utility.yul\":25477:25496   */\n      swap1\n      pop\n        /* \"#utility.yul\":25136:25502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25508:25927   */\n    tag_349:\n        /* \"#utility.yul\":25674:25678   */\n      0x00\n        /* \"#utility.yul\":25712:25714   */\n      0x20\n        /* \"#utility.yul\":25701:25710   */\n      dup3\n        /* \"#utility.yul\":25697:25715   */\n      add\n        /* \"#utility.yul\":25689:25715   */\n      swap1\n      pop\n        /* \"#utility.yul\":25761:25770   */\n      dup2\n        /* \"#utility.yul\":25755:25759   */\n      dup2\n        /* \"#utility.yul\":25751:25771   */\n      sub\n        /* \"#utility.yul\":25747:25748   */\n      0x00\n        /* \"#utility.yul\":25736:25745   */\n      dup4\n        /* \"#utility.yul\":25732:25749   */\n      add\n        /* \"#utility.yul\":25725:25772   */\n      mstore\n        /* \"#utility.yul\":25789:25920   */\n      tag_695\n        /* \"#utility.yul\":25915:25919   */\n      dup2\n        /* \"#utility.yul\":25789:25920   */\n      tag_470\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":25781:25920   */\n      swap1\n      pop\n        /* \"#utility.yul\":25508:25927   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25933:26106   */\n    tag_471:\n        /* \"#utility.yul\":26073:26098   */\n      0x556e737570706f72746564206c6f636b20706572696f64000000000000000000\n        /* \"#utility.yul\":26069:26070   */\n      0x00\n        /* \"#utility.yul\":26061:26067   */\n      dup3\n        /* \"#utility.yul\":26057:26071   */\n      add\n        /* \"#utility.yul\":26050:26099   */\n      mstore\n        /* \"#utility.yul\":25933:26106   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26112:26478   */\n    tag_472:\n        /* \"#utility.yul\":26254:26257   */\n      0x00\n        /* \"#utility.yul\":26275:26342   */\n      tag_698\n        /* \"#utility.yul\":26339:26341   */\n      0x17\n        /* \"#utility.yul\":26334:26337   */\n      dup4\n        /* \"#utility.yul\":26275:26342   */\n      tag_442\n      jump\t// in\n    tag_698:\n        /* \"#utility.yul\":26268:26342   */\n      swap2\n      pop\n        /* \"#utility.yul\":26351:26444   */\n      tag_699\n        /* \"#utility.yul\":26440:26443   */\n      dup3\n        /* \"#utility.yul\":26351:26444   */\n      tag_471\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":26469:26471   */\n      0x20\n        /* \"#utility.yul\":26464:26467   */\n      dup3\n        /* \"#utility.yul\":26460:26472   */\n      add\n        /* \"#utility.yul\":26453:26472   */\n      swap1\n      pop\n        /* \"#utility.yul\":26112:26478   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26484:26903   */\n    tag_382:\n        /* \"#utility.yul\":26650:26654   */\n      0x00\n        /* \"#utility.yul\":26688:26690   */\n      0x20\n        /* \"#utility.yul\":26677:26686   */\n      dup3\n        /* \"#utility.yul\":26673:26691   */\n      add\n        /* \"#utility.yul\":26665:26691   */\n      swap1\n      pop\n        /* \"#utility.yul\":26737:26746   */\n      dup2\n        /* \"#utility.yul\":26731:26735   */\n      dup2\n        /* \"#utility.yul\":26727:26747   */\n      sub\n        /* \"#utility.yul\":26723:26724   */\n      0x00\n        /* \"#utility.yul\":26712:26721   */\n      dup4\n        /* \"#utility.yul\":26708:26725   */\n      add\n        /* \"#utility.yul\":26701:26748   */\n      mstore\n        /* \"#utility.yul\":26765:26896   */\n      tag_701\n        /* \"#utility.yul\":26891:26895   */\n      dup2\n        /* \"#utility.yul\":26765:26896   */\n      tag_472\n      jump\t// in\n    tag_701:\n        /* \"#utility.yul\":26757:26896   */\n      swap1\n      pop\n        /* \"#utility.yul\":26484:26903   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26909:27090   */\n    tag_473:\n        /* \"#utility.yul\":27049:27082   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":27045:27046   */\n      0x00\n        /* \"#utility.yul\":27037:27043   */\n      dup3\n        /* \"#utility.yul\":27033:27047   */\n      add\n        /* \"#utility.yul\":27026:27083   */\n      mstore\n        /* \"#utility.yul\":26909:27090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27096:27462   */\n    tag_474:\n        /* \"#utility.yul\":27238:27241   */\n      0x00\n        /* \"#utility.yul\":27259:27326   */\n      tag_704\n        /* \"#utility.yul\":27323:27325   */\n      0x1f\n        /* \"#utility.yul\":27318:27321   */\n      dup4\n        /* \"#utility.yul\":27259:27326   */\n      tag_442\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":27252:27326   */\n      swap2\n      pop\n        /* \"#utility.yul\":27335:27428   */\n      tag_705\n        /* \"#utility.yul\":27424:27427   */\n      dup3\n        /* \"#utility.yul\":27335:27428   */\n      tag_473\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":27453:27455   */\n      0x20\n        /* \"#utility.yul\":27448:27451   */\n      dup3\n        /* \"#utility.yul\":27444:27456   */\n      add\n        /* \"#utility.yul\":27437:27456   */\n      swap1\n      pop\n        /* \"#utility.yul\":27096:27462   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27468:27887   */\n    tag_386:\n        /* \"#utility.yul\":27634:27638   */\n      0x00\n        /* \"#utility.yul\":27672:27674   */\n      0x20\n        /* \"#utility.yul\":27661:27670   */\n      dup3\n        /* \"#utility.yul\":27657:27675   */\n      add\n        /* \"#utility.yul\":27649:27675   */\n      swap1\n      pop\n        /* \"#utility.yul\":27721:27730   */\n      dup2\n        /* \"#utility.yul\":27715:27719   */\n      dup2\n        /* \"#utility.yul\":27711:27731   */\n      sub\n        /* \"#utility.yul\":27707:27708   */\n      0x00\n        /* \"#utility.yul\":27696:27705   */\n      dup4\n        /* \"#utility.yul\":27692:27709   */\n      add\n        /* \"#utility.yul\":27685:27732   */\n      mstore\n        /* \"#utility.yul\":27749:27880   */\n      tag_707\n        /* \"#utility.yul\":27875:27879   */\n      dup2\n        /* \"#utility.yul\":27749:27880   */\n      tag_474\n      jump\t// in\n    tag_707:\n        /* \"#utility.yul\":27741:27880   */\n      swap1\n      pop\n        /* \"#utility.yul\":27468:27887   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27893:28335   */\n    tag_391:\n        /* \"#utility.yul\":28042:28046   */\n      0x00\n        /* \"#utility.yul\":28080:28082   */\n      0x60\n        /* \"#utility.yul\":28069:28078   */\n      dup3\n        /* \"#utility.yul\":28065:28083   */\n      add\n        /* \"#utility.yul\":28057:28083   */\n      swap1\n      pop\n        /* \"#utility.yul\":28093:28164   */\n      tag_709\n        /* \"#utility.yul\":28161:28162   */\n      0x00\n        /* \"#utility.yul\":28150:28159   */\n      dup4\n        /* \"#utility.yul\":28146:28163   */\n      add\n        /* \"#utility.yul\":28137:28143   */\n      dup7\n        /* \"#utility.yul\":28093:28164   */\n      tag_441\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":28174:28246   */\n      tag_710\n        /* \"#utility.yul\":28242:28244   */\n      0x20\n        /* \"#utility.yul\":28231:28240   */\n      dup4\n        /* \"#utility.yul\":28227:28245   */\n      add\n        /* \"#utility.yul\":28218:28224   */\n      dup6\n        /* \"#utility.yul\":28174:28246   */\n      tag_441\n      jump\t// in\n    tag_710:\n        /* \"#utility.yul\":28256:28328   */\n      tag_711\n        /* \"#utility.yul\":28324:28326   */\n      0x40\n        /* \"#utility.yul\":28313:28322   */\n      dup4\n        /* \"#utility.yul\":28309:28327   */\n      add\n        /* \"#utility.yul\":28300:28306   */\n      dup5\n        /* \"#utility.yul\":28256:28328   */\n      tag_420\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":27893:28335   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28341:28673   */\n    tag_404:\n        /* \"#utility.yul\":28462:28466   */\n      0x00\n        /* \"#utility.yul\":28500:28502   */\n      0x40\n        /* \"#utility.yul\":28489:28498   */\n      dup3\n        /* \"#utility.yul\":28485:28503   */\n      add\n        /* \"#utility.yul\":28477:28503   */\n      swap1\n      pop\n        /* \"#utility.yul\":28513:28584   */\n      tag_713\n        /* \"#utility.yul\":28581:28582   */\n      0x00\n        /* \"#utility.yul\":28570:28579   */\n      dup4\n        /* \"#utility.yul\":28566:28583   */\n      add\n        /* \"#utility.yul\":28557:28563   */\n      dup6\n        /* \"#utility.yul\":28513:28584   */\n      tag_441\n      jump\t// in\n    tag_713:\n        /* \"#utility.yul\":28594:28666   */\n      tag_714\n        /* \"#utility.yul\":28662:28664   */\n      0x20\n        /* \"#utility.yul\":28651:28660   */\n      dup4\n        /* \"#utility.yul\":28647:28665   */\n      add\n        /* \"#utility.yul\":28638:28644   */\n      dup5\n        /* \"#utility.yul\":28594:28666   */\n      tag_420\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":28341:28673   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c826fc8dee317104c7366fc6fd9e4450caf7dfd0e6c32315cdc25ade692368c564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1112": {
									"entryPoint": null,
									"id": 1112,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_256": {
									"entryPoint": null,
									"id": 256,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 833,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1268,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address_fromMemory": {
									"entryPoint": 1288,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1368,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1672,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1498,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1408,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c": {
									"entryPoint": 1424,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd": {
									"entryPoint": 1528,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4958:10",
										"nodeType": "YulBlock",
										"src": "0:4958:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "956:552:10",
													"nodeType": "YulBlock",
													"src": "956:552:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1002:83:10",
																"nodeType": "YulBlock",
																"src": "1002:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1004:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1004:77:10"
																			},
																			"nativeSrc": "1004:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1004:79:10"
																		},
																		"nativeSrc": "1004:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1004:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "977:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "977:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "986:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "986:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "973:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "973:3:10"
																		},
																		"nativeSrc": "973:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "973:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "998:2:10",
																		"nodeType": "YulLiteral",
																		"src": "998:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "969:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "969:3:10"
																},
																"nativeSrc": "969:32:10",
																"nodeType": "YulFunctionCall",
																"src": "969:32:10"
															},
															"nativeSrc": "966:119:10",
															"nodeType": "YulIf",
															"src": "966:119:10"
														},
														{
															"nativeSrc": "1095:128:10",
															"nodeType": "YulBlock",
															"src": "1095:128:10",
															"statements": [
																{
																	"nativeSrc": "1110:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1110:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1124:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1124:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1114:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1114:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1139:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1139:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1185:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1185:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1196:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1181:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1181:3:10"
																				},
																				"nativeSrc": "1181:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1205:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1149:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1149:31:10"
																		},
																		"nativeSrc": "1149:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1149:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1139:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1139:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1233:129:10",
															"nodeType": "YulBlock",
															"src": "1233:129:10",
															"statements": [
																{
																	"nativeSrc": "1248:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1248:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1262:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1262:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1252:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1252:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1278:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1278:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1324:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1324:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1335:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1335:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1320:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1320:3:10"
																				},
																				"nativeSrc": "1320:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1320:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1344:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1344:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1288:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1288:31:10"
																		},
																		"nativeSrc": "1288:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1288:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1278:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1278:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1372:129:10",
															"nodeType": "YulBlock",
															"src": "1372:129:10",
															"statements": [
																{
																	"nativeSrc": "1387:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1387:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1401:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1401:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1391:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1391:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1417:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1417:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1463:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1463:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1474:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1474:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1459:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1459:3:10"
																				},
																				"nativeSrc": "1459:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1459:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1483:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1483:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1427:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1427:31:10"
																		},
																		"nativeSrc": "1427:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1427:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1417:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1417:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nativeSrc": "845:663:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "910:9:10",
														"nodeType": "YulTypedName",
														"src": "910:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "921:7:10",
														"nodeType": "YulTypedName",
														"src": "921:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "933:6:10",
														"nodeType": "YulTypedName",
														"src": "933:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "941:6:10",
														"nodeType": "YulTypedName",
														"src": "941:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "949:6:10",
														"nodeType": "YulTypedName",
														"src": "949:6:10",
														"type": ""
													}
												],
												"src": "845:663:10"
											},
											{
												"body": {
													"nativeSrc": "1579:53:10",
													"nodeType": "YulBlock",
													"src": "1579:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1596:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1596:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1619:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1619:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1601:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1601:17:10"
																		},
																		"nativeSrc": "1601:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1601:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1589:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:10"
																},
																"nativeSrc": "1589:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1589:37:10"
															},
															"nativeSrc": "1589:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1589:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1514:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1567:5:10",
														"nodeType": "YulTypedName",
														"src": "1567:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1574:3:10",
														"nodeType": "YulTypedName",
														"src": "1574:3:10",
														"type": ""
													}
												],
												"src": "1514:118:10"
											},
											{
												"body": {
													"nativeSrc": "1736:124:10",
													"nodeType": "YulBlock",
													"src": "1736:124:10",
													"statements": [
														{
															"nativeSrc": "1746:26:10",
															"nodeType": "YulAssignment",
															"src": "1746:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1758:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1758:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1769:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1769:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1754:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1754:3:10"
																},
																"nativeSrc": "1754:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1754:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1746:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1746:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1826:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1826:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1839:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1839:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1850:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1850:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1835:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1835:3:10"
																		},
																		"nativeSrc": "1835:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1835:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1782:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1782:43:10"
																},
																"nativeSrc": "1782:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1782:71:10"
															},
															"nativeSrc": "1782:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1782:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1638:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1708:9:10",
														"nodeType": "YulTypedName",
														"src": "1708:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1720:6:10",
														"nodeType": "YulTypedName",
														"src": "1720:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1731:4:10",
														"nodeType": "YulTypedName",
														"src": "1731:4:10",
														"type": ""
													}
												],
												"src": "1638:222:10"
											},
											{
												"body": {
													"nativeSrc": "1962:73:10",
													"nodeType": "YulBlock",
													"src": "1962:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1979:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1979:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1984:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1984:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:10"
																},
																"nativeSrc": "1972:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1972:19:10"
															},
															"nativeSrc": "1972:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1972:19:10"
														},
														{
															"nativeSrc": "2000:29:10",
															"nodeType": "YulAssignment",
															"src": "2000:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2019:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2019:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2024:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2024:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2015:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2015:3:10"
																},
																"nativeSrc": "2015:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2015:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2000:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2000:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1866:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1934:3:10",
														"nodeType": "YulTypedName",
														"src": "1934:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1939:6:10",
														"nodeType": "YulTypedName",
														"src": "1939:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1950:11:10",
														"nodeType": "YulTypedName",
														"src": "1950:11:10",
														"type": ""
													}
												],
												"src": "1866:169:10"
											},
											{
												"body": {
													"nativeSrc": "2147:65:10",
													"nodeType": "YulBlock",
													"src": "2147:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2169:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2169:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2177:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2177:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2165:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2165:3:10"
																		},
																		"nativeSrc": "2165:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2165:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
																		"kind": "string",
																		"nativeSrc": "2181:23:10",
																		"nodeType": "YulLiteral",
																		"src": "2181:23:10",
																		"type": "",
																		"value": "Invalid staking token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2158:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2158:6:10"
																},
																"nativeSrc": "2158:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2158:47:10"
															},
															"nativeSrc": "2158:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2158:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
												"nativeSrc": "2041:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "2139:6:10",
														"nodeType": "YulTypedName",
														"src": "2139:6:10",
														"type": ""
													}
												],
												"src": "2041:171:10"
											},
											{
												"body": {
													"nativeSrc": "2364:220:10",
													"nodeType": "YulBlock",
													"src": "2364:220:10",
													"statements": [
														{
															"nativeSrc": "2374:74:10",
															"nodeType": "YulAssignment",
															"src": "2374:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2440:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2440:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2445:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2445:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2381:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "2381:58:10"
																},
																"nativeSrc": "2381:67:10",
																"nodeType": "YulFunctionCall",
																"src": "2381:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2374:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2546:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2546:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																	"nativeSrc": "2457:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "2457:88:10"
																},
																"nativeSrc": "2457:93:10",
																"nodeType": "YulFunctionCall",
																"src": "2457:93:10"
															},
															"nativeSrc": "2457:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "2457:93:10"
														},
														{
															"nativeSrc": "2559:19:10",
															"nodeType": "YulAssignment",
															"src": "2559:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2570:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2575:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2566:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2566:3:10"
																},
																"nativeSrc": "2566:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2566:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2559:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2559:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2218:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2352:3:10",
														"nodeType": "YulTypedName",
														"src": "2352:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2360:3:10",
														"nodeType": "YulTypedName",
														"src": "2360:3:10",
														"type": ""
													}
												],
												"src": "2218:366:10"
											},
											{
												"body": {
													"nativeSrc": "2761:248:10",
													"nodeType": "YulBlock",
													"src": "2761:248:10",
													"statements": [
														{
															"nativeSrc": "2771:26:10",
															"nodeType": "YulAssignment",
															"src": "2771:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2783:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2794:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2794:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2779:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2779:3:10"
																},
																"nativeSrc": "2779:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2779:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2771:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2771:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2818:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2818:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2829:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2829:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2814:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2814:3:10"
																		},
																		"nativeSrc": "2814:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2814:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2837:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2837:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2843:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2843:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2833:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2833:3:10"
																		},
																		"nativeSrc": "2833:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2833:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2807:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2807:6:10"
																},
																"nativeSrc": "2807:47:10",
																"nodeType": "YulFunctionCall",
																"src": "2807:47:10"
															},
															"nativeSrc": "2807:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "2807:47:10"
														},
														{
															"nativeSrc": "2863:139:10",
															"nodeType": "YulAssignment",
															"src": "2863:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "2997:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2997:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2871:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "2871:124:10"
																},
																"nativeSrc": "2871:131:10",
																"nodeType": "YulFunctionCall",
																"src": "2871:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2863:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2863:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2590:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2741:9:10",
														"nodeType": "YulTypedName",
														"src": "2741:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2756:4:10",
														"nodeType": "YulTypedName",
														"src": "2756:4:10",
														"type": ""
													}
												],
												"src": "2590:419:10"
											},
											{
												"body": {
													"nativeSrc": "3121:64:10",
													"nodeType": "YulBlock",
													"src": "3121:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "3143:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3143:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3151:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3151:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3139:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3139:3:10"
																		},
																		"nativeSrc": "3139:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3139:14:10"
																	},
																	{
																		"hexValue": "496e76616c69642072657761726420746f6b656e",
																		"kind": "string",
																		"nativeSrc": "3155:22:10",
																		"nodeType": "YulLiteral",
																		"src": "3155:22:10",
																		"type": "",
																		"value": "Invalid reward token"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3132:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3132:6:10"
																},
																"nativeSrc": "3132:46:10",
																"nodeType": "YulFunctionCall",
																"src": "3132:46:10"
															},
															"nativeSrc": "3132:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "3132:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
												"nativeSrc": "3015:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "3113:6:10",
														"nodeType": "YulTypedName",
														"src": "3113:6:10",
														"type": ""
													}
												],
												"src": "3015:170:10"
											},
											{
												"body": {
													"nativeSrc": "3337:220:10",
													"nodeType": "YulBlock",
													"src": "3337:220:10",
													"statements": [
														{
															"nativeSrc": "3347:74:10",
															"nodeType": "YulAssignment",
															"src": "3347:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3413:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3418:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3418:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3354:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3354:58:10"
																},
																"nativeSrc": "3354:67:10",
																"nodeType": "YulFunctionCall",
																"src": "3354:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3347:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3519:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3519:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																	"nativeSrc": "3430:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "3430:88:10"
																},
																"nativeSrc": "3430:93:10",
																"nodeType": "YulFunctionCall",
																"src": "3430:93:10"
															},
															"nativeSrc": "3430:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "3430:93:10"
														},
														{
															"nativeSrc": "3532:19:10",
															"nodeType": "YulAssignment",
															"src": "3532:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3543:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3543:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3548:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3539:3:10"
																},
																"nativeSrc": "3539:12:10",
																"nodeType": "YulFunctionCall",
																"src": "3539:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3532:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3532:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3191:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "3325:3:10",
														"nodeType": "YulTypedName",
														"src": "3325:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3333:3:10",
														"nodeType": "YulTypedName",
														"src": "3333:3:10",
														"type": ""
													}
												],
												"src": "3191:366:10"
											},
											{
												"body": {
													"nativeSrc": "3734:248:10",
													"nodeType": "YulBlock",
													"src": "3734:248:10",
													"statements": [
														{
															"nativeSrc": "3744:26:10",
															"nodeType": "YulAssignment",
															"src": "3744:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3756:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3756:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3767:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3767:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3752:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3752:3:10"
																},
																"nativeSrc": "3752:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3752:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3744:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3744:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3791:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3791:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3802:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3802:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3787:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3787:3:10"
																		},
																		"nativeSrc": "3787:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3787:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3810:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3810:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3816:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3816:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3806:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3806:3:10"
																		},
																		"nativeSrc": "3806:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3806:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3780:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3780:6:10"
																},
																"nativeSrc": "3780:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3780:47:10"
															},
															"nativeSrc": "3780:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3780:47:10"
														},
														{
															"nativeSrc": "3836:139:10",
															"nodeType": "YulAssignment",
															"src": "3836:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "3970:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3970:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3844:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "3844:124:10"
																},
																"nativeSrc": "3844:131:10",
																"nodeType": "YulFunctionCall",
																"src": "3844:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3836:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3836:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3563:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3714:9:10",
														"nodeType": "YulTypedName",
														"src": "3714:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3729:4:10",
														"nodeType": "YulTypedName",
														"src": "3729:4:10",
														"type": ""
													}
												],
												"src": "3563:419:10"
											},
											{
												"body": {
													"nativeSrc": "4094:64:10",
													"nodeType": "YulBlock",
													"src": "4094:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4116:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4116:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4124:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4124:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4112:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4112:3:10"
																		},
																		"nativeSrc": "4112:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420666565207265636569766572",
																		"kind": "string",
																		"nativeSrc": "4128:22:10",
																		"nodeType": "YulLiteral",
																		"src": "4128:22:10",
																		"type": "",
																		"value": "Invalid fee receiver"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4105:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4105:6:10"
																},
																"nativeSrc": "4105:46:10",
																"nodeType": "YulFunctionCall",
																"src": "4105:46:10"
															},
															"nativeSrc": "4105:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "4105:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
												"nativeSrc": "3988:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "4086:6:10",
														"nodeType": "YulTypedName",
														"src": "4086:6:10",
														"type": ""
													}
												],
												"src": "3988:170:10"
											},
											{
												"body": {
													"nativeSrc": "4310:220:10",
													"nodeType": "YulBlock",
													"src": "4310:220:10",
													"statements": [
														{
															"nativeSrc": "4320:74:10",
															"nodeType": "YulAssignment",
															"src": "4320:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4386:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4386:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4391:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4327:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "4327:58:10"
																},
																"nativeSrc": "4327:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4327:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4320:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4320:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4492:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4492:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																	"nativeSrc": "4403:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "4403:88:10"
																},
																"nativeSrc": "4403:93:10",
																"nodeType": "YulFunctionCall",
																"src": "4403:93:10"
															},
															"nativeSrc": "4403:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "4403:93:10"
														},
														{
															"nativeSrc": "4505:19:10",
															"nodeType": "YulAssignment",
															"src": "4505:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4516:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4516:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4521:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4521:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4512:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4512:3:10"
																},
																"nativeSrc": "4512:12:10",
																"nodeType": "YulFunctionCall",
																"src": "4512:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4505:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4505:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "4164:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "4298:3:10",
														"nodeType": "YulTypedName",
														"src": "4298:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4306:3:10",
														"nodeType": "YulTypedName",
														"src": "4306:3:10",
														"type": ""
													}
												],
												"src": "4164:366:10"
											},
											{
												"body": {
													"nativeSrc": "4707:248:10",
													"nodeType": "YulBlock",
													"src": "4707:248:10",
													"statements": [
														{
															"nativeSrc": "4717:26:10",
															"nodeType": "YulAssignment",
															"src": "4717:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4729:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4729:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4740:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4740:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4725:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4725:3:10"
																},
																"nativeSrc": "4725:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4725:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4717:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4717:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4764:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4764:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4760:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4760:3:10"
																		},
																		"nativeSrc": "4760:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4760:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4783:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4783:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4789:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4789:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4779:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4779:3:10"
																		},
																		"nativeSrc": "4779:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4779:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:10"
																},
																"nativeSrc": "4753:47:10",
																"nodeType": "YulFunctionCall",
																"src": "4753:47:10"
															},
															"nativeSrc": "4753:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "4753:47:10"
														},
														{
															"nativeSrc": "4809:139:10",
															"nodeType": "YulAssignment",
															"src": "4809:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "4943:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4943:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "4817:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "4817:124:10"
																},
																"nativeSrc": "4817:131:10",
																"nodeType": "YulFunctionCall",
																"src": "4817:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4809:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4809:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4536:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4687:9:10",
														"nodeType": "YulTypedName",
														"src": "4687:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4702:4:10",
														"nodeType": "YulTypedName",
														"src": "4702:4:10",
														"type": ""
													}
												],
												"src": "4536:419:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid staking token\")\n\n    }\n\n    function abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid reward token\")\n\n    }\n\n    function abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid fee receiver\")\n\n    }\n\n    function abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH3 0x278D00 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x4F1A00 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x76A700 PUSH3 0xFFFFFF AND DUP2 MSTORE POP PUSH1 0x3 SWAP1 PUSH1 0x3 PUSH2 0x47 SWAP3 SWAP2 SWAP1 PUSH2 0x402 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH2 0x1F4 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x3E8 PUSH2 0xFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x5DC PUSH2 0xFFFF AND DUP2 MSTORE POP PUSH1 0x6 SWAP1 PUSH1 0x3 PUSH2 0x85 SWAP3 SWAP2 SWAP1 PUSH2 0x449 JUMP JUMPDEST POP CALLVALUE DUP1 ISZERO PUSH2 0x91 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3763 CODESIZE SUB DUP1 PUSH2 0x3763 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0xB3 SWAP2 SWAP1 PUSH2 0x508 JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x124 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x567 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x133 DUP2 PUSH2 0x341 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A0 SWAP1 PUSH2 0x5DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x217 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20E SWAP1 PUSH2 0x642 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x285 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x27C SWAP1 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP DUP2 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP PUSH2 0x6C8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 PUSH1 0x3 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x438 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x437 JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH3 0xFFFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x415 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x445 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 PUSH1 0x3 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x47E JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x47D JUMPI DUP3 MLOAD DUP3 SWAP1 PUSH2 0xFFFF AND SWAP1 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x45C JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x48B SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x4A6 JUMPI PUSH0 DUP2 PUSH0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x490 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4D7 DUP3 PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E7 DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP2 EQ PUSH2 0x4F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x502 DUP2 PUSH2 0x4DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x51F JUMPI PUSH2 0x51E PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x52C DUP7 DUP3 DUP8 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x53D DUP7 DUP3 DUP8 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x54E DUP7 DUP3 DUP8 ADD PUSH2 0x4F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x561 DUP2 PUSH2 0x4CD JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x57A PUSH0 DUP4 ADD DUP5 PUSH2 0x558 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B696E6720746F6B656E0000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x5C4 PUSH1 0x15 DUP4 PUSH2 0x580 JUMP JUMPDEST SWAP2 POP PUSH2 0x5CF DUP3 PUSH2 0x590 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x5F1 DUP2 PUSH2 0x5B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C69642072657761726420746F6B656E000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x62C PUSH1 0x14 DUP4 PUSH2 0x580 JUMP JUMPDEST SWAP2 POP PUSH2 0x637 DUP3 PUSH2 0x5F8 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x659 DUP2 PUSH2 0x620 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420666565207265636569766572000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x694 PUSH1 0x14 DUP4 PUSH2 0x580 JUMP JUMPDEST SWAP2 POP PUSH2 0x69F DUP3 PUSH2 0x660 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x6C1 DUP2 PUSH2 0x688 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x307C PUSH2 0x6E7 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0xECA ADD MSTORE PUSH2 0x1239 ADD MSTORE PUSH2 0x307C PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC7B8981C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF55AD3EC EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x5CB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xD854FB75 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x543 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xB3F00674 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xBBD36B61 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xC69BEBE4 EQ PUSH2 0x4E1 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x95A29060 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x481 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x584B62A1 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x794A62D3 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x7A5C08AE EQ PUSH2 0x40B JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x5ACD2E4C EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x6B494DEF EQ PUSH2 0x395 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3D92F4E2 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x3D92F4E2 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4060E257 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x4C8F2A78 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x561B2463 EQ PUSH2 0x30A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x630E463 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x1747E0B0 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x38BCEAAC EQ PUSH2 0x282 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2630 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x1111 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH2 0x1224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A5 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x191A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DF PUSH2 0x1A1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH2 0x1B89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50F PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1D84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1E8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6E6 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x65A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x757 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D9 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD ISZERO PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD DUP1 ISZERO PUSH2 0x904 JUMPI POP DUP1 TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x90D JUMPI TIMESTAMP SWAP1 POP JUMPDEST PUSH0 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x93D DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST PUSH2 0x1F8A JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST DUP4 PUSH1 0x6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x9BD PUSH2 0x200C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA72 SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF8 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB51 JUMPI PUSH2 0xB50 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA7 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3F SWAP1 PUSH2 0x2C09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC53 DUP4 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD LT ISZERO PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP1 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST TIMESTAMP PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x593662CBE53E88DF3FEF748665B8C3D3142E5D34DC1B24290F7E953537A00183 DUP6 DUP5 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xD48 SWAP3 SWAP2 SWAP1 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xD5B PUSH2 0x205B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xD6D JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD7F PUSH2 0x200C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE4 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE34 SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE77 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF0F CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2064 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD TIMESTAMP PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP4 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3DF45CB339F96AE4BDB793EFCB6E22100DD0DC4FD739A4EE2033FE67EA35AF96 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1090 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x10A1 PUSH2 0x205B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10BF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x1119 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1153 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1198 SWAP1 PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x11B6 JUMPI PUSH2 0x11B5 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH32 0x787A1FCA55641CE34A438271930BBB9401DF20DB2B4F510D4F252227D85DF43D DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11EC SWAP3 SWAP2 SWAP1 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x121A JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x122C PUSH2 0x20E6 JUMP JUMPDEST PUSH2 0x1235 PUSH0 PUSH2 0x216D JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH3 0x30D40 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x136E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1365 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x141D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA2D7B35E7CC82247C5AE7E8AE2DC078C2B144B76A6B1068887B3C8892C15DA5 DUP5 DUP4 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x14A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x14B9 PUSH2 0x200C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151E SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156E SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1621 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1671 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1668 SWAP1 PUSH2 0x2C09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x167C DUP4 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD LT ISZERO PUSH2 0x16C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BA SWAP1 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1700 JUMPI POP PUSH0 DUP3 PUSH1 0x4 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x182B JUMPI PUSH0 DUP2 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1716 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x32 DUP4 PUSH2 0x1729 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1790 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1897 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1877 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x188F SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x18DF SWAP3 SWAP2 SWAP1 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x18F2 PUSH2 0x205B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1922 PUSH2 0x20E6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1964 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195B SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19B2 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2064 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD15DAFC20A4E1CCFF3E1B0A321BA0EE5C9B2AA1B9C7CAE08FB5A324537536244 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A10 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1A23 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x752D7E161FF5146F80E3820893176EB40532811E5E20400DFDDE57455213706A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1A95 PUSH2 0x20E6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFA SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1B91 PUSH2 0x200C JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD8 SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1C64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5B SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1CF2 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x222E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBD1EA9966F82CCB966523D3922A6E4AD4BF3EA70E9201BD7A106DE847CC5E616 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1D38 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1D49 PUSH2 0x205B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D8C PUSH2 0x20E6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DFC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x216D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 LT PUSH2 0x1E4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E43 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E96 PUSH2 0x20E6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFB SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5289BA11778999F4DFB9415023783188D42BBB5DB0612CBFBE55999069612A0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1FCB JUMPI PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1FAD JUMPI PUSH2 0x1FAC PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 SUB PUSH2 0x1FBE JUMPI DUP1 SWAP2 POP POP PUSH2 0x2007 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F90 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFE SWAP1 PUSH2 0x2F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2051 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2048 SWAP1 PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x20E0 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2099 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x22AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x20EE PUSH2 0x2348 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x210C PUSH2 0x1271 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x216B JUMPI PUSH2 0x212F PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2162 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x22A8 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2261 SWAP3 SWAP2 SWAP1 PUSH2 0x301F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x22AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x22CC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x22E5 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x2300 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2342 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2339 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237C DUP3 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x238C DUP2 PUSH2 0x2372 JUMP JUMPDEST DUP2 EQ PUSH2 0x2396 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23A7 DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C2 JUMPI PUSH2 0x23C1 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23CF DUP5 DUP3 DUP6 ADD PUSH2 0x2399 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23EA DUP2 PUSH2 0x23D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2403 PUSH0 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243B DUP2 PUSH2 0x23D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2455 DUP2 PUSH2 0x2441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x246F PUSH0 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2482 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2495 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x24A8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x244C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x24BB PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x244C JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x24CE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24DF DUP4 DUP4 PUSH2 0x245B JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2501 DUP3 PUSH2 0x2409 JUMP JUMPDEST PUSH2 0x250B DUP2 DUP6 PUSH2 0x2413 JUMP JUMPDEST SWAP4 POP PUSH2 0x2516 DUP4 PUSH2 0x2423 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2546 JUMPI DUP2 MLOAD PUSH2 0x252D DUP9 DUP3 PUSH2 0x24D4 JUMP JUMPDEST SWAP8 POP PUSH2 0x2538 DUP4 PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2519 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x256B DUP2 DUP5 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x257C DUP2 PUSH2 0x23D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2586 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2597 DUP2 PUSH2 0x2573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B3 JUMPI PUSH2 0x25B2 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25C0 DUP6 DUP3 DUP7 ADD PUSH2 0x2399 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25D1 DUP6 DUP3 DUP7 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F0 JUMPI PUSH2 0x25EF PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25FD DUP5 DUP3 DUP6 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x260F DUP2 PUSH2 0x2441 JUMP JUMPDEST DUP2 EQ PUSH2 0x2619 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x262A DUP2 PUSH2 0x2606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2647 JUMPI PUSH2 0x2646 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2654 DUP7 DUP3 DUP8 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2665 DUP7 DUP3 DUP8 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2676 DUP7 DUP3 DUP8 ADD PUSH2 0x261C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2689 DUP2 PUSH2 0x2441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x26A2 PUSH0 DUP4 ADD DUP10 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x26AF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x26BC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x26C9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x26D6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x26E3 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2704 JUMPI PUSH2 0x2703 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2711 DUP6 DUP3 DUP7 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2722 DUP6 DUP3 DUP7 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x273F PUSH0 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2768 PUSH2 0x2763 PUSH2 0x275E DUP5 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x2745 JUMP JUMPDEST PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2779 DUP3 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x278A DUP3 PUSH2 0x276F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x279A DUP2 PUSH2 0x2780 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2791 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x2372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27DB PUSH0 DUP4 ADD DUP5 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206163636F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2825 PUSH1 0xF DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2830 DUP3 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2852 DUP2 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x288D PUSH1 0x13 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2898 DUP3 PUSH2 0x2859 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28BA DUP2 PUSH2 0x2881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2922 PUSH1 0xF DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x292D DUP3 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x294F DUP2 PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x298D DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2998 DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29AF PUSH2 0x2956 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29E3 JUMPI PUSH2 0x29E2 PUSH2 0x2956 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F3 DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x29FE DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A0C DUP2 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A23 JUMPI PUSH2 0x2A22 PUSH2 0x2956 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A61 DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6C DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A7C JUMPI PUSH2 0x2A7B PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920454F412063616E2063616C6C000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ABB PUSH1 0x11 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC6 DUP3 PUSH2 0x2A87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE8 DUP2 PUSH2 0x2AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E7472616374207061757365640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B23 PUSH1 0xF DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2E DUP3 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B50 DUP2 PUSH2 0x2B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4175746F2D7374616B696E672064697361626C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8B PUSH1 0x15 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B96 DUP3 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BB8 DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374696C6C206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF3 PUSH1 0xC DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFE DUP3 PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C20 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C5B PUSH1 0x18 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C66 DUP3 PUSH2 0x2C27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C88 DUP2 PUSH2 0x2C4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CA2 PUSH0 DUP4 ADD DUP6 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2CAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420706572696F6420696E646578000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CEA PUSH1 0x14 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF5 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D17 DUP2 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D52 PUSH1 0xB DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5D DUP3 PUSH2 0x2D1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D7F DUP2 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D99 PUSH0 DUP4 ADD DUP7 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2DA6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x41505920746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEF PUSH1 0xC DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFA DUP3 PUSH2 0x2DBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E1C DUP2 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E36 PUSH0 DUP4 ADD DUP6 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2E43 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E7E PUSH1 0x18 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E89 DUP3 PUSH2 0x2E4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EAB DUP2 PUSH2 0x2E72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE6 PUSH1 0x16 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF1 DUP3 PUSH2 0x2EB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F13 DUP2 PUSH2 0x2EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E737570706F72746564206C6F636B20706572696F64000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4E PUSH1 0x17 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F59 DUP3 PUSH2 0x2F1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F7B DUP2 PUSH2 0x2F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB6 PUSH1 0x1F DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC1 DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE3 DUP2 PUSH2 0x2FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FFD PUSH0 DUP4 ADD DUP7 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x300A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x3017 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3032 PUSH0 DUP4 ADD DUP6 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x303F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x26 0xFC DUP14 RETURNCONTRACT 0x31 PUSH18 0x4C7366FC6FD9E4450CAF7DFD0E6C32315CD 0xC2 GAS 0xDE PUSH10 0x2368C564736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "418:10044:9:-:0;;;817:59;;;;;;;;850:7;817:59;;;;;;859:7;817:59;;;;;;868:7;817:59;;;;;;;;;;;;;:::i;:::-;;882:46;;;;;;;;912:3;882:46;;;;;;917:4;882:46;;;;;;923:4;882:46;;;;;;;;;;;;;:::i;:::-;;2423:532;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2554:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:4;1821:7;:22;;;;2634:1:9::2;2602:34;;:20;:34;;::::0;2594:68:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2711:1;2680:33;;:19;:33;;::::0;2672:66:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2780:1;2756:26;;:12;:26;;::::0;2748:59:::2;;;;;;;;;;;;:::i;:::-;;;;;;;;;2840:20;2818:43;;;;;;;;::::0;::::2;2892:19;2871:11;;:41;;;;;;;;;;;;;;;;;;2936:12;2922:11;;:26;;;;;;;;;;;;;;;;;;2423:532:::0;;;418:10044;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;418:10044:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:663::-;933:6;941;949;998:2;986:9;977:7;973:23;969:32;966:119;;;1004:79;;:::i;:::-;966:119;1124:1;1149:64;1205:7;1196:6;1185:9;1181:22;1149:64;:::i;:::-;1139:74;;1095:128;1262:2;1288:64;1344:7;1335:6;1324:9;1320:22;1288:64;:::i;:::-;1278:74;;1233:129;1401:2;1427:64;1483:7;1474:6;1463:9;1459:22;1427:64;:::i;:::-;1417:74;;1372:129;845:663;;;;;:::o;1514:118::-;1601:24;1619:5;1601:24;:::i;:::-;1596:3;1589:37;1514:118;;:::o;1638:222::-;1731:4;1769:2;1758:9;1754:18;1746:26;;1782:71;1850:1;1839:9;1835:17;1826:6;1782:71;:::i;:::-;1638:222;;;;:::o;1866:169::-;1950:11;1984:6;1979:3;1972:19;2024:4;2019:3;2015:14;2000:29;;1866:169;;;;:::o;2041:171::-;2181:23;2177:1;2169:6;2165:14;2158:47;2041:171;:::o;2218:366::-;2360:3;2381:67;2445:2;2440:3;2381:67;:::i;:::-;2374:74;;2457:93;2546:3;2457:93;:::i;:::-;2575:2;2570:3;2566:12;2559:19;;2218:366;;;:::o;2590:419::-;2756:4;2794:2;2783:9;2779:18;2771:26;;2843:9;2837:4;2833:20;2829:1;2818:9;2814:17;2807:47;2871:131;2997:4;2871:131;:::i;:::-;2863:139;;2590:419;;;:::o;3015:170::-;3155:22;3151:1;3143:6;3139:14;3132:46;3015:170;:::o;3191:366::-;3333:3;3354:67;3418:2;3413:3;3354:67;:::i;:::-;3347:74;;3430:93;3519:3;3430:93;:::i;:::-;3548:2;3543:3;3539:12;3532:19;;3191:366;;;:::o;3563:419::-;3729:4;3767:2;3756:9;3752:18;3744:26;;3816:9;3810:4;3806:20;3802:1;3791:9;3787:17;3780:47;3844:131;3970:4;3844:131;:::i;:::-;3836:139;;3563:419;;;:::o;3988:170::-;4128:22;4124:1;4116:6;4112:14;4105:46;3988:170;:::o;4164:366::-;4306:3;4327:67;4391:2;4386:3;4327:67;:::i;:::-;4320:74;;4403:93;4492:3;4403:93;:::i;:::-;4521:2;4516:3;4512:12;4505:19;;4164:366;;;:::o;4536:419::-;4702:4;4740:2;4729:9;4725:18;4717:26;;4789:9;4783:4;4779:20;4775:1;4764:9;4760:17;4753:47;4817:131;4943:4;4817:131;:::i;:::-;4809:139;;4536:419;;;:::o;418:10044:9:-;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@AUTO_COMPOUND_FEE_913": {
									"entryPoint": 2474,
									"id": 913,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_APY_916": {
									"entryPoint": 2479,
									"id": 916,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@SECONDS_PER_YEAR_910": {
									"entryPoint": 7508,
									"id": 910,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_802": {
									"entryPoint": 8877,
									"id": 802,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 8422,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_856": {
									"entryPoint": 9032,
									"id": 856,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_290": {
									"entryPoint": 8283,
									"id": 290,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_282": {
									"entryPoint": 8204,
									"id": 282,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 8557,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addRewardPoolFunds_1708": {
									"entryPoint": 6426,
									"id": 1708,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@apyRates_932": {
									"entryPoint": 4619,
									"id": 932,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@calculateReward_1298": {
									"entryPoint": 1777,
									"id": 1298,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@claimReward_1460": {
									"entryPoint": 5297,
									"id": 1460,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@compoundReward_1670": {
									"entryPoint": 2485,
									"id": 1670,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@estimateMintGas_1880": {
									"entryPoint": 4699,
									"id": 1880,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feeReceiver_961": {
									"entryPoint": 6389,
									"id": 961,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getActiveStakes_1832": {
									"entryPoint": 1532,
									"id": 1832,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getFeeReceiver_1850": {
									"entryPoint": 7516,
									"id": 1850,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getLockPeriod_1871": {
									"entryPoint": 7688,
									"id": 1871,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getPeriodIndex_1333": {
									"entryPoint": 8074,
									"id": 1333,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getRewardPoolBalance_1841": {
									"entryPoint": 7499,
									"id": 1841,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@lockPeriods_924": {
									"entryPoint": 3422,
									"id": 924,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 4721,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paused_1050": {
									"entryPoint": 4600,
									"id": 1050,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pendingRewardWithdrawals_955": {
									"entryPoint": 1511,
									"id": 955,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 4644,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPoolBalance_959": {
									"entryPoint": 4709,
									"id": 959,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_907": {
									"entryPoint": 7785,
									"id": 907,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeTransferFrom_452": {
									"entryPoint": 8292,
									"id": 452,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_425": {
									"entryPoint": 8750,
									"id": 425,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setAPY_1745": {
									"entryPoint": 4369,
									"id": 1745,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stake_1193": {
									"entryPoint": 3447,
									"id": 1193,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@stakes_951": {
									"entryPoint": 4262,
									"id": 951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingToken_904": {
									"entryPoint": 4663,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@toggleAutoStake_1559": {
									"entryPoint": 4760,
									"id": 1559,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@togglePause_1817": {
									"entryPoint": 6683,
									"id": 1817,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalStaked_957": {
									"entryPoint": 4715,
									"id": 957,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 7556,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateFeeReceiver_1801": {
									"entryPoint": 6797,
									"id": 1801,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateRewardToken_1774": {
									"entryPoint": 7822,
									"id": 1774,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawRewards_1504": {
									"entryPoint": 7049,
									"id": 1504,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 9113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 9756,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9609,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9629,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9691,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 9966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_bool": {
									"entryPoint": 9776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encodeUpdatedPos_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr": {
									"entryPoint": 9428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 9292,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9856,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack": {
									"entryPoint": 10129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11135,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11031,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10927,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12098,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11590,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10265,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11239,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11890,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12202,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr": {
									"entryPoint": 9307,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 9266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 10184,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12266,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12319,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 9555,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 10028,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed": {
									"entryPoint": 10144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10403,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11065,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10961,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12132,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11624,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11781,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11520,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10552,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11273,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11924,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12236,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 11811,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11407,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 11654,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 9871,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9251,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 9451,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 9235,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10839,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10729,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9074,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9043,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9176,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$380_to_t_address": {
									"entryPoint": 10112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 10095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 10062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 10053,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10582,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10794,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 10433,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9039,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf": {
									"entryPoint": 11095,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070": {
									"entryPoint": 10329,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8": {
									"entryPoint": 11303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15": {
									"entryPoint": 10991,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2": {
									"entryPoint": 10887,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9": {
									"entryPoint": 12058,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4": {
									"entryPoint": 11550,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5": {
									"entryPoint": 11707,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c": {
									"entryPoint": 11954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c": {
									"entryPoint": 11446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf": {
									"entryPoint": 10478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600": {
									"entryPoint": 10225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583": {
									"entryPoint": 11199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8": {
									"entryPoint": 11850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12162,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 9734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:28676:10",
										"nodeType": "YulBlock",
										"src": "0:28676:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "748:87:10",
													"nodeType": "YulBlock",
													"src": "748:87:10",
													"statements": [
														{
															"nativeSrc": "758:29:10",
															"nodeType": "YulAssignment",
															"src": "758:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:10"
																},
																"nativeSrc": "767:20:10",
																"nodeType": "YulFunctionCall",
																"src": "767:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:10"
																},
																"nativeSrc": "796:33:10",
																"nodeType": "YulFunctionCall",
																"src": "796:33:10"
															},
															"nativeSrc": "796:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:10",
														"nodeType": "YulTypedName",
														"src": "726:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:10",
														"nodeType": "YulTypedName",
														"src": "734:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:10",
														"nodeType": "YulTypedName",
														"src": "742:5:10",
														"type": ""
													}
												],
												"src": "696:139:10"
											},
											{
												"body": {
													"nativeSrc": "907:263:10",
													"nodeType": "YulBlock",
													"src": "907:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:10",
																"nodeType": "YulBlock",
																"src": "953:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:10"
																			},
																			"nativeSrc": "955:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:10"
																		},
																		"nativeSrc": "955:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:10"
																		},
																		"nativeSrc": "924:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:10",
																		"nodeType": "YulLiteral",
																		"src": "949:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:10"
																},
																"nativeSrc": "920:32:10",
																"nodeType": "YulFunctionCall",
																"src": "920:32:10"
															},
															"nativeSrc": "917:119:10",
															"nodeType": "YulIf",
															"src": "917:119:10"
														},
														{
															"nativeSrc": "1046:117:10",
															"nodeType": "YulBlock",
															"src": "1046:117:10",
															"statements": [
																{
																	"nativeSrc": "1061:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:10"
																				},
																				"nativeSrc": "1121:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:10"
																		},
																		"nativeSrc": "1100:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:10",
														"nodeType": "YulTypedName",
														"src": "877:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:10",
														"nodeType": "YulTypedName",
														"src": "888:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:10",
														"nodeType": "YulTypedName",
														"src": "900:6:10",
														"type": ""
													}
												],
												"src": "841:329:10"
											},
											{
												"body": {
													"nativeSrc": "1221:32:10",
													"nodeType": "YulBlock",
													"src": "1221:32:10",
													"statements": [
														{
															"nativeSrc": "1231:16:10",
															"nodeType": "YulAssignment",
															"src": "1231:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1242:5:10",
																"nodeType": "YulIdentifier",
																"src": "1242:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1231:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1231:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1176:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1203:5:10",
														"nodeType": "YulTypedName",
														"src": "1203:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1213:7:10",
														"nodeType": "YulTypedName",
														"src": "1213:7:10",
														"type": ""
													}
												],
												"src": "1176:77:10"
											},
											{
												"body": {
													"nativeSrc": "1324:53:10",
													"nodeType": "YulBlock",
													"src": "1324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1346:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:10"
																		},
																		"nativeSrc": "1346:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:10"
															},
															"nativeSrc": "1334:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1259:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:10",
														"nodeType": "YulTypedName",
														"src": "1319:3:10",
														"type": ""
													}
												],
												"src": "1259:118:10"
											},
											{
												"body": {
													"nativeSrc": "1481:124:10",
													"nodeType": "YulBlock",
													"src": "1481:124:10",
													"statements": [
														{
															"nativeSrc": "1491:26:10",
															"nodeType": "YulAssignment",
															"src": "1491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:10"
																},
																"nativeSrc": "1499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:10"
																		},
																		"nativeSrc": "1580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:10"
																},
																"nativeSrc": "1527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:10"
															},
															"nativeSrc": "1527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1383:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:10",
														"nodeType": "YulTypedName",
														"src": "1453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:10",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:10",
														"nodeType": "YulTypedName",
														"src": "1476:4:10",
														"type": ""
													}
												],
												"src": "1383:222:10"
											},
											{
												"body": {
													"nativeSrc": "1711:40:10",
													"nodeType": "YulBlock",
													"src": "1711:40:10",
													"statements": [
														{
															"nativeSrc": "1722:22:10",
															"nodeType": "YulAssignment",
															"src": "1722:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1738:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1738:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1732:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1732:5:10"
																},
																"nativeSrc": "1732:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1732:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1722:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1722:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1611:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1694:5:10",
														"nodeType": "YulTypedName",
														"src": "1694:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1704:6:10",
														"nodeType": "YulTypedName",
														"src": "1704:6:10",
														"type": ""
													}
												],
												"src": "1611:140:10"
											},
											{
												"body": {
													"nativeSrc": "1894:73:10",
													"nodeType": "YulBlock",
													"src": "1894:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1911:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1911:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1916:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1916:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1904:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1904:6:10"
																},
																"nativeSrc": "1904:19:10",
																"nodeType": "YulFunctionCall",
																"src": "1904:19:10"
															},
															"nativeSrc": "1904:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "1904:19:10"
														},
														{
															"nativeSrc": "1932:29:10",
															"nodeType": "YulAssignment",
															"src": "1932:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1951:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1956:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1956:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1947:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1947:3:10"
																},
																"nativeSrc": "1947:14:10",
																"nodeType": "YulFunctionCall",
																"src": "1947:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1932:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "1932:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "1757:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1866:3:10",
														"nodeType": "YulTypedName",
														"src": "1866:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1871:6:10",
														"nodeType": "YulTypedName",
														"src": "1871:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1882:11:10",
														"nodeType": "YulTypedName",
														"src": "1882:11:10",
														"type": ""
													}
												],
												"src": "1757:210:10"
											},
											{
												"body": {
													"nativeSrc": "2071:60:10",
													"nodeType": "YulBlock",
													"src": "2071:60:10",
													"statements": [
														{
															"nativeSrc": "2081:11:10",
															"nodeType": "YulAssignment",
															"src": "2081:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2089:3:10",
																"nodeType": "YulIdentifier",
																"src": "2089:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2081:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2081:4:10"
																}
															]
														},
														{
															"nativeSrc": "2102:22:10",
															"nodeType": "YulAssignment",
															"src": "2102:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "2114:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2114:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2119:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2119:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2110:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2110:3:10"
																},
																"nativeSrc": "2110:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2110:14:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2102:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2102:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "1973:158:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2058:3:10",
														"nodeType": "YulTypedName",
														"src": "2058:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2066:4:10",
														"nodeType": "YulTypedName",
														"src": "2066:4:10",
														"type": ""
													}
												],
												"src": "1973:158:10"
											},
											{
												"body": {
													"nativeSrc": "2192:53:10",
													"nodeType": "YulBlock",
													"src": "2192:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2209:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2209:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2232:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2232:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2214:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2214:17:10"
																		},
																		"nativeSrc": "2214:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2214:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2202:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2202:6:10"
																},
																"nativeSrc": "2202:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2202:37:10"
															},
															"nativeSrc": "2202:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2202:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "2137:108:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2180:5:10",
														"nodeType": "YulTypedName",
														"src": "2180:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2187:3:10",
														"nodeType": "YulTypedName",
														"src": "2187:3:10",
														"type": ""
													}
												],
												"src": "2137:108:10"
											},
											{
												"body": {
													"nativeSrc": "2293:48:10",
													"nodeType": "YulBlock",
													"src": "2293:48:10",
													"statements": [
														{
															"nativeSrc": "2303:32:10",
															"nodeType": "YulAssignment",
															"src": "2303:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2328:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2328:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2321:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2321:6:10"
																		},
																		"nativeSrc": "2321:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2321:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2314:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2314:6:10"
																},
																"nativeSrc": "2314:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2314:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2303:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2303:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2251:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2275:5:10",
														"nodeType": "YulTypedName",
														"src": "2275:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2285:7:10",
														"nodeType": "YulTypedName",
														"src": "2285:7:10",
														"type": ""
													}
												],
												"src": "2251:90:10"
											},
											{
												"body": {
													"nativeSrc": "2396:50:10",
													"nodeType": "YulBlock",
													"src": "2396:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2413:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2413:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2433:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2433:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "2418:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "2418:14:10"
																		},
																		"nativeSrc": "2418:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2418:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2406:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2406:6:10"
																},
																"nativeSrc": "2406:34:10",
																"nodeType": "YulFunctionCall",
																"src": "2406:34:10"
															},
															"nativeSrc": "2406:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "2406:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "2347:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2384:5:10",
														"nodeType": "YulTypedName",
														"src": "2384:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2391:3:10",
														"nodeType": "YulTypedName",
														"src": "2391:3:10",
														"type": ""
													}
												],
												"src": "2347:99:10"
											},
											{
												"body": {
													"nativeSrc": "2628:1110:10",
													"nodeType": "YulBlock",
													"src": "2628:1110:10",
													"statements": [
														{
															"nativeSrc": "2638:26:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2638:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2654:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2654:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2659:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2659:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2650:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2650:3:10"
																},
																"nativeSrc": "2650:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2650:14:10"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2642:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2642:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2674:166:10",
															"nodeType": "YulBlock",
															"src": "2674:166:10",
															"statements": [
																{
																	"nativeSrc": "2711:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2711:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2741:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2741:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2748:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2748:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2737:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:10"
																				},
																				"nativeSrc": "2737:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2737:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2731:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2731:5:10"
																		},
																		"nativeSrc": "2731:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2731:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2715:12:10",
																			"nodeType": "YulTypedName",
																			"src": "2715:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2801:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "2801:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2819:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2819:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2824:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2824:4:10",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2815:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2815:3:10"
																				},
																				"nativeSrc": "2815:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2815:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2767:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "2767:33:10"
																		},
																		"nativeSrc": "2767:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2767:63:10"
																	},
																	"nativeSrc": "2767:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "2767:63:10"
																}
															]
														},
														{
															"nativeSrc": "2850:169:10",
															"nodeType": "YulBlock",
															"src": "2850:169:10",
															"statements": [
																{
																	"nativeSrc": "2890:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2890:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2920:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2920:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2927:4:10",
																						"nodeType": "YulLiteral",
																						"src": "2927:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2916:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2916:3:10"
																				},
																				"nativeSrc": "2916:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2916:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2910:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "2910:5:10"
																		},
																		"nativeSrc": "2910:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2910:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2894:12:10",
																			"nodeType": "YulTypedName",
																			"src": "2894:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2980:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "2980:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2998:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "2998:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3003:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3003:4:10",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2994:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2994:3:10"
																				},
																				"nativeSrc": "2994:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2994:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2946:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "2946:33:10"
																		},
																		"nativeSrc": "2946:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2946:63:10"
																	},
																	"nativeSrc": "2946:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "2946:63:10"
																}
															]
														},
														{
															"nativeSrc": "3029:170:10",
															"nodeType": "YulBlock",
															"src": "3029:170:10",
															"statements": [
																{
																	"nativeSrc": "3070:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3070:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3100:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3100:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3107:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3107:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3096:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3096:3:10"
																				},
																				"nativeSrc": "3096:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3096:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3090:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3090:5:10"
																		},
																		"nativeSrc": "3090:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3090:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3074:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3074:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3160:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3160:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3178:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3178:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3183:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3183:4:10",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3174:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3174:3:10"
																				},
																				"nativeSrc": "3174:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3174:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3126:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "3126:33:10"
																		},
																		"nativeSrc": "3126:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3126:63:10"
																	},
																	"nativeSrc": "3126:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3126:63:10"
																}
															]
														},
														{
															"nativeSrc": "3209:161:10",
															"nodeType": "YulBlock",
															"src": "3209:161:10",
															"statements": [
																{
																	"nativeSrc": "3247:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3247:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3277:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3277:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3284:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3284:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3273:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3273:3:10"
																				},
																				"nativeSrc": "3273:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3273:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3267:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3267:5:10"
																		},
																		"nativeSrc": "3267:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3267:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3251:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3251:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3331:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3331:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3349:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3349:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3354:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3354:4:10",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3345:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3345:3:10"
																				},
																				"nativeSrc": "3345:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3345:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "3303:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3303:27:10"
																		},
																		"nativeSrc": "3303:57:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3303:57:10"
																	},
																	"nativeSrc": "3303:57:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3303:57:10"
																}
															]
														},
														{
															"nativeSrc": "3380:165:10",
															"nodeType": "YulBlock",
															"src": "3380:165:10",
															"statements": [
																{
																	"nativeSrc": "3422:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3422:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3452:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3452:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3459:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3459:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3448:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3448:3:10"
																				},
																				"nativeSrc": "3448:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3448:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3442:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3442:5:10"
																		},
																		"nativeSrc": "3442:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3442:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3426:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3426:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3506:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3506:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3524:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3524:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3529:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3529:4:10",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3520:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3520:3:10"
																				},
																				"nativeSrc": "3520:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3520:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "3478:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3478:27:10"
																		},
																		"nativeSrc": "3478:57:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:57:10"
																	},
																	"nativeSrc": "3478:57:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3478:57:10"
																}
															]
														},
														{
															"nativeSrc": "3555:176:10",
															"nodeType": "YulBlock",
															"src": "3555:176:10",
															"statements": [
																{
																	"nativeSrc": "3602:43:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3602:43:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3632:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3632:5:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3639:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3639:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3628:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3628:3:10"
																				},
																				"nativeSrc": "3628:16:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3628:16:10"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3622:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "3622:5:10"
																		},
																		"nativeSrc": "3622:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3622:23:10"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3606:12:10",
																			"nodeType": "YulTypedName",
																			"src": "3606:12:10",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3692:12:10",
																				"nodeType": "YulIdentifier",
																				"src": "3692:12:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3710:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3710:3:10"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3715:4:10",
																						"nodeType": "YulLiteral",
																						"src": "3715:4:10",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3706:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3706:3:10"
																				},
																				"nativeSrc": "3706:14:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3706:14:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "3658:33:10",
																			"nodeType": "YulIdentifier",
																			"src": "3658:33:10"
																		},
																		"nativeSrc": "3658:63:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3658:63:10"
																	},
																	"nativeSrc": "3658:63:10",
																	"nodeType": "YulExpressionStatement",
																	"src": "3658:63:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr",
												"nativeSrc": "2520:1218:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2615:5:10",
														"nodeType": "YulTypedName",
														"src": "2615:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2622:3:10",
														"nodeType": "YulTypedName",
														"src": "2622:3:10",
														"type": ""
													}
												],
												"src": "2520:1218:10"
											},
											{
												"body": {
													"nativeSrc": "3876:151:10",
													"nodeType": "YulBlock",
													"src": "3876:151:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3972:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3972:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3980:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3980:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr",
																	"nativeSrc": "3886:85:10",
																	"nodeType": "YulIdentifier",
																	"src": "3886:85:10"
																},
																"nativeSrc": "3886:98:10",
																"nodeType": "YulFunctionCall",
																"src": "3886:98:10"
															},
															"nativeSrc": "3886:98:10",
															"nodeType": "YulExpressionStatement",
															"src": "3886:98:10"
														},
														{
															"nativeSrc": "3993:28:10",
															"nodeType": "YulAssignment",
															"src": "3993:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4011:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4011:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4016:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4016:4:10",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4007:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4007:3:10"
																},
																"nativeSrc": "4007:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4007:14:10"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3993:10:10",
																	"nodeType": "YulIdentifier",
																	"src": "3993:10:10"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr",
												"nativeSrc": "3744:283:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3849:6:10",
														"nodeType": "YulTypedName",
														"src": "3849:6:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3857:3:10",
														"nodeType": "YulTypedName",
														"src": "3857:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3865:10:10",
														"nodeType": "YulTypedName",
														"src": "3865:10:10",
														"type": ""
													}
												],
												"src": "3744:283:10"
											},
											{
												"body": {
													"nativeSrc": "4134:38:10",
													"nodeType": "YulBlock",
													"src": "4134:38:10",
													"statements": [
														{
															"nativeSrc": "4144:22:10",
															"nodeType": "YulAssignment",
															"src": "4144:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "4156:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4156:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4161:4:10",
																		"nodeType": "YulLiteral",
																		"src": "4161:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4152:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4152:3:10"
																},
																"nativeSrc": "4152:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4152:14:10"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "4144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4144:4:10"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "4033:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4121:3:10",
														"nodeType": "YulTypedName",
														"src": "4121:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "4129:4:10",
														"nodeType": "YulTypedName",
														"src": "4129:4:10",
														"type": ""
													}
												],
												"src": "4033:139:10"
											},
											{
												"body": {
													"nativeSrc": "4426:764:10",
													"nodeType": "YulBlock",
													"src": "4426:764:10",
													"statements": [
														{
															"nativeSrc": "4436:94:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4436:94:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4524:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4524:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4450:73:10",
																	"nodeType": "YulIdentifier",
																	"src": "4450:73:10"
																},
																"nativeSrc": "4450:80:10",
																"nodeType": "YulFunctionCall",
																"src": "4450:80:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4440:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4440:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4539:119:10",
															"nodeType": "YulAssignment",
															"src": "4539:119:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4646:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4646:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4651:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4651:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4546:99:10",
																	"nodeType": "YulIdentifier",
																	"src": "4546:99:10"
																},
																"nativeSrc": "4546:112:10",
																"nodeType": "YulFunctionCall",
																"src": "4546:112:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "4539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4539:3:10"
																}
															]
														},
														{
															"nativeSrc": "4667:97:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4667:97:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4758:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4758:5:10"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "4682:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "4682:75:10"
																},
																"nativeSrc": "4682:82:10",
																"nodeType": "YulFunctionCall",
																"src": "4682:82:10"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "4671:7:10",
																	"nodeType": "YulTypedName",
																	"src": "4671:7:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4773:21:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4773:21:10",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4787:7:10",
																"nodeType": "YulIdentifier",
																"src": "4787:7:10"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4777:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4777:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4863:302:10",
																"nodeType": "YulBlock",
																"src": "4863:302:10",
																"statements": [
																	{
																		"nativeSrc": "4877:34:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4877:34:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4904:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "4904:6:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4898:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4898:5:10"
																			},
																			"nativeSrc": "4898:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4898:13:10"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4881:13:10",
																				"nodeType": "YulTypedName",
																				"src": "4881:13:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4924:122:10",
																		"nodeType": "YulAssignment",
																		"src": "4924:122:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "5027:13:10",
																					"nodeType": "YulIdentifier",
																					"src": "5027:13:10"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "5042:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5042:3:10"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr",
																				"nativeSrc": "4931:95:10",
																				"nodeType": "YulIdentifier",
																				"src": "4931:95:10"
																			},
																			"nativeSrc": "4931:115:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4931:115:10"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4924:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4924:3:10"
																			}
																		]
																	},
																	{
																		"nativeSrc": "5059:96:10",
																		"nodeType": "YulAssignment",
																		"src": "5059:96:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "5148:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5148:6:10"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "5069:78:10",
																				"nodeType": "YulIdentifier",
																				"src": "5069:78:10"
																			},
																			"nativeSrc": "5069:86:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5069:86:10"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "5059:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5059:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4825:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "4825:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4828:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4828:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4822:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4822:2:10"
																},
																"nativeSrc": "4822:13:10",
																"nodeType": "YulFunctionCall",
																"src": "4822:13:10"
															},
															"nativeSrc": "4803:362:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4836:18:10",
																"nodeType": "YulBlock",
																"src": "4836:18:10",
																"statements": [
																	{
																		"nativeSrc": "4838:14:10",
																		"nodeType": "YulAssignment",
																		"src": "4838:14:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4847:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "4847:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4850:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4850:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4843:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4843:3:10"
																			},
																			"nativeSrc": "4843:9:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4843:9:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4838:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "4838:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4807:14:10",
																"nodeType": "YulBlock",
																"src": "4807:14:10",
																"statements": [
																	{
																		"nativeSrc": "4809:10:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4809:10:10",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4818:1:10",
																			"nodeType": "YulLiteral",
																			"src": "4818:1:10",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4813:1:10",
																				"nodeType": "YulTypedName",
																				"src": "4813:1:10",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4803:362:10"
														},
														{
															"nativeSrc": "5174:10:10",
															"nodeType": "YulAssignment",
															"src": "5174:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "5181:3:10",
																"nodeType": "YulIdentifier",
																"src": "5181:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5174:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5174:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "4250:940:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4405:5:10",
														"nodeType": "YulTypedName",
														"src": "4405:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4412:3:10",
														"nodeType": "YulTypedName",
														"src": "4412:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "4421:3:10",
														"nodeType": "YulTypedName",
														"src": "4421:3:10",
														"type": ""
													}
												],
												"src": "4250:940:10"
											},
											{
												"body": {
													"nativeSrc": "5396:277:10",
													"nodeType": "YulBlock",
													"src": "5396:277:10",
													"statements": [
														{
															"nativeSrc": "5406:26:10",
															"nodeType": "YulAssignment",
															"src": "5406:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5418:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5418:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5429:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5429:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5414:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5414:3:10"
																},
																"nativeSrc": "5414:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5414:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5406:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5406:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5453:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5453:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5464:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5464:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5449:3:10"
																		},
																		"nativeSrc": "5449:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5449:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "5472:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5472:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5478:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5478:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5468:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:10"
																		},
																		"nativeSrc": "5468:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5468:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5442:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5442:6:10"
																},
																"nativeSrc": "5442:47:10",
																"nodeType": "YulFunctionCall",
																"src": "5442:47:10"
															},
															"nativeSrc": "5442:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "5442:47:10"
														},
														{
															"nativeSrc": "5498:168:10",
															"nodeType": "YulAssignment",
															"src": "5498:168:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5652:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5652:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "5661:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5661:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "5506:145:10",
																	"nodeType": "YulIdentifier",
																	"src": "5506:145:10"
																},
																"nativeSrc": "5506:160:10",
																"nodeType": "YulFunctionCall",
																"src": "5506:160:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5498:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5498:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "5196:477:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5368:9:10",
														"nodeType": "YulTypedName",
														"src": "5368:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5380:6:10",
														"nodeType": "YulTypedName",
														"src": "5380:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5391:4:10",
														"nodeType": "YulTypedName",
														"src": "5391:4:10",
														"type": ""
													}
												],
												"src": "5196:477:10"
											},
											{
												"body": {
													"nativeSrc": "5722:79:10",
													"nodeType": "YulBlock",
													"src": "5722:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5779:16:10",
																"nodeType": "YulBlock",
																"src": "5779:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5788:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5788:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5791:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5791:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5781:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "5781:6:10"
																			},
																			"nativeSrc": "5781:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5781:12:10"
																		},
																		"nativeSrc": "5781:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5781:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5745:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5745:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5770:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5770:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5752:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5752:17:10"
																				},
																				"nativeSrc": "5752:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5752:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "5742:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "5742:2:10"
																		},
																		"nativeSrc": "5742:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5742:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5735:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:10"
																},
																"nativeSrc": "5735:43:10",
																"nodeType": "YulFunctionCall",
																"src": "5735:43:10"
															},
															"nativeSrc": "5732:63:10",
															"nodeType": "YulIf",
															"src": "5732:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "5679:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5715:5:10",
														"nodeType": "YulTypedName",
														"src": "5715:5:10",
														"type": ""
													}
												],
												"src": "5679:122:10"
											},
											{
												"body": {
													"nativeSrc": "5859:87:10",
													"nodeType": "YulBlock",
													"src": "5859:87:10",
													"statements": [
														{
															"nativeSrc": "5869:29:10",
															"nodeType": "YulAssignment",
															"src": "5869:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5891:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5891:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5878:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "5878:12:10"
																},
																"nativeSrc": "5878:20:10",
																"nodeType": "YulFunctionCall",
																"src": "5878:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "5869:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "5869:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5934:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5934:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "5907:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "5907:26:10"
																},
																"nativeSrc": "5907:33:10",
																"nodeType": "YulFunctionCall",
																"src": "5907:33:10"
															},
															"nativeSrc": "5907:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "5907:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "5807:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5837:6:10",
														"nodeType": "YulTypedName",
														"src": "5837:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5845:3:10",
														"nodeType": "YulTypedName",
														"src": "5845:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "5853:5:10",
														"nodeType": "YulTypedName",
														"src": "5853:5:10",
														"type": ""
													}
												],
												"src": "5807:139:10"
											},
											{
												"body": {
													"nativeSrc": "6035:391:10",
													"nodeType": "YulBlock",
													"src": "6035:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6081:83:10",
																"nodeType": "YulBlock",
																"src": "6081:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6083:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6083:77:10"
																			},
																			"nativeSrc": "6083:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6083:79:10"
																		},
																		"nativeSrc": "6083:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6083:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6056:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6056:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6065:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6065:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6052:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6052:3:10"
																		},
																		"nativeSrc": "6052:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6052:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6077:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6077:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6048:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6048:3:10"
																},
																"nativeSrc": "6048:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6048:32:10"
															},
															"nativeSrc": "6045:119:10",
															"nodeType": "YulIf",
															"src": "6045:119:10"
														},
														{
															"nativeSrc": "6174:117:10",
															"nodeType": "YulBlock",
															"src": "6174:117:10",
															"statements": [
																{
																	"nativeSrc": "6189:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6189:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6203:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6203:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6193:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6193:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6218:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6218:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6253:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6253:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6264:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6264:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6249:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6249:3:10"
																				},
																				"nativeSrc": "6249:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6249:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6273:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6273:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6228:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6228:20:10"
																		},
																		"nativeSrc": "6228:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6228:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6218:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6218:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6301:118:10",
															"nodeType": "YulBlock",
															"src": "6301:118:10",
															"statements": [
																{
																	"nativeSrc": "6316:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6316:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6330:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6330:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6320:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6320:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6346:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6346:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6381:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6381:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6392:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6392:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6377:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6377:3:10"
																				},
																				"nativeSrc": "6377:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6377:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6401:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6401:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6356:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6356:20:10"
																		},
																		"nativeSrc": "6356:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6356:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6346:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6346:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "5952:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5997:9:10",
														"nodeType": "YulTypedName",
														"src": "5997:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6008:7:10",
														"nodeType": "YulTypedName",
														"src": "6008:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6020:6:10",
														"nodeType": "YulTypedName",
														"src": "6020:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6028:6:10",
														"nodeType": "YulTypedName",
														"src": "6028:6:10",
														"type": ""
													}
												],
												"src": "5952:474:10"
											},
											{
												"body": {
													"nativeSrc": "6498:263:10",
													"nodeType": "YulBlock",
													"src": "6498:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6544:83:10",
																"nodeType": "YulBlock",
																"src": "6544:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6546:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6546:77:10"
																			},
																			"nativeSrc": "6546:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6546:79:10"
																		},
																		"nativeSrc": "6546:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6546:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6519:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6519:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6528:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6528:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6515:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:10"
																		},
																		"nativeSrc": "6515:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6515:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6540:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6540:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6511:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:10"
																},
																"nativeSrc": "6511:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6511:32:10"
															},
															"nativeSrc": "6508:119:10",
															"nodeType": "YulIf",
															"src": "6508:119:10"
														},
														{
															"nativeSrc": "6637:117:10",
															"nodeType": "YulBlock",
															"src": "6637:117:10",
															"statements": [
																{
																	"nativeSrc": "6652:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6652:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6666:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6666:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6656:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6656:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6681:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6681:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6716:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6716:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6727:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6727:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6712:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6712:3:10"
																				},
																				"nativeSrc": "6712:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6712:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6736:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6736:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6691:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6691:20:10"
																		},
																		"nativeSrc": "6691:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6691:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6681:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6681:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6432:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6468:9:10",
														"nodeType": "YulTypedName",
														"src": "6468:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6479:7:10",
														"nodeType": "YulTypedName",
														"src": "6479:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6491:6:10",
														"nodeType": "YulTypedName",
														"src": "6491:6:10",
														"type": ""
													}
												],
												"src": "6432:329:10"
											},
											{
												"body": {
													"nativeSrc": "6807:76:10",
													"nodeType": "YulBlock",
													"src": "6807:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6861:16:10",
																"nodeType": "YulBlock",
																"src": "6861:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6870:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6870:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6873:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6873:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6863:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6863:6:10"
																			},
																			"nativeSrc": "6863:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6863:12:10"
																		},
																		"nativeSrc": "6863:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6863:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6830:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6830:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6852:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "6852:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6837:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "6837:14:10"
																				},
																				"nativeSrc": "6837:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6837:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6827:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6827:2:10"
																		},
																		"nativeSrc": "6827:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6827:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6820:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:10"
																},
																"nativeSrc": "6820:40:10",
																"nodeType": "YulFunctionCall",
																"src": "6820:40:10"
															},
															"nativeSrc": "6817:60:10",
															"nodeType": "YulIf",
															"src": "6817:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6767:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6800:5:10",
														"nodeType": "YulTypedName",
														"src": "6800:5:10",
														"type": ""
													}
												],
												"src": "6767:116:10"
											},
											{
												"body": {
													"nativeSrc": "6938:84:10",
													"nodeType": "YulBlock",
													"src": "6938:84:10",
													"statements": [
														{
															"nativeSrc": "6948:29:10",
															"nodeType": "YulAssignment",
															"src": "6948:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6970:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6970:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6957:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "6957:12:10"
																},
																"nativeSrc": "6957:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6957:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6948:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "6948:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7010:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7010:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6986:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "6986:23:10"
																},
																"nativeSrc": "6986:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6986:30:10"
															},
															"nativeSrc": "6986:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "6986:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6889:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6916:6:10",
														"nodeType": "YulTypedName",
														"src": "6916:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6924:3:10",
														"nodeType": "YulTypedName",
														"src": "6924:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6932:5:10",
														"nodeType": "YulTypedName",
														"src": "6932:5:10",
														"type": ""
													}
												],
												"src": "6889:133:10"
											},
											{
												"body": {
													"nativeSrc": "7125:516:10",
													"nodeType": "YulBlock",
													"src": "7125:516:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7171:83:10",
																"nodeType": "YulBlock",
																"src": "7171:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7173:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7173:77:10"
																			},
																			"nativeSrc": "7173:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7173:79:10"
																		},
																		"nativeSrc": "7173:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7173:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7146:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7146:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7155:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7155:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7142:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7142:3:10"
																		},
																		"nativeSrc": "7142:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7142:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7167:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7167:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7138:3:10"
																},
																"nativeSrc": "7138:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7138:32:10"
															},
															"nativeSrc": "7135:119:10",
															"nodeType": "YulIf",
															"src": "7135:119:10"
														},
														{
															"nativeSrc": "7264:117:10",
															"nodeType": "YulBlock",
															"src": "7264:117:10",
															"statements": [
																{
																	"nativeSrc": "7279:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7279:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7293:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7293:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7283:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7283:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7308:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7308:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7343:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7343:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7354:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7354:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7339:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7339:3:10"
																				},
																				"nativeSrc": "7339:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7339:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7363:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7363:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7318:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7318:20:10"
																		},
																		"nativeSrc": "7318:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7318:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7308:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7308:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7391:118:10",
															"nodeType": "YulBlock",
															"src": "7391:118:10",
															"statements": [
																{
																	"nativeSrc": "7406:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7406:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7420:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7420:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7410:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7410:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7436:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7436:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7471:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7471:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7482:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7482:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7467:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7467:3:10"
																				},
																				"nativeSrc": "7467:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7467:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7491:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7491:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7446:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7446:20:10"
																		},
																		"nativeSrc": "7446:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7446:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7436:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7436:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7519:115:10",
															"nodeType": "YulBlock",
															"src": "7519:115:10",
															"statements": [
																{
																	"nativeSrc": "7534:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7534:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7548:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7548:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7538:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7538:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7564:60:10",
																	"nodeType": "YulAssignment",
																	"src": "7564:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7596:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7596:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7607:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7607:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7592:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7592:3:10"
																				},
																				"nativeSrc": "7592:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7592:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7616:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7616:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "7574:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7574:17:10"
																		},
																		"nativeSrc": "7574:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7574:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7564:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7564:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_bool",
												"nativeSrc": "7028:613:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7079:9:10",
														"nodeType": "YulTypedName",
														"src": "7079:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7090:7:10",
														"nodeType": "YulTypedName",
														"src": "7090:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7102:6:10",
														"nodeType": "YulTypedName",
														"src": "7102:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7110:6:10",
														"nodeType": "YulTypedName",
														"src": "7110:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7118:6:10",
														"nodeType": "YulTypedName",
														"src": "7118:6:10",
														"type": ""
													}
												],
												"src": "7028:613:10"
											},
											{
												"body": {
													"nativeSrc": "7706:50:10",
													"nodeType": "YulBlock",
													"src": "7706:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7723:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7723:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7743:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7743:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "7728:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "7728:14:10"
																		},
																		"nativeSrc": "7728:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7728:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7716:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7716:6:10"
																},
																"nativeSrc": "7716:34:10",
																"nodeType": "YulFunctionCall",
																"src": "7716:34:10"
															},
															"nativeSrc": "7716:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "7716:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "7647:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7694:5:10",
														"nodeType": "YulTypedName",
														"src": "7694:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7701:3:10",
														"nodeType": "YulTypedName",
														"src": "7701:3:10",
														"type": ""
													}
												],
												"src": "7647:109:10"
											},
											{
												"body": {
													"nativeSrc": "7988:525:10",
													"nodeType": "YulBlock",
													"src": "7988:525:10",
													"statements": [
														{
															"nativeSrc": "7998:27:10",
															"nodeType": "YulAssignment",
															"src": "7998:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8010:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8010:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8021:3:10",
																		"nodeType": "YulLiteral",
																		"src": "8021:3:10",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8006:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8006:3:10"
																},
																"nativeSrc": "8006:19:10",
																"nodeType": "YulFunctionCall",
																"src": "8006:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7998:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7998:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8079:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8079:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8092:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8092:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8103:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8103:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8088:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8088:3:10"
																		},
																		"nativeSrc": "8088:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8088:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8035:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8035:43:10"
																},
																"nativeSrc": "8035:71:10",
																"nodeType": "YulFunctionCall",
																"src": "8035:71:10"
															},
															"nativeSrc": "8035:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "8035:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8160:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8160:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8173:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8173:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8184:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8184:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8169:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:10"
																		},
																		"nativeSrc": "8169:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8169:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8116:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8116:43:10"
																},
																"nativeSrc": "8116:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8116:72:10"
															},
															"nativeSrc": "8116:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8116:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8242:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8242:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8255:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8255:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8266:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8266:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8251:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8251:3:10"
																		},
																		"nativeSrc": "8251:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8251:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8198:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8198:43:10"
																},
																"nativeSrc": "8198:72:10",
																"nodeType": "YulFunctionCall",
																"src": "8198:72:10"
															},
															"nativeSrc": "8198:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "8198:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8318:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8318:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8331:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8331:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8342:2:10",
																				"nodeType": "YulLiteral",
																				"src": "8342:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8327:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8327:3:10"
																		},
																		"nativeSrc": "8327:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8327:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8280:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "8280:37:10"
																},
																"nativeSrc": "8280:66:10",
																"nodeType": "YulFunctionCall",
																"src": "8280:66:10"
															},
															"nativeSrc": "8280:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "8280:66:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8394:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8394:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8407:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8407:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8418:3:10",
																				"nodeType": "YulLiteral",
																				"src": "8418:3:10",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8403:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8403:3:10"
																		},
																		"nativeSrc": "8403:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8403:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8356:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "8356:37:10"
																},
																"nativeSrc": "8356:67:10",
																"nodeType": "YulFunctionCall",
																"src": "8356:67:10"
															},
															"nativeSrc": "8356:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "8356:67:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8477:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "8477:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8490:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8490:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8501:3:10",
																				"nodeType": "YulLiteral",
																				"src": "8501:3:10",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8486:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8486:3:10"
																		},
																		"nativeSrc": "8486:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8486:19:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8433:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "8433:43:10"
																},
																"nativeSrc": "8433:73:10",
																"nodeType": "YulFunctionCall",
																"src": "8433:73:10"
															},
															"nativeSrc": "8433:73:10",
															"nodeType": "YulExpressionStatement",
															"src": "8433:73:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "7762:751:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7920:9:10",
														"nodeType": "YulTypedName",
														"src": "7920:9:10",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7932:6:10",
														"nodeType": "YulTypedName",
														"src": "7932:6:10",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7940:6:10",
														"nodeType": "YulTypedName",
														"src": "7940:6:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7948:6:10",
														"nodeType": "YulTypedName",
														"src": "7948:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7956:6:10",
														"nodeType": "YulTypedName",
														"src": "7956:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7964:6:10",
														"nodeType": "YulTypedName",
														"src": "7964:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7972:6:10",
														"nodeType": "YulTypedName",
														"src": "7972:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7983:4:10",
														"nodeType": "YulTypedName",
														"src": "7983:4:10",
														"type": ""
													}
												],
												"src": "7762:751:10"
											},
											{
												"body": {
													"nativeSrc": "8602:391:10",
													"nodeType": "YulBlock",
													"src": "8602:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8648:83:10",
																"nodeType": "YulBlock",
																"src": "8648:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8650:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8650:77:10"
																			},
																			"nativeSrc": "8650:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8650:79:10"
																		},
																		"nativeSrc": "8650:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8650:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8623:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8623:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8632:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8632:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8619:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8619:3:10"
																		},
																		"nativeSrc": "8619:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8619:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8644:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8644:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8615:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8615:3:10"
																},
																"nativeSrc": "8615:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8615:32:10"
															},
															"nativeSrc": "8612:119:10",
															"nodeType": "YulIf",
															"src": "8612:119:10"
														},
														{
															"nativeSrc": "8741:117:10",
															"nodeType": "YulBlock",
															"src": "8741:117:10",
															"statements": [
																{
																	"nativeSrc": "8756:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8756:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8770:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8770:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8760:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8760:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8785:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8785:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8820:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8820:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8831:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8831:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8816:3:10"
																				},
																				"nativeSrc": "8816:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8816:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8840:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8840:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8795:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8795:20:10"
																		},
																		"nativeSrc": "8795:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8795:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8785:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8785:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8868:118:10",
															"nodeType": "YulBlock",
															"src": "8868:118:10",
															"statements": [
																{
																	"nativeSrc": "8883:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8883:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8897:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8897:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8887:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8887:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8913:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8913:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8948:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8948:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8959:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8959:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8944:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8944:3:10"
																				},
																				"nativeSrc": "8944:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8944:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8968:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8968:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8923:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8923:20:10"
																		},
																		"nativeSrc": "8923:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8913:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8913:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "8519:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8564:9:10",
														"nodeType": "YulTypedName",
														"src": "8564:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8575:7:10",
														"nodeType": "YulTypedName",
														"src": "8575:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8587:6:10",
														"nodeType": "YulTypedName",
														"src": "8587:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8595:6:10",
														"nodeType": "YulTypedName",
														"src": "8595:6:10",
														"type": ""
													}
												],
												"src": "8519:474:10"
											},
											{
												"body": {
													"nativeSrc": "9091:118:10",
													"nodeType": "YulBlock",
													"src": "9091:118:10",
													"statements": [
														{
															"nativeSrc": "9101:26:10",
															"nodeType": "YulAssignment",
															"src": "9101:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9113:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9113:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9124:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9124:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9109:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9109:3:10"
																},
																"nativeSrc": "9109:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9109:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9101:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9101:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9175:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9175:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9188:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9188:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9199:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9199:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9184:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9184:3:10"
																		},
																		"nativeSrc": "9184:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9184:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "9137:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "9137:37:10"
																},
																"nativeSrc": "9137:65:10",
																"nodeType": "YulFunctionCall",
																"src": "9137:65:10"
															},
															"nativeSrc": "9137:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "9137:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "8999:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9063:9:10",
														"nodeType": "YulTypedName",
														"src": "9063:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9075:6:10",
														"nodeType": "YulTypedName",
														"src": "9075:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9086:4:10",
														"nodeType": "YulTypedName",
														"src": "9086:4:10",
														"type": ""
													}
												],
												"src": "8999:210:10"
											},
											{
												"body": {
													"nativeSrc": "9247:28:10",
													"nodeType": "YulBlock",
													"src": "9247:28:10",
													"statements": [
														{
															"nativeSrc": "9257:12:10",
															"nodeType": "YulAssignment",
															"src": "9257:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "9264:5:10",
																"nodeType": "YulIdentifier",
																"src": "9264:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "9257:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9257:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "9215:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9233:5:10",
														"nodeType": "YulTypedName",
														"src": "9233:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "9243:3:10",
														"nodeType": "YulTypedName",
														"src": "9243:3:10",
														"type": ""
													}
												],
												"src": "9215:60:10"
											},
											{
												"body": {
													"nativeSrc": "9341:82:10",
													"nodeType": "YulBlock",
													"src": "9341:82:10",
													"statements": [
														{
															"nativeSrc": "9351:66:10",
															"nodeType": "YulAssignment",
															"src": "9351:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9409:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "9409:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "9391:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "9391:17:10"
																				},
																				"nativeSrc": "9391:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9391:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "9382:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "9382:8:10"
																		},
																		"nativeSrc": "9382:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9382:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "9364:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9364:17:10"
																},
																"nativeSrc": "9364:53:10",
																"nodeType": "YulFunctionCall",
																"src": "9364:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9351:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9351:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "9281:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9321:5:10",
														"nodeType": "YulTypedName",
														"src": "9321:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9331:9:10",
														"nodeType": "YulTypedName",
														"src": "9331:9:10",
														"type": ""
													}
												],
												"src": "9281:142:10"
											},
											{
												"body": {
													"nativeSrc": "9489:66:10",
													"nodeType": "YulBlock",
													"src": "9489:66:10",
													"statements": [
														{
															"nativeSrc": "9499:50:10",
															"nodeType": "YulAssignment",
															"src": "9499:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9543:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9543:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "9512:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "9512:30:10"
																},
																"nativeSrc": "9512:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9512:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9499:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9499:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "9429:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9469:5:10",
														"nodeType": "YulTypedName",
														"src": "9469:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9479:9:10",
														"nodeType": "YulTypedName",
														"src": "9479:9:10",
														"type": ""
													}
												],
												"src": "9429:126:10"
											},
											{
												"body": {
													"nativeSrc": "9635:66:10",
													"nodeType": "YulBlock",
													"src": "9635:66:10",
													"statements": [
														{
															"nativeSrc": "9645:50:10",
															"nodeType": "YulAssignment",
															"src": "9645:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9689:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "9658:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "9658:30:10"
																},
																"nativeSrc": "9658:37:10",
																"nodeType": "YulFunctionCall",
																"src": "9658:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9645:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "9645:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$380_to_t_address",
												"nativeSrc": "9561:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9615:5:10",
														"nodeType": "YulTypedName",
														"src": "9615:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9625:9:10",
														"nodeType": "YulTypedName",
														"src": "9625:9:10",
														"type": ""
													}
												],
												"src": "9561:140:10"
											},
											{
												"body": {
													"nativeSrc": "9786:80:10",
													"nodeType": "YulBlock",
													"src": "9786:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9803:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9803:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9853:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "9853:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$380_to_t_address",
																			"nativeSrc": "9808:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "9808:44:10"
																		},
																		"nativeSrc": "9808:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9808:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9796:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9796:6:10"
																},
																"nativeSrc": "9796:64:10",
																"nodeType": "YulFunctionCall",
																"src": "9796:64:10"
															},
															"nativeSrc": "9796:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "9796:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
												"nativeSrc": "9707:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9774:5:10",
														"nodeType": "YulTypedName",
														"src": "9774:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9781:3:10",
														"nodeType": "YulTypedName",
														"src": "9781:3:10",
														"type": ""
													}
												],
												"src": "9707:159:10"
											},
											{
												"body": {
													"nativeSrc": "9984:138:10",
													"nodeType": "YulBlock",
													"src": "9984:138:10",
													"statements": [
														{
															"nativeSrc": "9994:26:10",
															"nodeType": "YulAssignment",
															"src": "9994:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10006:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10006:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10017:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10017:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10002:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10002:3:10"
																},
																"nativeSrc": "10002:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10002:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9994:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9994:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10088:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10088:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10101:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10101:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10112:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10112:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10097:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10097:3:10"
																		},
																		"nativeSrc": "10097:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10097:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack",
																	"nativeSrc": "10030:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "10030:57:10"
																},
																"nativeSrc": "10030:85:10",
																"nodeType": "YulFunctionCall",
																"src": "10030:85:10"
															},
															"nativeSrc": "10030:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "10030:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed",
												"nativeSrc": "9872:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9956:9:10",
														"nodeType": "YulTypedName",
														"src": "9956:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9968:6:10",
														"nodeType": "YulTypedName",
														"src": "9968:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9979:4:10",
														"nodeType": "YulTypedName",
														"src": "9979:4:10",
														"type": ""
													}
												],
												"src": "9872:250:10"
											},
											{
												"body": {
													"nativeSrc": "10193:53:10",
													"nodeType": "YulBlock",
													"src": "10193:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10210:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10210:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10233:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "10233:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "10215:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "10215:17:10"
																		},
																		"nativeSrc": "10215:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10215:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10203:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10203:6:10"
																},
																"nativeSrc": "10203:37:10",
																"nodeType": "YulFunctionCall",
																"src": "10203:37:10"
															},
															"nativeSrc": "10203:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "10203:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "10128:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10181:5:10",
														"nodeType": "YulTypedName",
														"src": "10181:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10188:3:10",
														"nodeType": "YulTypedName",
														"src": "10188:3:10",
														"type": ""
													}
												],
												"src": "10128:118:10"
											},
											{
												"body": {
													"nativeSrc": "10350:124:10",
													"nodeType": "YulBlock",
													"src": "10350:124:10",
													"statements": [
														{
															"nativeSrc": "10360:26:10",
															"nodeType": "YulAssignment",
															"src": "10360:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10372:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10372:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10383:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10383:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10368:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10368:3:10"
																},
																"nativeSrc": "10368:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10368:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10360:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10360:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10440:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10440:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10453:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10453:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10464:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10464:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10449:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10449:3:10"
																		},
																		"nativeSrc": "10449:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10449:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10396:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "10396:43:10"
																},
																"nativeSrc": "10396:71:10",
																"nodeType": "YulFunctionCall",
																"src": "10396:71:10"
															},
															"nativeSrc": "10396:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "10396:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "10252:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10322:9:10",
														"nodeType": "YulTypedName",
														"src": "10322:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10334:6:10",
														"nodeType": "YulTypedName",
														"src": "10334:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10345:4:10",
														"nodeType": "YulTypedName",
														"src": "10345:4:10",
														"type": ""
													}
												],
												"src": "10252:222:10"
											},
											{
												"body": {
													"nativeSrc": "10576:73:10",
													"nodeType": "YulBlock",
													"src": "10576:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10593:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10593:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10598:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "10598:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10586:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10586:6:10"
																},
																"nativeSrc": "10586:19:10",
																"nodeType": "YulFunctionCall",
																"src": "10586:19:10"
															},
															"nativeSrc": "10586:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "10586:19:10"
														},
														{
															"nativeSrc": "10614:29:10",
															"nodeType": "YulAssignment",
															"src": "10614:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10633:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10633:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10638:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10638:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10629:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10629:3:10"
																},
																"nativeSrc": "10629:14:10",
																"nodeType": "YulFunctionCall",
																"src": "10629:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "10614:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "10614:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "10480:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10548:3:10",
														"nodeType": "YulTypedName",
														"src": "10548:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10553:6:10",
														"nodeType": "YulTypedName",
														"src": "10553:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10564:11:10",
														"nodeType": "YulTypedName",
														"src": "10564:11:10",
														"type": ""
													}
												],
												"src": "10480:169:10"
											},
											{
												"body": {
													"nativeSrc": "10761:59:10",
													"nodeType": "YulBlock",
													"src": "10761:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10783:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10783:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10791:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10791:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10779:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10779:3:10"
																		},
																		"nativeSrc": "10779:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10779:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964206163636f756e74",
																		"kind": "string",
																		"nativeSrc": "10795:17:10",
																		"nodeType": "YulLiteral",
																		"src": "10795:17:10",
																		"type": "",
																		"value": "Invalid account"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10772:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10772:6:10"
																},
																"nativeSrc": "10772:41:10",
																"nodeType": "YulFunctionCall",
																"src": "10772:41:10"
															},
															"nativeSrc": "10772:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "10772:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
												"nativeSrc": "10655:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10753:6:10",
														"nodeType": "YulTypedName",
														"src": "10753:6:10",
														"type": ""
													}
												],
												"src": "10655:165:10"
											},
											{
												"body": {
													"nativeSrc": "10972:220:10",
													"nodeType": "YulBlock",
													"src": "10972:220:10",
													"statements": [
														{
															"nativeSrc": "10982:74:10",
															"nodeType": "YulAssignment",
															"src": "10982:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11048:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11048:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11053:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11053:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10989:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10989:58:10"
																},
																"nativeSrc": "10989:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10989:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10982:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10982:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11154:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11154:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
																	"nativeSrc": "11065:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11065:88:10"
																},
																"nativeSrc": "11065:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11065:93:10"
															},
															"nativeSrc": "11065:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11065:93:10"
														},
														{
															"nativeSrc": "11167:19:10",
															"nodeType": "YulAssignment",
															"src": "11167:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11178:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11178:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11183:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11183:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11174:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11174:3:10"
																},
																"nativeSrc": "11174:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11174:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11167:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11167:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10826:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10960:3:10",
														"nodeType": "YulTypedName",
														"src": "10960:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10968:3:10",
														"nodeType": "YulTypedName",
														"src": "10968:3:10",
														"type": ""
													}
												],
												"src": "10826:366:10"
											},
											{
												"body": {
													"nativeSrc": "11369:248:10",
													"nodeType": "YulBlock",
													"src": "11369:248:10",
													"statements": [
														{
															"nativeSrc": "11379:26:10",
															"nodeType": "YulAssignment",
															"src": "11379:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11391:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11391:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11402:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11402:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11387:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11387:3:10"
																},
																"nativeSrc": "11387:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11387:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11379:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11379:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11426:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11426:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11437:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11437:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11422:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11422:3:10"
																		},
																		"nativeSrc": "11422:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11422:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11445:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11445:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11451:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11451:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11441:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11441:3:10"
																		},
																		"nativeSrc": "11441:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11441:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11415:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:10"
																},
																"nativeSrc": "11415:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11415:47:10"
															},
															"nativeSrc": "11415:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11415:47:10"
														},
														{
															"nativeSrc": "11471:139:10",
															"nodeType": "YulAssignment",
															"src": "11471:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11605:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11605:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11479:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11479:124:10"
																},
																"nativeSrc": "11479:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11479:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11471:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11471:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11198:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11349:9:10",
														"nodeType": "YulTypedName",
														"src": "11349:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11364:4:10",
														"nodeType": "YulTypedName",
														"src": "11364:4:10",
														"type": ""
													}
												],
												"src": "11198:419:10"
											},
											{
												"body": {
													"nativeSrc": "11729:63:10",
													"nodeType": "YulBlock",
													"src": "11729:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11751:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11751:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11759:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11759:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11747:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11747:3:10"
																		},
																		"nativeSrc": "11747:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11747:14:10"
																	},
																	{
																		"hexValue": "496e76616c6964207374616b6520696e646578",
																		"kind": "string",
																		"nativeSrc": "11763:21:10",
																		"nodeType": "YulLiteral",
																		"src": "11763:21:10",
																		"type": "",
																		"value": "Invalid stake index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11740:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11740:6:10"
																},
																"nativeSrc": "11740:45:10",
																"nodeType": "YulFunctionCall",
																"src": "11740:45:10"
															},
															"nativeSrc": "11740:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "11740:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
												"nativeSrc": "11623:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11721:6:10",
														"nodeType": "YulTypedName",
														"src": "11721:6:10",
														"type": ""
													}
												],
												"src": "11623:169:10"
											},
											{
												"body": {
													"nativeSrc": "11944:220:10",
													"nodeType": "YulBlock",
													"src": "11944:220:10",
													"statements": [
														{
															"nativeSrc": "11954:74:10",
															"nodeType": "YulAssignment",
															"src": "11954:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12020:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12020:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12025:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12025:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11961:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11961:58:10"
																},
																"nativeSrc": "11961:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11961:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11954:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11954:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12126:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12126:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																	"nativeSrc": "12037:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12037:88:10"
																},
																"nativeSrc": "12037:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12037:93:10"
															},
															"nativeSrc": "12037:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12037:93:10"
														},
														{
															"nativeSrc": "12139:19:10",
															"nodeType": "YulAssignment",
															"src": "12139:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12150:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12150:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12155:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12155:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12146:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12146:3:10"
																},
																"nativeSrc": "12146:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12146:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12139:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12139:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11798:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11932:3:10",
														"nodeType": "YulTypedName",
														"src": "11932:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11940:3:10",
														"nodeType": "YulTypedName",
														"src": "11940:3:10",
														"type": ""
													}
												],
												"src": "11798:366:10"
											},
											{
												"body": {
													"nativeSrc": "12341:248:10",
													"nodeType": "YulBlock",
													"src": "12341:248:10",
													"statements": [
														{
															"nativeSrc": "12351:26:10",
															"nodeType": "YulAssignment",
															"src": "12351:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12363:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12363:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12374:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12374:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12359:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12359:3:10"
																},
																"nativeSrc": "12359:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12359:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12351:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12351:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12398:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12398:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12409:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12409:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12394:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12394:3:10"
																		},
																		"nativeSrc": "12394:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12394:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12417:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12417:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12423:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12423:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12413:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12413:3:10"
																		},
																		"nativeSrc": "12413:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12413:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12387:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12387:6:10"
																},
																"nativeSrc": "12387:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12387:47:10"
															},
															"nativeSrc": "12387:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12387:47:10"
														},
														{
															"nativeSrc": "12443:139:10",
															"nodeType": "YulAssignment",
															"src": "12443:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12577:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12577:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12451:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12451:124:10"
																},
																"nativeSrc": "12451:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12451:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12443:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12443:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12170:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12321:9:10",
														"nodeType": "YulTypedName",
														"src": "12321:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12336:4:10",
														"nodeType": "YulTypedName",
														"src": "12336:4:10",
														"type": ""
													}
												],
												"src": "12170:419:10"
											},
											{
												"body": {
													"nativeSrc": "12623:152:10",
													"nodeType": "YulBlock",
													"src": "12623:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12640:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12640:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12643:77:10",
																		"nodeType": "YulLiteral",
																		"src": "12643:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12633:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12633:6:10"
																},
																"nativeSrc": "12633:88:10",
																"nodeType": "YulFunctionCall",
																"src": "12633:88:10"
															},
															"nativeSrc": "12633:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "12633:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12737:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12737:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12740:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12740:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12730:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12730:6:10"
																},
																"nativeSrc": "12730:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12730:15:10"
															},
															"nativeSrc": "12730:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12730:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12761:1:10",
																		"nodeType": "YulLiteral",
																		"src": "12761:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12764:4:10",
																		"nodeType": "YulLiteral",
																		"src": "12764:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12754:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12754:6:10"
																},
																"nativeSrc": "12754:15:10",
																"nodeType": "YulFunctionCall",
																"src": "12754:15:10"
															},
															"nativeSrc": "12754:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "12754:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "12595:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "12595:180:10"
											},
											{
												"body": {
													"nativeSrc": "12887:59:10",
													"nodeType": "YulBlock",
													"src": "12887:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12909:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12909:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12917:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12917:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12905:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12905:3:10"
																		},
																		"nativeSrc": "12905:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12905:14:10"
																	},
																	{
																		"hexValue": "416c726561647920636c61696d6564",
																		"kind": "string",
																		"nativeSrc": "12921:17:10",
																		"nodeType": "YulLiteral",
																		"src": "12921:17:10",
																		"type": "",
																		"value": "Already claimed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12898:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12898:6:10"
																},
																"nativeSrc": "12898:41:10",
																"nodeType": "YulFunctionCall",
																"src": "12898:41:10"
															},
															"nativeSrc": "12898:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "12898:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
												"nativeSrc": "12781:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12879:6:10",
														"nodeType": "YulTypedName",
														"src": "12879:6:10",
														"type": ""
													}
												],
												"src": "12781:165:10"
											},
											{
												"body": {
													"nativeSrc": "13098:220:10",
													"nodeType": "YulBlock",
													"src": "13098:220:10",
													"statements": [
														{
															"nativeSrc": "13108:74:10",
															"nodeType": "YulAssignment",
															"src": "13108:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13174:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13174:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13179:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13179:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13115:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13115:58:10"
																},
																"nativeSrc": "13115:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13115:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13108:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13108:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13280:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13280:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																	"nativeSrc": "13191:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13191:88:10"
																},
																"nativeSrc": "13191:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13191:93:10"
															},
															"nativeSrc": "13191:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13191:93:10"
														},
														{
															"nativeSrc": "13293:19:10",
															"nodeType": "YulAssignment",
															"src": "13293:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13304:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13304:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13309:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13309:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13300:3:10"
																},
																"nativeSrc": "13300:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13300:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13293:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13293:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12952:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13086:3:10",
														"nodeType": "YulTypedName",
														"src": "13086:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13094:3:10",
														"nodeType": "YulTypedName",
														"src": "13094:3:10",
														"type": ""
													}
												],
												"src": "12952:366:10"
											},
											{
												"body": {
													"nativeSrc": "13495:248:10",
													"nodeType": "YulBlock",
													"src": "13495:248:10",
													"statements": [
														{
															"nativeSrc": "13505:26:10",
															"nodeType": "YulAssignment",
															"src": "13505:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13517:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13517:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13528:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13528:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13513:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13513:3:10"
																},
																"nativeSrc": "13513:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13513:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13505:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13505:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13552:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13552:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13563:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13563:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13548:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13548:3:10"
																		},
																		"nativeSrc": "13548:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13548:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13571:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13571:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13577:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13577:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13567:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13567:3:10"
																		},
																		"nativeSrc": "13567:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13567:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13541:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13541:6:10"
																},
																"nativeSrc": "13541:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13541:47:10"
															},
															"nativeSrc": "13541:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13541:47:10"
														},
														{
															"nativeSrc": "13597:139:10",
															"nodeType": "YulAssignment",
															"src": "13597:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13731:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13731:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13605:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13605:124:10"
																},
																"nativeSrc": "13605:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13605:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13597:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13597:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13324:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13475:9:10",
														"nodeType": "YulTypedName",
														"src": "13475:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13490:4:10",
														"nodeType": "YulTypedName",
														"src": "13490:4:10",
														"type": ""
													}
												],
												"src": "13324:419:10"
											},
											{
												"body": {
													"nativeSrc": "13777:152:10",
													"nodeType": "YulBlock",
													"src": "13777:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13794:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13794:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13797:77:10",
																		"nodeType": "YulLiteral",
																		"src": "13797:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13787:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13787:6:10"
																},
																"nativeSrc": "13787:88:10",
																"nodeType": "YulFunctionCall",
																"src": "13787:88:10"
															},
															"nativeSrc": "13787:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "13787:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13891:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13891:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13894:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13894:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13884:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13884:6:10"
																},
																"nativeSrc": "13884:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13884:15:10"
															},
															"nativeSrc": "13884:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13884:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13915:1:10",
																		"nodeType": "YulLiteral",
																		"src": "13915:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13918:4:10",
																		"nodeType": "YulLiteral",
																		"src": "13918:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "13908:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13908:6:10"
																},
																"nativeSrc": "13908:15:10",
																"nodeType": "YulFunctionCall",
																"src": "13908:15:10"
															},
															"nativeSrc": "13908:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "13908:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "13749:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "13749:180:10"
											},
											{
												"body": {
													"nativeSrc": "13980:149:10",
													"nodeType": "YulBlock",
													"src": "13980:149:10",
													"statements": [
														{
															"nativeSrc": "13990:25:10",
															"nodeType": "YulAssignment",
															"src": "13990:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14013:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14013:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "13995:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "13995:17:10"
																},
																"nativeSrc": "13995:20:10",
																"nodeType": "YulFunctionCall",
																"src": "13995:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "13990:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "13990:1:10"
																}
															]
														},
														{
															"nativeSrc": "14024:25:10",
															"nodeType": "YulAssignment",
															"src": "14024:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14047:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14047:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14029:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14029:17:10"
																},
																"nativeSrc": "14029:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14029:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14024:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14024:1:10"
																}
															]
														},
														{
															"nativeSrc": "14058:17:10",
															"nodeType": "YulAssignment",
															"src": "14058:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14070:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14070:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14073:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14073:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14066:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14066:3:10"
																},
																"nativeSrc": "14066:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14066:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14058:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14058:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14100:22:10",
																"nodeType": "YulBlock",
																"src": "14100:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14102:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14102:16:10"
																			},
																			"nativeSrc": "14102:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14102:18:10"
																		},
																		"nativeSrc": "14102:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14102:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14091:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14091:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14097:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14097:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14088:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14088:2:10"
																},
																"nativeSrc": "14088:11:10",
																"nodeType": "YulFunctionCall",
																"src": "14088:11:10"
															},
															"nativeSrc": "14085:37:10",
															"nodeType": "YulIf",
															"src": "14085:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "13935:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "13966:1:10",
														"nodeType": "YulTypedName",
														"src": "13966:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "13969:1:10",
														"nodeType": "YulTypedName",
														"src": "13969:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "13975:4:10",
														"nodeType": "YulTypedName",
														"src": "13975:4:10",
														"type": ""
													}
												],
												"src": "13935:194:10"
											},
											{
												"body": {
													"nativeSrc": "14179:147:10",
													"nodeType": "YulBlock",
													"src": "14179:147:10",
													"statements": [
														{
															"nativeSrc": "14189:25:10",
															"nodeType": "YulAssignment",
															"src": "14189:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14212:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14212:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14194:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14194:17:10"
																},
																"nativeSrc": "14194:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14194:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14189:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14189:1:10"
																}
															]
														},
														{
															"nativeSrc": "14223:25:10",
															"nodeType": "YulAssignment",
															"src": "14223:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14246:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14246:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14228:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14228:17:10"
																},
																"nativeSrc": "14228:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14228:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14223:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14223:1:10"
																}
															]
														},
														{
															"nativeSrc": "14257:16:10",
															"nodeType": "YulAssignment",
															"src": "14257:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14268:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14268:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14271:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14271:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14264:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14264:3:10"
																},
																"nativeSrc": "14264:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14264:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "14257:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14257:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14297:22:10",
																"nodeType": "YulBlock",
																"src": "14297:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14299:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14299:16:10"
																			},
																			"nativeSrc": "14299:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14299:18:10"
																		},
																		"nativeSrc": "14299:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14299:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14289:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14289:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "14292:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14292:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14286:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "14286:2:10"
																},
																"nativeSrc": "14286:10:10",
																"nodeType": "YulFunctionCall",
																"src": "14286:10:10"
															},
															"nativeSrc": "14283:36:10",
															"nodeType": "YulIf",
															"src": "14283:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "14135:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14166:1:10",
														"nodeType": "YulTypedName",
														"src": "14166:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14169:1:10",
														"nodeType": "YulTypedName",
														"src": "14169:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "14175:3:10",
														"nodeType": "YulTypedName",
														"src": "14175:3:10",
														"type": ""
													}
												],
												"src": "14135:191:10"
											},
											{
												"body": {
													"nativeSrc": "14380:362:10",
													"nodeType": "YulBlock",
													"src": "14380:362:10",
													"statements": [
														{
															"nativeSrc": "14390:25:10",
															"nodeType": "YulAssignment",
															"src": "14390:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14413:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14413:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14395:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14395:17:10"
																},
																"nativeSrc": "14395:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14395:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14390:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14390:1:10"
																}
															]
														},
														{
															"nativeSrc": "14424:25:10",
															"nodeType": "YulAssignment",
															"src": "14424:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14447:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14447:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14429:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14429:17:10"
																},
																"nativeSrc": "14429:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14429:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14424:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14424:1:10"
																}
															]
														},
														{
															"nativeSrc": "14458:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14458:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14481:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14481:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14484:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14484:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14477:3:10"
																},
																"nativeSrc": "14477:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14477:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14462:11:10",
																	"nodeType": "YulTypedName",
																	"src": "14462:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14495:41:10",
															"nodeType": "YulAssignment",
															"src": "14495:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14524:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "14524:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14506:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14506:17:10"
																},
																"nativeSrc": "14506:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14506:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14495:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14495:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14713:22:10",
																"nodeType": "YulBlock",
																"src": "14713:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14715:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "14715:16:10"
																			},
																			"nativeSrc": "14715:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "14715:18:10"
																		},
																		"nativeSrc": "14715:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "14715:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "14646:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14646:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "14639:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "14639:6:10"
																				},
																				"nativeSrc": "14639:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14639:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "14669:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "14669:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "14676:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "14676:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "14685:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "14685:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "14672:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "14672:3:10"
																						},
																						"nativeSrc": "14672:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "14672:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "14666:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "14666:2:10"
																				},
																				"nativeSrc": "14666:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "14666:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "14619:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "14619:2:10"
																		},
																		"nativeSrc": "14619:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14619:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14599:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14599:6:10"
																},
																"nativeSrc": "14599:113:10",
																"nodeType": "YulFunctionCall",
																"src": "14599:113:10"
															},
															"nativeSrc": "14596:139:10",
															"nodeType": "YulIf",
															"src": "14596:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14332:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14363:1:10",
														"nodeType": "YulTypedName",
														"src": "14363:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14366:1:10",
														"nodeType": "YulTypedName",
														"src": "14366:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14372:7:10",
														"nodeType": "YulTypedName",
														"src": "14372:7:10",
														"type": ""
													}
												],
												"src": "14332:410:10"
											},
											{
												"body": {
													"nativeSrc": "14776:152:10",
													"nodeType": "YulBlock",
													"src": "14776:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14793:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14793:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14796:77:10",
																		"nodeType": "YulLiteral",
																		"src": "14796:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14786:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14786:6:10"
																},
																"nativeSrc": "14786:88:10",
																"nodeType": "YulFunctionCall",
																"src": "14786:88:10"
															},
															"nativeSrc": "14786:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "14786:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14890:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14890:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14893:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14893:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14883:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14883:6:10"
																},
																"nativeSrc": "14883:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14883:15:10"
															},
															"nativeSrc": "14883:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14883:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14914:1:10",
																		"nodeType": "YulLiteral",
																		"src": "14914:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14917:4:10",
																		"nodeType": "YulLiteral",
																		"src": "14917:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14907:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14907:6:10"
																},
																"nativeSrc": "14907:15:10",
																"nodeType": "YulFunctionCall",
																"src": "14907:15:10"
															},
															"nativeSrc": "14907:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "14907:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "14748:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "14748:180:10"
											},
											{
												"body": {
													"nativeSrc": "14976:143:10",
													"nodeType": "YulBlock",
													"src": "14976:143:10",
													"statements": [
														{
															"nativeSrc": "14986:25:10",
															"nodeType": "YulAssignment",
															"src": "14986:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15009:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15009:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14991:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14991:17:10"
																},
																"nativeSrc": "14991:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14991:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14986:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14986:1:10"
																}
															]
														},
														{
															"nativeSrc": "15020:25:10",
															"nodeType": "YulAssignment",
															"src": "15020:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15043:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15043:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15025:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15025:17:10"
																},
																"nativeSrc": "15025:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15025:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15020:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15020:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15067:22:10",
																"nodeType": "YulBlock",
																"src": "15067:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15069:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15069:16:10"
																			},
																			"nativeSrc": "15069:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15069:18:10"
																		},
																		"nativeSrc": "15069:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15069:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15064:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15064:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15057:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15057:6:10"
																},
																"nativeSrc": "15057:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15057:9:10"
															},
															"nativeSrc": "15054:35:10",
															"nodeType": "YulIf",
															"src": "15054:35:10"
														},
														{
															"nativeSrc": "15099:14:10",
															"nodeType": "YulAssignment",
															"src": "15099:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15108:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15108:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15111:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15111:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15104:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15104:3:10"
																},
																"nativeSrc": "15104:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15104:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15099:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15099:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "14934:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14965:1:10",
														"nodeType": "YulTypedName",
														"src": "14965:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14968:1:10",
														"nodeType": "YulTypedName",
														"src": "14968:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "14974:1:10",
														"nodeType": "YulTypedName",
														"src": "14974:1:10",
														"type": ""
													}
												],
												"src": "14934:185:10"
											},
											{
												"body": {
													"nativeSrc": "15231:61:10",
													"nodeType": "YulBlock",
													"src": "15231:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15253:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15253:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15261:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15261:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15249:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15249:3:10"
																		},
																		"nativeSrc": "15249:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15249:14:10"
																	},
																	{
																		"hexValue": "4f6e6c7920454f412063616e2063616c6c",
																		"kind": "string",
																		"nativeSrc": "15265:19:10",
																		"nodeType": "YulLiteral",
																		"src": "15265:19:10",
																		"type": "",
																		"value": "Only EOA can call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15242:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15242:6:10"
																},
																"nativeSrc": "15242:43:10",
																"nodeType": "YulFunctionCall",
																"src": "15242:43:10"
															},
															"nativeSrc": "15242:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "15242:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
												"nativeSrc": "15125:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15223:6:10",
														"nodeType": "YulTypedName",
														"src": "15223:6:10",
														"type": ""
													}
												],
												"src": "15125:167:10"
											},
											{
												"body": {
													"nativeSrc": "15444:220:10",
													"nodeType": "YulBlock",
													"src": "15444:220:10",
													"statements": [
														{
															"nativeSrc": "15454:74:10",
															"nodeType": "YulAssignment",
															"src": "15454:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15520:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15520:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15525:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15525:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15461:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15461:58:10"
																},
																"nativeSrc": "15461:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15461:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15454:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15454:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15626:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15626:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
																	"nativeSrc": "15537:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15537:88:10"
																},
																"nativeSrc": "15537:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15537:93:10"
															},
															"nativeSrc": "15537:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15537:93:10"
														},
														{
															"nativeSrc": "15639:19:10",
															"nodeType": "YulAssignment",
															"src": "15639:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15650:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15650:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15655:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15655:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15646:3:10"
																},
																"nativeSrc": "15646:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15646:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15639:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15639:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15298:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15432:3:10",
														"nodeType": "YulTypedName",
														"src": "15432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15440:3:10",
														"nodeType": "YulTypedName",
														"src": "15440:3:10",
														"type": ""
													}
												],
												"src": "15298:366:10"
											},
											{
												"body": {
													"nativeSrc": "15841:248:10",
													"nodeType": "YulBlock",
													"src": "15841:248:10",
													"statements": [
														{
															"nativeSrc": "15851:26:10",
															"nodeType": "YulAssignment",
															"src": "15851:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15863:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15863:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15874:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15874:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15859:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15859:3:10"
																},
																"nativeSrc": "15859:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15859:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15851:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15851:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15898:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15898:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15909:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15909:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15894:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15894:3:10"
																		},
																		"nativeSrc": "15894:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15894:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15917:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15917:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15923:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15923:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15913:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15913:3:10"
																		},
																		"nativeSrc": "15913:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15913:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15887:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15887:6:10"
																},
																"nativeSrc": "15887:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15887:47:10"
															},
															"nativeSrc": "15887:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15887:47:10"
														},
														{
															"nativeSrc": "15943:139:10",
															"nodeType": "YulAssignment",
															"src": "15943:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16077:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16077:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15951:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15951:124:10"
																},
																"nativeSrc": "15951:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15951:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15943:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15943:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15670:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15821:9:10",
														"nodeType": "YulTypedName",
														"src": "15821:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15836:4:10",
														"nodeType": "YulTypedName",
														"src": "15836:4:10",
														"type": ""
													}
												],
												"src": "15670:419:10"
											},
											{
												"body": {
													"nativeSrc": "16201:59:10",
													"nodeType": "YulBlock",
													"src": "16201:59:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16223:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16223:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16231:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16231:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16219:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16219:3:10"
																		},
																		"nativeSrc": "16219:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16219:14:10"
																	},
																	{
																		"hexValue": "436f6e747261637420706175736564",
																		"kind": "string",
																		"nativeSrc": "16235:17:10",
																		"nodeType": "YulLiteral",
																		"src": "16235:17:10",
																		"type": "",
																		"value": "Contract paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16212:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16212:6:10"
																},
																"nativeSrc": "16212:41:10",
																"nodeType": "YulFunctionCall",
																"src": "16212:41:10"
															},
															"nativeSrc": "16212:41:10",
															"nodeType": "YulExpressionStatement",
															"src": "16212:41:10"
														}
													]
												},
												"name": "store_literal_in_memory_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
												"nativeSrc": "16095:165:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16193:6:10",
														"nodeType": "YulTypedName",
														"src": "16193:6:10",
														"type": ""
													}
												],
												"src": "16095:165:10"
											},
											{
												"body": {
													"nativeSrc": "16412:220:10",
													"nodeType": "YulBlock",
													"src": "16412:220:10",
													"statements": [
														{
															"nativeSrc": "16422:74:10",
															"nodeType": "YulAssignment",
															"src": "16422:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16488:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16488:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16493:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16493:2:10",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16429:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16429:58:10"
																},
																"nativeSrc": "16429:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16429:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16422:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16422:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16594:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16594:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
																	"nativeSrc": "16505:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16505:88:10"
																},
																"nativeSrc": "16505:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16505:93:10"
															},
															"nativeSrc": "16505:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16505:93:10"
														},
														{
															"nativeSrc": "16607:19:10",
															"nodeType": "YulAssignment",
															"src": "16607:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16618:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16618:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16623:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16623:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16614:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16614:3:10"
																},
																"nativeSrc": "16614:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16614:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16607:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16266:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16400:3:10",
														"nodeType": "YulTypedName",
														"src": "16400:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16408:3:10",
														"nodeType": "YulTypedName",
														"src": "16408:3:10",
														"type": ""
													}
												],
												"src": "16266:366:10"
											},
											{
												"body": {
													"nativeSrc": "16809:248:10",
													"nodeType": "YulBlock",
													"src": "16809:248:10",
													"statements": [
														{
															"nativeSrc": "16819:26:10",
															"nodeType": "YulAssignment",
															"src": "16819:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16831:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16831:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16842:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16842:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16827:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16827:3:10"
																},
																"nativeSrc": "16827:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16827:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16819:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16819:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16866:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16866:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16877:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16877:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16862:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16862:3:10"
																		},
																		"nativeSrc": "16862:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16862:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16885:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16885:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16891:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16891:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16881:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16881:3:10"
																		},
																		"nativeSrc": "16881:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16881:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16855:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16855:6:10"
																},
																"nativeSrc": "16855:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16855:47:10"
															},
															"nativeSrc": "16855:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16855:47:10"
														},
														{
															"nativeSrc": "16911:139:10",
															"nodeType": "YulAssignment",
															"src": "16911:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17045:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17045:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16919:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16919:124:10"
																},
																"nativeSrc": "16919:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16919:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16911:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16911:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16638:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16789:9:10",
														"nodeType": "YulTypedName",
														"src": "16789:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16804:4:10",
														"nodeType": "YulTypedName",
														"src": "16804:4:10",
														"type": ""
													}
												],
												"src": "16638:419:10"
											},
											{
												"body": {
													"nativeSrc": "17169:65:10",
													"nodeType": "YulBlock",
													"src": "17169:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17191:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17191:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17199:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17199:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17187:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17187:3:10"
																		},
																		"nativeSrc": "17187:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17187:14:10"
																	},
																	{
																		"hexValue": "4175746f2d7374616b696e672064697361626c6564",
																		"kind": "string",
																		"nativeSrc": "17203:23:10",
																		"nodeType": "YulLiteral",
																		"src": "17203:23:10",
																		"type": "",
																		"value": "Auto-staking disabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17180:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17180:6:10"
																},
																"nativeSrc": "17180:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17180:47:10"
															},
															"nativeSrc": "17180:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17180:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
												"nativeSrc": "17063:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17161:6:10",
														"nodeType": "YulTypedName",
														"src": "17161:6:10",
														"type": ""
													}
												],
												"src": "17063:171:10"
											},
											{
												"body": {
													"nativeSrc": "17386:220:10",
													"nodeType": "YulBlock",
													"src": "17386:220:10",
													"statements": [
														{
															"nativeSrc": "17396:74:10",
															"nodeType": "YulAssignment",
															"src": "17396:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17462:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17462:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17467:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17467:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17403:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17403:58:10"
																},
																"nativeSrc": "17403:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17403:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17396:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17396:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17568:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17568:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
																	"nativeSrc": "17479:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17479:88:10"
																},
																"nativeSrc": "17479:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17479:93:10"
															},
															"nativeSrc": "17479:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17479:93:10"
														},
														{
															"nativeSrc": "17581:19:10",
															"nodeType": "YulAssignment",
															"src": "17581:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17592:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17592:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17597:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17597:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17588:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17588:3:10"
																},
																"nativeSrc": "17588:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17588:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17581:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17581:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17240:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17374:3:10",
														"nodeType": "YulTypedName",
														"src": "17374:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17382:3:10",
														"nodeType": "YulTypedName",
														"src": "17382:3:10",
														"type": ""
													}
												],
												"src": "17240:366:10"
											},
											{
												"body": {
													"nativeSrc": "17783:248:10",
													"nodeType": "YulBlock",
													"src": "17783:248:10",
													"statements": [
														{
															"nativeSrc": "17793:26:10",
															"nodeType": "YulAssignment",
															"src": "17793:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17805:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17805:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17816:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17816:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17801:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17801:3:10"
																},
																"nativeSrc": "17801:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17801:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17793:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17840:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17840:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17851:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17851:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17836:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17836:3:10"
																		},
																		"nativeSrc": "17836:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17836:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17859:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17859:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17865:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17865:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17855:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17855:3:10"
																		},
																		"nativeSrc": "17855:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17855:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17829:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17829:6:10"
																},
																"nativeSrc": "17829:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17829:47:10"
															},
															"nativeSrc": "17829:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17829:47:10"
														},
														{
															"nativeSrc": "17885:139:10",
															"nodeType": "YulAssignment",
															"src": "17885:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18019:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18019:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17893:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17893:124:10"
																},
																"nativeSrc": "17893:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17893:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17885:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17885:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17612:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17763:9:10",
														"nodeType": "YulTypedName",
														"src": "17763:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17778:4:10",
														"nodeType": "YulTypedName",
														"src": "17778:4:10",
														"type": ""
													}
												],
												"src": "17612:419:10"
											},
											{
												"body": {
													"nativeSrc": "18143:56:10",
													"nodeType": "YulBlock",
													"src": "18143:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18165:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18165:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18173:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18173:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18161:3:10"
																		},
																		"nativeSrc": "18161:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18161:14:10"
																	},
																	{
																		"hexValue": "5374696c6c206c6f636b6564",
																		"kind": "string",
																		"nativeSrc": "18177:14:10",
																		"nodeType": "YulLiteral",
																		"src": "18177:14:10",
																		"type": "",
																		"value": "Still locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18154:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18154:6:10"
																},
																"nativeSrc": "18154:38:10",
																"nodeType": "YulFunctionCall",
																"src": "18154:38:10"
															},
															"nativeSrc": "18154:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "18154:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
												"nativeSrc": "18037:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18135:6:10",
														"nodeType": "YulTypedName",
														"src": "18135:6:10",
														"type": ""
													}
												],
												"src": "18037:162:10"
											},
											{
												"body": {
													"nativeSrc": "18351:220:10",
													"nodeType": "YulBlock",
													"src": "18351:220:10",
													"statements": [
														{
															"nativeSrc": "18361:74:10",
															"nodeType": "YulAssignment",
															"src": "18361:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18427:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18427:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18432:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18432:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18368:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18368:58:10"
																},
																"nativeSrc": "18368:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18368:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18361:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18361:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18533:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18533:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																	"nativeSrc": "18444:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18444:88:10"
																},
																"nativeSrc": "18444:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18444:93:10"
															},
															"nativeSrc": "18444:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18444:93:10"
														},
														{
															"nativeSrc": "18546:19:10",
															"nodeType": "YulAssignment",
															"src": "18546:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18557:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18557:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18562:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18562:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18553:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18553:3:10"
																},
																"nativeSrc": "18553:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18553:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18546:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18546:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18205:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18339:3:10",
														"nodeType": "YulTypedName",
														"src": "18339:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18347:3:10",
														"nodeType": "YulTypedName",
														"src": "18347:3:10",
														"type": ""
													}
												],
												"src": "18205:366:10"
											},
											{
												"body": {
													"nativeSrc": "18748:248:10",
													"nodeType": "YulBlock",
													"src": "18748:248:10",
													"statements": [
														{
															"nativeSrc": "18758:26:10",
															"nodeType": "YulAssignment",
															"src": "18758:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18770:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18770:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18781:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18781:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18766:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18766:3:10"
																},
																"nativeSrc": "18766:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18766:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18758:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18758:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18805:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18805:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18816:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18816:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18801:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18801:3:10"
																		},
																		"nativeSrc": "18801:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18801:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18824:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18824:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18830:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18830:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18820:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18820:3:10"
																		},
																		"nativeSrc": "18820:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18820:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18794:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18794:6:10"
																},
																"nativeSrc": "18794:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18794:47:10"
															},
															"nativeSrc": "18794:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18794:47:10"
														},
														{
															"nativeSrc": "18850:139:10",
															"nodeType": "YulAssignment",
															"src": "18850:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18984:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18984:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18858:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18858:124:10"
																},
																"nativeSrc": "18858:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18858:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18850:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18850:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18577:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18728:9:10",
														"nodeType": "YulTypedName",
														"src": "18728:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18743:4:10",
														"nodeType": "YulTypedName",
														"src": "18743:4:10",
														"type": ""
													}
												],
												"src": "18577:419:10"
											},
											{
												"body": {
													"nativeSrc": "19108:68:10",
													"nodeType": "YulBlock",
													"src": "19108:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19130:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19138:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19138:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19126:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19126:3:10"
																		},
																		"nativeSrc": "19126:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19126:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
																		"kind": "string",
																		"nativeSrc": "19142:26:10",
																		"nodeType": "YulLiteral",
																		"src": "19142:26:10",
																		"type": "",
																		"value": "Insufficient reward pool"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19119:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19119:6:10"
																},
																"nativeSrc": "19119:50:10",
																"nodeType": "YulFunctionCall",
																"src": "19119:50:10"
															},
															"nativeSrc": "19119:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "19119:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
												"nativeSrc": "19002:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19100:6:10",
														"nodeType": "YulTypedName",
														"src": "19100:6:10",
														"type": ""
													}
												],
												"src": "19002:174:10"
											},
											{
												"body": {
													"nativeSrc": "19328:220:10",
													"nodeType": "YulBlock",
													"src": "19328:220:10",
													"statements": [
														{
															"nativeSrc": "19338:74:10",
															"nodeType": "YulAssignment",
															"src": "19338:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19404:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19404:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19409:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19409:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19345:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19345:58:10"
																},
																"nativeSrc": "19345:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19345:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19338:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19338:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19510:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19510:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																	"nativeSrc": "19421:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19421:88:10"
																},
																"nativeSrc": "19421:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19421:93:10"
															},
															"nativeSrc": "19421:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19421:93:10"
														},
														{
															"nativeSrc": "19523:19:10",
															"nodeType": "YulAssignment",
															"src": "19523:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19534:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19534:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19539:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19539:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19530:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19530:3:10"
																},
																"nativeSrc": "19530:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19530:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19523:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19523:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19182:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19316:3:10",
														"nodeType": "YulTypedName",
														"src": "19316:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19324:3:10",
														"nodeType": "YulTypedName",
														"src": "19324:3:10",
														"type": ""
													}
												],
												"src": "19182:366:10"
											},
											{
												"body": {
													"nativeSrc": "19725:248:10",
													"nodeType": "YulBlock",
													"src": "19725:248:10",
													"statements": [
														{
															"nativeSrc": "19735:26:10",
															"nodeType": "YulAssignment",
															"src": "19735:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19747:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19747:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19758:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19758:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19743:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19743:3:10"
																},
																"nativeSrc": "19743:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19743:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19735:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19735:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19782:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19782:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19793:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19793:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19778:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19778:3:10"
																		},
																		"nativeSrc": "19778:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19778:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19801:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19801:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19807:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19807:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19797:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19797:3:10"
																		},
																		"nativeSrc": "19797:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19797:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19771:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19771:6:10"
																},
																"nativeSrc": "19771:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19771:47:10"
															},
															"nativeSrc": "19771:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19771:47:10"
														},
														{
															"nativeSrc": "19827:139:10",
															"nodeType": "YulAssignment",
															"src": "19827:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19961:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19961:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19835:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19835:124:10"
																},
																"nativeSrc": "19835:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19835:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19827:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19827:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19554:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19705:9:10",
														"nodeType": "YulTypedName",
														"src": "19705:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19720:4:10",
														"nodeType": "YulTypedName",
														"src": "19720:4:10",
														"type": ""
													}
												],
												"src": "19554:419:10"
											},
											{
												"body": {
													"nativeSrc": "20105:206:10",
													"nodeType": "YulBlock",
													"src": "20105:206:10",
													"statements": [
														{
															"nativeSrc": "20115:26:10",
															"nodeType": "YulAssignment",
															"src": "20115:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20127:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20127:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20138:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20138:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20123:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20123:3:10"
																},
																"nativeSrc": "20123:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20123:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20115:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20115:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20195:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20195:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20208:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20208:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20219:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20219:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20204:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20204:3:10"
																		},
																		"nativeSrc": "20204:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20204:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20151:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20151:43:10"
																},
																"nativeSrc": "20151:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20151:71:10"
															},
															"nativeSrc": "20151:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20151:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20276:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20276:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20289:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20289:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20300:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20300:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20285:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20285:3:10"
																		},
																		"nativeSrc": "20285:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20285:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20232:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20232:43:10"
																},
																"nativeSrc": "20232:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20232:72:10"
															},
															"nativeSrc": "20232:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20232:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "19979:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20069:9:10",
														"nodeType": "YulTypedName",
														"src": "20069:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20081:6:10",
														"nodeType": "YulTypedName",
														"src": "20081:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20089:6:10",
														"nodeType": "YulTypedName",
														"src": "20089:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20100:4:10",
														"nodeType": "YulTypedName",
														"src": "20100:4:10",
														"type": ""
													}
												],
												"src": "19979:332:10"
											},
											{
												"body": {
													"nativeSrc": "20423:64:10",
													"nodeType": "YulBlock",
													"src": "20423:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20445:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20445:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20453:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20453:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20441:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20441:3:10"
																		},
																		"nativeSrc": "20441:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20441:14:10"
																	},
																	{
																		"hexValue": "496e76616c696420706572696f6420696e646578",
																		"kind": "string",
																		"nativeSrc": "20457:22:10",
																		"nodeType": "YulLiteral",
																		"src": "20457:22:10",
																		"type": "",
																		"value": "Invalid period index"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20434:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20434:6:10"
																},
																"nativeSrc": "20434:46:10",
																"nodeType": "YulFunctionCall",
																"src": "20434:46:10"
															},
															"nativeSrc": "20434:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "20434:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
												"nativeSrc": "20317:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20415:6:10",
														"nodeType": "YulTypedName",
														"src": "20415:6:10",
														"type": ""
													}
												],
												"src": "20317:170:10"
											},
											{
												"body": {
													"nativeSrc": "20639:220:10",
													"nodeType": "YulBlock",
													"src": "20639:220:10",
													"statements": [
														{
															"nativeSrc": "20649:74:10",
															"nodeType": "YulAssignment",
															"src": "20649:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20715:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20715:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20720:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20720:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20656:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20656:58:10"
																},
																"nativeSrc": "20656:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20656:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20649:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20649:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20821:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20821:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																	"nativeSrc": "20732:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20732:88:10"
																},
																"nativeSrc": "20732:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20732:93:10"
															},
															"nativeSrc": "20732:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20732:93:10"
														},
														{
															"nativeSrc": "20834:19:10",
															"nodeType": "YulAssignment",
															"src": "20834:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20845:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20845:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20850:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20850:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20841:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20841:3:10"
																},
																"nativeSrc": "20841:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20841:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20834:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20834:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20493:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20627:3:10",
														"nodeType": "YulTypedName",
														"src": "20627:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20635:3:10",
														"nodeType": "YulTypedName",
														"src": "20635:3:10",
														"type": ""
													}
												],
												"src": "20493:366:10"
											},
											{
												"body": {
													"nativeSrc": "21036:248:10",
													"nodeType": "YulBlock",
													"src": "21036:248:10",
													"statements": [
														{
															"nativeSrc": "21046:26:10",
															"nodeType": "YulAssignment",
															"src": "21046:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21058:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21058:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21069:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21069:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21054:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21054:3:10"
																},
																"nativeSrc": "21054:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21054:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21046:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21046:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21093:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21093:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21104:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21104:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21089:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21089:3:10"
																		},
																		"nativeSrc": "21089:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21089:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21112:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21112:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21118:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21118:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21108:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21108:3:10"
																		},
																		"nativeSrc": "21108:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21108:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21082:6:10"
																},
																"nativeSrc": "21082:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21082:47:10"
															},
															"nativeSrc": "21082:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21082:47:10"
														},
														{
															"nativeSrc": "21138:139:10",
															"nodeType": "YulAssignment",
															"src": "21138:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21272:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21272:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21146:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21146:124:10"
																},
																"nativeSrc": "21146:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21146:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21138:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21138:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20865:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21016:9:10",
														"nodeType": "YulTypedName",
														"src": "21016:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21031:4:10",
														"nodeType": "YulTypedName",
														"src": "21031:4:10",
														"type": ""
													}
												],
												"src": "20865:419:10"
											},
											{
												"body": {
													"nativeSrc": "21396:55:10",
													"nodeType": "YulBlock",
													"src": "21396:55:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21418:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21418:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21426:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21426:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21414:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21414:3:10"
																		},
																		"nativeSrc": "21414:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21414:14:10"
																	},
																	{
																		"hexValue": "5a65726f20616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "21430:13:10",
																		"nodeType": "YulLiteral",
																		"src": "21430:13:10",
																		"type": "",
																		"value": "Zero amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21407:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21407:6:10"
																},
																"nativeSrc": "21407:37:10",
																"nodeType": "YulFunctionCall",
																"src": "21407:37:10"
															},
															"nativeSrc": "21407:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "21407:37:10"
														}
													]
												},
												"name": "store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
												"nativeSrc": "21290:161:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21388:6:10",
														"nodeType": "YulTypedName",
														"src": "21388:6:10",
														"type": ""
													}
												],
												"src": "21290:161:10"
											},
											{
												"body": {
													"nativeSrc": "21603:220:10",
													"nodeType": "YulBlock",
													"src": "21603:220:10",
													"statements": [
														{
															"nativeSrc": "21613:74:10",
															"nodeType": "YulAssignment",
															"src": "21613:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21679:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21679:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21684:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21684:2:10",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21620:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21620:58:10"
																},
																"nativeSrc": "21620:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21620:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21613:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21613:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21785:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21785:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																	"nativeSrc": "21696:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21696:88:10"
																},
																"nativeSrc": "21696:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21696:93:10"
															},
															"nativeSrc": "21696:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21696:93:10"
														},
														{
															"nativeSrc": "21798:19:10",
															"nodeType": "YulAssignment",
															"src": "21798:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21809:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21809:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21814:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21814:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21805:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21805:3:10"
																},
																"nativeSrc": "21805:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21805:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21798:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21798:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21457:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21591:3:10",
														"nodeType": "YulTypedName",
														"src": "21591:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21599:3:10",
														"nodeType": "YulTypedName",
														"src": "21599:3:10",
														"type": ""
													}
												],
												"src": "21457:366:10"
											},
											{
												"body": {
													"nativeSrc": "22000:248:10",
													"nodeType": "YulBlock",
													"src": "22000:248:10",
													"statements": [
														{
															"nativeSrc": "22010:26:10",
															"nodeType": "YulAssignment",
															"src": "22010:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22022:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22022:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22033:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22033:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22018:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22018:3:10"
																},
																"nativeSrc": "22018:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22018:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22010:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22010:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22057:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22057:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22068:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22068:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22053:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22053:3:10"
																		},
																		"nativeSrc": "22053:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22053:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "22076:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "22076:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22082:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22082:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22072:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22072:3:10"
																		},
																		"nativeSrc": "22072:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22072:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22046:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22046:6:10"
																},
																"nativeSrc": "22046:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22046:47:10"
															},
															"nativeSrc": "22046:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22046:47:10"
														},
														{
															"nativeSrc": "22102:139:10",
															"nodeType": "YulAssignment",
															"src": "22102:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22236:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22236:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22110:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "22110:124:10"
																},
																"nativeSrc": "22110:131:10",
																"nodeType": "YulFunctionCall",
																"src": "22110:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22102:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22102:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21829:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21980:9:10",
														"nodeType": "YulTypedName",
														"src": "21980:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21995:4:10",
														"nodeType": "YulTypedName",
														"src": "21995:4:10",
														"type": ""
													}
												],
												"src": "21829:419:10"
											},
											{
												"body": {
													"nativeSrc": "22402:282:10",
													"nodeType": "YulBlock",
													"src": "22402:282:10",
													"statements": [
														{
															"nativeSrc": "22412:26:10",
															"nodeType": "YulAssignment",
															"src": "22412:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22424:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22424:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22435:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22435:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22420:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22420:3:10"
																},
																"nativeSrc": "22420:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22420:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22412:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22412:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22492:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22492:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22505:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22505:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22516:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22516:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22501:3:10"
																		},
																		"nativeSrc": "22501:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22501:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22448:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22448:43:10"
																},
																"nativeSrc": "22448:71:10",
																"nodeType": "YulFunctionCall",
																"src": "22448:71:10"
															},
															"nativeSrc": "22448:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "22448:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22573:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22573:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22586:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22586:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22597:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22597:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22582:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22582:3:10"
																		},
																		"nativeSrc": "22582:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22582:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22529:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22529:43:10"
																},
																"nativeSrc": "22529:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22529:72:10"
															},
															"nativeSrc": "22529:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22529:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22649:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22649:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22662:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22662:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22673:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22673:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22658:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22658:3:10"
																		},
																		"nativeSrc": "22658:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22658:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "22611:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "22611:37:10"
																},
																"nativeSrc": "22611:66:10",
																"nodeType": "YulFunctionCall",
																"src": "22611:66:10"
															},
															"nativeSrc": "22611:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "22611:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "22254:430:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22358:9:10",
														"nodeType": "YulTypedName",
														"src": "22358:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "22370:6:10",
														"nodeType": "YulTypedName",
														"src": "22370:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "22378:6:10",
														"nodeType": "YulTypedName",
														"src": "22378:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "22386:6:10",
														"nodeType": "YulTypedName",
														"src": "22386:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22397:4:10",
														"nodeType": "YulTypedName",
														"src": "22397:4:10",
														"type": ""
													}
												],
												"src": "22254:430:10"
											},
											{
												"body": {
													"nativeSrc": "22796:56:10",
													"nodeType": "YulBlock",
													"src": "22796:56:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22818:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22818:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22826:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22826:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22814:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22814:3:10"
																		},
																		"nativeSrc": "22814:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22814:14:10"
																	},
																	{
																		"hexValue": "41505920746f6f2068696768",
																		"kind": "string",
																		"nativeSrc": "22830:14:10",
																		"nodeType": "YulLiteral",
																		"src": "22830:14:10",
																		"type": "",
																		"value": "APY too high"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22807:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22807:6:10"
																},
																"nativeSrc": "22807:38:10",
																"nodeType": "YulFunctionCall",
																"src": "22807:38:10"
															},
															"nativeSrc": "22807:38:10",
															"nodeType": "YulExpressionStatement",
															"src": "22807:38:10"
														}
													]
												},
												"name": "store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
												"nativeSrc": "22690:162:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22788:6:10",
														"nodeType": "YulTypedName",
														"src": "22788:6:10",
														"type": ""
													}
												],
												"src": "22690:162:10"
											},
											{
												"body": {
													"nativeSrc": "23004:220:10",
													"nodeType": "YulBlock",
													"src": "23004:220:10",
													"statements": [
														{
															"nativeSrc": "23014:74:10",
															"nodeType": "YulAssignment",
															"src": "23014:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23080:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23080:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23085:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23085:2:10",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23021:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "23021:58:10"
																},
																"nativeSrc": "23021:67:10",
																"nodeType": "YulFunctionCall",
																"src": "23021:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "23014:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23014:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23186:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23186:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
																	"nativeSrc": "23097:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "23097:88:10"
																},
																"nativeSrc": "23097:93:10",
																"nodeType": "YulFunctionCall",
																"src": "23097:93:10"
															},
															"nativeSrc": "23097:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "23097:93:10"
														},
														{
															"nativeSrc": "23199:19:10",
															"nodeType": "YulAssignment",
															"src": "23199:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "23210:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "23210:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23215:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23215:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23206:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23206:3:10"
																},
																"nativeSrc": "23206:12:10",
																"nodeType": "YulFunctionCall",
																"src": "23206:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "23199:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23199:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22858:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22992:3:10",
														"nodeType": "YulTypedName",
														"src": "22992:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "23000:3:10",
														"nodeType": "YulTypedName",
														"src": "23000:3:10",
														"type": ""
													}
												],
												"src": "22858:366:10"
											},
											{
												"body": {
													"nativeSrc": "23401:248:10",
													"nodeType": "YulBlock",
													"src": "23401:248:10",
													"statements": [
														{
															"nativeSrc": "23411:26:10",
															"nodeType": "YulAssignment",
															"src": "23411:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23423:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23423:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23434:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23434:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23419:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23419:3:10"
																},
																"nativeSrc": "23419:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23419:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23411:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23411:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23458:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23458:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23469:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23469:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23454:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23454:3:10"
																		},
																		"nativeSrc": "23454:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23454:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23477:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23477:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23483:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23483:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23473:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23473:3:10"
																		},
																		"nativeSrc": "23473:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23473:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23447:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "23447:6:10"
																},
																"nativeSrc": "23447:47:10",
																"nodeType": "YulFunctionCall",
																"src": "23447:47:10"
															},
															"nativeSrc": "23447:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "23447:47:10"
														},
														{
															"nativeSrc": "23503:139:10",
															"nodeType": "YulAssignment",
															"src": "23503:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23637:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23637:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23511:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23511:124:10"
																},
																"nativeSrc": "23511:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23511:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23503:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23503:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "23230:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23381:9:10",
														"nodeType": "YulTypedName",
														"src": "23381:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23396:4:10",
														"nodeType": "YulTypedName",
														"src": "23396:4:10",
														"type": ""
													}
												],
												"src": "23230:419:10"
											},
											{
												"body": {
													"nativeSrc": "23775:200:10",
													"nodeType": "YulBlock",
													"src": "23775:200:10",
													"statements": [
														{
															"nativeSrc": "23785:26:10",
															"nodeType": "YulAssignment",
															"src": "23785:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23797:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23797:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23808:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23808:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23793:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23793:3:10"
																},
																"nativeSrc": "23793:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23793:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23785:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23785:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23865:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23865:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23878:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23878:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23889:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23889:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23874:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23874:3:10"
																		},
																		"nativeSrc": "23874:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23874:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23821:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23821:43:10"
																},
																"nativeSrc": "23821:71:10",
																"nodeType": "YulFunctionCall",
																"src": "23821:71:10"
															},
															"nativeSrc": "23821:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "23821:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23940:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23940:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23953:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23953:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23964:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23964:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23949:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23949:3:10"
																		},
																		"nativeSrc": "23949:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23949:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "23902:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "23902:37:10"
																},
																"nativeSrc": "23902:66:10",
																"nodeType": "YulFunctionCall",
																"src": "23902:66:10"
															},
															"nativeSrc": "23902:66:10",
															"nodeType": "YulExpressionStatement",
															"src": "23902:66:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "23655:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23739:9:10",
														"nodeType": "YulTypedName",
														"src": "23739:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23751:6:10",
														"nodeType": "YulTypedName",
														"src": "23751:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23759:6:10",
														"nodeType": "YulTypedName",
														"src": "23759:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23770:4:10",
														"nodeType": "YulTypedName",
														"src": "23770:4:10",
														"type": ""
													}
												],
												"src": "23655:320:10"
											},
											{
												"body": {
													"nativeSrc": "24087:68:10",
													"nodeType": "YulBlock",
													"src": "24087:68:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "24109:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24109:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24117:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24117:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24105:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24105:3:10"
																		},
																		"nativeSrc": "24105:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24105:14:10"
																	},
																	{
																		"hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
																		"kind": "string",
																		"nativeSrc": "24121:26:10",
																		"nodeType": "YulLiteral",
																		"src": "24121:26:10",
																		"type": "",
																		"value": "Zero address not allowed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24098:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24098:6:10"
																},
																"nativeSrc": "24098:50:10",
																"nodeType": "YulFunctionCall",
																"src": "24098:50:10"
															},
															"nativeSrc": "24098:50:10",
															"nodeType": "YulExpressionStatement",
															"src": "24098:50:10"
														}
													]
												},
												"name": "store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
												"nativeSrc": "23981:174:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "24079:6:10",
														"nodeType": "YulTypedName",
														"src": "24079:6:10",
														"type": ""
													}
												],
												"src": "23981:174:10"
											},
											{
												"body": {
													"nativeSrc": "24307:220:10",
													"nodeType": "YulBlock",
													"src": "24307:220:10",
													"statements": [
														{
															"nativeSrc": "24317:74:10",
															"nodeType": "YulAssignment",
															"src": "24317:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24383:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24383:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24388:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24388:2:10",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24324:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "24324:58:10"
																},
																"nativeSrc": "24324:67:10",
																"nodeType": "YulFunctionCall",
																"src": "24324:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24317:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24317:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24489:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24489:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																	"nativeSrc": "24400:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "24400:88:10"
																},
																"nativeSrc": "24400:93:10",
																"nodeType": "YulFunctionCall",
																"src": "24400:93:10"
															},
															"nativeSrc": "24400:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "24400:93:10"
														},
														{
															"nativeSrc": "24502:19:10",
															"nodeType": "YulAssignment",
															"src": "24502:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24513:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "24513:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24518:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24518:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24509:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24509:3:10"
																},
																"nativeSrc": "24509:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24509:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24502:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24502:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "24161:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24295:3:10",
														"nodeType": "YulTypedName",
														"src": "24295:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24303:3:10",
														"nodeType": "YulTypedName",
														"src": "24303:3:10",
														"type": ""
													}
												],
												"src": "24161:366:10"
											},
											{
												"body": {
													"nativeSrc": "24704:248:10",
													"nodeType": "YulBlock",
													"src": "24704:248:10",
													"statements": [
														{
															"nativeSrc": "24714:26:10",
															"nodeType": "YulAssignment",
															"src": "24714:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24726:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "24726:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24737:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24737:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24722:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24722:3:10"
																},
																"nativeSrc": "24722:18:10",
																"nodeType": "YulFunctionCall",
																"src": "24722:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24714:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24714:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24761:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24761:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24772:1:10",
																				"nodeType": "YulLiteral",
																				"src": "24772:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24757:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24757:3:10"
																		},
																		"nativeSrc": "24757:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24757:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24780:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "24780:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24776:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24776:3:10"
																		},
																		"nativeSrc": "24776:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24776:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24750:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24750:6:10"
																},
																"nativeSrc": "24750:47:10",
																"nodeType": "YulFunctionCall",
																"src": "24750:47:10"
															},
															"nativeSrc": "24750:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "24750:47:10"
														},
														{
															"nativeSrc": "24806:139:10",
															"nodeType": "YulAssignment",
															"src": "24806:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24940:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "24940:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24814:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "24814:124:10"
																},
																"nativeSrc": "24814:131:10",
																"nodeType": "YulFunctionCall",
																"src": "24814:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24806:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "24806:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24533:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24684:9:10",
														"nodeType": "YulTypedName",
														"src": "24684:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24699:4:10",
														"nodeType": "YulTypedName",
														"src": "24699:4:10",
														"type": ""
													}
												],
												"src": "24533:419:10"
											},
											{
												"body": {
													"nativeSrc": "25064:66:10",
													"nodeType": "YulBlock",
													"src": "25064:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "25086:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "25086:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25094:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25094:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25082:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25082:3:10"
																		},
																		"nativeSrc": "25082:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25082:14:10"
																	},
																	{
																		"hexValue": "4e6f207265776172647320746f207769746864726177",
																		"kind": "string",
																		"nativeSrc": "25098:24:10",
																		"nodeType": "YulLiteral",
																		"src": "25098:24:10",
																		"type": "",
																		"value": "No rewards to withdraw"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25075:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25075:6:10"
																},
																"nativeSrc": "25075:48:10",
																"nodeType": "YulFunctionCall",
																"src": "25075:48:10"
															},
															"nativeSrc": "25075:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "25075:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
												"nativeSrc": "24958:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "25056:6:10",
														"nodeType": "YulTypedName",
														"src": "25056:6:10",
														"type": ""
													}
												],
												"src": "24958:172:10"
											},
											{
												"body": {
													"nativeSrc": "25282:220:10",
													"nodeType": "YulBlock",
													"src": "25282:220:10",
													"statements": [
														{
															"nativeSrc": "25292:74:10",
															"nodeType": "YulAssignment",
															"src": "25292:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25358:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25358:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25363:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25363:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25299:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "25299:58:10"
																},
																"nativeSrc": "25299:67:10",
																"nodeType": "YulFunctionCall",
																"src": "25299:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25292:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25464:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25464:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																	"nativeSrc": "25375:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "25375:88:10"
																},
																"nativeSrc": "25375:93:10",
																"nodeType": "YulFunctionCall",
																"src": "25375:93:10"
															},
															"nativeSrc": "25375:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "25375:93:10"
														},
														{
															"nativeSrc": "25477:19:10",
															"nodeType": "YulAssignment",
															"src": "25477:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25488:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25488:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25493:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25493:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25484:3:10"
																},
																"nativeSrc": "25484:12:10",
																"nodeType": "YulFunctionCall",
																"src": "25484:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25477:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25477:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "25136:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25270:3:10",
														"nodeType": "YulTypedName",
														"src": "25270:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25278:3:10",
														"nodeType": "YulTypedName",
														"src": "25278:3:10",
														"type": ""
													}
												],
												"src": "25136:366:10"
											},
											{
												"body": {
													"nativeSrc": "25679:248:10",
													"nodeType": "YulBlock",
													"src": "25679:248:10",
													"statements": [
														{
															"nativeSrc": "25689:26:10",
															"nodeType": "YulAssignment",
															"src": "25689:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "25701:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "25701:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "25712:2:10",
																		"nodeType": "YulLiteral",
																		"src": "25712:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25697:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25697:3:10"
																},
																"nativeSrc": "25697:18:10",
																"nodeType": "YulFunctionCall",
																"src": "25697:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25689:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25689:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25736:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25736:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25747:1:10",
																				"nodeType": "YulLiteral",
																				"src": "25747:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25732:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25732:3:10"
																		},
																		"nativeSrc": "25732:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25732:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "25755:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "25755:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "25761:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "25761:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "25751:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25751:3:10"
																		},
																		"nativeSrc": "25751:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25751:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "25725:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "25725:6:10"
																},
																"nativeSrc": "25725:47:10",
																"nodeType": "YulFunctionCall",
																"src": "25725:47:10"
															},
															"nativeSrc": "25725:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "25725:47:10"
														},
														{
															"nativeSrc": "25781:139:10",
															"nodeType": "YulAssignment",
															"src": "25781:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "25915:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "25915:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "25789:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "25789:124:10"
																},
																"nativeSrc": "25789:131:10",
																"nodeType": "YulFunctionCall",
																"src": "25789:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "25781:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "25781:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "25508:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "25659:9:10",
														"nodeType": "YulTypedName",
														"src": "25659:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "25674:4:10",
														"nodeType": "YulTypedName",
														"src": "25674:4:10",
														"type": ""
													}
												],
												"src": "25508:419:10"
											},
											{
												"body": {
													"nativeSrc": "26039:67:10",
													"nodeType": "YulBlock",
													"src": "26039:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "26061:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "26061:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26069:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26069:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26057:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26057:3:10"
																		},
																		"nativeSrc": "26057:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26057:14:10"
																	},
																	{
																		"hexValue": "556e737570706f72746564206c6f636b20706572696f64",
																		"kind": "string",
																		"nativeSrc": "26073:25:10",
																		"nodeType": "YulLiteral",
																		"src": "26073:25:10",
																		"type": "",
																		"value": "Unsupported lock period"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26050:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26050:6:10"
																},
																"nativeSrc": "26050:49:10",
																"nodeType": "YulFunctionCall",
																"src": "26050:49:10"
															},
															"nativeSrc": "26050:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "26050:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
												"nativeSrc": "25933:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "26031:6:10",
														"nodeType": "YulTypedName",
														"src": "26031:6:10",
														"type": ""
													}
												],
												"src": "25933:173:10"
											},
											{
												"body": {
													"nativeSrc": "26258:220:10",
													"nodeType": "YulBlock",
													"src": "26258:220:10",
													"statements": [
														{
															"nativeSrc": "26268:74:10",
															"nodeType": "YulAssignment",
															"src": "26268:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26334:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26334:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26339:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26339:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26275:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "26275:58:10"
																},
																"nativeSrc": "26275:67:10",
																"nodeType": "YulFunctionCall",
																"src": "26275:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "26268:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26268:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26440:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26440:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
																	"nativeSrc": "26351:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "26351:88:10"
																},
																"nativeSrc": "26351:93:10",
																"nodeType": "YulFunctionCall",
																"src": "26351:93:10"
															},
															"nativeSrc": "26351:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "26351:93:10"
														},
														{
															"nativeSrc": "26453:19:10",
															"nodeType": "YulAssignment",
															"src": "26453:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "26464:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "26464:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26469:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26469:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26460:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26460:3:10"
																},
																"nativeSrc": "26460:12:10",
																"nodeType": "YulFunctionCall",
																"src": "26460:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "26453:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26453:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "26112:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "26246:3:10",
														"nodeType": "YulTypedName",
														"src": "26246:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "26254:3:10",
														"nodeType": "YulTypedName",
														"src": "26254:3:10",
														"type": ""
													}
												],
												"src": "26112:366:10"
											},
											{
												"body": {
													"nativeSrc": "26655:248:10",
													"nodeType": "YulBlock",
													"src": "26655:248:10",
													"statements": [
														{
															"nativeSrc": "26665:26:10",
															"nodeType": "YulAssignment",
															"src": "26665:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "26677:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "26677:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "26688:2:10",
																		"nodeType": "YulLiteral",
																		"src": "26688:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "26673:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "26673:3:10"
																},
																"nativeSrc": "26673:18:10",
																"nodeType": "YulFunctionCall",
																"src": "26673:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26665:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26665:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "26712:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26712:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "26723:1:10",
																				"nodeType": "YulLiteral",
																				"src": "26723:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "26708:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26708:3:10"
																		},
																		"nativeSrc": "26708:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26708:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "26731:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "26731:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "26737:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "26737:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "26727:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "26727:3:10"
																		},
																		"nativeSrc": "26727:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "26727:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "26701:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "26701:6:10"
																},
																"nativeSrc": "26701:47:10",
																"nodeType": "YulFunctionCall",
																"src": "26701:47:10"
															},
															"nativeSrc": "26701:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "26701:47:10"
														},
														{
															"nativeSrc": "26757:139:10",
															"nodeType": "YulAssignment",
															"src": "26757:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "26891:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "26891:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "26765:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "26765:124:10"
																},
																"nativeSrc": "26765:131:10",
																"nodeType": "YulFunctionCall",
																"src": "26765:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "26757:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "26757:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "26484:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "26635:9:10",
														"nodeType": "YulTypedName",
														"src": "26635:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "26650:4:10",
														"nodeType": "YulTypedName",
														"src": "26650:4:10",
														"type": ""
													}
												],
												"src": "26484:419:10"
											},
											{
												"body": {
													"nativeSrc": "27015:75:10",
													"nodeType": "YulBlock",
													"src": "27015:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "27037:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "27037:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27045:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27045:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27033:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27033:3:10"
																		},
																		"nativeSrc": "27033:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27033:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "27049:33:10",
																		"nodeType": "YulLiteral",
																		"src": "27049:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27026:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27026:6:10"
																},
																"nativeSrc": "27026:57:10",
																"nodeType": "YulFunctionCall",
																"src": "27026:57:10"
															},
															"nativeSrc": "27026:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "27026:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "26909:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "27007:6:10",
														"nodeType": "YulTypedName",
														"src": "27007:6:10",
														"type": ""
													}
												],
												"src": "26909:181:10"
											},
											{
												"body": {
													"nativeSrc": "27242:220:10",
													"nodeType": "YulBlock",
													"src": "27242:220:10",
													"statements": [
														{
															"nativeSrc": "27252:74:10",
															"nodeType": "YulAssignment",
															"src": "27252:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27318:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27318:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27323:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27323:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27259:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "27259:58:10"
																},
																"nativeSrc": "27259:67:10",
																"nodeType": "YulFunctionCall",
																"src": "27259:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "27252:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27252:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27424:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27424:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "27335:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "27335:88:10"
																},
																"nativeSrc": "27335:93:10",
																"nodeType": "YulFunctionCall",
																"src": "27335:93:10"
															},
															"nativeSrc": "27335:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "27335:93:10"
														},
														{
															"nativeSrc": "27437:19:10",
															"nodeType": "YulAssignment",
															"src": "27437:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "27448:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "27448:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27453:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27453:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27444:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27444:3:10"
																},
																"nativeSrc": "27444:12:10",
																"nodeType": "YulFunctionCall",
																"src": "27444:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "27437:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27437:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "27096:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "27230:3:10",
														"nodeType": "YulTypedName",
														"src": "27230:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "27238:3:10",
														"nodeType": "YulTypedName",
														"src": "27238:3:10",
														"type": ""
													}
												],
												"src": "27096:366:10"
											},
											{
												"body": {
													"nativeSrc": "27639:248:10",
													"nodeType": "YulBlock",
													"src": "27639:248:10",
													"statements": [
														{
															"nativeSrc": "27649:26:10",
															"nodeType": "YulAssignment",
															"src": "27649:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "27661:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "27661:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "27672:2:10",
																		"nodeType": "YulLiteral",
																		"src": "27672:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "27657:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "27657:3:10"
																},
																"nativeSrc": "27657:18:10",
																"nodeType": "YulFunctionCall",
																"src": "27657:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27649:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27649:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "27696:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27696:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "27707:1:10",
																				"nodeType": "YulLiteral",
																				"src": "27707:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "27692:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27692:3:10"
																		},
																		"nativeSrc": "27692:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27692:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "27715:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "27715:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "27721:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "27721:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "27711:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "27711:3:10"
																		},
																		"nativeSrc": "27711:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "27711:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "27685:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "27685:6:10"
																},
																"nativeSrc": "27685:47:10",
																"nodeType": "YulFunctionCall",
																"src": "27685:47:10"
															},
															"nativeSrc": "27685:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "27685:47:10"
														},
														{
															"nativeSrc": "27741:139:10",
															"nodeType": "YulAssignment",
															"src": "27741:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "27875:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "27875:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "27749:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "27749:124:10"
																},
																"nativeSrc": "27749:131:10",
																"nodeType": "YulFunctionCall",
																"src": "27749:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "27741:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "27741:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "27468:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "27619:9:10",
														"nodeType": "YulTypedName",
														"src": "27619:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "27634:4:10",
														"nodeType": "YulTypedName",
														"src": "27634:4:10",
														"type": ""
													}
												],
												"src": "27468:419:10"
											},
											{
												"body": {
													"nativeSrc": "28047:288:10",
													"nodeType": "YulBlock",
													"src": "28047:288:10",
													"statements": [
														{
															"nativeSrc": "28057:26:10",
															"nodeType": "YulAssignment",
															"src": "28057:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28069:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "28069:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28080:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28080:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28065:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28065:3:10"
																},
																"nativeSrc": "28065:18:10",
																"nodeType": "YulFunctionCall",
																"src": "28065:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28057:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "28057:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28137:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28137:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28150:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28150:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28161:1:10",
																				"nodeType": "YulLiteral",
																				"src": "28161:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28146:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28146:3:10"
																		},
																		"nativeSrc": "28146:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28146:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28093:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28093:43:10"
																},
																"nativeSrc": "28093:71:10",
																"nodeType": "YulFunctionCall",
																"src": "28093:71:10"
															},
															"nativeSrc": "28093:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "28093:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28218:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28218:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28231:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28231:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28242:2:10",
																				"nodeType": "YulLiteral",
																				"src": "28242:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28227:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28227:3:10"
																		},
																		"nativeSrc": "28227:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28227:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28174:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28174:43:10"
																},
																"nativeSrc": "28174:72:10",
																"nodeType": "YulFunctionCall",
																"src": "28174:72:10"
															},
															"nativeSrc": "28174:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "28174:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "28300:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28300:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28313:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28313:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28324:2:10",
																				"nodeType": "YulLiteral",
																				"src": "28324:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28309:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28309:3:10"
																		},
																		"nativeSrc": "28309:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28309:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28256:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28256:43:10"
																},
																"nativeSrc": "28256:72:10",
																"nodeType": "YulFunctionCall",
																"src": "28256:72:10"
															},
															"nativeSrc": "28256:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "28256:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "27893:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28003:9:10",
														"nodeType": "YulTypedName",
														"src": "28003:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "28015:6:10",
														"nodeType": "YulTypedName",
														"src": "28015:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28023:6:10",
														"nodeType": "YulTypedName",
														"src": "28023:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28031:6:10",
														"nodeType": "YulTypedName",
														"src": "28031:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28042:4:10",
														"nodeType": "YulTypedName",
														"src": "28042:4:10",
														"type": ""
													}
												],
												"src": "27893:442:10"
											},
											{
												"body": {
													"nativeSrc": "28467:206:10",
													"nodeType": "YulBlock",
													"src": "28467:206:10",
													"statements": [
														{
															"nativeSrc": "28477:26:10",
															"nodeType": "YulAssignment",
															"src": "28477:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "28489:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "28489:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "28500:2:10",
																		"nodeType": "YulLiteral",
																		"src": "28500:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "28485:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "28485:3:10"
																},
																"nativeSrc": "28485:18:10",
																"nodeType": "YulFunctionCall",
																"src": "28485:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "28477:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "28477:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "28557:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28557:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28570:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28570:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28581:1:10",
																				"nodeType": "YulLiteral",
																				"src": "28581:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28566:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28566:3:10"
																		},
																		"nativeSrc": "28566:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28566:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "28513:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28513:43:10"
																},
																"nativeSrc": "28513:71:10",
																"nodeType": "YulFunctionCall",
																"src": "28513:71:10"
															},
															"nativeSrc": "28513:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "28513:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "28638:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "28638:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "28651:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "28651:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "28662:2:10",
																				"nodeType": "YulLiteral",
																				"src": "28662:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "28647:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "28647:3:10"
																		},
																		"nativeSrc": "28647:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "28647:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "28594:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "28594:43:10"
																},
																"nativeSrc": "28594:72:10",
																"nodeType": "YulFunctionCall",
																"src": "28594:72:10"
															},
															"nativeSrc": "28594:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "28594:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "28341:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "28431:9:10",
														"nodeType": "YulTypedName",
														"src": "28431:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "28443:6:10",
														"nodeType": "YulTypedName",
														"src": "28443:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "28451:6:10",
														"nodeType": "YulTypedName",
														"src": "28451:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "28462:4:10",
														"nodeType": "YulTypedName",
														"src": "28462:4:10",
														"type": ""
													}
												],
												"src": "28341:332:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct AutoStaking.StakeInfo -> struct AutoStaking.StakeInfo\n    function abi_encode_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakeTime\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // unlockTime\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimed\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // autoStaking\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // compoundedAmount\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct AutoStaking.StakeInfo[] -> struct AutoStaking.StakeInfo[]\n    function abi_encode_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_StakeInfo_$945_memory_ptr_to_t_struct$_StakeInfo_$945_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_bool(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__to_t_uint256_t_uint256_t_uint256_t_bool_t_bool_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$380_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$380_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$380__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$380_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid account\")\n\n    }\n\n    function abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid stake index\")\n\n    }\n\n    function abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Already claimed\")\n\n    }\n\n    function abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only EOA can call\")\n\n    }\n\n    function abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 15)\n        store_literal_in_memory_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Auto-staking disabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583(memPtr) {\n\n        mstore(add(memPtr, 0), \"Still locked\")\n\n    }\n\n    function abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward pool\")\n\n    }\n\n    function abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid period index\")\n\n    }\n\n    function abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 11)\n        store_literal_in_memory_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_bool__to_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5(memPtr) {\n\n        mstore(add(memPtr, 0), \"APY too high\")\n\n    }\n\n    function abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 12)\n        store_literal_in_memory_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_bool__to_t_uint256_t_bool__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8(memPtr) {\n\n        mstore(add(memPtr, 0), \"Zero address not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards to withdraw\")\n\n    }\n\n    function abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unsupported lock period\")\n\n    }\n\n    function abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"904": [
									{
										"length": 32,
										"start": 3786
									},
									{
										"length": 32,
										"start": 4665
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106101ee575f3560e01c8063817b1cd21161010d578063c7b8981c116100a0578063f2fde38b1161006f578063f2fde38b14610561578063f55ad3ec1461057d578063f7c618c1146105ad578063f8cf31cb146105cb576101ee565b8063c7b8981c146104fd578063d854fb7514610507578063e6a69ab814610525578063e8a3539214610543576101ee565b8063b3f00674116100dc578063b3f006741461049d578063bbd36b61146104bb578063c4ae3168146104d7578063c69bebe4146104e1576101ee565b8063817b1cd2146104295780638da5cb5b1461044757806395a2906014610465578063ae169a5014610481576101ee565b8063584b62a111610185578063715018a611610154578063715018a6146103c557806372f702f3146103cf578063794a62d3146103ed5780637a5c08ae1461040b576101ee565b8063584b62a1146103265780635acd2e4c1461035b5780635c975abb146103775780636b494def14610395576101ee565b80633d92f4e2116101c15780633d92f4e2146102a05780634060e257146102be5780634c8f2a78146102da578063561b24631461030a576101ee565b80630630e463146101f25780631747e0b0146102225780631852e8d91461025257806338bceaac14610282575b5f5ffd5b61020c600480360381019061020791906123ad565b6105e7565b60405161021991906123f0565b60405180910390f35b61023c600480360381019061023791906123ad565b6105fc565b6040516102499190612553565b60405180910390f35b61026c6004803603810190610267919061259d565b6106f1565b60405161027991906123f0565b60405180910390f35b61028a6109aa565b60405161029791906123f0565b60405180910390f35b6102a86109af565b6040516102b591906123f0565b60405180910390f35b6102d860048036038101906102d391906125db565b6109b5565b005b6102f460048036038101906102ef91906125db565b610d5e565b60405161030191906123f0565b60405180910390f35b610324600480360381019061031f9190612630565b610d77565b005b610340600480360381019061033b919061259d565b6110a6565b6040516103529695949392919061268f565b60405180910390f35b610375600480360381019061037091906126ee565b611111565b005b61037f6111f8565b60405161038c919061272c565b60405180910390f35b6103af60048036038101906103aa91906125db565b61120b565b6040516103bc91906123f0565b60405180910390f35b6103cd611224565b005b6103d7611237565b6040516103e491906127a0565b60405180910390f35b6103f561125b565b60405161040291906123f0565b60405180910390f35b610413611265565b60405161042091906123f0565b60405180910390f35b61043161126b565b60405161043e91906123f0565b60405180910390f35b61044f611271565b60405161045c91906127c8565b60405180910390f35b61047f600480360381019061047a91906125db565b611298565b005b61049b600480360381019061049691906125db565b6114b1565b005b6104a56118f5565b6040516104b291906127c8565b60405180910390f35b6104d560048036038101906104d091906125db565b61191a565b005b6104df611a1b565b005b6104fb60048036038101906104f691906123ad565b611a8d565b005b610505611b89565b005b61050f611d4b565b60405161051c91906123f0565b60405180910390f35b61052d611d54565b60405161053a91906123f0565b60405180910390f35b61054b611d5c565b60405161055891906127c8565b60405180910390f35b61057b600480360381019061057691906123ad565b611d84565b005b610597600480360381019061059291906125db565b611e08565b6040516105a491906123f0565b60405180910390f35b6105b5611e69565b6040516105c291906127a0565b60405180910390f35b6105e560048036038101906105e091906123ad565b611e8e565b005b600a602052805f5260405f205f915090505481565b606060095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805480602002602001604051908101604052809291908181526020015f905b828210156106e6578382905f5260205f2090600502016040518060c00160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581526020016003820160019054906101000a900460ff161515151581526020016004820154815250508152602001906001019061065a565b505050509050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610760576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107579061283b565b60405180910390fd5b60095f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208054905082106107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d9906128a3565b60405180910390fd5b5f60095f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110610832576108316128c1565b5b905f5260205f2090600502016040518060c00160405290815f82015481526020016001820154815260200160028201548152602001600382015f9054906101000a900460ff161515151581526020016003820160019054906101000a900460ff1615151515815260200160048201548152505090508060600151156108ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e390612938565b60405180910390fd5b5f816040015190508160800151801561090457508042115b1561090d574290505b5f82602001518261091e9190612983565b90505f61093d846020015185604001516109389190612983565b611f8a565b90505f8460a00151855f015161095391906129b6565b90506301e1338061271061096791906129e9565b836006846003811061097c5761097b6128c1565b5b01548361098991906129e9565b61099391906129e9565b61099d9190612a57565b9550505050505092915050565b603281565b61271081565b6109bd61200c565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610a2b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2290612ad1565b60405180910390fd5b600d60149054906101000a900460ff1615610a7b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7290612b39565b60405180910390fd5b5f33905060095f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20805490508210610b01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af8906128a3565b60405180910390fd5b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208381548110610b5157610b506128c1565b5b905f5260205f2090600502019050806003015f9054906101000a900460ff1615610bb0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba790612938565b60405180910390fd5b8060030160019054906101000a900460ff16610c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf890612ba1565b60405180910390fd5b8060020154421015610c48576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c3f90612c09565b60405180910390fd5b5f610c5383856106f1565b905080600c541015610c9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c9190612c71565b60405180910390fd5b42826001018190555081600101548260020154610cb79190612983565b42610cc291906129b6565b826002018190555080826004015f828254610cdd91906129b6565b9250508190555080600c5f828254610cf59190612983565b925050819055508273ffffffffffffffffffffffffffffffffffffffff167f593662cbe53e88df3fef748665b8c3d3142e5d34dc1b24290f7e953537a00183858460040154604051610d48929190612c8f565b60405180910390a2505050610d5b61205b565b50565b60038160038110610d6d575f80fd5b015f915090505481565b610d7f61200c565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614610ded576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610de490612ad1565b60405180910390fd5b600d60149054906101000a900460ff1615610e3d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e3490612b39565b60405180910390fd5b60038210610e80576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7790612d00565b60405180910390fd5b5f8311610ec2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eb990612d68565b60405180910390fd5b610f0f3330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16612064909392919063ffffffff16565b5f60038360038110610f2457610f236128c1565b5b015442610f3191906129b6565b905060095f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f206040518060c001604052808681526020014281526020018381526020015f1515815260200184151581526020015f815250908060018154018082558091505060019003905f5260205f2090600502015f909190919091505f820151815f015560208201518160010155604082015181600201556060820151816003015f6101000a81548160ff02191690831515021790555060808201518160030160016101000a81548160ff02191690831515021790555060a08201518160040155505083600b5f82825461103f91906129b6565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f3df45cb339f96ae4bdb793efcb6e22100dd0dc4fd739a4ee2033fe67ea35af9685858560405161109093929190612d86565b60405180910390a2506110a161205b565b505050565b6009602052815f5260405f2081815481106110bf575f80fd5b905f5260205f2090600502015f9150915050805f015490806001015490806002015490806003015f9054906101000a900460ff16908060030160019054906101000a900460ff16908060040154905086565b6111196120e6565b6003821061115c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161115390612d00565b60405180910390fd5b6127108111156111a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161119890612e05565b60405180910390fd5b80600683600381106111b6576111b56128c1565b5b01819055507f787a1fca55641ce34a438271930bbb9401df20db2b4f510d4f252227d85df43d82826040516111ec929190612c8f565b60405180910390a15050565b600d60149054906101000a900460ff1681565b6006816003811061121a575f80fd5b015f915090505481565b61122c6120e6565b6112355f61216d565b565b7f000000000000000000000000000000000000000000000000000000000000000081565b5f62030d40905090565b600c5481565b600b5481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600d60149054906101000a900460ff16156112e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112df90612b39565b60405180910390fd5b5f33905060095f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050821061136e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611365906128a3565b60405180910390fd5b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106113be576113bd6128c1565b5b905f5260205f2090600502019050806003015f9054906101000a900460ff161561141d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161141490612938565b60405180910390fd5b8060030160019054906101000a900460ff16158160030160016101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff167ffa2d7b35e7cc82247c5ae7e8ae2dc078c2b144b76a6b1068887b3c8892c15da5848360030160019054906101000a900460ff166040516114a4929190612e23565b60405180910390a2505050565b6114b961200c565b3373ffffffffffffffffffffffffffffffffffffffff163273ffffffffffffffffffffffffffffffffffffffff1614611527576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161151e90612ad1565b60405180910390fd5b600d60149054906101000a900460ff1615611577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161156e90612b39565b60405180910390fd5b5f3390505f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2083815481106115cb576115ca6128c1565b5b905f5260205f2090600502019050806003015f9054906101000a900460ff161561162a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161162190612938565b60405180910390fd5b8060020154421015611671576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161166890612c09565b60405180910390fd5b5f61167c83856106f1565b905080600c5410156116c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ba90612c71565b60405180910390fd5b6001826003015f6101000a81548160ff0219169083151502179055508160030160019054906101000a900460ff16801561170057505f8260040154115b1561182b575f81836004015461171691906129b6565b90505f61271060328361172991906129e9565b6117339190612a57565b90505f81836117429190612983565b905080600a5f8873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461179091906129b6565b9250508190555081600a5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461180491906129b6565b9250508190555082600c5f82825461181c9190612983565b92505081905550505050611897565b80600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461187791906129b6565b9250508190555080600c5f82825461188f9190612983565b925050819055505b8273ffffffffffffffffffffffffffffffffffffffff167f987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a82866040516118df929190612c8f565b60405180910390a25050506118f261205b565b50565b600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6119226120e6565b5f8111611964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195b90612d68565b60405180910390fd5b6119b233308360025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612064909392919063ffffffff16565b80600c5f8282546119c391906129b6565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fd15dafc20a4e1ccff3e1b0a321ba0ee5c9b2aa1b9c7cae08fb5a32453753624482604051611a1091906123f0565b60405180910390a250565b611a236120e6565b600d60149054906101000a900460ff1615600d60146101000a81548160ff021916908315150217905550600d60149054906101000a900460ff1615157f752d7e161ff5146f80e3820893176eb40532811e5e20400dfdde57455213706a60405160405180910390a2565b611a956120e6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611afa90612e94565b60405180910390fd5b80600d5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee60405160405180910390a250565b611b9161200c565b600d60149054906101000a900460ff1615611be1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bd890612b39565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611c64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c5b90612efc565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550611cf2338260025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661222e9092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167fbd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e61682604051611d3891906123f0565b60405180910390a250611d4961205b565b565b5f600c54905090565b6301e1338081565b5f600d5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b611d8c6120e6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611dfc575f6040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401611df391906127c8565b60405180910390fd5b611e058161216d565b50565b5f60038210611e4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4390612d00565b60405180910390fd5b60038260038110611e6057611e5f6128c1565b5b01549050919050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b611e966120e6565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611f04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611efb90612e94565b60405180910390fd5b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fa5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a060405160405180910390a250565b5f5f5f90505b6003811015611fcb5760038160038110611fad57611fac6128c1565b5b01548303611fbe5780915050612007565b8080600101915050611f90565b506040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ffe90612f64565b60405180910390fd5b919050565b600260015403612051576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161204890612fcc565b60405180910390fd5b6002600181905550565b60018081905550565b6120e0848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161209993929190612fea565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506122ad565b50505050565b6120ee612348565b73ffffffffffffffffffffffffffffffffffffffff1661210c611271565b73ffffffffffffffffffffffffffffffffffffffff161461216b5761212f612348565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161216291906127c8565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6122a8838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb858560405160240161226192919061301f565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506122ad565b505050565b5f5f60205f8451602086015f885af1806122cc576040513d5f823e3d81fd5b3d92505f519150505f82146122e5576001811415612300565b5f8473ffffffffffffffffffffffffffffffffffffffff163b145b1561234257836040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161233991906127c8565b60405180910390fd5b50505050565b5f33905090565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61237c82612353565b9050919050565b61238c81612372565b8114612396575f5ffd5b50565b5f813590506123a781612383565b92915050565b5f602082840312156123c2576123c161234f565b5b5f6123cf84828501612399565b91505092915050565b5f819050919050565b6123ea816123d8565b82525050565b5f6020820190506124035f8301846123e1565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b61243b816123d8565b82525050565b5f8115159050919050565b61245581612441565b82525050565b60c082015f82015161246f5f850182612432565b5060208201516124826020850182612432565b5060408201516124956040850182612432565b5060608201516124a8606085018261244c565b5060808201516124bb608085018261244c565b5060a08201516124ce60a0850182612432565b50505050565b5f6124df838361245b565b60c08301905092915050565b5f602082019050919050565b5f61250182612409565b61250b8185612413565b935061251683612423565b805f5b8381101561254657815161252d88826124d4565b9750612538836124eb565b925050600181019050612519565b5085935050505092915050565b5f6020820190508181035f83015261256b81846124f7565b905092915050565b61257c816123d8565b8114612586575f5ffd5b50565b5f8135905061259781612573565b92915050565b5f5f604083850312156125b3576125b261234f565b5b5f6125c085828601612399565b92505060206125d185828601612589565b9150509250929050565b5f602082840312156125f0576125ef61234f565b5b5f6125fd84828501612589565b91505092915050565b61260f81612441565b8114612619575f5ffd5b50565b5f8135905061262a81612606565b92915050565b5f5f5f606084860312156126475761264661234f565b5b5f61265486828701612589565b935050602061266586828701612589565b92505060406126768682870161261c565b9150509250925092565b61268981612441565b82525050565b5f60c0820190506126a25f8301896123e1565b6126af60208301886123e1565b6126bc60408301876123e1565b6126c96060830186612680565b6126d66080830185612680565b6126e360a08301846123e1565b979650505050505050565b5f5f604083850312156127045761270361234f565b5b5f61271185828601612589565b925050602061272285828601612589565b9150509250929050565b5f60208201905061273f5f830184612680565b92915050565b5f819050919050565b5f61276861276361275e84612353565b612745565b612353565b9050919050565b5f6127798261274e565b9050919050565b5f61278a8261276f565b9050919050565b61279a81612780565b82525050565b5f6020820190506127b35f830184612791565b92915050565b6127c281612372565b82525050565b5f6020820190506127db5f8301846127b9565b92915050565b5f82825260208201905092915050565b7f496e76616c6964206163636f756e7400000000000000000000000000000000005f82015250565b5f612825600f836127e1565b9150612830826127f1565b602082019050919050565b5f6020820190508181035f83015261285281612819565b9050919050565b7f496e76616c6964207374616b6520696e646578000000000000000000000000005f82015250565b5f61288d6013836127e1565b915061289882612859565b602082019050919050565b5f6020820190508181035f8301526128ba81612881565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f416c726561647920636c61696d656400000000000000000000000000000000005f82015250565b5f612922600f836127e1565b915061292d826128ee565b602082019050919050565b5f6020820190508181035f83015261294f81612916565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61298d826123d8565b9150612998836123d8565b92508282039050818111156129b0576129af612956565b5b92915050565b5f6129c0826123d8565b91506129cb836123d8565b92508282019050808211156129e3576129e2612956565b5b92915050565b5f6129f3826123d8565b91506129fe836123d8565b9250828202612a0c816123d8565b91508282048414831517612a2357612a22612956565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f612a61826123d8565b9150612a6c836123d8565b925082612a7c57612a7b612a2a565b5b828204905092915050565b7f4f6e6c7920454f412063616e2063616c6c0000000000000000000000000000005f82015250565b5f612abb6011836127e1565b9150612ac682612a87565b602082019050919050565b5f6020820190508181035f830152612ae881612aaf565b9050919050565b7f436f6e74726163742070617573656400000000000000000000000000000000005f82015250565b5f612b23600f836127e1565b9150612b2e82612aef565b602082019050919050565b5f6020820190508181035f830152612b5081612b17565b9050919050565b7f4175746f2d7374616b696e672064697361626c656400000000000000000000005f82015250565b5f612b8b6015836127e1565b9150612b9682612b57565b602082019050919050565b5f6020820190508181035f830152612bb881612b7f565b9050919050565b7f5374696c6c206c6f636b656400000000000000000000000000000000000000005f82015250565b5f612bf3600c836127e1565b9150612bfe82612bbf565b602082019050919050565b5f6020820190508181035f830152612c2081612be7565b9050919050565b7f496e73756666696369656e742072657761726420706f6f6c00000000000000005f82015250565b5f612c5b6018836127e1565b9150612c6682612c27565b602082019050919050565b5f6020820190508181035f830152612c8881612c4f565b9050919050565b5f604082019050612ca25f8301856123e1565b612caf60208301846123e1565b9392505050565b7f496e76616c696420706572696f6420696e6465780000000000000000000000005f82015250565b5f612cea6014836127e1565b9150612cf582612cb6565b602082019050919050565b5f6020820190508181035f830152612d1781612cde565b9050919050565b7f5a65726f20616d6f756e740000000000000000000000000000000000000000005f82015250565b5f612d52600b836127e1565b9150612d5d82612d1e565b602082019050919050565b5f6020820190508181035f830152612d7f81612d46565b9050919050565b5f606082019050612d995f8301866123e1565b612da660208301856123e1565b612db36040830184612680565b949350505050565b7f41505920746f6f206869676800000000000000000000000000000000000000005f82015250565b5f612def600c836127e1565b9150612dfa82612dbb565b602082019050919050565b5f6020820190508181035f830152612e1c81612de3565b9050919050565b5f604082019050612e365f8301856123e1565b612e436020830184612680565b9392505050565b7f5a65726f2061646472657373206e6f7420616c6c6f77656400000000000000005f82015250565b5f612e7e6018836127e1565b9150612e8982612e4a565b602082019050919050565b5f6020820190508181035f830152612eab81612e72565b9050919050565b7f4e6f207265776172647320746f207769746864726177000000000000000000005f82015250565b5f612ee66016836127e1565b9150612ef182612eb2565b602082019050919050565b5f6020820190508181035f830152612f1381612eda565b9050919050565b7f556e737570706f72746564206c6f636b20706572696f640000000000000000005f82015250565b5f612f4e6017836127e1565b9150612f5982612f1a565b602082019050919050565b5f6020820190508181035f830152612f7b81612f42565b9050919050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612fb6601f836127e1565b9150612fc182612f82565b602082019050919050565b5f6020820190508181035f830152612fe381612faa565b9050919050565b5f606082019050612ffd5f8301866127b9565b61300a60208301856127b9565b61301760408301846123e1565b949350505050565b5f6040820190506130325f8301856127b9565b61303f60208301846123e1565b939250505056fea2646970667358221220c826fc8dee317104c7366fc6fd9e4450caf7dfd0e6c32315cdc25ade692368c564736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1EE JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0x10D JUMPI DUP1 PUSH4 0xC7B8981C GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x561 JUMPI DUP1 PUSH4 0xF55AD3EC EQ PUSH2 0x57D JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x5AD JUMPI DUP1 PUSH4 0xF8CF31CB EQ PUSH2 0x5CB JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xC7B8981C EQ PUSH2 0x4FD JUMPI DUP1 PUSH4 0xD854FB75 EQ PUSH2 0x507 JUMPI DUP1 PUSH4 0xE6A69AB8 EQ PUSH2 0x525 JUMPI DUP1 PUSH4 0xE8A35392 EQ PUSH2 0x543 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0xB3F00674 GT PUSH2 0xDC JUMPI DUP1 PUSH4 0xB3F00674 EQ PUSH2 0x49D JUMPI DUP1 PUSH4 0xBBD36B61 EQ PUSH2 0x4BB JUMPI DUP1 PUSH4 0xC4AE3168 EQ PUSH2 0x4D7 JUMPI DUP1 PUSH4 0xC69BEBE4 EQ PUSH2 0x4E1 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x447 JUMPI DUP1 PUSH4 0x95A29060 EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xAE169A50 EQ PUSH2 0x481 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x584B62A1 GT PUSH2 0x185 JUMPI DUP1 PUSH4 0x715018A6 GT PUSH2 0x154 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3C5 JUMPI DUP1 PUSH4 0x72F702F3 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0x794A62D3 EQ PUSH2 0x3ED JUMPI DUP1 PUSH4 0x7A5C08AE EQ PUSH2 0x40B JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x584B62A1 EQ PUSH2 0x326 JUMPI DUP1 PUSH4 0x5ACD2E4C EQ PUSH2 0x35B JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x377 JUMPI DUP1 PUSH4 0x6B494DEF EQ PUSH2 0x395 JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x3D92F4E2 GT PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x3D92F4E2 EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0x4060E257 EQ PUSH2 0x2BE JUMPI DUP1 PUSH4 0x4C8F2A78 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x561B2463 EQ PUSH2 0x30A JUMPI PUSH2 0x1EE JUMP JUMPDEST DUP1 PUSH4 0x630E463 EQ PUSH2 0x1F2 JUMPI DUP1 PUSH4 0x1747E0B0 EQ PUSH2 0x222 JUMPI DUP1 PUSH4 0x1852E8D9 EQ PUSH2 0x252 JUMPI DUP1 PUSH4 0x38BCEAAC EQ PUSH2 0x282 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x20C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x207 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x5E7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x219 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x237 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x249 SWAP2 SWAP1 PUSH2 0x2553 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x267 SWAP2 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH2 0x6F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x28A PUSH2 0x9AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x297 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A8 PUSH2 0x9AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D3 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x9B5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2F4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EF SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xD5E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x324 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31F SWAP2 SWAP1 PUSH2 0x2630 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x340 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x33B SWAP2 SWAP1 PUSH2 0x259D JUMP JUMPDEST PUSH2 0x10A6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x352 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x268F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x375 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x370 SWAP2 SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH2 0x1111 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x37F PUSH2 0x11F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38C SWAP2 SWAP1 PUSH2 0x272C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3AF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x120B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3CD PUSH2 0x1224 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3D7 PUSH2 0x1237 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3E4 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3F5 PUSH2 0x125B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x402 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x413 PUSH2 0x1265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x420 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x431 PUSH2 0x126B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x43E SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x44F PUSH2 0x1271 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x45C SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x47F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x47A SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x1298 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x49B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x496 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x14B1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4A5 PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4B2 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D0 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x191A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4DF PUSH2 0x1A1B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F6 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1A8D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x505 PUSH2 0x1B89 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x50F PUSH2 0x1D4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x51C SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x52D PUSH2 0x1D54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x53A SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x54B PUSH2 0x1D5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x558 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x57B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x576 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1D84 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x597 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x592 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x1E08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5A4 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B5 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5C2 SWAP2 SWAP1 PUSH2 0x27A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5E0 SWAP2 SWAP1 PUSH2 0x23AD JUMP JUMPDEST PUSH2 0x1E8E JUMP JUMPDEST STOP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x6E6 JUMPI DUP4 DUP3 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x65A JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x760 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x757 SWAP1 PUSH2 0x283B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x9 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D9 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x832 JUMPI PUSH2 0x831 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x60 ADD MLOAD ISZERO PUSH2 0x8EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8E3 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x40 ADD MLOAD SWAP1 POP DUP2 PUSH1 0x80 ADD MLOAD DUP1 ISZERO PUSH2 0x904 JUMPI POP DUP1 TIMESTAMP GT JUMPDEST ISZERO PUSH2 0x90D JUMPI TIMESTAMP SWAP1 POP JUMPDEST PUSH0 DUP3 PUSH1 0x20 ADD MLOAD DUP3 PUSH2 0x91E SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x93D DUP5 PUSH1 0x20 ADD MLOAD DUP6 PUSH1 0x40 ADD MLOAD PUSH2 0x938 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST PUSH2 0x1F8A JUMP JUMPDEST SWAP1 POP PUSH0 DUP5 PUSH1 0xA0 ADD MLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0x953 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP PUSH4 0x1E13380 PUSH2 0x2710 PUSH2 0x967 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST DUP4 PUSH1 0x6 DUP5 PUSH1 0x3 DUP2 LT PUSH2 0x97C JUMPI PUSH2 0x97B PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 PUSH2 0x989 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x993 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x99D SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x32 DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0x9BD PUSH2 0x200C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA2B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA22 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xA7B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA72 SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0xB01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF8 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB51 JUMPI PUSH2 0xB50 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xBB0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBA7 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xC01 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP1 PUSH2 0x2BA1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0xC48 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC3F SWAP1 PUSH2 0x2C09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xC53 DUP4 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD LT ISZERO PUSH2 0xC9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC91 SWAP1 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x1 ADD SLOAD DUP3 PUSH1 0x2 ADD SLOAD PUSH2 0xCB7 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST TIMESTAMP PUSH2 0xCC2 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST DUP3 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCDD SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCF5 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x593662CBE53E88DF3FEF748665B8C3D3142E5D34DC1B24290F7E953537A00183 DUP6 DUP5 PUSH1 0x4 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0xD48 SWAP3 SWAP2 SWAP1 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0xD5B PUSH2 0x205B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0xD6D JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0xD7F PUSH2 0x200C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDE4 SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE34 SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0xE80 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE77 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 GT PUSH2 0xEC2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEB9 SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xF0F CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2064 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0xF24 JUMPI PUSH2 0xF23 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD TIMESTAMP PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP PUSH1 0x9 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP7 DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE POP POP DUP4 PUSH1 0xB PUSH0 DUP3 DUP3 SLOAD PUSH2 0x103F SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x3DF45CB339F96AE4BDB793EFCB6E22100DD0DC4FD739A4EE2033FE67EA35AF96 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1090 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2D86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x10A1 PUSH2 0x205B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x9 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x10BF JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH2 0x1119 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0x115C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1153 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 GT ISZERO PUSH2 0x11A1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1198 SWAP1 PUSH2 0x2E05 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x6 DUP4 PUSH1 0x3 DUP2 LT PUSH2 0x11B6 JUMPI PUSH2 0x11B5 PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD DUP2 SWAP1 SSTORE POP PUSH32 0x787A1FCA55641CE34A438271930BBB9401DF20DB2B4F510D4F252227D85DF43D DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x11EC SWAP3 SWAP2 SWAP1 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x6 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x121A JUMPI PUSH0 DUP1 REVERT JUMPDEST ADD PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH2 0x122C PUSH2 0x20E6 JUMP JUMPDEST PUSH2 0x1235 PUSH0 PUSH2 0x216D JUMP JUMPDEST JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH0 PUSH3 0x30D40 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x12E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12DF SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x136E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1365 SWAP1 PUSH2 0x28A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x13BE JUMPI PUSH2 0x13BD PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x141D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1414 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO DUP2 PUSH1 0x3 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFA2D7B35E7CC82247C5AE7E8AE2DC078C2B144B76A6B1068887B3C8892C15DA5 DUP5 DUP4 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD PUSH2 0x14A4 SWAP3 SWAP2 SWAP1 PUSH2 0x2E23 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x14B9 PUSH2 0x200C JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1527 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151E SWAP1 PUSH2 0x2AD1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1577 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x156E SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 CALLER SWAP1 POP PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x15CB JUMPI PUSH2 0x15CA PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x162A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1621 SWAP1 PUSH2 0x2938 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO PUSH2 0x1671 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1668 SWAP1 PUSH2 0x2C09 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x167C DUP4 DUP6 PUSH2 0x6F1 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xC SLOAD LT ISZERO PUSH2 0x16C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16BA SWAP1 PUSH2 0x2C71 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP3 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1700 JUMPI POP PUSH0 DUP3 PUSH1 0x4 ADD SLOAD GT JUMPDEST ISZERO PUSH2 0x182B JUMPI PUSH0 DUP2 DUP4 PUSH1 0x4 ADD SLOAD PUSH2 0x1716 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x2710 PUSH1 0x32 DUP4 PUSH2 0x1729 SWAP2 SWAP1 PUSH2 0x29E9 JUMP JUMPDEST PUSH2 0x1733 SWAP2 SWAP1 PUSH2 0x2A57 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x1742 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0xA PUSH0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1790 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0xA PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1804 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x181C SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP PUSH2 0x1897 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1877 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x188F SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A DUP3 DUP7 PUSH1 0x40 MLOAD PUSH2 0x18DF SWAP3 SWAP2 SWAP1 PUSH2 0x2C8F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP PUSH2 0x18F2 PUSH2 0x205B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1922 PUSH2 0x20E6 JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x1964 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x195B SWAP1 PUSH2 0x2D68 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x19B2 CALLER ADDRESS DUP4 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2064 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 PUSH1 0xC PUSH0 DUP3 DUP3 SLOAD PUSH2 0x19C3 SWAP2 SWAP1 PUSH2 0x29B6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xD15DAFC20A4E1CCFF3E1B0A321BA0EE5C9B2AA1B9C7CAE08FB5A324537536244 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1A10 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1A23 PUSH2 0x20E6 JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH1 0xD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO PUSH32 0x752D7E161FF5146F80E3820893176EB40532811E5E20400DFDDE57455213706A PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMP JUMPDEST PUSH2 0x1A95 PUSH2 0x20E6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1B03 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AFA SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1B91 PUSH2 0x200C JUMP JUMPDEST PUSH1 0xD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1BE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BD8 SWAP1 PUSH2 0x2B39 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1C64 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C5B SWAP1 PUSH2 0x2EFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x1CF2 CALLER DUP3 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x222E SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xBD1EA9966F82CCB966523D3922A6E4AD4BF3EA70E9201BD7A106DE847CC5E616 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1D38 SWAP2 SWAP1 PUSH2 0x23F0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0x1D49 PUSH2 0x205B JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0xC SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH4 0x1E13380 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1D8C PUSH2 0x20E6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DFC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DF3 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1E05 DUP2 PUSH2 0x216D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 LT PUSH2 0x1E4C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E43 SWAP1 PUSH2 0x2D00 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP3 PUSH1 0x3 DUP2 LT PUSH2 0x1E60 JUMPI PUSH2 0x1E5F PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x1E96 PUSH2 0x20E6 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1F04 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EFB SWAP1 PUSH2 0x2E94 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xA5289BA11778999F4DFB9415023783188D42BBB5DB0612CBFBE55999069612A0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 POP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x1FCB JUMPI PUSH1 0x3 DUP2 PUSH1 0x3 DUP2 LT PUSH2 0x1FAD JUMPI PUSH2 0x1FAC PUSH2 0x28C1 JUMP JUMPDEST JUMPDEST ADD SLOAD DUP4 SUB PUSH2 0x1FBE JUMPI DUP1 SWAP2 POP POP PUSH2 0x2007 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1F90 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FFE SWAP1 PUSH2 0x2F64 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD SUB PUSH2 0x2051 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2048 SWAP1 PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 DUP1 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x20E0 DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2099 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2FEA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x22AD JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x20EE PUSH2 0x2348 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x210C PUSH2 0x1271 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x216B JUMPI PUSH2 0x212F PUSH2 0x2348 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2162 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x22A8 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x2261 SWAP3 SWAP2 SWAP1 PUSH2 0x301F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x22AD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x20 PUSH0 DUP5 MLOAD PUSH1 0x20 DUP7 ADD PUSH0 DUP9 GAS CALL DUP1 PUSH2 0x22CC JUMPI PUSH1 0x40 MLOAD RETURNDATASIZE PUSH0 DUP3 RETURNDATACOPY RETURNDATASIZE DUP2 REVERT JUMPDEST RETURNDATASIZE SWAP3 POP PUSH0 MLOAD SWAP2 POP POP PUSH0 DUP3 EQ PUSH2 0x22E5 JUMPI PUSH1 0x1 DUP2 EQ ISZERO PUSH2 0x2300 JUMP JUMPDEST PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x2342 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2339 SWAP2 SWAP1 PUSH2 0x27C8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x237C DUP3 PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x238C DUP2 PUSH2 0x2372 JUMP JUMPDEST DUP2 EQ PUSH2 0x2396 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x23A7 DUP2 PUSH2 0x2383 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23C2 JUMPI PUSH2 0x23C1 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x23CF DUP5 DUP3 DUP6 ADD PUSH2 0x2399 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23EA DUP2 PUSH2 0x23D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2403 PUSH0 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x243B DUP2 PUSH2 0x23D8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2455 DUP2 PUSH2 0x2441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x246F PUSH0 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x2482 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x2495 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x24A8 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x244C JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x24BB PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x244C JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x24CE PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2432 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24DF DUP4 DUP4 PUSH2 0x245B JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2501 DUP3 PUSH2 0x2409 JUMP JUMPDEST PUSH2 0x250B DUP2 DUP6 PUSH2 0x2413 JUMP JUMPDEST SWAP4 POP PUSH2 0x2516 DUP4 PUSH2 0x2423 JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2546 JUMPI DUP2 MLOAD PUSH2 0x252D DUP9 DUP3 PUSH2 0x24D4 JUMP JUMPDEST SWAP8 POP PUSH2 0x2538 DUP4 PUSH2 0x24EB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2519 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x256B DUP2 DUP5 PUSH2 0x24F7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x257C DUP2 PUSH2 0x23D8 JUMP JUMPDEST DUP2 EQ PUSH2 0x2586 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2597 DUP2 PUSH2 0x2573 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25B3 JUMPI PUSH2 0x25B2 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25C0 DUP6 DUP3 DUP7 ADD PUSH2 0x2399 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x25D1 DUP6 DUP3 DUP7 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25F0 JUMPI PUSH2 0x25EF PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25FD DUP5 DUP3 DUP6 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x260F DUP2 PUSH2 0x2441 JUMP JUMPDEST DUP2 EQ PUSH2 0x2619 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x262A DUP2 PUSH2 0x2606 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2647 JUMPI PUSH2 0x2646 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2654 DUP7 DUP3 DUP8 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2665 DUP7 DUP3 DUP8 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2676 DUP7 DUP3 DUP8 ADD PUSH2 0x261C JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x2689 DUP2 PUSH2 0x2441 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x26A2 PUSH0 DUP4 ADD DUP10 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x26AF PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x26BC PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x26C9 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x26D6 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x2680 JUMP JUMPDEST PUSH2 0x26E3 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2704 JUMPI PUSH2 0x2703 PUSH2 0x234F JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2711 DUP6 DUP3 DUP7 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2722 DUP6 DUP3 DUP7 ADD PUSH2 0x2589 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x273F PUSH0 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2768 PUSH2 0x2763 PUSH2 0x275E DUP5 PUSH2 0x2353 JUMP JUMPDEST PUSH2 0x2745 JUMP JUMPDEST PUSH2 0x2353 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2779 DUP3 PUSH2 0x274E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x278A DUP3 PUSH2 0x276F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x279A DUP2 PUSH2 0x2780 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27B3 PUSH0 DUP4 ADD DUP5 PUSH2 0x2791 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27C2 DUP2 PUSH2 0x2372 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27DB PUSH0 DUP4 ADD DUP5 PUSH2 0x27B9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E76616C6964206163636F756E740000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2825 PUSH1 0xF DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2830 DUP3 PUSH2 0x27F1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2852 DUP2 PUSH2 0x2819 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C6964207374616B6520696E64657800000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x288D PUSH1 0x13 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2898 DUP3 PUSH2 0x2859 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28BA DUP2 PUSH2 0x2881 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x416C726561647920636C61696D65640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2922 PUSH1 0xF DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x292D DUP3 PUSH2 0x28EE JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x294F DUP2 PUSH2 0x2916 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x298D DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2998 DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x29B0 JUMPI PUSH2 0x29AF PUSH2 0x2956 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29C0 DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x29CB DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x29E3 JUMPI PUSH2 0x29E2 PUSH2 0x2956 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x29F3 DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x29FE DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x2A0C DUP2 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2A23 JUMPI PUSH2 0x2A22 PUSH2 0x2956 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2A61 DUP3 PUSH2 0x23D8 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A6C DUP4 PUSH2 0x23D8 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2A7C JUMPI PUSH2 0x2A7B PUSH2 0x2A2A JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F6E6C7920454F412063616E2063616C6C000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2ABB PUSH1 0x11 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AC6 DUP3 PUSH2 0x2A87 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2AE8 DUP2 PUSH2 0x2AAF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E7472616374207061757365640000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B23 PUSH1 0xF DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B2E DUP3 PUSH2 0x2AEF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B50 DUP2 PUSH2 0x2B17 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4175746F2D7374616B696E672064697361626C65640000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B8B PUSH1 0x15 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B96 DUP3 PUSH2 0x2B57 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BB8 DUP2 PUSH2 0x2B7F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5374696C6C206C6F636B65640000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BF3 PUSH1 0xC DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BFE DUP3 PUSH2 0x2BBF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C20 DUP2 PUSH2 0x2BE7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420706F6F6C0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C5B PUSH1 0x18 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C66 DUP3 PUSH2 0x2C27 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C88 DUP2 PUSH2 0x2C4F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CA2 PUSH0 DUP4 ADD DUP6 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2CAF PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x496E76616C696420706572696F6420696E646578000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CEA PUSH1 0x14 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CF5 DUP3 PUSH2 0x2CB6 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D17 DUP2 PUSH2 0x2CDE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5A65726F20616D6F756E74000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D52 PUSH1 0xB DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D5D DUP3 PUSH2 0x2D1E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2D7F DUP2 PUSH2 0x2D46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2D99 PUSH0 DUP4 ADD DUP7 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2DA6 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2DB3 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x41505920746F6F20686967680000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2DEF PUSH1 0xC DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2DFA DUP3 PUSH2 0x2DBB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E1C DUP2 PUSH2 0x2DE3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E36 PUSH0 DUP4 ADD DUP6 PUSH2 0x23E1 JUMP JUMPDEST PUSH2 0x2E43 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2680 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x5A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E7E PUSH1 0x18 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E89 DUP3 PUSH2 0x2E4A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2EAB DUP2 PUSH2 0x2E72 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320746F20776974686472617700000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2EE6 PUSH1 0x16 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2EF1 DUP3 PUSH2 0x2EB2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F13 DUP2 PUSH2 0x2EDA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x556E737570706F72746564206C6F636B20706572696F64000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F4E PUSH1 0x17 DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F59 DUP3 PUSH2 0x2F1A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F7B DUP2 PUSH2 0x2F42 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2FB6 PUSH1 0x1F DUP4 PUSH2 0x27E1 JUMP JUMPDEST SWAP2 POP PUSH2 0x2FC1 DUP3 PUSH2 0x2F82 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2FE3 DUP2 PUSH2 0x2FAA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FFD PUSH0 DUP4 ADD DUP7 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x300A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x3017 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3032 PUSH0 DUP4 ADD DUP6 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x303F PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23E1 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 0x26 0xFC DUP14 RETURNCONTRACT 0x31 PUSH18 0x4C7366FC6FD9E4450CAF7DFD0E6C32315CD 0xC2 GAS 0xDE PUSH10 0x2368C564736F6C634300 ADDMOD 0x1E STOP CALLER ",
							"sourceMap": "418:10044:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1212:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9623:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3907:794;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;677:46;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;737:39;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7172:881;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;817:59;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3090:743;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1161:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;8461:305;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2398:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;882:46;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;529:36:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10370:90;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1330:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1298:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6683:421:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5119:1088;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1368:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8115:280;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9441:112;;;:::i;:::-;;9143:239;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6269:345;;;:::i;:::-;;9810:105;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;620:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9977:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;10134:181:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;571:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8831:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1212:59;;;;;;;;;;;;;;;;;:::o;9623:118::-;9685:18;9722:6;:12;9729:4;9722:12;;;;;;;;;;;;;;;9715:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9623:118;;;:::o;3907:794::-;3990:7;4036:1;4017:21;;:7;:21;;;4009:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;4089:6;:15;4096:7;4089:15;;;;;;;;;;;;;;;:22;;;;4076:10;:35;4068:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;4146:21;4170:6;:15;4177:7;4170:15;;;;;;;;;;;;;;;4186:10;4170:27;;;;;;;;:::i;:::-;;;;;;;;;;;;4146:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4216:4;:12;;;4215:13;4207:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;4259:15;4277:4;:15;;;4259:33;;4306:4;:16;;;:45;;;;;4344:7;4326:15;:25;4306:45;4302:101;;;4377:15;4367:25;;4302:101;4413:16;4442:4;:14;;;4432:7;:24;;;;:::i;:::-;4413:43;;4466:19;4488:48;4521:4;:14;;;4503:4;:15;;;:32;;;;:::i;:::-;4488:14;:48::i;:::-;4466:70;;4546:17;4580:4;:21;;;4566:4;:11;;;:35;;;;:::i;:::-;4546:55;;663:8;4669:5;:24;;;;:::i;:::-;4656:8;4632;4641:11;4632:21;;;;;;;:::i;:::-;;;;4620:9;:33;;;;:::i;:::-;:44;;;;:::i;:::-;4619:75;;;;:::i;:::-;4612:82;;;;;;;3907:794;;;;:::o;677:46::-;721:2;677:46;:::o;737:39::-;771:5;737:39;:::o;7172:881::-;2261:21:4;:19;:21::i;:::-;2228:10:9::1;2215:23;;:9;:23;;;2207:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2328:6:::2;;;;;;;;;;;2327:7;2319:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;7270:15:::3;7288:10;7270:28;;7329:6;:15;7336:7;7329:15;;;;;;;;;;;;;;;:22;;;;7316:10;:35;7308:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;7386:22;7411:6;:15;7418:7;7411:15;;;;;;;;;;;;;;;7427:10;7411:27;;;;;;;;:::i;:::-;;;;;;;;;;;;7386:52;;7457:4;:12;;;;;;;;;;;;7456:13;7448:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7507:4;:16;;;;;;;;;;;;7499:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;7586:4;:15;;;7567;:34;;7559:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;7629:14;7646:36;7662:7;7671:10;7646:15;:36::i;:::-;7629:53;;7721:6;7700:17;;:27;;7692:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7784:15;7767:4;:14;;:32;;;;7864:4;:14;;;7846:4;:15;;;:32;;;;:::i;:::-;7827:15;:52;;;;:::i;:::-;7809:4;:15;;:70;;;;7929:6;7904:4;:21;;;:31;;;;;;;:::i;:::-;;;;;;;;7966:6;7945:17;;:27;;;;;;;:::i;:::-;;;;;;;;8003:7;7988:58;;;8012:10;8024:4;:21;;;7988:58;;;;;;;:::i;:::-;;;;;;;;7260:793;;;2303:20:4::0;:18;:20::i;:::-;7172:881:9;:::o;817:59::-;;;;;;;;;;;;;;;;;;;;:::o;3090:743::-;2261:21:4;:19;:21::i;:::-;2228:10:9::1;2215:23;;:9;:23;;;2207:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2328:6:::2;;;;;;;;;;;2327:7;2319:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;3234:18:::3;3220:11;:32;3212:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;3304:1;3295:6;:10;3287:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;3332:64;3362:10;3382:4;3389:6;3332:12;:29;;;;:64;;;;;;:::i;:::-;3407:18;3446:11;3458;3446:24;;;;;;;:::i;:::-;;;;3428:15;:42;;;;:::i;:::-;3407:63;;3481:6;:18;3488:10;3481:18;;;;;;;;;;;;;;;3505:222;;;;;;;;3537:6;3505:222;;;;3568:15;3505:222;;;;3609:10;3505:222;;;;3642:5;3505:222;;;;;;3674:9;3505:222;;;;;;3715:1;3505:222;;::::0;3481:247:::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3754:6;3739:11;;:21;;;;;;;:::i;:::-;;;;;;;;3783:10;3776:50;;;3795:6;3803:11;3816:9;3776:50;;;;;;;;:::i;:::-;;;;;;;;3202:631;2303:20:4::0;:18;:20::i;:::-;3090:743:9;;;:::o;1161:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8461:305::-;1531:13:0;:11;:13::i;:::-;8565:18:9::1;8551:11;:32;8543:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;771:5;8626:6;:17;;8618:42;;;;;;;;;;;;:::i;:::-;;;;;;;;;8707:6;8683:8;8692:11;8683:21;;;;;;;:::i;:::-;;;:30;;;;8728:31;8739:11;8752:6;8728:31;;;;;;;:::i;:::-;;;;;;;;8461:305:::0;;:::o;2398:18::-;;;;;;;;;;;;;:::o;882:46::-;;;;;;;;;;;;;;;;;;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;529:36:9:-;;;:::o;10370:90::-;10420:7;10446;10439:14;;10370:90;:::o;1330:32::-;;;;:::o;1298:26::-;;;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;6683:421:9:-;2328:6;;;;;;;;;;;2327:7;2319:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;6761:15:::1;6779:10;6761:28;;6820:6;:15;6827:7;6820:15;;;;;;;;;;;;;;;:22;;;;6807:10;:35;6799:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;6877:22;6902:6;:15;6909:7;6902:15;;;;;;;;;;;;;;;6918:10;6902:27;;;;;;;;:::i;:::-;;;;;;;;;;;;6877:52;;6948:4;:12;;;;;;;;;;;;6947:13;6939:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;7011:4;:16;;;;;;;;;;;;7010:17;6991:4;:16;;;:36;;;;;;;;;;;;;;;;;;7059:7;7042:55;;;7068:10;7080:4;:16;;;;;;;;;;;;7042:55;;;;;;;:::i;:::-;;;;;;;;6751:353;;6683:421:::0;:::o;5119:1088::-;2261:21:4;:19;:21::i;:::-;2228:10:9::1;2215:23;;:9;:23;;;2207:53;;;;;;;;;;;;:::i;:::-;;;;;;;;;2328:6:::2;;;;;;;;;;;2327:7;2319:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;5214:15:::3;5232:10;5214:28;;5252:22;5277:6;:15;5284:7;5277:15;;;;;;;;;;;;;;;5293:10;5277:27;;;;;;;;:::i;:::-;;;;;;;;;;;;5252:52;;5323:4;:12;;;;;;;;;;;;5322:13;5314:41;;;;;;;;;;;;:::i;:::-;;;;;;;;;5392:4;:15;;;5373;:34;;5365:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;5435:14;5452:36;5468:7;5477:10;5452:15;:36::i;:::-;5435:53;;5527:6;5506:17;;:27;;5498:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;5588:4;5573;:12;;;:19;;;;;;;;;;;;;;;;;;5607:4;:16;;;;;;;;;;;;:45;;;;;5651:1;5627:4;:21;;;:25;5607:45;5603:546;;;5668:23;5718:6;5694:4;:21;;;:30;;;;:::i;:::-;5668:56;;5738:11;5792:5;721:2;5753:15;:35;;;;:::i;:::-;5752:45;;;;:::i;:::-;5738:59;;5811:18;5850:3;5832:15;:21;;;;:::i;:::-;5811:42;;5905:10;5868:24;:33;5893:7;5868:33;;;;;;;;;;;;;;;;:47;;;;;;;:::i;:::-;;;;;;;;5970:3;5929:24;:37;5954:11;;;;;;;;;;;5929:37;;;;;;;;;;;;;;;;:44;;;;;;;:::i;:::-;;;;;;;;6008:15;5987:17;;:36;;;;;;;:::i;:::-;;;;;;;;5654:380;;;5603:546;;;6091:6;6054:24;:33;6079:7;6054:33;;;;;;;;;;;;;;;;:43;;;;;;;:::i;:::-;;;;;;;;6132:6;6111:17;;:27;;;;;;;:::i;:::-;;;;;;;;5603:546;6172:7;6164:36;;;6181:6;6189:10;6164:36;;;;;;;:::i;:::-;;;;;;;;5204:1003;;;2303:20:4::0;:18;:20::i;:::-;5119:1088:9;:::o;1368:26::-;;;;;;;;;;;;;:::o;8115:280::-;1531:13:0;:11;:13::i;:::-;8205:1:9::1;8196:6;:10;8188:34;;;;;;;;;;;;:::i;:::-;;;;;;;;;8232:63;8261:10;8281:4;8288:6;8232:11;;;;;;;;;;;:28;;;;:63;;;;;;:::i;:::-;8326:6;8305:17;;:27;;;;;;;:::i;:::-;;;;;;;;8369:10;8348:40;;;8381:6;8348:40;;;;;;:::i;:::-;;;;;;;;8115:280:::0;:::o;9441:112::-;1531:13:0;:11;:13::i;:::-;9503:6:9::1;;;;;;;;;;;9502:7;9493:6;;:16;;;;;;;;;;;;;;;;;;9539:6;;;;;;;;;;;9524:22;;;;;;;;;;;;9441:112::o:0;9143:239::-;1531:13:0;:11;:13::i;:::-;9257:1:9::1;9231:28;;:14;:28;;::::0;9223:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9312:14;9298:11;;:28;;;;;;;;;;;;;;;;;;9360:14;9341:34;;;;;;;;;;;;9143:239:::0;:::o;6269:345::-;2261:21:4;:19;:21::i;:::-;2328:6:9::1;;;;;;;;;;;2327:7;2319:35;;;;;;;;;;;;:::i;:::-;;;;;;;;;6342:14:::2;6359:24;:36;6384:10;6359:36;;;;;;;;;;;;;;;;6342:53;;6422:1;6413:6;:10;6405:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;6500:1;6461:24;:36;6486:10;6461:36;;;;;;;;;;;;;;;:40;;;;6511:44;6536:10;6548:6;6511:11;;;;;;;;;;;:24;;;;:44;;;;;:::i;:::-;6588:10;6571:36;;;6600:6;6571:36;;;;;;:::i;:::-;;;;;;;;6332:282;2303:20:4::0;:18;:20::i;:::-;6269:345:9:o;9810:105::-;9865:7;9891:17;;9884:24;;9810:105;:::o;620:51::-;663:8;620:51;:::o;9977:93::-;10026:7;10052:11;;;;;;;;;;;10045:18;;9977:93;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;10134:181:9:-;10195:7;10230:18;10222:5;:26;10214:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;10290:11;10302:5;10290:18;;;;;;;:::i;:::-;;;;10283:25;;10134:181;;;:::o;571:25::-;;;;;;;;;;;;;:::o;8831:247::-;1531:13:0;:11;:13::i;:::-;8945:1:9::1;8919:28;;:14;:28;;::::0;8911:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;9007:14;8986:11;;:36;;;;;;;;;;;;;;;;;;9056:14;9037:34;;;;;;;;;;;;8831:247:::0;:::o;4769:279::-;4834:7;4858:9;4870:1;4858:13;;4853:146;4877:18;4873:1;:22;4853:146;;;4932:11;4944:1;4932:14;;;;;;;:::i;:::-;;;;4920:8;:26;4916:73;;4973:1;4966:8;;;;;4916:73;4897:3;;;;;;;4853:146;;;;5008:33;;;;;;;;;;:::i;:::-;;;;;;;;4769:279;;;;:::o;2336:287:4:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;1618:188:6:-;1718:81;1738:5;1760;:18;;;1781:4;1787:2;1791:5;1745:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:19;:81::i;:::-;1618:188;;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1219:160:6:-;1301:71;1321:5;1343;:14;;;1360:2;1364:5;1328:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1301:19;:71::i;:::-;1219:160;;;:::o;8370:720::-;8450:18;8478:19;8616:4;8613:1;8606:4;8600:11;8593:4;8587;8583:15;8580:1;8573:5;8566;8561:60;8673:7;8663:176;;8717:4;8711:11;8762:16;8759:1;8754:3;8739:40;8808:16;8803:3;8796:29;8663:176;8866:16;8852:30;;8916:1;8910:8;8895:23;;8532:396;8956:1;8942:10;:15;:68;;9009:1;8994:11;:16;;8942:68;;;8990:1;8968:5;8960:26;;;:31;8942:68;8938:146;;;9066:5;9033:40;;;;;;;;;;;:::i;:::-;;;;;;;;8938:146;8440:650;;8370:720;;:::o;656:96:7:-;709:7;735:10;728:17;;656:96;:::o;88:117:10:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:140::-;1704:6;1738:5;1732:12;1722:22;;1611:140;;;:::o;1757:210::-;1882:11;1916:6;1911:3;1904:19;1956:4;1951:3;1947:14;1932:29;;1757:210;;;;:::o;1973:158::-;2066:4;2089:3;2081:11;;2119:4;2114:3;2110:14;2102:22;;1973:158;;;:::o;2137:108::-;2214:24;2232:5;2214:24;:::i;:::-;2209:3;2202:37;2137:108;;:::o;2251:90::-;2285:7;2328:5;2321:13;2314:21;2303:32;;2251:90;;;:::o;2347:99::-;2418:21;2433:5;2418:21;:::i;:::-;2413:3;2406:34;2347:99;;:::o;2520:1218::-;2659:4;2654:3;2650:14;2748:4;2741:5;2737:16;2731:23;2767:63;2824:4;2819:3;2815:14;2801:12;2767:63;:::i;:::-;2674:166;2927:4;2920:5;2916:16;2910:23;2946:63;3003:4;2998:3;2994:14;2980:12;2946:63;:::i;:::-;2850:169;3107:4;3100:5;3096:16;3090:23;3126:63;3183:4;3178:3;3174:14;3160:12;3126:63;:::i;:::-;3029:170;3284:4;3277:5;3273:16;3267:23;3303:57;3354:4;3349:3;3345:14;3331:12;3303:57;:::i;:::-;3209:161;3459:4;3452:5;3448:16;3442:23;3478:57;3529:4;3524:3;3520:14;3506:12;3478:57;:::i;:::-;3380:165;3639:4;3632:5;3628:16;3622:23;3658:63;3715:4;3710:3;3706:14;3692:12;3658:63;:::i;:::-;3555:176;2628:1110;2520:1218;;:::o;3744:283::-;3865:10;3886:98;3980:3;3972:6;3886:98;:::i;:::-;4016:4;4011:3;4007:14;3993:28;;3744:283;;;;:::o;4033:139::-;4129:4;4161;4156:3;4152:14;4144:22;;4033:139;;;:::o;4250:940::-;4421:3;4450:80;4524:5;4450:80;:::i;:::-;4546:112;4651:6;4646:3;4546:112;:::i;:::-;4539:119;;4682:82;4758:5;4682:82;:::i;:::-;4787:7;4818:1;4803:362;4828:6;4825:1;4822:13;4803:362;;;4904:6;4898:13;4931:115;5042:3;5027:13;4931:115;:::i;:::-;4924:122;;5069:86;5148:6;5069:86;:::i;:::-;5059:96;;4863:302;4850:1;4847;4843:9;4838:14;;4803:362;;;4807:14;5181:3;5174:10;;4426:764;;;4250:940;;;;:::o;5196:477::-;5391:4;5429:2;5418:9;5414:18;5406:26;;5478:9;5472:4;5468:20;5464:1;5453:9;5449:17;5442:47;5506:160;5661:4;5652:6;5506:160;:::i;:::-;5498:168;;5196:477;;;;:::o;5679:122::-;5752:24;5770:5;5752:24;:::i;:::-;5745:5;5742:35;5732:63;;5791:1;5788;5781:12;5732:63;5679:122;:::o;5807:139::-;5853:5;5891:6;5878:20;5869:29;;5907:33;5934:5;5907:33;:::i;:::-;5807:139;;;;:::o;5952:474::-;6020:6;6028;6077:2;6065:9;6056:7;6052:23;6048:32;6045:119;;;6083:79;;:::i;:::-;6045:119;6203:1;6228:53;6273:7;6264:6;6253:9;6249:22;6228:53;:::i;:::-;6218:63;;6174:117;6330:2;6356:53;6401:7;6392:6;6381:9;6377:22;6356:53;:::i;:::-;6346:63;;6301:118;5952:474;;;;;:::o;6432:329::-;6491:6;6540:2;6528:9;6519:7;6515:23;6511:32;6508:119;;;6546:79;;:::i;:::-;6508:119;6666:1;6691:53;6736:7;6727:6;6716:9;6712:22;6691:53;:::i;:::-;6681:63;;6637:117;6432:329;;;;:::o;6767:116::-;6837:21;6852:5;6837:21;:::i;:::-;6830:5;6827:32;6817:60;;6873:1;6870;6863:12;6817:60;6767:116;:::o;6889:133::-;6932:5;6970:6;6957:20;6948:29;;6986:30;7010:5;6986:30;:::i;:::-;6889:133;;;;:::o;7028:613::-;7102:6;7110;7118;7167:2;7155:9;7146:7;7142:23;7138:32;7135:119;;;7173:79;;:::i;:::-;7135:119;7293:1;7318:53;7363:7;7354:6;7343:9;7339:22;7318:53;:::i;:::-;7308:63;;7264:117;7420:2;7446:53;7491:7;7482:6;7471:9;7467:22;7446:53;:::i;:::-;7436:63;;7391:118;7548:2;7574:50;7616:7;7607:6;7596:9;7592:22;7574:50;:::i;:::-;7564:60;;7519:115;7028:613;;;;;:::o;7647:109::-;7728:21;7743:5;7728:21;:::i;:::-;7723:3;7716:34;7647:109;;:::o;7762:751::-;7983:4;8021:3;8010:9;8006:19;7998:27;;8035:71;8103:1;8092:9;8088:17;8079:6;8035:71;:::i;:::-;8116:72;8184:2;8173:9;8169:18;8160:6;8116:72;:::i;:::-;8198;8266:2;8255:9;8251:18;8242:6;8198:72;:::i;:::-;8280:66;8342:2;8331:9;8327:18;8318:6;8280:66;:::i;:::-;8356:67;8418:3;8407:9;8403:19;8394:6;8356:67;:::i;:::-;8433:73;8501:3;8490:9;8486:19;8477:6;8433:73;:::i;:::-;7762:751;;;;;;;;;:::o;8519:474::-;8587:6;8595;8644:2;8632:9;8623:7;8619:23;8615:32;8612:119;;;8650:79;;:::i;:::-;8612:119;8770:1;8795:53;8840:7;8831:6;8820:9;8816:22;8795:53;:::i;:::-;8785:63;;8741:117;8897:2;8923:53;8968:7;8959:6;8948:9;8944:22;8923:53;:::i;:::-;8913:63;;8868:118;8519:474;;;;;:::o;8999:210::-;9086:4;9124:2;9113:9;9109:18;9101:26;;9137:65;9199:1;9188:9;9184:17;9175:6;9137:65;:::i;:::-;8999:210;;;;:::o;9215:60::-;9243:3;9264:5;9257:12;;9215:60;;;:::o;9281:142::-;9331:9;9364:53;9382:34;9391:24;9409:5;9391:24;:::i;:::-;9382:34;:::i;:::-;9364:53;:::i;:::-;9351:66;;9281:142;;;:::o;9429:126::-;9479:9;9512:37;9543:5;9512:37;:::i;:::-;9499:50;;9429:126;;;:::o;9561:140::-;9625:9;9658:37;9689:5;9658:37;:::i;:::-;9645:50;;9561:140;;;:::o;9707:159::-;9808:51;9853:5;9808:51;:::i;:::-;9803:3;9796:64;9707:159;;:::o;9872:250::-;9979:4;10017:2;10006:9;10002:18;9994:26;;10030:85;10112:1;10101:9;10097:17;10088:6;10030:85;:::i;:::-;9872:250;;;;:::o;10128:118::-;10215:24;10233:5;10215:24;:::i;:::-;10210:3;10203:37;10128:118;;:::o;10252:222::-;10345:4;10383:2;10372:9;10368:18;10360:26;;10396:71;10464:1;10453:9;10449:17;10440:6;10396:71;:::i;:::-;10252:222;;;;:::o;10480:169::-;10564:11;10598:6;10593:3;10586:19;10638:4;10633:3;10629:14;10614:29;;10480:169;;;;:::o;10655:165::-;10795:17;10791:1;10783:6;10779:14;10772:41;10655:165;:::o;10826:366::-;10968:3;10989:67;11053:2;11048:3;10989:67;:::i;:::-;10982:74;;11065:93;11154:3;11065:93;:::i;:::-;11183:2;11178:3;11174:12;11167:19;;10826:366;;;:::o;11198:419::-;11364:4;11402:2;11391:9;11387:18;11379:26;;11451:9;11445:4;11441:20;11437:1;11426:9;11422:17;11415:47;11479:131;11605:4;11479:131;:::i;:::-;11471:139;;11198:419;;;:::o;11623:169::-;11763:21;11759:1;11751:6;11747:14;11740:45;11623:169;:::o;11798:366::-;11940:3;11961:67;12025:2;12020:3;11961:67;:::i;:::-;11954:74;;12037:93;12126:3;12037:93;:::i;:::-;12155:2;12150:3;12146:12;12139:19;;11798:366;;;:::o;12170:419::-;12336:4;12374:2;12363:9;12359:18;12351:26;;12423:9;12417:4;12413:20;12409:1;12398:9;12394:17;12387:47;12451:131;12577:4;12451:131;:::i;:::-;12443:139;;12170:419;;;:::o;12595:180::-;12643:77;12640:1;12633:88;12740:4;12737:1;12730:15;12764:4;12761:1;12754:15;12781:165;12921:17;12917:1;12909:6;12905:14;12898:41;12781:165;:::o;12952:366::-;13094:3;13115:67;13179:2;13174:3;13115:67;:::i;:::-;13108:74;;13191:93;13280:3;13191:93;:::i;:::-;13309:2;13304:3;13300:12;13293:19;;12952:366;;;:::o;13324:419::-;13490:4;13528:2;13517:9;13513:18;13505:26;;13577:9;13571:4;13567:20;13563:1;13552:9;13548:17;13541:47;13605:131;13731:4;13605:131;:::i;:::-;13597:139;;13324:419;;;:::o;13749:180::-;13797:77;13794:1;13787:88;13894:4;13891:1;13884:15;13918:4;13915:1;13908:15;13935:194;13975:4;13995:20;14013:1;13995:20;:::i;:::-;13990:25;;14029:20;14047:1;14029:20;:::i;:::-;14024:25;;14073:1;14070;14066:9;14058:17;;14097:1;14091:4;14088:11;14085:37;;;14102:18;;:::i;:::-;14085:37;13935:194;;;;:::o;14135:191::-;14175:3;14194:20;14212:1;14194:20;:::i;:::-;14189:25;;14228:20;14246:1;14228:20;:::i;:::-;14223:25;;14271:1;14268;14264:9;14257:16;;14292:3;14289:1;14286:10;14283:36;;;14299:18;;:::i;:::-;14283:36;14135:191;;;;:::o;14332:410::-;14372:7;14395:20;14413:1;14395:20;:::i;:::-;14390:25;;14429:20;14447:1;14429:20;:::i;:::-;14424:25;;14484:1;14481;14477:9;14506:30;14524:11;14506:30;:::i;:::-;14495:41;;14685:1;14676:7;14672:15;14669:1;14666:22;14646:1;14639:9;14619:83;14596:139;;14715:18;;:::i;:::-;14596:139;14380:362;14332:410;;;;:::o;14748:180::-;14796:77;14793:1;14786:88;14893:4;14890:1;14883:15;14917:4;14914:1;14907:15;14934:185;14974:1;14991:20;15009:1;14991:20;:::i;:::-;14986:25;;15025:20;15043:1;15025:20;:::i;:::-;15020:25;;15064:1;15054:35;;15069:18;;:::i;:::-;15054:35;15111:1;15108;15104:9;15099:14;;14934:185;;;;:::o;15125:167::-;15265:19;15261:1;15253:6;15249:14;15242:43;15125:167;:::o;15298:366::-;15440:3;15461:67;15525:2;15520:3;15461:67;:::i;:::-;15454:74;;15537:93;15626:3;15537:93;:::i;:::-;15655:2;15650:3;15646:12;15639:19;;15298:366;;;:::o;15670:419::-;15836:4;15874:2;15863:9;15859:18;15851:26;;15923:9;15917:4;15913:20;15909:1;15898:9;15894:17;15887:47;15951:131;16077:4;15951:131;:::i;:::-;15943:139;;15670:419;;;:::o;16095:165::-;16235:17;16231:1;16223:6;16219:14;16212:41;16095:165;:::o;16266:366::-;16408:3;16429:67;16493:2;16488:3;16429:67;:::i;:::-;16422:74;;16505:93;16594:3;16505:93;:::i;:::-;16623:2;16618:3;16614:12;16607:19;;16266:366;;;:::o;16638:419::-;16804:4;16842:2;16831:9;16827:18;16819:26;;16891:9;16885:4;16881:20;16877:1;16866:9;16862:17;16855:47;16919:131;17045:4;16919:131;:::i;:::-;16911:139;;16638:419;;;:::o;17063:171::-;17203:23;17199:1;17191:6;17187:14;17180:47;17063:171;:::o;17240:366::-;17382:3;17403:67;17467:2;17462:3;17403:67;:::i;:::-;17396:74;;17479:93;17568:3;17479:93;:::i;:::-;17597:2;17592:3;17588:12;17581:19;;17240:366;;;:::o;17612:419::-;17778:4;17816:2;17805:9;17801:18;17793:26;;17865:9;17859:4;17855:20;17851:1;17840:9;17836:17;17829:47;17893:131;18019:4;17893:131;:::i;:::-;17885:139;;17612:419;;;:::o;18037:162::-;18177:14;18173:1;18165:6;18161:14;18154:38;18037:162;:::o;18205:366::-;18347:3;18368:67;18432:2;18427:3;18368:67;:::i;:::-;18361:74;;18444:93;18533:3;18444:93;:::i;:::-;18562:2;18557:3;18553:12;18546:19;;18205:366;;;:::o;18577:419::-;18743:4;18781:2;18770:9;18766:18;18758:26;;18830:9;18824:4;18820:20;18816:1;18805:9;18801:17;18794:47;18858:131;18984:4;18858:131;:::i;:::-;18850:139;;18577:419;;;:::o;19002:174::-;19142:26;19138:1;19130:6;19126:14;19119:50;19002:174;:::o;19182:366::-;19324:3;19345:67;19409:2;19404:3;19345:67;:::i;:::-;19338:74;;19421:93;19510:3;19421:93;:::i;:::-;19539:2;19534:3;19530:12;19523:19;;19182:366;;;:::o;19554:419::-;19720:4;19758:2;19747:9;19743:18;19735:26;;19807:9;19801:4;19797:20;19793:1;19782:9;19778:17;19771:47;19835:131;19961:4;19835:131;:::i;:::-;19827:139;;19554:419;;;:::o;19979:332::-;20100:4;20138:2;20127:9;20123:18;20115:26;;20151:71;20219:1;20208:9;20204:17;20195:6;20151:71;:::i;:::-;20232:72;20300:2;20289:9;20285:18;20276:6;20232:72;:::i;:::-;19979:332;;;;;:::o;20317:170::-;20457:22;20453:1;20445:6;20441:14;20434:46;20317:170;:::o;20493:366::-;20635:3;20656:67;20720:2;20715:3;20656:67;:::i;:::-;20649:74;;20732:93;20821:3;20732:93;:::i;:::-;20850:2;20845:3;20841:12;20834:19;;20493:366;;;:::o;20865:419::-;21031:4;21069:2;21058:9;21054:18;21046:26;;21118:9;21112:4;21108:20;21104:1;21093:9;21089:17;21082:47;21146:131;21272:4;21146:131;:::i;:::-;21138:139;;20865:419;;;:::o;21290:161::-;21430:13;21426:1;21418:6;21414:14;21407:37;21290:161;:::o;21457:366::-;21599:3;21620:67;21684:2;21679:3;21620:67;:::i;:::-;21613:74;;21696:93;21785:3;21696:93;:::i;:::-;21814:2;21809:3;21805:12;21798:19;;21457:366;;;:::o;21829:419::-;21995:4;22033:2;22022:9;22018:18;22010:26;;22082:9;22076:4;22072:20;22068:1;22057:9;22053:17;22046:47;22110:131;22236:4;22110:131;:::i;:::-;22102:139;;21829:419;;;:::o;22254:430::-;22397:4;22435:2;22424:9;22420:18;22412:26;;22448:71;22516:1;22505:9;22501:17;22492:6;22448:71;:::i;:::-;22529:72;22597:2;22586:9;22582:18;22573:6;22529:72;:::i;:::-;22611:66;22673:2;22662:9;22658:18;22649:6;22611:66;:::i;:::-;22254:430;;;;;;:::o;22690:162::-;22830:14;22826:1;22818:6;22814:14;22807:38;22690:162;:::o;22858:366::-;23000:3;23021:67;23085:2;23080:3;23021:67;:::i;:::-;23014:74;;23097:93;23186:3;23097:93;:::i;:::-;23215:2;23210:3;23206:12;23199:19;;22858:366;;;:::o;23230:419::-;23396:4;23434:2;23423:9;23419:18;23411:26;;23483:9;23477:4;23473:20;23469:1;23458:9;23454:17;23447:47;23511:131;23637:4;23511:131;:::i;:::-;23503:139;;23230:419;;;:::o;23655:320::-;23770:4;23808:2;23797:9;23793:18;23785:26;;23821:71;23889:1;23878:9;23874:17;23865:6;23821:71;:::i;:::-;23902:66;23964:2;23953:9;23949:18;23940:6;23902:66;:::i;:::-;23655:320;;;;;:::o;23981:174::-;24121:26;24117:1;24109:6;24105:14;24098:50;23981:174;:::o;24161:366::-;24303:3;24324:67;24388:2;24383:3;24324:67;:::i;:::-;24317:74;;24400:93;24489:3;24400:93;:::i;:::-;24518:2;24513:3;24509:12;24502:19;;24161:366;;;:::o;24533:419::-;24699:4;24737:2;24726:9;24722:18;24714:26;;24786:9;24780:4;24776:20;24772:1;24761:9;24757:17;24750:47;24814:131;24940:4;24814:131;:::i;:::-;24806:139;;24533:419;;;:::o;24958:172::-;25098:24;25094:1;25086:6;25082:14;25075:48;24958:172;:::o;25136:366::-;25278:3;25299:67;25363:2;25358:3;25299:67;:::i;:::-;25292:74;;25375:93;25464:3;25375:93;:::i;:::-;25493:2;25488:3;25484:12;25477:19;;25136:366;;;:::o;25508:419::-;25674:4;25712:2;25701:9;25697:18;25689:26;;25761:9;25755:4;25751:20;25747:1;25736:9;25732:17;25725:47;25789:131;25915:4;25789:131;:::i;:::-;25781:139;;25508:419;;;:::o;25933:173::-;26073:25;26069:1;26061:6;26057:14;26050:49;25933:173;:::o;26112:366::-;26254:3;26275:67;26339:2;26334:3;26275:67;:::i;:::-;26268:74;;26351:93;26440:3;26351:93;:::i;:::-;26469:2;26464:3;26460:12;26453:19;;26112:366;;;:::o;26484:419::-;26650:4;26688:2;26677:9;26673:18;26665:26;;26737:9;26731:4;26727:20;26723:1;26712:9;26708:17;26701:47;26765:131;26891:4;26765:131;:::i;:::-;26757:139;;26484:419;;;:::o;26909:181::-;27049:33;27045:1;27037:6;27033:14;27026:57;26909:181;:::o;27096:366::-;27238:3;27259:67;27323:2;27318:3;27259:67;:::i;:::-;27252:74;;27335:93;27424:3;27335:93;:::i;:::-;27453:2;27448:3;27444:12;27437:19;;27096:366;;;:::o;27468:419::-;27634:4;27672:2;27661:9;27657:18;27649:26;;27721:9;27715:4;27711:20;27707:1;27696:9;27692:17;27685:47;27749:131;27875:4;27749:131;:::i;:::-;27741:139;;27468:419;;;:::o;27893:442::-;28042:4;28080:2;28069:9;28065:18;28057:26;;28093:71;28161:1;28150:9;28146:17;28137:6;28093:71;:::i;:::-;28174:72;28242:2;28231:9;28227:18;28218:6;28174:72;:::i;:::-;28256;28324:2;28313:9;28309:18;28300:6;28256:72;:::i;:::-;27893:442;;;;;;:::o;28341:332::-;28462:4;28500:2;28489:9;28485:18;28477:26;;28513:71;28581:1;28570:9;28566:17;28557:6;28513:71;:::i;:::-;28594:72;28662:2;28651:9;28647:18;28638:6;28594:72;:::i;:::-;28341:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2482400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"AUTO_COMPOUND_FEE()": "438",
								"MAX_APY()": "371",
								"SECONDS_PER_YEAR()": "414",
								"addRewardPoolFunds(uint256)": "infinite",
								"apyRates(uint256)": "infinite",
								"calculateReward(address,uint256)": "infinite",
								"claimReward(uint256)": "infinite",
								"compoundReward(uint256)": "infinite",
								"estimateMintGas()": "421",
								"feeReceiver()": "2553",
								"getActiveStakes(address)": "infinite",
								"getFeeReceiver()": "2626",
								"getLockPeriod(uint256)": "infinite",
								"getRewardPoolBalance()": "2499",
								"lockPeriods(uint256)": "infinite",
								"owner()": "2582",
								"paused()": "2607",
								"pendingRewardWithdrawals(address)": "2849",
								"renounceOwnership()": "infinite",
								"rewardPoolBalance()": "2536",
								"rewardToken()": "infinite",
								"setAPY(uint256,uint256)": "infinite",
								"stake(uint256,uint256,bool)": "infinite",
								"stakes(address,uint256)": "infinite",
								"stakingToken()": "infinite",
								"toggleAutoStake(uint256)": "infinite",
								"togglePause()": "infinite",
								"totalStaked()": "2471",
								"transferOwnership(address)": "infinite",
								"updateFeeReceiver(address)": "infinite",
								"updateRewardToken(address)": "infinite",
								"withdrawRewards()": "infinite"
							},
							"internal": {
								"getPeriodIndex(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "A0"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 850,
									"end": 857,
									"name": "PUSH",
									"source": 9,
									"value": "278D00"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 859,
									"end": 866,
									"name": "PUSH",
									"source": 9,
									"value": "4F1A00"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 868,
									"end": 875,
									"name": "PUSH",
									"source": 9,
									"value": "76A700"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 817,
									"end": 876,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 817,
									"end": 876,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 817,
									"end": 876,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "60"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 912,
									"end": 915,
									"name": "PUSH",
									"source": 9,
									"value": "1F4"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 917,
									"end": 921,
									"name": "PUSH",
									"source": 9,
									"value": "3E8"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 923,
									"end": 927,
									"name": "PUSH",
									"source": 9,
									"value": "5DC"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 882,
									"end": 928,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "tag",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 882,
									"end": 928,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 882,
									"end": 928,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "tag",
									"source": 9,
									"value": "5"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2423,
									"end": 2955,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "tag",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2554,
									"end": 2564,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2634,
									"end": 2635,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2602,
									"end": 2636,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2602,
									"end": 2636,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2602,
									"end": 2622,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2602,
									"end": 2636,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2602,
									"end": 2636,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2602,
									"end": 2636,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 2594,
									"end": 2662,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 2594,
									"end": 2662,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2711,
									"end": 2712,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2680,
									"end": 2713,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2680,
									"end": 2713,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2680,
									"end": 2699,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2680,
									"end": 2713,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2680,
									"end": 2713,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2680,
									"end": 2713,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 2672,
									"end": 2738,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 2672,
									"end": 2738,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2780,
									"end": 2781,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2756,
									"end": 2782,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2756,
									"end": 2782,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2756,
									"end": 2768,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2756,
									"end": 2782,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2756,
									"end": 2782,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2756,
									"end": 2782,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 2748,
									"end": 2807,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 2748,
									"end": 2807,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2840,
									"end": 2860,
									"modifierDepth": 2,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2818,
									"end": 2861,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2892,
									"end": 2911,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2882,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2871,
									"end": 2882,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2871,
									"end": 2912,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2936,
									"end": 2948,
									"modifierDepth": 2,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 2922,
									"end": 2933,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2922,
									"end": 2948,
									"modifierDepth": 2,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2423,
									"end": 2955,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFF"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "31"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 418,
									"end": 10462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "33"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "FFFF"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "36"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "37"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "35"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 418,
									"end": 10462,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "38"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "34"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "GT",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "39"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "46"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "tag",
									"source": 10,
									"value": "7"
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 933,
									"end": 939,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 947,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 955,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 986,
									"end": 995,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 977,
									"end": 984,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 973,
									"end": 996,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 969,
									"end": 1001,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "42"
								},
								{
									"begin": 1004,
									"end": 1083,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 1004,
									"end": 1083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 966,
									"end": 1085,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1124,
									"end": 1125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1205,
									"end": 1212,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1196,
									"end": 1202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1185,
									"end": 1194,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1181,
									"end": 1203,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1149,
									"end": 1213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 1149,
									"end": 1213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1139,
									"end": 1213,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1095,
									"end": 1223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1262,
									"end": 1264,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1344,
									"end": 1351,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1335,
									"end": 1341,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1324,
									"end": 1333,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1320,
									"end": 1342,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1288,
									"end": 1352,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 1288,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1278,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1233,
									"end": 1362,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1401,
									"end": 1403,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1483,
									"end": 1490,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1474,
									"end": 1480,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1472,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 1459,
									"end": 1481,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "47"
								},
								{
									"begin": 1427,
									"end": 1491,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 1427,
									"end": 1491,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1491,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1372,
									"end": 1501,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1508,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1619,
									"end": 1624,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "45"
								},
								{
									"begin": 1601,
									"end": 1625,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 1601,
									"end": 1625,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1596,
									"end": 1599,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1589,
									"end": 1626,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1514,
									"end": 1632,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "tag",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1731,
									"end": 1735,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1769,
									"end": 1771,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1758,
									"end": 1767,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1754,
									"end": 1772,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1746,
									"end": 1772,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1850,
									"end": 1851,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1848,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 1852,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1826,
									"end": 1832,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 1782,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 1782,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1638,
									"end": 1860,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1950,
									"end": 1961,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1984,
									"end": 1990,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1979,
									"end": 1982,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1972,
									"end": 1991,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2024,
									"end": 2028,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2019,
									"end": 2022,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2015,
									"end": 2029,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2000,
									"end": 2029,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1866,
									"end": 2035,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2181,
									"end": 2204,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C6964207374616B696E6720746F6B656E0000000000000000000000"
								},
								{
									"begin": 2177,
									"end": 2178,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2169,
									"end": 2175,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2165,
									"end": 2179,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2205,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2212,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2041,
									"end": 2212,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2360,
									"end": 2363,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2445,
									"end": 2447,
									"name": "PUSH",
									"source": 10,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2443,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 2381,
									"end": 2448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 2381,
									"end": 2448,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2448,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2374,
									"end": 2448,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2546,
									"end": 2549,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 2457,
									"end": 2550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 2457,
									"end": 2550,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2575,
									"end": 2577,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2570,
									"end": 2573,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2566,
									"end": 2578,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2578,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2559,
									"end": 2578,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2218,
									"end": 2584,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2756,
									"end": 2760,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2794,
									"end": 2796,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2783,
									"end": 2792,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2779,
									"end": 2797,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2771,
									"end": 2797,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2771,
									"end": 2797,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2843,
									"end": 2852,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2837,
									"end": 2841,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2833,
									"end": 2853,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2829,
									"end": 2830,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2818,
									"end": 2827,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2814,
									"end": 2831,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2807,
									"end": 2854,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2997,
									"end": 3001,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 2871,
									"end": 3002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "tag",
									"source": 10,
									"value": "84"
								},
								{
									"begin": 2871,
									"end": 3002,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2863,
									"end": 3002,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2863,
									"end": 3002,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2590,
									"end": 3009,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3185,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3015,
									"end": 3185,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3155,
									"end": 3177,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C69642072657761726420746F6B656E000000000000000000000000"
								},
								{
									"begin": 3151,
									"end": 3152,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3143,
									"end": 3149,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3139,
									"end": 3153,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3132,
									"end": 3178,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3185,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3015,
									"end": 3185,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3333,
									"end": 3336,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3418,
									"end": 3420,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 3413,
									"end": 3416,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3354,
									"end": 3421,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 3354,
									"end": 3421,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3347,
									"end": 3421,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3519,
									"end": 3522,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 3430,
									"end": 3523,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3430,
									"end": 3523,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3548,
									"end": 3550,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3543,
									"end": 3546,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3539,
									"end": 3551,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3532,
									"end": 3551,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3191,
									"end": 3557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3729,
									"end": 3733,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3767,
									"end": 3769,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3756,
									"end": 3765,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3752,
									"end": 3770,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3744,
									"end": 3770,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3816,
									"end": 3825,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3806,
									"end": 3826,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 3802,
									"end": 3803,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3791,
									"end": 3800,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3787,
									"end": 3804,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3780,
									"end": 3827,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3970,
									"end": 3974,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 3844,
									"end": 3975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3844,
									"end": 3975,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3836,
									"end": 3975,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3563,
									"end": 3982,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4158,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3988,
									"end": 4158,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4150,
									"name": "PUSH",
									"source": 10,
									"value": "496E76616C696420666565207265636569766572000000000000000000000000"
								},
								{
									"begin": 4124,
									"end": 4125,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4116,
									"end": 4122,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4112,
									"end": 4126,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4105,
									"end": 4151,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4158,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3988,
									"end": 4158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4306,
									"end": 4309,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4391,
									"end": 4393,
									"name": "PUSH",
									"source": 10,
									"value": "14"
								},
								{
									"begin": 4386,
									"end": 4389,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 4327,
									"end": 4394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4327,
									"end": 4394,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4394,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4320,
									"end": 4394,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4492,
									"end": 4495,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 4403,
									"end": 4496,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4403,
									"end": 4496,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4521,
									"end": 4523,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4516,
									"end": 4519,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4512,
									"end": 4524,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4524,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4505,
									"end": 4524,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4164,
									"end": 4530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4702,
									"end": 4706,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4740,
									"end": 4742,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4729,
									"end": 4738,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4725,
									"end": 4743,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4717,
									"end": 4743,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4717,
									"end": 4743,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4789,
									"end": 4798,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4787,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4779,
									"end": 4799,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4764,
									"end": 4773,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4777,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4753,
									"end": 4800,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4943,
									"end": 4947,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 4817,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4817,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4948,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4948,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4536,
									"end": 4955,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "ASSIGNIMMUTABLE",
									"source": 9,
									"value": "904"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 418,
									"end": 10462,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c826fc8dee317104c7366fc6fd9e4450caf7dfd0e6c32315cdc25ade692368c564736f6c634300081e0033",
									".code": [
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "817B1CD2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "C7B8981C"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "F55AD3EC"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "F7C618C1"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "F8CF31CB"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "C7B8981C"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "D854FB75"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "E6A69AB8"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "E8A35392"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "B3F00674"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "B3F00674"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "BBD36B61"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "C4AE3168"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "C69BEBE4"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "817B1CD2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "95A29060"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "AE169A50"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "584B62A1"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "72F702F3"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "794A62D3"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "7A5C08AE"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "584B62A1"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "5ACD2E4C"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "6B494DEF"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "3D92F4E2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "3D92F4E2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "4060E257"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "4C8F2A78"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "561B2463"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "630E463"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "1747E0B0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "1852E8D9"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "38BCEAAC"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 418,
											"end": 10462,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 1212,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1212,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1212,
											"end": 1271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "tag",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9623,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "tag",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9623,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 9623,
											"end": 9741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "tag",
											"source": 9,
											"value": "51"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3907,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3907,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "53"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 3907,
											"end": 4701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 677,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 677,
											"end": 723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 737,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 737,
											"end": 776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 7172,
											"end": 8053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7172,
											"end": 8053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 817,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 817,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 817,
											"end": 876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3090,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3090,
											"end": 3833,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1161,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "77"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1161,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP7",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 1161,
											"end": 1206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "79"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 8461,
											"end": 8766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8461,
											"end": 8766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2398,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 2398,
											"end": 2416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 882,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 882,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 882,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 529,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 529,
											"end": 565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10370,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10370,
											"end": 10460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1330,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1330,
											"end": 1362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1298,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 1298,
											"end": 1324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6683,
											"end": 7104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6683,
											"end": 7104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5119,
											"end": 6207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5119,
											"end": 6207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1368,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 1368,
											"end": 1394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "tag",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 8115,
											"end": 8395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 8115,
											"end": 8395,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9441,
											"end": 9553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 9143,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9143,
											"end": 9382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6269,
											"end": 6614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 9810,
											"end": 9915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 9810,
											"end": 9915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 620,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 620,
											"end": 671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9977,
											"end": 10070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 9977,
											"end": 10070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 10134,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 10134,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 10134,
											"end": 10315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 571,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 571,
											"end": 596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 9,
											"value": "149"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 8831,
											"end": 9078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 8831,
											"end": 9078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "tag",
											"source": 9,
											"value": "150"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1212,
											"end": 1271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "tag",
											"source": 9,
											"value": "50"
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9685,
											"end": 9703,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 9722,
											"end": 9728,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9729,
											"end": 9733,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9722,
											"end": 9734,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9715,
											"end": 9734,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9623,
											"end": 9741,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3990,
											"end": 3997,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4036,
											"end": 4037,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4017,
											"end": 4038,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4009,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 4009,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4095,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4096,
											"end": 4103,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4089,
											"end": 4104,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4089,
											"end": 4111,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4086,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4076,
											"end": 4111,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 4068,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "tag",
											"source": 9,
											"value": "162"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "tag",
											"source": 9,
											"value": "161"
										},
										{
											"begin": 4068,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4167,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4176,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4177,
											"end": 4184,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4185,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4186,
											"end": 4196,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 4170,
											"end": 4197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4170,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4197,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4220,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4216,
											"end": 4228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4215,
											"end": 4228,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 4207,
											"end": 4248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "tag",
											"source": 9,
											"value": "169"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "tag",
											"source": 9,
											"value": "168"
										},
										{
											"begin": 4207,
											"end": 4248,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4274,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4277,
											"end": 4281,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4292,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4277,
											"end": 4292,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4277,
											"end": 4292,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4292,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4259,
											"end": 4292,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4310,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4322,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4344,
											"end": 4351,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4341,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4326,
											"end": 4351,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "tag",
											"source": 9,
											"value": "171"
										},
										{
											"begin": 4306,
											"end": 4351,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4302,
											"end": 4403,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4302,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4302,
											"end": 4403,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4377,
											"end": 4392,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4302,
											"end": 4403,
											"name": "tag",
											"source": 9,
											"value": "172"
										},
										{
											"begin": 4302,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4429,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4442,
											"end": 4446,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4456,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4442,
											"end": 4456,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4442,
											"end": 4456,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4439,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4432,
											"end": 4456,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4456,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4432,
											"end": 4456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4432,
											"end": 4456,
											"name": "tag",
											"source": 9,
											"value": "173"
										},
										{
											"begin": 4432,
											"end": 4456,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4413,
											"end": 4456,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4485,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4488,
											"end": 4536,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4521,
											"end": 4525,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4535,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4521,
											"end": 4535,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4521,
											"end": 4535,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4507,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4518,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 4503,
											"end": 4535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "tag",
											"source": 9,
											"value": "176"
										},
										{
											"begin": 4503,
											"end": 4535,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4488,
											"end": 4502,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4488,
											"end": 4536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4488,
											"end": 4536,
											"name": "tag",
											"source": 9,
											"value": "175"
										},
										{
											"begin": 4488,
											"end": 4536,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4536,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4536,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4563,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4580,
											"end": 4584,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4601,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 4580,
											"end": 4601,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4580,
											"end": 4601,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4570,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4577,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4566,
											"end": 4577,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4577,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4566,
											"end": 4601,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4601,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 4566,
											"end": 4601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4566,
											"end": 4601,
											"name": "tag",
											"source": 9,
											"value": "178"
										},
										{
											"begin": 4566,
											"end": 4601,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4601,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4546,
											"end": 4601,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 663,
											"end": 671,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 4669,
											"end": 4674,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4669,
											"end": 4693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "tag",
											"source": 9,
											"value": "180"
										},
										{
											"begin": 4669,
											"end": 4693,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4656,
											"end": 4664,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4640,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4641,
											"end": 4652,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 4632,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "tag",
											"source": 9,
											"value": "183"
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "tag",
											"source": 9,
											"value": "182"
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4632,
											"end": 4653,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4629,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4620,
											"end": 4653,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 4620,
											"end": 4653,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4620,
											"end": 4664,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4664,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4664,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 4620,
											"end": 4664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4620,
											"end": 4664,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 4620,
											"end": 4664,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4619,
											"end": 4694,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4694,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4694,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 4619,
											"end": 4694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4619,
											"end": 4694,
											"name": "tag",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 4619,
											"end": 4694,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4612,
											"end": 4694,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3907,
											"end": 4701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 721,
											"end": 723,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 677,
											"end": 723,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 677,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 771,
											"end": 776,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 737,
											"end": 776,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 737,
											"end": 776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "190"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2238,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2224,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2207,
											"end": 2260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2334,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2319,
											"end": 2354,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7285,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7288,
											"end": 7298,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7298,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7270,
											"end": 7298,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7336,
											"end": 7343,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7329,
											"end": 7344,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7351,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7351,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7351,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7329,
											"end": 7351,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7326,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7316,
											"end": 7351,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 7308,
											"end": 7375,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "202"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 7308,
											"end": 7375,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7386,
											"end": 7408,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7417,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7418,
											"end": 7425,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7426,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7427,
											"end": 7437,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 7411,
											"end": 7438,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7411,
											"end": 7438,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7386,
											"end": 7438,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7386,
											"end": 7438,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7461,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7457,
											"end": 7469,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7456,
											"end": 7469,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 7448,
											"end": 7489,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 7448,
											"end": 7489,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7511,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7507,
											"end": 7523,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 7499,
											"end": 7549,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 7499,
											"end": 7549,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7590,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7601,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7586,
											"end": 7601,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7586,
											"end": 7601,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7582,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7601,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7567,
											"end": 7601,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 7559,
											"end": 7618,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 7559,
											"end": 7618,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7643,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7646,
											"end": 7682,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 7662,
											"end": 7669,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7671,
											"end": 7681,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7646,
											"end": 7661,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 7646,
											"end": 7682,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7646,
											"end": 7682,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 7646,
											"end": 7682,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7682,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7629,
											"end": 7682,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7727,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7717,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7700,
											"end": 7717,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7727,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 7692,
											"end": 7756,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "216"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 7692,
											"end": 7756,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7784,
											"end": 7799,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7771,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7781,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7767,
											"end": 7781,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7799,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7799,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7799,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7767,
											"end": 7799,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7868,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7878,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7864,
											"end": 7878,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7864,
											"end": 7878,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7850,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7861,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7846,
											"end": 7861,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7861,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7878,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7846,
											"end": 7878,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7878,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7878,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7846,
											"end": 7878,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7846,
											"end": 7878,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 7846,
											"end": 7878,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7842,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7879,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7827,
											"end": 7879,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7879,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7879,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7827,
											"end": 7879,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7827,
											"end": 7879,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 7827,
											"end": 7879,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7813,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7824,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7809,
											"end": 7824,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7879,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7879,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7879,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7809,
											"end": 7879,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7929,
											"end": 7935,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7908,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7925,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7904,
											"end": 7925,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7925,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 7904,
											"end": 7935,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "220"
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7904,
											"end": 7935,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7966,
											"end": 7972,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7962,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 7945,
											"end": 7962,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 7945,
											"end": 7972,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7945,
											"end": 7972,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8003,
											"end": 8010,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "593662CBE53E88DF3FEF748665B8C3D3142E5D34DC1B24290F7E953537A00183"
										},
										{
											"begin": 8012,
											"end": 8022,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8028,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8045,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8024,
											"end": 8045,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8024,
											"end": 8045,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 7988,
											"end": 8046,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7988,
											"end": 8046,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 8053,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 8053,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7260,
											"end": 8053,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7172,
											"end": 8053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7172,
											"end": 8053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "tag",
											"source": 9,
											"value": "226"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 817,
											"end": 876,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2238,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2224,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2207,
											"end": 2260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "232"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "231"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2334,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2319,
											"end": 2354,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "234"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3252,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3220,
											"end": 3231,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3220,
											"end": 3252,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 3212,
											"end": 3277,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 3212,
											"end": 3277,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3304,
											"end": 3305,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3295,
											"end": 3301,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3295,
											"end": 3305,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 3287,
											"end": 3321,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 3287,
											"end": 3321,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3362,
											"end": 3372,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3382,
											"end": 3386,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3389,
											"end": 3395,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3344,
											"modifierDepth": 3,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "904"
										},
										{
											"begin": 3332,
											"end": 3361,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3361,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3361,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 3332,
											"end": 3361,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 3332,
											"end": 3396,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3425,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3446,
											"end": 3457,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3458,
											"end": 3469,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 3446,
											"end": 3470,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3446,
											"end": 3470,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3443,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3470,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3428,
											"end": 3470,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3470,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3470,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3428,
											"end": 3470,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3428,
											"end": 3470,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 3428,
											"end": 3470,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3470,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3407,
											"end": 3470,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3487,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3488,
											"end": 3498,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3499,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C0"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3537,
											"end": 3543,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3568,
											"end": 3583,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3609,
											"end": 3619,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3647,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3674,
											"end": 3683,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3715,
											"end": 3716,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3505,
											"end": 3727,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A0"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3481,
											"end": 3728,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3754,
											"end": 3760,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3750,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 3739,
											"end": 3750,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 3739,
											"end": 3760,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3739,
											"end": 3760,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3783,
											"end": 3793,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3DF45CB339F96AE4BDB793EFCB6E22100DD0DC4FD739A4EE2033FE67EA35AF96"
										},
										{
											"begin": 3795,
											"end": 3801,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 3814,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3816,
											"end": 3825,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 3776,
											"end": 3826,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3776,
											"end": 3826,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 3202,
											"end": 3833,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3090,
											"end": 3833,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "78"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 1161,
											"end": 1206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8565,
											"end": 8583,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8551,
											"end": 8562,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8551,
											"end": 8583,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 8543,
											"end": 8608,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 8543,
											"end": 8608,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 771,
											"end": 776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 8626,
											"end": 8632,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8643,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8626,
											"end": 8643,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 8618,
											"end": 8660,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 8618,
											"end": 8660,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8707,
											"end": 8713,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8691,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 8692,
											"end": 8703,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 8683,
											"end": 8704,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8713,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8713,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8713,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8683,
											"end": 8713,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "787A1FCA55641CE34A438271930BBB9401DF20DB2B4F510D4F252227D85DF43D"
										},
										{
											"begin": 8739,
											"end": 8750,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8752,
											"end": 8758,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8728,
											"end": 8759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8728,
											"end": 8759,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8461,
											"end": 8766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2398,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 882,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 529,
											"end": 565,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"name": "PUSHIMMUTABLE",
											"source": 9,
											"value": "904"
										},
										{
											"begin": 529,
											"end": 565,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 529,
											"end": 565,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10420,
											"end": 10427,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10446,
											"end": 10453,
											"name": "PUSH",
											"source": 9,
											"value": "30D40"
										},
										{
											"begin": 10439,
											"end": 10453,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10439,
											"end": 10453,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10370,
											"end": 10460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1330,
											"end": 1362,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1298,
											"end": 1324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2328,
											"end": 2334,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2334,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2319,
											"end": 2354,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "tag",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 2319,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6776,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6779,
											"end": 6789,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6789,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6761,
											"end": 6789,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6826,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6827,
											"end": 6834,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6820,
											"end": 6835,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6842,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6842,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6842,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6820,
											"end": 6842,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 6817,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6807,
											"end": 6842,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 6799,
											"end": 6866,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 6799,
											"end": 6866,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6899,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6908,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6909,
											"end": 6916,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6917,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6918,
											"end": 6928,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 6902,
											"end": 6929,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6902,
											"end": 6929,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6929,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6877,
											"end": 6929,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6952,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6948,
											"end": 6960,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6947,
											"end": 6960,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 6939,
											"end": 6980,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 6939,
											"end": 6980,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7015,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7011,
											"end": 7027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7010,
											"end": 7027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 6995,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6991,
											"end": 7007,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7007,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6991,
											"end": 7027,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7059,
											"end": 7066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FA2D7B35E7CC82247C5AE7E8AE2DC078C2B144B76A6B1068887B3C8892C15DA5"
										},
										{
											"begin": 7068,
											"end": 7078,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7084,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 7080,
											"end": 7096,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 7042,
											"end": 7097,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7097,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6751,
											"end": 7104,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6683,
											"end": 7104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2228,
											"end": 2238,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2224,
											"modifierDepth": 1,
											"name": "ORIGIN",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2215,
											"end": 2238,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 2207,
											"end": 2260,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2207,
											"end": 2260,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2334,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2319,
											"end": 2354,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5214,
											"end": 5229,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5232,
											"end": 5242,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5214,
											"end": 5242,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5214,
											"end": 5242,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5283,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5284,
											"end": 5291,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5292,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5293,
											"end": 5303,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 5277,
											"end": 5304,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5277,
											"end": 5304,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5304,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5252,
											"end": 5304,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5327,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5323,
											"end": 5335,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5322,
											"end": 5335,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "170"
										},
										{
											"begin": 5314,
											"end": 5355,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5314,
											"end": 5355,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5396,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5407,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 5392,
											"end": 5407,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5392,
											"end": 5407,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5388,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5407,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5373,
											"end": 5407,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 5365,
											"end": 5424,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5365,
											"end": 5424,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5449,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5488,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5468,
											"end": 5475,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5477,
											"end": 5487,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5452,
											"end": 5467,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 5452,
											"end": 5488,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5452,
											"end": 5488,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5452,
											"end": 5488,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5488,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5488,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5527,
											"end": 5533,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5523,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5506,
											"end": 5523,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5533,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5506,
											"end": 5533,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "217"
										},
										{
											"begin": 5498,
											"end": 5562,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5498,
											"end": 5562,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5588,
											"end": 5592,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5573,
											"end": 5577,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5585,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5573,
											"end": 5585,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5585,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5573,
											"end": 5592,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5611,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 5607,
											"end": 5623,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5651,
											"end": 5652,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5627,
											"end": 5631,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5648,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5627,
											"end": 5648,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5648,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5627,
											"end": 5652,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5607,
											"end": 5652,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5691,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5718,
											"end": 5724,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5698,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5715,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5694,
											"end": 5715,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5715,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5724,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5694,
											"end": 5724,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5724,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5724,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5694,
											"end": 5724,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5694,
											"end": 5724,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 5694,
											"end": 5724,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5724,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5668,
											"end": 5724,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5749,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5792,
											"end": 5797,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 721,
											"end": 723,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 5753,
											"end": 5768,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5788,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5753,
											"end": 5788,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5788,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5788,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "181"
										},
										{
											"begin": 5753,
											"end": 5788,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 5788,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 5753,
											"end": 5788,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5797,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5752,
											"end": 5797,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5797,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5797,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5752,
											"end": 5797,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5752,
											"end": 5797,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 5752,
											"end": 5797,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5797,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5738,
											"end": 5797,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5829,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5850,
											"end": 5853,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5847,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5853,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5832,
											"end": 5853,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5853,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5853,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5832,
											"end": 5853,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5832,
											"end": 5853,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 5832,
											"end": 5853,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5853,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5811,
											"end": 5853,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5905,
											"end": 5915,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5892,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5893,
											"end": 5900,
											"modifierDepth": 3,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5901,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5868,
											"end": 5915,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5868,
											"end": 5915,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5970,
											"end": 5973,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5953,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5954,
											"end": 5965,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5966,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 5929,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5929,
											"end": 5973,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6008,
											"end": 6023,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6004,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 5987,
											"end": 6004,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 5987,
											"end": 6023,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5987,
											"end": 6023,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5654,
											"end": 6034,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5654,
											"end": 6034,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5654,
											"end": 6034,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6091,
											"end": 6097,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6078,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6079,
											"end": 6086,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6087,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 6054,
											"end": 6097,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6054,
											"end": 6097,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6132,
											"end": 6138,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6128,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 6111,
											"end": 6128,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "174"
										},
										{
											"begin": 6111,
											"end": 6138,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6111,
											"end": 6138,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 5603,
											"end": 6149,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6172,
											"end": 6179,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "987D620F307FF6B94D58743CB7A7509F24071586A77759B77C2D4E29F75A2F9A"
										},
										{
											"begin": 6181,
											"end": 6187,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6189,
											"end": 6199,
											"modifierDepth": 3,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 6164,
											"end": 6200,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6164,
											"end": 6200,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 6207,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 6207,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5204,
											"end": 6207,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5119,
											"end": 6207,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5119,
											"end": 6207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1368,
											"end": 1394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "325"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8205,
											"end": 8206,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8196,
											"end": 8202,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8196,
											"end": 8206,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 8188,
											"end": 8222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 8188,
											"end": 8222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8261,
											"end": 8271,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8281,
											"end": 8285,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 8288,
											"end": 8294,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8243,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8260,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8260,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8260,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 8232,
											"end": 8260,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "329"
										},
										{
											"begin": 8232,
											"end": 8295,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8326,
											"end": 8332,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8305,
											"end": 8322,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "179"
										},
										{
											"begin": 8305,
											"end": 8332,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8305,
											"end": 8332,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8369,
											"end": 8379,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D15DAFC20A4E1CCFF3E1B0A321BA0EE5C9B2AA1B9C7CAE08FB5A324537536244"
										},
										{
											"begin": 8381,
											"end": 8387,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 8348,
											"end": 8388,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8348,
											"end": 8388,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8115,
											"end": 8395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 9441,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9503,
											"end": 9509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9502,
											"end": 9509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 9493,
											"end": 9499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9493,
											"end": 9509,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9539,
											"end": 9545,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "752D7E161FF5146F80E3820893176EB40532811E5E20400DFDDE57455213706A"
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9524,
											"end": 9546,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 9441,
											"end": 9553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9257,
											"end": 9258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9231,
											"end": 9259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9231,
											"end": 9259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9245,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9259,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9231,
											"end": 9259,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9231,
											"end": 9259,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 9223,
											"end": 9288,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "339"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "338"
										},
										{
											"begin": 9223,
											"end": 9288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9312,
											"end": 9326,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 9298,
											"end": 9309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9298,
											"end": 9326,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9360,
											"end": 9374,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "27AAE5DB36D94179909D019AE0B1AC7C16D96D953148F63C0F6A0A9C8EAD79EE"
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9341,
											"end": 9375,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9143,
											"end": 9382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 6269,
											"end": 6614,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2328,
											"end": 2334,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2327,
											"end": 2334,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 2319,
											"end": 2354,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "345"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "344"
										},
										{
											"begin": 2319,
											"end": 2354,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6342,
											"end": 6356,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6383,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6384,
											"end": 6394,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6359,
											"end": 6395,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6342,
											"end": 6395,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6342,
											"end": 6395,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6422,
											"end": 6423,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6413,
											"end": 6419,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6413,
											"end": 6423,
											"modifierDepth": 2,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "349"
										},
										{
											"begin": 6405,
											"end": 6450,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "348"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "347"
										},
										{
											"begin": 6405,
											"end": 6450,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6500,
											"end": 6501,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6485,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6486,
											"end": 6496,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6461,
											"end": 6497,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6501,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6501,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6501,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6461,
											"end": 6501,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6536,
											"end": 6546,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6548,
											"end": 6554,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6511,
											"end": 6522,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6511,
											"end": 6535,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6535,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "351"
										},
										{
											"begin": 6511,
											"end": 6535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "350"
										},
										{
											"begin": 6511,
											"end": 6555,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6588,
											"end": 6598,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "BD1EA9966F82CCB966523D3922A6E4AD4BF3EA70E9201BD7A106DE847CC5E616"
										},
										{
											"begin": 6600,
											"end": 6606,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6571,
											"end": 6607,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "352"
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6571,
											"end": 6607,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 6332,
											"end": 6614,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6269,
											"end": 6614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9865,
											"end": 9872,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9891,
											"end": 9908,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9891,
											"end": 9908,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 9908,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9884,
											"end": 9908,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9810,
											"end": 9915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 663,
											"end": 671,
											"name": "PUSH",
											"source": 9,
											"value": "1E13380"
										},
										{
											"begin": 620,
											"end": 671,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 620,
											"end": 671,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10026,
											"end": 10033,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10052,
											"end": 10063,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10045,
											"end": 10063,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9977,
											"end": 10070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "360"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "359"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "361"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10195,
											"end": 10202,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10248,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10222,
											"end": 10227,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10222,
											"end": 10248,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 10214,
											"end": 10273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "tag",
											"source": 9,
											"value": "364"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "tag",
											"source": 9,
											"value": "363"
										},
										{
											"begin": 10214,
											"end": 10273,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10301,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10302,
											"end": 10307,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 10290,
											"end": 10308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "tag",
											"source": 9,
											"value": "365"
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 10290,
											"end": 10308,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 10283,
											"end": 10308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10283,
											"end": 10308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10134,
											"end": 10315,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 596,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 571,
											"end": 596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "tag",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8945,
											"end": 8946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8919,
											"end": 8947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8919,
											"end": 8947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8919,
											"end": 8933,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8919,
											"end": 8947,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8919,
											"end": 8947,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8919,
											"end": 8947,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "340"
										},
										{
											"begin": 8911,
											"end": 8976,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "372"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "371"
										},
										{
											"begin": 8911,
											"end": 8976,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9007,
											"end": 9021,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 8997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 8986,
											"end": 8997,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8986,
											"end": 9022,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9056,
											"end": 9070,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A5289BA11778999F4DFB9415023783188D42BBB5DB0612CBFBE55999069612A0"
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9037,
											"end": 9071,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8831,
											"end": 9078,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "177"
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4834,
											"end": 4841,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4867,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4858,
											"end": 4871,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "tag",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4877,
											"end": 4895,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4873,
											"end": 4874,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4873,
											"end": 4895,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4943,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4944,
											"end": 4945,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "166"
										},
										{
											"begin": 4932,
											"end": 4946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4932,
											"end": 4946,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4920,
											"end": 4946,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4989,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4916,
											"end": 4989,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4973,
											"end": 4974,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4974,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4974,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4966,
											"end": 4974,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4966,
											"end": 4974,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4916,
											"end": 4989,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 4916,
											"end": 4989,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4897,
											"end": 4900,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "374"
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4853,
											"end": 4999,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 5008,
											"end": 5041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5041,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "tag",
											"source": 9,
											"value": "373"
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 5048,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 5048,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 4,
											"value": "225"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "tag",
											"source": 6,
											"value": "244"
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1765,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1760,
											"end": 1778,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1787,
											"end": 1789,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1791,
											"end": 1796,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "391"
										},
										{
											"begin": 1745,
											"end": 1798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "tag",
											"source": 6,
											"value": "390"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1745,
											"end": 1798,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 1718,
											"end": 1799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "tag",
											"source": 6,
											"value": "389"
										},
										{
											"begin": 1718,
											"end": 1799,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1618,
											"end": 1806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "394"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "396"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "398"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "399"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "tag",
											"source": 6,
											"value": "351"
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 1321,
											"end": 1326,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1348,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1343,
											"end": 1357,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1360,
											"end": 1362,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "404"
										},
										{
											"begin": 1328,
											"end": 1371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "tag",
											"source": 6,
											"value": "403"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1371,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1320,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 1301,
											"end": 1372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "tag",
											"source": 6,
											"value": "402"
										},
										{
											"begin": 1301,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1219,
											"end": 1379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "tag",
											"source": 6,
											"value": "392"
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8450,
											"end": 8468,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8478,
											"end": 8497,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8616,
											"end": 8620,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8613,
											"end": 8614,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8606,
											"end": 8610,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8600,
											"end": 8611,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8593,
											"end": 8597,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 8587,
											"end": 8591,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 8583,
											"end": 8598,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 8580,
											"end": 8581,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8573,
											"end": 8578,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 8566,
											"end": 8571,
											"name": "GAS",
											"source": 6
										},
										{
											"begin": 8561,
											"end": 8621,
											"name": "CALL",
											"source": 6
										},
										{
											"begin": 8673,
											"end": 8680,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8722,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8762,
											"end": 8778,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8759,
											"end": 8760,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8754,
											"end": 8757,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8739,
											"end": 8779,
											"name": "RETURNDATACOPY",
											"source": 6
										},
										{
											"begin": 8808,
											"end": 8824,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8803,
											"end": 8806,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8796,
											"end": 8825,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "tag",
											"source": 6,
											"value": "406"
										},
										{
											"begin": 8663,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8866,
											"end": 8882,
											"name": "RETURNDATASIZE",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 8852,
											"end": 8882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8916,
											"end": 8917,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8910,
											"end": 8918,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 8895,
											"end": 8918,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8532,
											"end": 8928,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8956,
											"end": 8957,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8942,
											"end": 8952,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 8957,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9009,
											"end": 9010,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 8994,
											"end": 9005,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8994,
											"end": 9010,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "407"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8990,
											"end": 8991,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 8968,
											"end": 8973,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8986,
											"name": "EXTCODESIZE",
											"source": 6
										},
										{
											"begin": 8960,
											"end": 8991,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "tag",
											"source": 6,
											"value": "408"
										},
										{
											"begin": 8942,
											"end": 9010,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 9066,
											"end": 9071,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 9033,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "tag",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 9033,
											"end": 9073,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 8938,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8440,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 8370,
											"end": 9090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 7,
											"value": "395"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 10,
											"value": "44"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1213,
											"end": 1220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1242,
											"end": 1247,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1176,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "47"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1743,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1732,
											"end": 1744,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1744,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1722,
											"end": 1744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 1751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1882,
											"end": 1893,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1916,
											"end": 1922,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1911,
											"end": 1914,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1923,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1956,
											"end": 1960,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1947,
											"end": 1961,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1961,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1932,
											"end": 1961,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1757,
											"end": 1967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2066,
											"end": 2070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2089,
											"end": 2092,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2092,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2081,
											"end": 2092,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2119,
											"end": 2123,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2114,
											"end": 2117,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2110,
											"end": 2124,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2102,
											"end": 2124,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 2232,
											"end": 2237,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 2214,
											"end": 2238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 2214,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2209,
											"end": 2212,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2202,
											"end": 2239,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2137,
											"end": 2245,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2333,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2314,
											"end": 2335,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2303,
											"end": 2335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2251,
											"end": 2341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 2433,
											"end": 2438,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 2418,
											"end": 2439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 2418,
											"end": 2439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2413,
											"end": 2416,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2406,
											"end": 2440,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2347,
											"end": 2446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2659,
											"end": 2663,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 2654,
											"end": 2657,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2650,
											"end": 2664,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2748,
											"end": 2752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2746,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2737,
											"end": 2753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2731,
											"end": 2754,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 2824,
											"end": 2828,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2822,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2829,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2801,
											"end": 2813,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2767,
											"end": 2830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 2767,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2674,
											"end": 2840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2927,
											"end": 2931,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2920,
											"end": 2925,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2916,
											"end": 2932,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2910,
											"end": 2933,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 3003,
											"end": 3007,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2998,
											"end": 3001,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2994,
											"end": 3008,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 2992,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 2946,
											"end": 3009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 2946,
											"end": 3009,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2850,
											"end": 3019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3100,
											"end": 3105,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3112,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3090,
											"end": 3113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 3183,
											"end": 3187,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3178,
											"end": 3181,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3174,
											"end": 3188,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3160,
											"end": 3172,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3126,
											"end": 3189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 3126,
											"end": 3189,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3029,
											"end": 3199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3284,
											"end": 3288,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3277,
											"end": 3282,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3273,
											"end": 3289,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3267,
											"end": 3290,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 3354,
											"end": 3358,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 3349,
											"end": 3352,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3345,
											"end": 3359,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3331,
											"end": 3343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3303,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 3303,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3459,
											"end": 3463,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3452,
											"end": 3457,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3448,
											"end": 3464,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3442,
											"end": 3465,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 3529,
											"end": 3533,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 3524,
											"end": 3527,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3520,
											"end": 3534,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3518,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 3478,
											"end": 3535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 3478,
											"end": 3535,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3380,
											"end": 3545,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3639,
											"end": 3643,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3632,
											"end": 3637,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3628,
											"end": 3644,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3622,
											"end": 3645,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 3715,
											"end": 3719,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 3710,
											"end": 3713,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3706,
											"end": 3720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3692,
											"end": 3704,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 3658,
											"end": 3721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "tag",
											"source": 10,
											"value": "510"
										},
										{
											"begin": 3658,
											"end": 3721,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3555,
											"end": 3731,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2628,
											"end": 3738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2520,
											"end": 3738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3865,
											"end": 3875,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 3980,
											"end": 3983,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3972,
											"end": 3978,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 3886,
											"end": 3984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 3886,
											"end": 3984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 4011,
											"end": 4014,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4007,
											"end": 4021,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 4021,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3993,
											"end": 4021,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3744,
											"end": 4027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4133,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4161,
											"end": 4165,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4156,
											"end": 4159,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4152,
											"end": 4166,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4144,
											"end": 4166,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4033,
											"end": 4172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4424,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 4524,
											"end": 4529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 4450,
											"end": 4530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 4450,
											"end": 4530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 4651,
											"end": 4657,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4649,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 4546,
											"end": 4658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 4546,
											"end": 4658,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4658,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4539,
											"end": 4658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 4758,
											"end": 4763,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 4682,
											"end": 4764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 4682,
											"end": 4764,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4787,
											"end": 4794,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4834,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4825,
											"end": 4826,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4822,
											"end": 4835,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4904,
											"end": 4910,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4898,
											"end": 4911,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 5042,
											"end": 5045,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5040,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 4931,
											"end": 5046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 4931,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 5046,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 4924,
											"end": 5046,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 5148,
											"end": 5154,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 5069,
											"end": 5155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 5069,
											"end": 5155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5059,
											"end": 5155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 5165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4850,
											"end": 4851,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 4847,
											"end": 4848,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4843,
											"end": 4852,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 4803,
											"end": 5165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4807,
											"end": 4821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5181,
											"end": 5184,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5184,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 5174,
											"end": 5184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4426,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4250,
											"end": 5190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5391,
											"end": 5395,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5429,
											"end": 5431,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5418,
											"end": 5427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5414,
											"end": 5432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5432,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5406,
											"end": 5432,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5478,
											"end": 5487,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5472,
											"end": 5476,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5468,
											"end": 5488,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5464,
											"end": 5465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5453,
											"end": 5462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5449,
											"end": 5466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5489,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 5661,
											"end": 5665,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5652,
											"end": 5658,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 5506,
											"end": 5666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 5506,
											"end": 5666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5666,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5498,
											"end": 5666,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5196,
											"end": 5673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5801,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 5679,
											"end": 5801,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 5770,
											"end": 5775,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 5752,
											"end": 5776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 5752,
											"end": 5776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5745,
											"end": 5750,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5742,
											"end": 5777,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5791,
											"end": 5792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5788,
											"end": 5789,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5781,
											"end": 5793,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 5732,
											"end": 5795,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5801,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5679,
											"end": 5801,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5853,
											"end": 5858,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5878,
											"end": 5898,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5869,
											"end": 5898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 5934,
											"end": 5939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 5907,
											"end": 5940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 5907,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6020,
											"end": 6026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6034,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6077,
											"end": 6079,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6065,
											"end": 6074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6056,
											"end": 6063,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6052,
											"end": 6075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6048,
											"end": 6080,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6083,
											"end": 6162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 6083,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "tag",
											"source": 10,
											"value": "531"
										},
										{
											"begin": 6045,
											"end": 6164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6204,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 6273,
											"end": 6280,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6264,
											"end": 6270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6253,
											"end": 6262,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6249,
											"end": 6271,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 6228,
											"end": 6281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 6228,
											"end": 6281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6174,
											"end": 6291,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6330,
											"end": 6332,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6381,
											"end": 6390,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6377,
											"end": 6399,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 6356,
											"end": 6409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 6356,
											"end": 6409,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6346,
											"end": 6409,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6301,
											"end": 6419,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5952,
											"end": 6426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6491,
											"end": 6497,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6540,
											"end": 6542,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6528,
											"end": 6537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6519,
											"end": 6526,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6515,
											"end": 6538,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6511,
											"end": 6543,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 6546,
											"end": 6625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 6546,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 6508,
											"end": 6627,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6666,
											"end": 6667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 6736,
											"end": 6743,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6727,
											"end": 6733,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6716,
											"end": 6725,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6712,
											"end": 6734,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 6691,
											"end": 6744,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 6691,
											"end": 6744,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6744,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6681,
											"end": 6744,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6637,
											"end": 6754,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6432,
											"end": 6761,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 6852,
											"end": 6857,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 6837,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 6837,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6830,
											"end": 6835,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6827,
											"end": 6859,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6873,
											"end": 6874,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6863,
											"end": 6875,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 6817,
											"end": 6877,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6883,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6767,
											"end": 6883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6932,
											"end": 6937,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6976,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6957,
											"end": 6977,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6977,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6948,
											"end": 6977,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 7010,
											"end": 7015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 6986,
											"end": 7016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 6986,
											"end": 7016,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6889,
											"end": 7022,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7102,
											"end": 7108,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7110,
											"end": 7116,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7118,
											"end": 7124,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7167,
											"end": 7169,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 7155,
											"end": 7164,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7146,
											"end": 7153,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7142,
											"end": 7165,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7170,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7173,
											"end": 7252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 7173,
											"end": 7252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 7135,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7293,
											"end": 7294,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 7363,
											"end": 7370,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7354,
											"end": 7360,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7343,
											"end": 7352,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7339,
											"end": 7361,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7318,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 7318,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7371,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7371,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7264,
											"end": 7381,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7420,
											"end": 7422,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 7491,
											"end": 7498,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7482,
											"end": 7488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7471,
											"end": 7480,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7467,
											"end": 7489,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 7446,
											"end": 7499,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 7446,
											"end": 7499,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7499,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7436,
											"end": 7499,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7391,
											"end": 7509,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7548,
											"end": 7550,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 7616,
											"end": 7623,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7607,
											"end": 7613,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7596,
											"end": 7605,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 7592,
											"end": 7614,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 7574,
											"end": 7624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 7574,
											"end": 7624,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7564,
											"end": 7624,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7519,
											"end": 7634,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7028,
											"end": 7641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 7743,
											"end": 7748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 7728,
											"end": 7749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "tag",
											"source": 10,
											"value": "551"
										},
										{
											"begin": 7728,
											"end": 7749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7723,
											"end": 7726,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7716,
											"end": 7750,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7647,
											"end": 7756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7983,
											"end": 7987,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8021,
											"end": 8024,
											"name": "PUSH",
											"source": 10,
											"value": "C0"
										},
										{
											"begin": 8010,
											"end": 8019,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8006,
											"end": 8025,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8025,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7998,
											"end": 8025,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8092,
											"end": 8101,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8088,
											"end": 8105,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8079,
											"end": 8085,
											"name": "DUP10",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8035,
											"end": 8106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 8035,
											"end": 8106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8160,
											"end": 8166,
											"name": "DUP9",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8116,
											"end": 8188,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 8116,
											"end": 8188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 8266,
											"end": 8268,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8255,
											"end": 8264,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8251,
											"end": 8269,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8242,
											"end": 8248,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8198,
											"end": 8270,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 8198,
											"end": 8270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 8342,
											"end": 8344,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 8331,
											"end": 8340,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8327,
											"end": 8345,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8318,
											"end": 8324,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 8280,
											"end": 8346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 8280,
											"end": 8346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 8418,
											"end": 8421,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 8407,
											"end": 8416,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8403,
											"end": 8422,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8400,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 8356,
											"end": 8423,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "tag",
											"source": 10,
											"value": "557"
										},
										{
											"begin": 8356,
											"end": 8423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 8501,
											"end": 8504,
											"name": "PUSH",
											"source": 10,
											"value": "A0"
										},
										{
											"begin": 8490,
											"end": 8499,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8486,
											"end": 8505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8477,
											"end": 8483,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 8433,
											"end": 8506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 8433,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "SWAP8",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "SWAP7",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7762,
											"end": 8513,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "tag",
											"source": 10,
											"value": "83"
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8587,
											"end": 8593,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8595,
											"end": 8601,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8644,
											"end": 8646,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8632,
											"end": 8641,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8623,
											"end": 8630,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8619,
											"end": 8642,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8615,
											"end": 8647,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 8650,
											"end": 8729,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "tag",
											"source": 10,
											"value": "561"
										},
										{
											"begin": 8650,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 8612,
											"end": 8731,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 8840,
											"end": 8847,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8831,
											"end": 8837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8820,
											"end": 8829,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8816,
											"end": 8838,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 8795,
											"end": 8848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 8795,
											"end": 8848,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8848,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8785,
											"end": 8848,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8858,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8897,
											"end": 8899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 8968,
											"end": 8975,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8959,
											"end": 8965,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8948,
											"end": 8957,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8944,
											"end": 8966,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 8923,
											"end": 8976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "tag",
											"source": 10,
											"value": "563"
										},
										{
											"begin": 8923,
											"end": 8976,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8976,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8976,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8868,
											"end": 8986,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8519,
											"end": 8993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9209,
											"name": "tag",
											"source": 10,
											"value": "88"
										},
										{
											"begin": 8999,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9124,
											"end": 9126,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9122,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9109,
											"end": 9127,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9127,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9101,
											"end": 9127,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9188,
											"end": 9197,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9184,
											"end": 9201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9175,
											"end": 9181,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 9137,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9137,
											"end": 9202,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 9137,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9209,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9209,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9209,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8999,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9275,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 9215,
											"end": 9275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9243,
											"end": 9246,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9264,
											"end": 9269,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9269,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9257,
											"end": 9269,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9275,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9215,
											"end": 9275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9423,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9281,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9331,
											"end": 9340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9364,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 9391,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 9409,
											"end": 9414,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9391,
											"end": 9415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9391,
											"end": 9415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9391,
											"end": 9415,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 9391,
											"end": 9415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 9382,
											"end": 9416,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "tag",
											"source": 10,
											"value": "569"
										},
										{
											"begin": 9382,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9417,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 9364,
											"end": 9417,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9364,
											"end": 9417,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 9364,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9351,
											"end": 9417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9423,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9423,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9423,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9281,
											"end": 9423,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9555,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 9429,
											"end": 9555,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9479,
											"end": 9488,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9512,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 9543,
											"end": 9548,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 9512,
											"end": 9549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9512,
											"end": 9549,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 9512,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9555,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9555,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9555,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9429,
											"end": 9555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9701,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 9561,
											"end": 9701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9625,
											"end": 9634,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9658,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 9689,
											"end": 9694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 9658,
											"end": 9695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9658,
											"end": 9695,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 9658,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9695,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9645,
											"end": 9695,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9701,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 9866,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 9707,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 9853,
											"end": 9858,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9859,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 9808,
											"end": 9859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9808,
											"end": 9859,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 9808,
											"end": 9859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9803,
											"end": 9806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9796,
											"end": 9860,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 9866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 9866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9707,
											"end": 9866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 10122,
											"name": "tag",
											"source": 10,
											"value": "98"
										},
										{
											"begin": 9872,
											"end": 10122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9979,
											"end": 9983,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10017,
											"end": 10019,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10015,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10002,
											"end": 10020,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10020,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9994,
											"end": 10020,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10030,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 10112,
											"end": 10113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10101,
											"end": 10110,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10097,
											"end": 10114,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10088,
											"end": 10094,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10030,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 10030,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10030,
											"end": 10115,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 10030,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 10122,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 10122,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 10122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 10122,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9872,
											"end": 10122,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10246,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10128,
											"end": 10246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10215,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 10233,
											"end": 10238,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10215,
											"end": 10239,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 10215,
											"end": 10239,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10215,
											"end": 10239,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 10215,
											"end": 10239,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10203,
											"end": 10240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10128,
											"end": 10246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10474,
											"name": "tag",
											"source": 10,
											"value": "111"
										},
										{
											"begin": 10252,
											"end": 10474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10345,
											"end": 10349,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10383,
											"end": 10385,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10372,
											"end": 10381,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10368,
											"end": 10386,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10386,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10360,
											"end": 10386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 10464,
											"end": 10465,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10453,
											"end": 10462,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10449,
											"end": 10466,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10440,
											"end": 10446,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10467,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 10396,
											"end": 10467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10467,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 10396,
											"end": 10467,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10474,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10252,
											"end": 10474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10649,
											"name": "tag",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 10480,
											"end": 10649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10564,
											"end": 10575,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10598,
											"end": 10604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10593,
											"end": 10596,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10586,
											"end": 10605,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10638,
											"end": 10642,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10633,
											"end": 10636,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10629,
											"end": 10643,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10643,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10614,
											"end": 10643,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10649,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10480,
											"end": 10649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10655,
											"end": 10820,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 10655,
											"end": 10820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10795,
											"end": 10812,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964206163636F756E740000000000000000000000000000000000"
										},
										{
											"begin": 10791,
											"end": 10792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10783,
											"end": 10789,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10779,
											"end": 10793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10772,
											"end": 10813,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10655,
											"end": 10820,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10655,
											"end": 10820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 11192,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 10826,
											"end": 11192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10968,
											"end": 10971,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10989,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 11053,
											"end": 11055,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 11048,
											"end": 11051,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11056,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 10989,
											"end": 11056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10989,
											"end": 11056,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 10989,
											"end": 11056,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11056,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10982,
											"end": 11056,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 11154,
											"end": 11157,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 11065,
											"end": 11158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11065,
											"end": 11158,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 11065,
											"end": 11158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11183,
											"end": 11185,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11178,
											"end": 11181,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11174,
											"end": 11186,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11167,
											"end": 11186,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11167,
											"end": 11186,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 11192,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 11192,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 11192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10826,
											"end": 11192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11617,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 11198,
											"end": 11617,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11364,
											"end": 11368,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11402,
											"end": 11404,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11391,
											"end": 11400,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11387,
											"end": 11405,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11379,
											"end": 11405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11451,
											"end": 11460,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11445,
											"end": 11449,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11441,
											"end": 11461,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11437,
											"end": 11438,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11426,
											"end": 11435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11422,
											"end": 11439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11415,
											"end": 11462,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11479,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 11605,
											"end": 11609,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11479,
											"end": 11610,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 11479,
											"end": 11610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11479,
											"end": 11610,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 11479,
											"end": 11610,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11610,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11471,
											"end": 11610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11617,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11617,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11617,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11198,
											"end": 11617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11623,
											"end": 11792,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 11623,
											"end": 11792,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11763,
											"end": 11784,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C6964207374616B6520696E64657800000000000000000000000000"
										},
										{
											"begin": 11759,
											"end": 11760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11751,
											"end": 11757,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11747,
											"end": 11761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11785,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11623,
											"end": 11792,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11623,
											"end": 11792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12164,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 11798,
											"end": 12164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11940,
											"end": 11943,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11961,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 12025,
											"end": 12027,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 12020,
											"end": 12023,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11961,
											"end": 12028,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 11961,
											"end": 12028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11961,
											"end": 12028,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 11961,
											"end": 12028,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12028,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11954,
											"end": 12028,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 12126,
											"end": 12129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12130,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 12037,
											"end": 12130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12037,
											"end": 12130,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 12037,
											"end": 12130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12155,
											"end": 12157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12150,
											"end": 12153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12146,
											"end": 12158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12139,
											"end": 12158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12164,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12164,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12164,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11798,
											"end": 12164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12589,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 12170,
											"end": 12589,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12336,
											"end": 12340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12374,
											"end": 12376,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12363,
											"end": 12372,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12359,
											"end": 12377,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12351,
											"end": 12377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12423,
											"end": 12432,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12413,
											"end": 12433,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12409,
											"end": 12410,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12398,
											"end": 12407,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12394,
											"end": 12411,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12387,
											"end": 12434,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 12577,
											"end": 12581,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12582,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 12451,
											"end": 12582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12451,
											"end": 12582,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 12451,
											"end": 12582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12443,
											"end": 12582,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12443,
											"end": 12582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12589,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12589,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12589,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12170,
											"end": 12589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12595,
											"end": 12775,
											"name": "tag",
											"source": 10,
											"value": "166"
										},
										{
											"begin": 12595,
											"end": 12775,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12643,
											"end": 12720,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12640,
											"end": 12641,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12633,
											"end": 12721,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12740,
											"end": 12744,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 12737,
											"end": 12738,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 12730,
											"end": 12745,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12768,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 12761,
											"end": 12762,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12754,
											"end": 12769,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12946,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 12781,
											"end": 12946,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12921,
											"end": 12938,
											"name": "PUSH",
											"source": 10,
											"value": "416C726561647920636C61696D65640000000000000000000000000000000000"
										},
										{
											"begin": 12917,
											"end": 12918,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12909,
											"end": 12915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12905,
											"end": 12919,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12898,
											"end": 12939,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12946,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12781,
											"end": 12946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13318,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12952,
											"end": 13318,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13094,
											"end": 13097,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13115,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 13179,
											"end": 13181,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 13174,
											"end": 13177,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13115,
											"end": 13182,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 13115,
											"end": 13182,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13115,
											"end": 13182,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 13115,
											"end": 13182,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13182,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13108,
											"end": 13182,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 13280,
											"end": 13283,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 13191,
											"end": 13284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 13191,
											"end": 13284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13309,
											"end": 13311,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13304,
											"end": 13307,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13300,
											"end": 13312,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13293,
											"end": 13312,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13293,
											"end": 13312,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13318,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13318,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13318,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12952,
											"end": 13318,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13324,
											"end": 13743,
											"name": "tag",
											"source": 10,
											"value": "170"
										},
										{
											"begin": 13324,
											"end": 13743,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13490,
											"end": 13494,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13528,
											"end": 13530,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13517,
											"end": 13526,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13513,
											"end": 13531,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13505,
											"end": 13531,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13505,
											"end": 13531,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13577,
											"end": 13586,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13571,
											"end": 13575,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13587,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13563,
											"end": 13564,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13552,
											"end": 13561,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13548,
											"end": 13565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13541,
											"end": 13588,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13605,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 13731,
											"end": 13735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13605,
											"end": 13736,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 13605,
											"end": 13736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13605,
											"end": 13736,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 13605,
											"end": 13736,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13597,
											"end": 13736,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13597,
											"end": 13736,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13324,
											"end": 13743,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13324,
											"end": 13743,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13324,
											"end": 13743,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13324,
											"end": 13743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13749,
											"end": 13929,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 13749,
											"end": 13929,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13797,
											"end": 13874,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13794,
											"end": 13795,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13787,
											"end": 13875,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13894,
											"end": 13898,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 13891,
											"end": 13892,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 13884,
											"end": 13899,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13918,
											"end": 13922,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 13915,
											"end": 13916,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13908,
											"end": 13923,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 14129,
											"name": "tag",
											"source": 10,
											"value": "174"
										},
										{
											"begin": 13935,
											"end": 14129,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13975,
											"end": 13979,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 14013,
											"end": 14014,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14015,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 13995,
											"end": 14015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14015,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 13995,
											"end": 14015,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13990,
											"end": 14015,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13990,
											"end": 14015,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 14047,
											"end": 14048,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14029,
											"end": 14049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 14029,
											"end": 14049,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14024,
											"end": 14049,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14024,
											"end": 14049,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14073,
											"end": 14074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14070,
											"end": 14071,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14066,
											"end": 14075,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14075,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14058,
											"end": 14075,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14097,
											"end": 14098,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14091,
											"end": 14095,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14088,
											"end": 14099,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14122,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14122,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 14085,
											"end": 14122,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 14102,
											"end": 14120,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 14102,
											"end": 14120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14102,
											"end": 14120,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 14102,
											"end": 14120,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14085,
											"end": 14122,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 14085,
											"end": 14122,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 14129,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 14129,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 14129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 14129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13935,
											"end": 14129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14326,
											"name": "tag",
											"source": 10,
											"value": "179"
										},
										{
											"begin": 14135,
											"end": 14326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14175,
											"end": 14178,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14194,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 14212,
											"end": 14213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14214,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14194,
											"end": 14214,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14194,
											"end": 14214,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 14194,
											"end": 14214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14214,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14189,
											"end": 14214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14228,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 14246,
											"end": 14247,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14228,
											"end": 14248,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14228,
											"end": 14248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14228,
											"end": 14248,
											"name": "tag",
											"source": 10,
											"value": "611"
										},
										{
											"begin": 14228,
											"end": 14248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14223,
											"end": 14248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14223,
											"end": 14248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14271,
											"end": 14272,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14268,
											"end": 14269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14264,
											"end": 14273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14257,
											"end": 14273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14292,
											"end": 14295,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 14289,
											"end": 14290,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14286,
											"end": 14296,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14319,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14319,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 14283,
											"end": 14319,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 14299,
											"end": 14317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14319,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 14283,
											"end": 14319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14326,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14742,
											"name": "tag",
											"source": 10,
											"value": "181"
										},
										{
											"begin": 14332,
											"end": 14742,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14372,
											"end": 14379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14395,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 14413,
											"end": 14414,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14395,
											"end": 14415,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14395,
											"end": 14415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14395,
											"end": 14415,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 14395,
											"end": 14415,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14415,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14390,
											"end": 14415,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14429,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 14447,
											"end": 14448,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14429,
											"end": 14449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14429,
											"end": 14449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14429,
											"end": 14449,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 14429,
											"end": 14449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14424,
											"end": 14449,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14424,
											"end": 14449,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14484,
											"end": 14485,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14481,
											"end": 14482,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14477,
											"end": 14486,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 14524,
											"end": 14535,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14536,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14506,
											"end": 14536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14506,
											"end": 14536,
											"name": "tag",
											"source": 10,
											"value": "617"
										},
										{
											"begin": 14506,
											"end": 14536,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14536,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14495,
											"end": 14536,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14685,
											"end": 14686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14676,
											"end": 14683,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14672,
											"end": 14687,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 14669,
											"end": 14670,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 14666,
											"end": 14688,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 14646,
											"end": 14647,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14639,
											"end": 14648,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 14619,
											"end": 14702,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14735,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 14596,
											"end": 14735,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 14715,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 14715,
											"end": 14733,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 14715,
											"end": 14733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14715,
											"end": 14733,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 14715,
											"end": 14733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14596,
											"end": 14735,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 14596,
											"end": 14735,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14380,
											"end": 14742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14742,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14742,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14742,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14332,
											"end": 14742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14748,
											"end": 14928,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 14748,
											"end": 14928,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14796,
											"end": 14873,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14793,
											"end": 14794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14786,
											"end": 14874,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 14890,
											"end": 14891,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 14883,
											"end": 14898,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14917,
											"end": 14921,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 14914,
											"end": 14915,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14922,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 15119,
											"name": "tag",
											"source": 10,
											"value": "188"
										},
										{
											"begin": 14934,
											"end": 15119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14974,
											"end": 14975,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14991,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 15009,
											"end": 15010,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15011,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 14991,
											"end": 15011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14991,
											"end": 15011,
											"name": "tag",
											"source": 10,
											"value": "622"
										},
										{
											"begin": 14991,
											"end": 15011,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14986,
											"end": 15011,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14986,
											"end": 15011,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15025,
											"end": 15045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 15043,
											"end": 15044,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15025,
											"end": 15045,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 15025,
											"end": 15045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15025,
											"end": 15045,
											"name": "tag",
											"source": 10,
											"value": "623"
										},
										{
											"begin": 15025,
											"end": 15045,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15020,
											"end": 15045,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15020,
											"end": 15045,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15064,
											"end": 15065,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15054,
											"end": 15089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 15054,
											"end": 15089,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 15069,
											"end": 15087,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 15069,
											"end": 15087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15054,
											"end": 15089,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 15054,
											"end": 15089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15111,
											"end": 15112,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15108,
											"end": 15109,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15104,
											"end": 15113,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15099,
											"end": 15113,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15099,
											"end": 15113,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 15119,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 15119,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 15119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 15119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14934,
											"end": 15119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15292,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15125,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15265,
											"end": 15284,
											"name": "PUSH",
											"source": 10,
											"value": "4F6E6C7920454F412063616E2063616C6C000000000000000000000000000000"
										},
										{
											"begin": 15261,
											"end": 15262,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15253,
											"end": 15259,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15249,
											"end": 15263,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15242,
											"end": 15285,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15125,
											"end": 15292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15664,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 15298,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15440,
											"end": 15443,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15461,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 15525,
											"end": 15527,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 15520,
											"end": 15523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15461,
											"end": 15528,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 15461,
											"end": 15528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15461,
											"end": 15528,
											"name": "tag",
											"source": 10,
											"value": "628"
										},
										{
											"begin": 15461,
											"end": 15528,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15528,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15454,
											"end": 15528,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15537,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 15626,
											"end": 15629,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15537,
											"end": 15630,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15537,
											"end": 15630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15537,
											"end": 15630,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 15537,
											"end": 15630,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15655,
											"end": 15657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15650,
											"end": 15653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15646,
											"end": 15658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15639,
											"end": 15658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15639,
											"end": 15658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15664,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15664,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15664,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15664,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 16089,
											"name": "tag",
											"source": 10,
											"value": "195"
										},
										{
											"begin": 15670,
											"end": 16089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15836,
											"end": 15840,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15874,
											"end": 15876,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15863,
											"end": 15872,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15859,
											"end": 15877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15851,
											"end": 15877,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15851,
											"end": 15877,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15923,
											"end": 15932,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15917,
											"end": 15921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15913,
											"end": 15933,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15909,
											"end": 15910,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15898,
											"end": 15907,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15894,
											"end": 15911,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15887,
											"end": 15934,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 16082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 16082,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 15951,
											"end": 16082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15951,
											"end": 16082,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 15951,
											"end": 16082,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16082,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15943,
											"end": 16082,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 16089,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 16089,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 16089,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 16089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16095,
											"end": 16260,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 16095,
											"end": 16260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16235,
											"end": 16252,
											"name": "PUSH",
											"source": 10,
											"value": "436F6E7472616374207061757365640000000000000000000000000000000000"
										},
										{
											"begin": 16231,
											"end": 16232,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16223,
											"end": 16229,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16219,
											"end": 16233,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16212,
											"end": 16253,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16095,
											"end": 16260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16095,
											"end": 16260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16632,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16266,
											"end": 16632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16408,
											"end": 16411,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16429,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 16493,
											"end": 16495,
											"name": "PUSH",
											"source": 10,
											"value": "F"
										},
										{
											"begin": 16488,
											"end": 16491,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 16429,
											"end": 16496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16429,
											"end": 16496,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 16429,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16422,
											"end": 16496,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16422,
											"end": 16496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16505,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 16594,
											"end": 16597,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16505,
											"end": 16598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 16505,
											"end": 16598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16505,
											"end": 16598,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 16505,
											"end": 16598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16623,
											"end": 16625,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16618,
											"end": 16621,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16614,
											"end": 16626,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16626,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16607,
											"end": 16626,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16632,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16266,
											"end": 16632,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 17057,
											"name": "tag",
											"source": 10,
											"value": "199"
										},
										{
											"begin": 16638,
											"end": 17057,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16804,
											"end": 16808,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16842,
											"end": 16844,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16831,
											"end": 16840,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16827,
											"end": 16845,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16819,
											"end": 16845,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16819,
											"end": 16845,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16891,
											"end": 16900,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16885,
											"end": 16889,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16881,
											"end": 16901,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16877,
											"end": 16878,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16866,
											"end": 16875,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16862,
											"end": 16879,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16855,
											"end": 16902,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 17045,
											"end": 17049,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17050,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 16919,
											"end": 17050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16919,
											"end": 17050,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 16919,
											"end": 17050,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17050,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16911,
											"end": 17050,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 17057,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 17057,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 17057,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16638,
											"end": 17057,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17063,
											"end": 17234,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 17063,
											"end": 17234,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17203,
											"end": 17226,
											"name": "PUSH",
											"source": 10,
											"value": "4175746F2D7374616B696E672064697361626C65640000000000000000000000"
										},
										{
											"begin": 17199,
											"end": 17200,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17191,
											"end": 17197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17187,
											"end": 17201,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17180,
											"end": 17227,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17063,
											"end": 17234,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17063,
											"end": 17234,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17240,
											"end": 17606,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 17240,
											"end": 17606,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17382,
											"end": 17385,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17403,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 17467,
											"end": 17469,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 17462,
											"end": 17465,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17403,
											"end": 17470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 17403,
											"end": 17470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17403,
											"end": 17470,
											"name": "tag",
											"source": 10,
											"value": "640"
										},
										{
											"begin": 17403,
											"end": 17470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17396,
											"end": 17470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17396,
											"end": 17470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 17568,
											"end": 17571,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17572,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 17479,
											"end": 17572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17572,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 17479,
											"end": 17572,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17597,
											"end": 17599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17592,
											"end": 17595,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17588,
											"end": 17600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17581,
											"end": 17600,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17581,
											"end": 17600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17240,
											"end": 17606,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17240,
											"end": 17606,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17240,
											"end": 17606,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17240,
											"end": 17606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 18031,
											"name": "tag",
											"source": 10,
											"value": "210"
										},
										{
											"begin": 17612,
											"end": 18031,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17778,
											"end": 17782,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17816,
											"end": 17818,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17805,
											"end": 17814,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17801,
											"end": 17819,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17819,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17793,
											"end": 17819,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17865,
											"end": 17874,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17859,
											"end": 17863,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17855,
											"end": 17875,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17851,
											"end": 17852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17840,
											"end": 17849,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17836,
											"end": 17853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17829,
											"end": 17876,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17893,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 18019,
											"end": 18023,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17893,
											"end": 18024,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 17893,
											"end": 18024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17893,
											"end": 18024,
											"name": "tag",
											"source": 10,
											"value": "643"
										},
										{
											"begin": 17893,
											"end": 18024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17885,
											"end": 18024,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17885,
											"end": 18024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 18031,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 18031,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 18031,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17612,
											"end": 18031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18037,
											"end": 18199,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 18037,
											"end": 18199,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18177,
											"end": 18191,
											"name": "PUSH",
											"source": 10,
											"value": "5374696C6C206C6F636B65640000000000000000000000000000000000000000"
										},
										{
											"begin": 18173,
											"end": 18174,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18165,
											"end": 18171,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18161,
											"end": 18175,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18154,
											"end": 18192,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18037,
											"end": 18199,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18037,
											"end": 18199,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18571,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 18205,
											"end": 18571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18347,
											"end": 18350,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18368,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 18432,
											"end": 18434,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 18427,
											"end": 18430,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18368,
											"end": 18435,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 18368,
											"end": 18435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18368,
											"end": 18435,
											"name": "tag",
											"source": 10,
											"value": "646"
										},
										{
											"begin": 18368,
											"end": 18435,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18361,
											"end": 18435,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18361,
											"end": 18435,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18444,
											"end": 18537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 18533,
											"end": 18536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18444,
											"end": 18537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 18444,
											"end": 18537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18444,
											"end": 18537,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 18444,
											"end": 18537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18562,
											"end": 18564,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18557,
											"end": 18560,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18553,
											"end": 18565,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18546,
											"end": 18565,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18546,
											"end": 18565,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18571,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18571,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18205,
											"end": 18571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18577,
											"end": 18996,
											"name": "tag",
											"source": 10,
											"value": "213"
										},
										{
											"begin": 18577,
											"end": 18996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18743,
											"end": 18747,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18781,
											"end": 18783,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18770,
											"end": 18779,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18766,
											"end": 18784,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 18784,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18758,
											"end": 18784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18830,
											"end": 18839,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18824,
											"end": 18828,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18820,
											"end": 18840,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18816,
											"end": 18817,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18805,
											"end": 18814,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18801,
											"end": 18818,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18794,
											"end": 18841,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18858,
											"end": 18989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 18984,
											"end": 18988,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18858,
											"end": 18989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 18858,
											"end": 18989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18858,
											"end": 18989,
											"name": "tag",
											"source": 10,
											"value": "649"
										},
										{
											"begin": 18858,
											"end": 18989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18850,
											"end": 18989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18850,
											"end": 18989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18577,
											"end": 18996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18577,
											"end": 18996,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18577,
											"end": 18996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18577,
											"end": 18996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19002,
											"end": 19176,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 19002,
											"end": 19176,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19142,
											"end": 19168,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742072657761726420706F6F6C0000000000000000"
										},
										{
											"begin": 19138,
											"end": 19139,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19130,
											"end": 19136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19126,
											"end": 19140,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19119,
											"end": 19169,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19002,
											"end": 19176,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19002,
											"end": 19176,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19548,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 19182,
											"end": 19548,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19324,
											"end": 19327,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19345,
											"end": 19412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 19409,
											"end": 19411,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 19404,
											"end": 19407,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19345,
											"end": 19412,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 19345,
											"end": 19412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19345,
											"end": 19412,
											"name": "tag",
											"source": 10,
											"value": "652"
										},
										{
											"begin": 19345,
											"end": 19412,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19412,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19338,
											"end": 19412,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19421,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 19510,
											"end": 19513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19421,
											"end": 19514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 19421,
											"end": 19514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19421,
											"end": 19514,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 19421,
											"end": 19514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19539,
											"end": 19541,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19534,
											"end": 19537,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19530,
											"end": 19542,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19523,
											"end": 19542,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19523,
											"end": 19542,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19548,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19548,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19548,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19182,
											"end": 19548,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19554,
											"end": 19973,
											"name": "tag",
											"source": 10,
											"value": "217"
										},
										{
											"begin": 19554,
											"end": 19973,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19720,
											"end": 19724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19758,
											"end": 19760,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19747,
											"end": 19756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19743,
											"end": 19761,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19735,
											"end": 19761,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19735,
											"end": 19761,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19801,
											"end": 19805,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19797,
											"end": 19817,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19793,
											"end": 19794,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19782,
											"end": 19791,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19778,
											"end": 19795,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19771,
											"end": 19818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19835,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 19961,
											"end": 19965,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19835,
											"end": 19966,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 19835,
											"end": 19966,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19835,
											"end": 19966,
											"name": "tag",
											"source": 10,
											"value": "655"
										},
										{
											"begin": 19835,
											"end": 19966,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19827,
											"end": 19966,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19827,
											"end": 19966,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19554,
											"end": 19973,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19554,
											"end": 19973,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19554,
											"end": 19973,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19554,
											"end": 19973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20100,
											"end": 20104,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20138,
											"end": 20140,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 20127,
											"end": 20136,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20123,
											"end": 20141,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20115,
											"end": 20141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20115,
											"end": 20141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20151,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 20219,
											"end": 20220,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20208,
											"end": 20217,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20204,
											"end": 20221,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20195,
											"end": 20201,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20151,
											"end": 20222,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 20151,
											"end": 20222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20151,
											"end": 20222,
											"name": "tag",
											"source": 10,
											"value": "657"
										},
										{
											"begin": 20151,
											"end": 20222,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 20300,
											"end": 20302,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20289,
											"end": 20298,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20285,
											"end": 20303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20276,
											"end": 20282,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 20232,
											"end": 20304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "tag",
											"source": 10,
											"value": "658"
										},
										{
											"begin": 20232,
											"end": 20304,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19979,
											"end": 20311,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20317,
											"end": 20487,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 20317,
											"end": 20487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20457,
											"end": 20479,
											"name": "PUSH",
											"source": 10,
											"value": "496E76616C696420706572696F6420696E646578000000000000000000000000"
										},
										{
											"begin": 20453,
											"end": 20454,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20445,
											"end": 20451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20441,
											"end": 20455,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20434,
											"end": 20480,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20317,
											"end": 20487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20317,
											"end": 20487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20859,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 20493,
											"end": 20859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20635,
											"end": 20638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20656,
											"end": 20723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 20720,
											"end": 20722,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 20715,
											"end": 20718,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20656,
											"end": 20723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 20656,
											"end": 20723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20656,
											"end": 20723,
											"name": "tag",
											"source": 10,
											"value": "661"
										},
										{
											"begin": 20656,
											"end": 20723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20649,
											"end": 20723,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20649,
											"end": 20723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20732,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 20821,
											"end": 20824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20732,
											"end": 20825,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 20732,
											"end": 20825,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20732,
											"end": 20825,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 20732,
											"end": 20825,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20850,
											"end": 20852,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20845,
											"end": 20848,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20841,
											"end": 20853,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20834,
											"end": 20853,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20834,
											"end": 20853,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20859,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 21284,
											"name": "tag",
											"source": 10,
											"value": "239"
										},
										{
											"begin": 20865,
											"end": 21284,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21031,
											"end": 21035,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21069,
											"end": 21071,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21058,
											"end": 21067,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21054,
											"end": 21072,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21046,
											"end": 21072,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21046,
											"end": 21072,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21118,
											"end": 21127,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21112,
											"end": 21116,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21108,
											"end": 21128,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21104,
											"end": 21105,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21093,
											"end": 21102,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21089,
											"end": 21106,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21082,
											"end": 21129,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21146,
											"end": 21277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 21272,
											"end": 21276,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21146,
											"end": 21277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 21146,
											"end": 21277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21146,
											"end": 21277,
											"name": "tag",
											"source": 10,
											"value": "664"
										},
										{
											"begin": 21146,
											"end": 21277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21277,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21277,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 21284,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 21284,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 21284,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20865,
											"end": 21284,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21290,
											"end": 21451,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 21290,
											"end": 21451,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21430,
											"end": 21443,
											"name": "PUSH",
											"source": 10,
											"value": "5A65726F20616D6F756E74000000000000000000000000000000000000000000"
										},
										{
											"begin": 21426,
											"end": 21427,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21418,
											"end": 21424,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21414,
											"end": 21428,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21407,
											"end": 21444,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21290,
											"end": 21451,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21290,
											"end": 21451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21823,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 21457,
											"end": 21823,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21599,
											"end": 21602,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21620,
											"end": 21687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 21684,
											"end": 21686,
											"name": "PUSH",
											"source": 10,
											"value": "B"
										},
										{
											"begin": 21679,
											"end": 21682,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21620,
											"end": 21687,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 21620,
											"end": 21687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21620,
											"end": 21687,
											"name": "tag",
											"source": 10,
											"value": "667"
										},
										{
											"begin": 21620,
											"end": 21687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21613,
											"end": 21687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21613,
											"end": 21687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21696,
											"end": 21789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 21785,
											"end": 21788,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21696,
											"end": 21789,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 21696,
											"end": 21789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21696,
											"end": 21789,
											"name": "tag",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 21696,
											"end": 21789,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21814,
											"end": 21816,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21809,
											"end": 21812,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21805,
											"end": 21817,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21798,
											"end": 21817,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21798,
											"end": 21817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21823,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21823,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21823,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21457,
											"end": 21823,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21829,
											"end": 22248,
											"name": "tag",
											"source": 10,
											"value": "242"
										},
										{
											"begin": 21829,
											"end": 22248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21995,
											"end": 21999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22033,
											"end": 22035,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22022,
											"end": 22031,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22018,
											"end": 22036,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22010,
											"end": 22036,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22010,
											"end": 22036,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22082,
											"end": 22091,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22076,
											"end": 22080,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22072,
											"end": 22092,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22068,
											"end": 22069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22057,
											"end": 22066,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22053,
											"end": 22070,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22046,
											"end": 22093,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22110,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 22236,
											"end": 22240,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22110,
											"end": 22241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 22110,
											"end": 22241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22110,
											"end": 22241,
											"name": "tag",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 22110,
											"end": 22241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22102,
											"end": 22241,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22102,
											"end": 22241,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21829,
											"end": 22248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21829,
											"end": 22248,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21829,
											"end": 22248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21829,
											"end": 22248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22397,
											"end": 22401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22435,
											"end": 22437,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 22424,
											"end": 22433,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22420,
											"end": 22438,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22412,
											"end": 22438,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22412,
											"end": 22438,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22448,
											"end": 22519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 22516,
											"end": 22517,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22505,
											"end": 22514,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22501,
											"end": 22518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22492,
											"end": 22498,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 22448,
											"end": 22519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 22448,
											"end": 22519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22448,
											"end": 22519,
											"name": "tag",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 22448,
											"end": 22519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22529,
											"end": 22601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 22597,
											"end": 22599,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22586,
											"end": 22595,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22582,
											"end": 22600,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22573,
											"end": 22579,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22529,
											"end": 22601,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 22529,
											"end": 22601,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22529,
											"end": 22601,
											"name": "tag",
											"source": 10,
											"value": "673"
										},
										{
											"begin": 22529,
											"end": 22601,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22611,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 22673,
											"end": 22675,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22662,
											"end": 22671,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22658,
											"end": 22676,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22649,
											"end": 22655,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22611,
											"end": 22677,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 22611,
											"end": 22677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22611,
											"end": 22677,
											"name": "tag",
											"source": 10,
											"value": "674"
										},
										{
											"begin": 22611,
											"end": 22677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22254,
											"end": 22684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22690,
											"end": 22852,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 22690,
											"end": 22852,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22830,
											"end": 22844,
											"name": "PUSH",
											"source": 10,
											"value": "41505920746F6F20686967680000000000000000000000000000000000000000"
										},
										{
											"begin": 22826,
											"end": 22827,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22818,
											"end": 22824,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22814,
											"end": 22828,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22807,
											"end": 22845,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22690,
											"end": 22852,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22690,
											"end": 22852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 23224,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 22858,
											"end": 23224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23003,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23021,
											"end": 23088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 23085,
											"end": 23087,
											"name": "PUSH",
											"source": 10,
											"value": "C"
										},
										{
											"begin": 23080,
											"end": 23083,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23088,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 23021,
											"end": 23088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23021,
											"end": 23088,
											"name": "tag",
											"source": 10,
											"value": "677"
										},
										{
											"begin": 23021,
											"end": 23088,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23014,
											"end": 23088,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23014,
											"end": 23088,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23097,
											"end": 23190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 23186,
											"end": 23189,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23097,
											"end": 23190,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 23097,
											"end": 23190,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23097,
											"end": 23190,
											"name": "tag",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 23097,
											"end": 23190,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23215,
											"end": 23217,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23210,
											"end": 23213,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23206,
											"end": 23218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23199,
											"end": 23218,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23199,
											"end": 23218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 23224,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 23224,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 23224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22858,
											"end": 23224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23230,
											"end": 23649,
											"name": "tag",
											"source": 10,
											"value": "264"
										},
										{
											"begin": 23230,
											"end": 23649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23396,
											"end": 23400,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23434,
											"end": 23436,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23423,
											"end": 23432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23419,
											"end": 23437,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23411,
											"end": 23437,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23411,
											"end": 23437,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23483,
											"end": 23492,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23477,
											"end": 23481,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23473,
											"end": 23493,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 23469,
											"end": 23470,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23458,
											"end": 23467,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23454,
											"end": 23471,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23447,
											"end": 23494,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23511,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 23637,
											"end": 23641,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23511,
											"end": 23642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 23511,
											"end": 23642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23511,
											"end": 23642,
											"name": "tag",
											"source": 10,
											"value": "680"
										},
										{
											"begin": 23511,
											"end": 23642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23503,
											"end": 23642,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23503,
											"end": 23642,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23230,
											"end": 23649,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 23230,
											"end": 23649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23230,
											"end": 23649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23230,
											"end": 23649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "tag",
											"source": 10,
											"value": "290"
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23770,
											"end": 23774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23808,
											"end": 23810,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23797,
											"end": 23806,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23793,
											"end": 23811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23785,
											"end": 23811,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23821,
											"end": 23892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 23889,
											"end": 23890,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23878,
											"end": 23887,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23874,
											"end": 23891,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23865,
											"end": 23871,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23821,
											"end": 23892,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 23821,
											"end": 23892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23821,
											"end": 23892,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 23821,
											"end": 23892,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23902,
											"end": 23968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 23964,
											"end": 23966,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23953,
											"end": 23962,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23949,
											"end": 23967,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23940,
											"end": 23946,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23902,
											"end": 23968,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 23902,
											"end": 23968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23902,
											"end": 23968,
											"name": "tag",
											"source": 10,
											"value": "683"
										},
										{
											"begin": 23902,
											"end": 23968,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23655,
											"end": 23975,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23981,
											"end": 24155,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 23981,
											"end": 24155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24121,
											"end": 24147,
											"name": "PUSH",
											"source": 10,
											"value": "5A65726F2061646472657373206E6F7420616C6C6F7765640000000000000000"
										},
										{
											"begin": 24117,
											"end": 24118,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24109,
											"end": 24115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24105,
											"end": 24119,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24098,
											"end": 24148,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23981,
											"end": 24155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23981,
											"end": 24155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24161,
											"end": 24527,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 24161,
											"end": 24527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24303,
											"end": 24306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24324,
											"end": 24391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 24388,
											"end": 24390,
											"name": "PUSH",
											"source": 10,
											"value": "18"
										},
										{
											"begin": 24383,
											"end": 24386,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24324,
											"end": 24391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 24324,
											"end": 24391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24324,
											"end": 24391,
											"name": "tag",
											"source": 10,
											"value": "686"
										},
										{
											"begin": 24324,
											"end": 24391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24317,
											"end": 24391,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24317,
											"end": 24391,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24400,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 24489,
											"end": 24492,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24400,
											"end": 24493,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 24400,
											"end": 24493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24400,
											"end": 24493,
											"name": "tag",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 24400,
											"end": 24493,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24518,
											"end": 24520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24513,
											"end": 24516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24509,
											"end": 24521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24502,
											"end": 24521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24161,
											"end": 24527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24161,
											"end": 24527,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24161,
											"end": 24527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24161,
											"end": 24527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24533,
											"end": 24952,
											"name": "tag",
											"source": 10,
											"value": "340"
										},
										{
											"begin": 24533,
											"end": 24952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24699,
											"end": 24703,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24737,
											"end": 24739,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24726,
											"end": 24735,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24722,
											"end": 24740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24714,
											"end": 24740,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24714,
											"end": 24740,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24786,
											"end": 24795,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24780,
											"end": 24784,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24776,
											"end": 24796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24772,
											"end": 24773,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24761,
											"end": 24770,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 24757,
											"end": 24774,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24750,
											"end": 24797,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24814,
											"end": 24945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 24940,
											"end": 24944,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24814,
											"end": 24945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 24814,
											"end": 24945,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24814,
											"end": 24945,
											"name": "tag",
											"source": 10,
											"value": "689"
										},
										{
											"begin": 24814,
											"end": 24945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24806,
											"end": 24945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24806,
											"end": 24945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24533,
											"end": 24952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24533,
											"end": 24952,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24533,
											"end": 24952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24533,
											"end": 24952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 25130,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 24958,
											"end": 25130,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25098,
											"end": 25122,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F207265776172647320746F20776974686472617700000000000000000000"
										},
										{
											"begin": 25094,
											"end": 25095,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25086,
											"end": 25092,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25082,
											"end": 25096,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25075,
											"end": 25123,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 25130,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24958,
											"end": 25130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25136,
											"end": 25502,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 25136,
											"end": 25502,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25278,
											"end": 25281,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25299,
											"end": 25366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 25363,
											"end": 25365,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 25358,
											"end": 25361,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25366,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 25299,
											"end": 25366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25299,
											"end": 25366,
											"name": "tag",
											"source": 10,
											"value": "692"
										},
										{
											"begin": 25299,
											"end": 25366,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25292,
											"end": 25366,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25292,
											"end": 25366,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25375,
											"end": 25468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 25464,
											"end": 25467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25375,
											"end": 25468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 25375,
											"end": 25468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25375,
											"end": 25468,
											"name": "tag",
											"source": 10,
											"value": "693"
										},
										{
											"begin": 25375,
											"end": 25468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25493,
											"end": 25495,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25488,
											"end": 25491,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25484,
											"end": 25496,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25477,
											"end": 25496,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25477,
											"end": 25496,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25136,
											"end": 25502,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25136,
											"end": 25502,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25136,
											"end": 25502,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25136,
											"end": 25502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25508,
											"end": 25927,
											"name": "tag",
											"source": 10,
											"value": "349"
										},
										{
											"begin": 25508,
											"end": 25927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25674,
											"end": 25678,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25712,
											"end": 25714,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25701,
											"end": 25710,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25697,
											"end": 25715,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25689,
											"end": 25715,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25689,
											"end": 25715,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25761,
											"end": 25770,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25755,
											"end": 25759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25751,
											"end": 25771,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 25747,
											"end": 25748,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25736,
											"end": 25745,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 25732,
											"end": 25749,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25725,
											"end": 25772,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25789,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 25915,
											"end": 25919,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25789,
											"end": 25920,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 25789,
											"end": 25920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25789,
											"end": 25920,
											"name": "tag",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 25789,
											"end": 25920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25781,
											"end": 25920,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25781,
											"end": 25920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25508,
											"end": 25927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25508,
											"end": 25927,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25508,
											"end": 25927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25508,
											"end": 25927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25933,
											"end": 26106,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 25933,
											"end": 26106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26073,
											"end": 26098,
											"name": "PUSH",
											"source": 10,
											"value": "556E737570706F72746564206C6F636B20706572696F64000000000000000000"
										},
										{
											"begin": 26069,
											"end": 26070,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26061,
											"end": 26067,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26057,
											"end": 26071,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26050,
											"end": 26099,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 25933,
											"end": 26106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25933,
											"end": 26106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26478,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 26112,
											"end": 26478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26254,
											"end": 26257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26275,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 26339,
											"end": 26341,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 26334,
											"end": 26337,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26275,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 26275,
											"end": 26342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26275,
											"end": 26342,
											"name": "tag",
											"source": 10,
											"value": "698"
										},
										{
											"begin": 26275,
											"end": 26342,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26268,
											"end": 26342,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26268,
											"end": 26342,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26351,
											"end": 26444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 26440,
											"end": 26443,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26351,
											"end": 26444,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 26351,
											"end": 26444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26351,
											"end": 26444,
											"name": "tag",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 26351,
											"end": 26444,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26469,
											"end": 26471,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26464,
											"end": 26467,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26460,
											"end": 26472,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26453,
											"end": 26472,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26453,
											"end": 26472,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26478,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26478,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26478,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26112,
											"end": 26478,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26484,
											"end": 26903,
											"name": "tag",
											"source": 10,
											"value": "382"
										},
										{
											"begin": 26484,
											"end": 26903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26650,
											"end": 26654,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26688,
											"end": 26690,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 26677,
											"end": 26686,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 26673,
											"end": 26691,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26665,
											"end": 26691,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26665,
											"end": 26691,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26737,
											"end": 26746,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26731,
											"end": 26735,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26727,
											"end": 26747,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 26723,
											"end": 26724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 26712,
											"end": 26721,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 26708,
											"end": 26725,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 26701,
											"end": 26748,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26765,
											"end": 26896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 26891,
											"end": 26895,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 26765,
											"end": 26896,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 26765,
											"end": 26896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26765,
											"end": 26896,
											"name": "tag",
											"source": 10,
											"value": "701"
										},
										{
											"begin": 26765,
											"end": 26896,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 26757,
											"end": 26896,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26757,
											"end": 26896,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26484,
											"end": 26903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 26484,
											"end": 26903,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 26484,
											"end": 26903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26484,
											"end": 26903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 26909,
											"end": 27090,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 26909,
											"end": 27090,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27049,
											"end": 27082,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 27045,
											"end": 27046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27037,
											"end": 27043,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27033,
											"end": 27047,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27026,
											"end": 27083,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 26909,
											"end": 27090,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 26909,
											"end": 27090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27096,
											"end": 27462,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 27096,
											"end": 27462,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27238,
											"end": 27241,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27259,
											"end": 27326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 27323,
											"end": 27325,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 27318,
											"end": 27321,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27326,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "442"
										},
										{
											"begin": 27259,
											"end": 27326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27259,
											"end": 27326,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 27259,
											"end": 27326,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27252,
											"end": 27326,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27252,
											"end": 27326,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27335,
											"end": 27428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 27424,
											"end": 27427,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27335,
											"end": 27428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 27335,
											"end": 27428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27335,
											"end": 27428,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 27335,
											"end": 27428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27453,
											"end": 27455,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27448,
											"end": 27451,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27444,
											"end": 27456,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27437,
											"end": 27456,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27437,
											"end": 27456,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27096,
											"end": 27462,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27096,
											"end": 27462,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27096,
											"end": 27462,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27096,
											"end": 27462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27468,
											"end": 27887,
											"name": "tag",
											"source": 10,
											"value": "386"
										},
										{
											"begin": 27468,
											"end": 27887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27634,
											"end": 27638,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27672,
											"end": 27674,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 27661,
											"end": 27670,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 27657,
											"end": 27675,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27649,
											"end": 27675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27649,
											"end": 27675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27721,
											"end": 27730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27715,
											"end": 27719,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27711,
											"end": 27731,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 27707,
											"end": 27708,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 27696,
											"end": 27705,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 27692,
											"end": 27709,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 27685,
											"end": 27732,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 27749,
											"end": 27880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 27875,
											"end": 27879,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 27749,
											"end": 27880,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 27749,
											"end": 27880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27749,
											"end": 27880,
											"name": "tag",
											"source": 10,
											"value": "707"
										},
										{
											"begin": 27749,
											"end": 27880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27741,
											"end": 27880,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27741,
											"end": 27880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27468,
											"end": 27887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 27468,
											"end": 27887,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 27468,
											"end": 27887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27468,
											"end": 27887,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28042,
											"end": 28046,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28080,
											"end": 28082,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 28069,
											"end": 28078,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28065,
											"end": 28083,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28057,
											"end": 28083,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28057,
											"end": 28083,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28093,
											"end": 28164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 28161,
											"end": 28162,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28150,
											"end": 28159,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28146,
											"end": 28163,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28137,
											"end": 28143,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 28093,
											"end": 28164,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 28093,
											"end": 28164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28093,
											"end": 28164,
											"name": "tag",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 28093,
											"end": 28164,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28174,
											"end": 28246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 28242,
											"end": 28244,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28231,
											"end": 28240,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28227,
											"end": 28245,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28218,
											"end": 28224,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28174,
											"end": 28246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 28174,
											"end": 28246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28174,
											"end": 28246,
											"name": "tag",
											"source": 10,
											"value": "710"
										},
										{
											"begin": 28174,
											"end": 28246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28256,
											"end": 28328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 28324,
											"end": 28326,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28313,
											"end": 28322,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28309,
											"end": 28327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28300,
											"end": 28306,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28256,
											"end": 28328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 28256,
											"end": 28328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28256,
											"end": 28328,
											"name": "tag",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 28256,
											"end": 28328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 27893,
											"end": 28335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28462,
											"end": 28466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28500,
											"end": 28502,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 28489,
											"end": 28498,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 28485,
											"end": 28503,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28477,
											"end": 28503,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 28477,
											"end": 28503,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28513,
											"end": 28584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 28581,
											"end": 28582,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 28570,
											"end": 28579,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28566,
											"end": 28583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28557,
											"end": 28563,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 28513,
											"end": 28584,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 28513,
											"end": 28584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28513,
											"end": 28584,
											"name": "tag",
											"source": 10,
											"value": "713"
										},
										{
											"begin": 28513,
											"end": 28584,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28594,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 28662,
											"end": 28664,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 28651,
											"end": 28660,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 28647,
											"end": 28665,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 28638,
											"end": 28644,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 28594,
											"end": 28666,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 28594,
											"end": 28666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 28594,
											"end": 28666,
											"name": "tag",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 28594,
											"end": 28666,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 28341,
											"end": 28673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC1363.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC20.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"Staking.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"AUTO_COMPOUND_FEE()": "38bceaac",
							"MAX_APY()": "3d92f4e2",
							"SECONDS_PER_YEAR()": "e6a69ab8",
							"addRewardPoolFunds(uint256)": "bbd36b61",
							"apyRates(uint256)": "6b494def",
							"calculateReward(address,uint256)": "1852e8d9",
							"claimReward(uint256)": "ae169a50",
							"compoundReward(uint256)": "4060e257",
							"estimateMintGas()": "794a62d3",
							"feeReceiver()": "b3f00674",
							"getActiveStakes(address)": "1747e0b0",
							"getFeeReceiver()": "e8a35392",
							"getLockPeriod(uint256)": "f55ad3ec",
							"getRewardPoolBalance()": "d854fb75",
							"lockPeriods(uint256)": "4c8f2a78",
							"owner()": "8da5cb5b",
							"paused()": "5c975abb",
							"pendingRewardWithdrawals(address)": "0630e463",
							"renounceOwnership()": "715018a6",
							"rewardPoolBalance()": "7a5c08ae",
							"rewardToken()": "f7c618c1",
							"setAPY(uint256,uint256)": "5acd2e4c",
							"stake(uint256,uint256,bool)": "561b2463",
							"stakes(address,uint256)": "584b62a1",
							"stakingToken()": "72f702f3",
							"toggleAutoStake(uint256)": "95a29060",
							"togglePause()": "c4ae3168",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"updateFeeReceiver(address)": "c69bebe4",
							"updateRewardToken(address)": "f8cf31cb",
							"withdrawRewards()": "c7b8981c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakingTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"APYUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compoundedAmount\",\"type\":\"uint256\"}],\"name\":\"AutoCompounded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"status\",\"type\":\"bool\"}],\"name\":\"AutoStakeToggled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"ContractPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newFeeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardPoolFundsAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newRewardToken\",\"type\":\"address\"}],\"name\":\"RewardTokenUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawnRewards\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"AUTO_COMPOUND_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_APY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SECONDS_PER_YEAR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"addRewardPoolFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"apyRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"calculateReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"compoundReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"estimateMintGas\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getActiveStakes\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoStaking\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"compoundedAmount\",\"type\":\"uint256\"}],\"internalType\":\"struct AutoStaking.StakeInfo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFeeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getLockPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lockPeriods\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewardWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPoolBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newAPY\",\"type\":\"uint256\"}],\"name\":\"setAPY\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"periodIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"autoStake\",\"type\":\"bool\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakeTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"claimed\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"autoStaking\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"compoundedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"stakeIndex\",\"type\":\"uint256\"}],\"name\":\"toggleAutoStake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"togglePause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newFeeReceiver\",\"type\":\"address\"}],\"name\":\"updateFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newRewardToken\",\"type\":\"address\"}],\"name\":\"updateRewardToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract for staking tokens with fixed lock periods and auto-compounding rewards.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC-20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"AutoStaking\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addRewardPoolFunds(uint256)\":{\"notice\":\"Add funds to reward pool\"},\"calculateReward(address,uint256)\":{\"notice\":\"Calculate accrued reward for a stake\"},\"claimReward(uint256)\":{\"notice\":\"Claim reward for a specific stake\"},\"compoundReward(uint256)\":{\"notice\":\"Compound reward into new stake\"},\"estimateMintGas()\":{\"notice\":\"Estimate mint gas\"},\"getActiveStakes(address)\":{\"notice\":\"Get active stakes for an account\"},\"getFeeReceiver()\":{\"notice\":\"Get fee receiver address\"},\"getLockPeriod(uint256)\":{\"notice\":\"Get lock period in seconds\"},\"getRewardPoolBalance()\":{\"notice\":\"Get current reward pool balance\"},\"setAPY(uint256,uint256)\":{\"notice\":\"Update APY rate for a period\"},\"stake(uint256,uint256,bool)\":{\"notice\":\"Stake tokens for a fixed period\"},\"toggleAutoStake(uint256)\":{\"notice\":\"Toggle auto-staking for a stake\"},\"togglePause()\":{\"notice\":\"Toggle contract pause\"},\"updateFeeReceiver(address)\":{\"notice\":\"Update fee receiver address\"},\"updateRewardToken(address)\":{\"notice\":\"Update reward token address\"},\"withdrawRewards()\":{\"notice\":\"Withdraw pending rewards\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Staking.sol\":\"AutoStaking\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC1363.sol\":{\"keccak256\":\"0x9b6b3e7803bc5f2f8cd7ad57db8ac1def61a9930a5a3107df4882e028a9605d7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da62d6be1f5c6edf577f0cb45666a8aa9c2086a4bac87d95d65f02e2f4c36a4b\",\"dweb:/ipfs/QmNkpvBpoCMvX8JwAFNSc5XxJ2q5BXJpL5L1txb4QkqVFF\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0xce41876e78d1badc0512229b4d14e4daf83bc1003d7f83978d18e0e56f965b9c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a2608291cb038b388d80b79a06b6118a42f7894ff67b7da10ec0dbbf5b2973ba\",\"dweb:/ipfs/QmWohqcBLbcxmA4eGPhZDXe5RYMMEEpFq22nfkaUMvTfw1\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x982c5cb790ab941d1e04f807120a71709d4c313ba0bfc16006447ffbd27fbbd5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8150ceb4ac947e8a442b2a9c017e01e880b2be2dd958f1fa9bc405f4c5a86508\",\"dweb:/ipfs/QmbcBmFX66AY6Kbhnd5gx7zpkgqnUafo43XnmayAM7zVdB\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x79796192ec90263f21b464d5bc90b777a525971d3de8232be80d9c4f9fb353b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f6fda447a62815e8064f47eff0dd1cf58d9207ad69b5d32280f8d7ed1d1e4621\",\"dweb:/ipfs/QmfDRc7pxfaXB2Dh9np5Uf29Na3pQ7tafRS684wd3GLjVL\"]},\"Staking.sol\":{\"keccak256\":\"0x407c5df4eee6964518e875b03b6f98ec6a892af1ccc819745b2aa6afdec77fc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d6c3e0cba8c3037599357b83722f602a9a07133f9319e5d62fc73e32b1e6f02\",\"dweb:/ipfs/QmV8ZrXDgMmoKLUjz6hc5V65QdALa3M7BHyNhibZr8bjue\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "Staking.sol:AutoStaking",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 248,
								"contract": "Staking.sol:AutoStaking",
								"label": "_status",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 907,
								"contract": "Staking.sol:AutoStaking",
								"label": "rewardToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)380"
							},
							{
								"astId": 924,
								"contract": "Staking.sol:AutoStaking",
								"label": "lockPeriods",
								"offset": 0,
								"slot": "3",
								"type": "t_array(t_uint256)3_storage"
							},
							{
								"astId": 932,
								"contract": "Staking.sol:AutoStaking",
								"label": "apyRates",
								"offset": 0,
								"slot": "6",
								"type": "t_array(t_uint256)3_storage"
							},
							{
								"astId": 951,
								"contract": "Staking.sol:AutoStaking",
								"label": "stakes",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_array(t_struct(StakeInfo)945_storage)dyn_storage)"
							},
							{
								"astId": 955,
								"contract": "Staking.sol:AutoStaking",
								"label": "pendingRewardWithdrawals",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 957,
								"contract": "Staking.sol:AutoStaking",
								"label": "totalStaked",
								"offset": 0,
								"slot": "11",
								"type": "t_uint256"
							},
							{
								"astId": 959,
								"contract": "Staking.sol:AutoStaking",
								"label": "rewardPoolBalance",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 961,
								"contract": "Staking.sol:AutoStaking",
								"label": "feeReceiver",
								"offset": 0,
								"slot": "13",
								"type": "t_address"
							},
							{
								"astId": 1050,
								"contract": "Staking.sol:AutoStaking",
								"label": "paused",
								"offset": 20,
								"slot": "13",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(StakeInfo)945_storage)dyn_storage": {
								"base": "t_struct(StakeInfo)945_storage",
								"encoding": "dynamic_array",
								"label": "struct AutoStaking.StakeInfo[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)3_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[3]",
								"numberOfBytes": "96"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)380": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(StakeInfo)945_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct AutoStaking.StakeInfo[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(StakeInfo)945_storage)dyn_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(StakeInfo)945_storage": {
								"encoding": "inplace",
								"label": "struct AutoStaking.StakeInfo",
								"members": [
									{
										"astId": 934,
										"contract": "Staking.sol:AutoStaking",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 936,
										"contract": "Staking.sol:AutoStaking",
										"label": "stakeTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 938,
										"contract": "Staking.sol:AutoStaking",
										"label": "unlockTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 940,
										"contract": "Staking.sol:AutoStaking",
										"label": "claimed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 942,
										"contract": "Staking.sol:AutoStaking",
										"label": "autoStaking",
										"offset": 1,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 944,
										"contract": "Staking.sol:AutoStaking",
										"label": "compoundedAmount",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addRewardPoolFunds(uint256)": {
								"notice": "Add funds to reward pool"
							},
							"calculateReward(address,uint256)": {
								"notice": "Calculate accrued reward for a stake"
							},
							"claimReward(uint256)": {
								"notice": "Claim reward for a specific stake"
							},
							"compoundReward(uint256)": {
								"notice": "Compound reward into new stake"
							},
							"estimateMintGas()": {
								"notice": "Estimate mint gas"
							},
							"getActiveStakes(address)": {
								"notice": "Get active stakes for an account"
							},
							"getFeeReceiver()": {
								"notice": "Get fee receiver address"
							},
							"getLockPeriod(uint256)": {
								"notice": "Get lock period in seconds"
							},
							"getRewardPoolBalance()": {
								"notice": "Get current reward pool balance"
							},
							"setAPY(uint256,uint256)": {
								"notice": "Update APY rate for a period"
							},
							"stake(uint256,uint256,bool)": {
								"notice": "Stake tokens for a fixed period"
							},
							"toggleAutoStake(uint256)": {
								"notice": "Toggle auto-staking for a stake"
							},
							"togglePause()": {
								"notice": "Toggle contract pause"
							},
							"updateFeeReceiver(address)": {
								"notice": "Update fee receiver address"
							},
							"updateRewardToken(address)": {
								"notice": "Update reward token address"
							},
							"withdrawRewards()": {
								"notice": "Withdraw pending rewards"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							874
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 875,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 874,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								874
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 856,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 856,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC1363.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC165": [
							886
						],
						"IERC20": [
							380
						]
					},
					"id": 230,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 238,
							"src": "133:36:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "141:6:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 153,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 230,
							"sourceUnit": 234,
							"src": "170:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 152,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "178:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 155,
										"name": "IERC20",
										"nameLocations": [
											"590:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 380,
										"src": "590:6:1"
									},
									"id": 156,
									"nodeType": "InheritanceSpecifier",
									"src": "590:6:1"
								},
								{
									"baseName": {
										"id": 157,
										"name": "IERC165",
										"nameLocations": [
											"598:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 886,
										"src": "598:7:1"
									},
									"id": 158,
									"nodeType": "InheritanceSpecifier",
									"src": "598:7:1"
								}
							],
							"canonicalName": "IERC1363",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 154,
								"nodeType": "StructuredDocumentation",
								"src": "210:357:1",
								"text": " @title IERC1363\n @dev Interface of the ERC-1363 standard as defined in the https://eips.ethereum.org/EIPS/eip-1363[ERC-1363].\n Defines an extension interface for ERC-20 tokens that supports executing code on a recipient contract\n after `transfer` or `transferFrom`, or code on a spender contract after `approve`, in a single transaction."
							},
							"fullyImplemented": false,
							"id": 229,
							"linearizedBaseContracts": [
								229,
								886,
								380
							],
							"name": "IERC1363",
							"nameLocation": "578:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1148:370:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "1296ee62",
									"id": 168,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "1532:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1556:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1548:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 160,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1568:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1560:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:27:1"
									},
									"returnParameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "1593:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1593:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1592:6:1"
									},
									"scope": 229,
									"src": "1523:76:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "1605:453:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "4000aea0",
									"id": 180,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCall",
									"nameLocation": "2072:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2096:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2088:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2088:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2108:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2100:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2100:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2130:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2115:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2115:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2087:48:1"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 180,
												"src": "2154:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 177,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2154:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2153:6:1"
									},
									"scope": 229,
									"src": "2063:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 181,
										"nodeType": "StructuredDocumentation",
										"src": "2166:453:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "d8fbe994",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "2633:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2661:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2653:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2653:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2675:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2667:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2667:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2687:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2679:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2652:41:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "2712:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2712:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:6:1"
									},
									"scope": 229,
									"src": "2624:94:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "2724:536:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism\n and then calls {IERC1363Receiver-onTransferReceived} on `to`.\n @param from The address which you want to send tokens from.\n @param to The address which you want to transfer to.\n @param value The amount of tokens to be transferred.\n @param data Additional data with no specified format, sent in call to `to`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "c1d34b89",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCall",
									"nameLocation": "3274:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3302:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3294:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3316:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3308:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3308:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3328:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3320:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3350:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3335:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 200,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3335:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3293:62:1"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3374:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 203,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3374:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3373:6:1"
									},
									"scope": 229,
									"src": "3265:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3386:390:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "3177029f",
									"id": 216,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "3790:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3813:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3805:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3805:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3830:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3822:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3804:32:1"
									},
									"returnParameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 216,
												"src": "3855:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 213,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3855:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3854:6:1"
									},
									"scope": 229,
									"src": "3781:80:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 217,
										"nodeType": "StructuredDocumentation",
										"src": "3867:478:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens and then calls {IERC1363Spender-onApprovalReceived} on `spender`.\n @param spender The address which will spend the funds.\n @param value The amount of tokens to be spent.\n @param data Additional data with no specified format, sent in call to `spender`.\n @return A boolean value indicating whether the operation succeeded unless throwing."
									},
									"functionSelector": "cae9ca51",
									"id": 228,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCall",
									"nameLocation": "4359:14:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4382:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4374:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 218,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4374:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 221,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4399:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4391:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4391:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4421:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4406:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4373:53:1"
									},
									"returnParameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 228,
												"src": "4445:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 225,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4445:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4444:6:1"
									},
									"scope": 229,
									"src": "4350:101:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 230,
							"src": "568:3885:1",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "107:4347:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 231,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 233,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 887,
							"src": "132:59:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 232,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 886,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 238,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../token/ERC20/IERC20.sol",
							"id": 237,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 238,
							"sourceUnit": 381,
							"src": "131:49:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 236,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "139:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "105:76:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							302
						]
					},
					"id": 303,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:4",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 302,
							"linearizedBaseContracts": [
								302
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 243,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1676:41:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 241,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 242,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 246,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1723:37:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 244,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 245,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 248,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 302,
									"src": "1767:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 247,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 255,
										"nodeType": "Block",
										"src": "1811:39:4",
										"statements": [
											{
												"expression": {
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 251,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "1821:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 252,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "1831:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 254,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:4"
											}
										]
									},
									"id": 256,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:4"
									},
									"returnParameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:4"
									},
									"scope": 302,
									"src": "1797:53:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 266,
										"nodeType": "Block",
										"src": "2251:79:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 259,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "2261:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 261,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:4"
											},
											{
												"id": 262,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:4"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 263,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "2303:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:4"
											}
										]
									},
									"documentation": {
										"id": 257,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:4",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 267,
									"name": "nonReentrant",
									"nameLocation": "2236:12:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:4"
									},
									"src": "2227:103:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2375:248:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 248,
																"src": "2468:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 272,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 246,
																"src": "2479:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:4"
											},
											{
												"expression": {
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 277,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2598:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 278,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "2608:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:4"
											}
										]
									},
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:4"
									},
									"returnParameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:4"
									},
									"scope": 302,
									"src": "2336:287:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 289,
										"nodeType": "Block",
										"src": "2667:171:4",
										"statements": [
											{
												"expression": {
													"id": 287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 285,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "2809:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 286,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 243,
														"src": "2819:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 288,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:4"
											}
										]
									},
									"id": 290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:4"
									},
									"returnParameters": {
										"id": 284,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:4"
									},
									"scope": 302,
									"src": "2629:209:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "3081:43:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 296,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 248,
														"src": "3098:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 297,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 246,
														"src": "3109:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 295,
												"id": 299,
												"nodeType": "Return",
												"src": "3091:26:4"
											}
										]
									},
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:4",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 301,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:4"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "3075:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 293,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:4"
									},
									"scope": 302,
									"src": "3017:107:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 303,
							"src": "888:2238:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							380
						]
					},
					"id": 381,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 304,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 305,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 380,
							"linearizedBaseContracts": [
								380
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 314,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 307,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 323,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 316,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 323,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 324,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 329,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 380,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 337,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 380,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 347,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 344,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 380,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 380,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 380,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 380,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 381,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								314,
								323
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"SafeERC20": [
							844
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 382,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 384,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 381,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 383,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 380,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC1363.sol",
							"file": "../../../interfaces/IERC1363.sol",
							"id": 386,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 230,
							"src": "179:58:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 385,
										"name": "IERC1363",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 229,
										"src": "187:8:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "239:458:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC-20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844
							],
							"name": "SafeERC20",
							"nameLocation": "706:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "722:65:6",
										"text": " @dev An operation with an ERC-20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 392,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "798:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "831:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 392,
												"src": "823:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "823:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "822:15:6"
									},
									"src": "792:46:6"
								},
								{
									"documentation": {
										"id": 393,
										"nodeType": "StructuredDocumentation",
										"src": "844:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 401,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "926:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "967:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "959:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "959:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "984:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "976:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1010:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1002:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 398,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "958:70:6"
									},
									"src": "920:109:6"
								},
								{
									"body": {
										"id": 424,
										"nodeType": "Block",
										"src": "1291:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 413,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 405,
															"src": "1321:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 416,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 405,
																		"src": "1343:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1349:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "1343:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 418,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 407,
																			"src": "1360:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 419,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 409,
																			"src": "1364:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 420,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1359:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 414,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1328:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1332:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1328:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 421,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1328:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 412,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1301:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1301:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 423,
												"nodeType": "ExpressionStatement",
												"src": "1301:71:6"
											}
										]
									},
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "1035:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 425,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1228:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1248:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1241:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 404,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 403,
														"name": "IERC20",
														"nameLocations": [
															"1241:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1241:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1241:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1263:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1255:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1255:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1275:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 425,
												"src": "1267:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1267:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1240:41:6"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1291:0:6"
									},
									"scope": 844,
									"src": "1219:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "1708:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 439,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "1738:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 442,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 429,
																		"src": "1760:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 443,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1766:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "1760:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 444,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 431,
																			"src": "1781:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 445,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "1787:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 446,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 435,
																			"src": "1791:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 447,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1780:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 440,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1745:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1749:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1745:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 448,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1745:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 438,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 802,
														"src": "1718:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1718:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "1718:81:6"
											}
										]
									},
									"documentation": {
										"id": 426,
										"nodeType": "StructuredDocumentation",
										"src": "1385:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1627:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1651:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1644:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 427,
														"name": "IERC20",
														"nameLocations": [
															"1644:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1644:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1644:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1666:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1658:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1658:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1680:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1672:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1672:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1692:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "1684:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1643:55:6"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:0:6"
									},
									"scope": 844,
									"src": "1618:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "2033:99:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 466,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 456,
															"src": "2074:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 469,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 456,
																		"src": "2096:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2102:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 347,
																	"src": "2096:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 471,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 458,
																			"src": "2113:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 460,
																			"src": "2117:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2112:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 467,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2081:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 468,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2085:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2081:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2081:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 465,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2050:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2050:75:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 464,
												"id": 476,
												"nodeType": "Return",
												"src": "2043:82:6"
											}
										]
									},
									"documentation": {
										"id": 453,
										"nodeType": "StructuredDocumentation",
										"src": "1812:126:6",
										"text": " @dev Variant of {safeTransfer} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransfer",
									"nameLocation": "1952:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 456,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1975:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1968:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 455,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 454,
														"name": "IERC20",
														"nameLocations": [
															"1968:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "1968:6:6"
													},
													"referencedDeclaration": 380,
													"src": "1968:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1990:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1982:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1982:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2002:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "1994:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:41:6"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "2027:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 462,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2027:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2026:6:6"
									},
									"scope": 844,
									"src": "1943:189:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 506,
										"nodeType": "Block",
										"src": "2381:109:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 494,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 482,
															"src": "2422:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 497,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 482,
																		"src": "2444:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2450:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 379,
																	"src": "2444:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 499,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 484,
																			"src": "2465:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 500,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 486,
																			"src": "2471:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 501,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "2475:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 502,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2464:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 495,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "2429:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 496,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2433:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "2429:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2429:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 493,
														"name": "_callOptionalReturnBool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 843,
														"src": "2398:23:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
															"typeString": "function (contract IERC20,bytes memory) returns (bool)"
														}
													},
													"id": 504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:85:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 492,
												"id": 505,
												"nodeType": "Return",
												"src": "2391:92:6"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "2138:130:6",
										"text": " @dev Variant of {safeTransferFrom} that returns a bool instead of reverting if the operation is not successful."
									},
									"id": 507,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySafeTransferFrom",
									"nameLocation": "2282:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2309:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2302:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 481,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 480,
														"name": "IERC20",
														"nameLocations": [
															"2302:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "2302:6:6"
													},
													"referencedDeclaration": 380,
													"src": "2302:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2324:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2316:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2316:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2338:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2330:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2330:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2342:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:55:6"
									},
									"returnParameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "2375:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:6"
									},
									"scope": 844,
									"src": "2273:217:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "3232:139:6",
										"statements": [
											{
												"assignments": [
													519
												],
												"declarations": [
													{
														"constant": false,
														"id": 519,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "3250:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 537,
														"src": "3242:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 518,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3242:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 528,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 524,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3289:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$844",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3281:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3281:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 525,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3281:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 526,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3296:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 520,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3265:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3271:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 357,
														"src": "3265:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 527,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3265:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3242:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 530,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "3327:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 531,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 513,
															"src": "3334:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 532,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 519,
																"src": "3343:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 533,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 515,
																"src": "3358:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3343:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 529,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 628,
														"src": "3314:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3314:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 536,
												"nodeType": "ExpressionStatement",
												"src": "3314:50:6"
											}
										]
									},
									"documentation": {
										"id": 508,
										"nodeType": "StructuredDocumentation",
										"src": "2496:645:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "3155:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 511,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3184:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3177:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 510,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 509,
														"name": "IERC20",
														"nameLocations": [
															"3177:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "3177:6:6"
													},
													"referencedDeclaration": 380,
													"src": "3177:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3216:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "3208:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 514,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3176:46:6"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3232:0:6"
									},
									"scope": 844,
									"src": "3146:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 580,
										"nodeType": "Block",
										"src": "4137:370:6",
										"statements": [
											{
												"id": 579,
												"nodeType": "UncheckedBlock",
												"src": "4147:354:6",
												"statements": [
													{
														"assignments": [
															550
														],
														"declarations": [
															{
																"constant": false,
																"id": 550,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "4179:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 579,
																"src": "4171:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 549,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4171:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 559,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 555,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4222:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$844",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4214:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 553,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4214:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4214:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 557,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4229:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 551,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4198:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4204:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 357,
																"src": "4198:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 558,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4198:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4171:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 562,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 560,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 550,
																"src": "4255:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 561,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 546,
																"src": "4274:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4255:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 570,
														"nodeType": "IfStatement",
														"src": "4251:160:6",
														"trueBody": {
															"id": 569,
															"nodeType": "Block",
															"src": "4293:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 564,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 544,
																				"src": "4351:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 565,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 550,
																				"src": "4360:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 566,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 546,
																				"src": "4378:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 563,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 401,
																			"src": "4318:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 567,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4318:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 568,
																	"nodeType": "RevertStatement",
																	"src": "4311:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 572,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 542,
																	"src": "4437:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 573,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 544,
																	"src": "4444:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 574,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "4453:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 575,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 546,
																		"src": "4472:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4453:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$380",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 571,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 628,
																"src": "4424:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4424:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 578,
														"nodeType": "ExpressionStatement",
														"src": "4424:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "3377:657:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful.\n IMPORTANT: If the token implements ERC-7674 (ERC-20 with temporary allowance), and if the \"client\"\n smart contract uses ERC-7674 to set temporary allowances, then the \"client\" smart contract should avoid using\n this function. Performing a {safeIncreaseAllowance} or {safeDecreaseAllowance} operation on a token contract\n that has a non-zero temporary allowance (for that particular owner-spender) will result in unexpected behavior."
									},
									"id": 581,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "4048:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4077:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4070:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 541,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 540,
														"name": "IERC20",
														"nameLocations": [
															"4070:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "4070:6:6"
													},
													"referencedDeclaration": 380,
													"src": "4070:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4092:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4084:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 543,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4084:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "4109:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "4101:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4101:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4069:58:6"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4137:0:6"
									},
									"scope": 844,
									"src": "4039:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "5161:303:6",
										"statements": [
											{
												"assignments": [
													593
												],
												"declarations": [
													{
														"constant": false,
														"id": 593,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "5184:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 627,
														"src": "5171:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 592,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5171:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 602,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 596,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5214:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															"id": 597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5220:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 367,
															"src": "5214:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 598,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "5230:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 589,
																	"src": "5239:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 600,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5229:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 594,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "5199:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5203:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "5199:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5199:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5171:75:6"
											},
											{
												"condition": {
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5261:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 604,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "5286:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 605,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 593,
																"src": "5293:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$380",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 603,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 843,
															"src": "5262:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5262:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "5257:201:6",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "5308:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 609,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5342:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 612,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 585,
																					"src": "5364:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$380",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 613,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5370:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 367,
																				"src": "5364:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 614,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "5380:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 615,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "5389:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 616,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5379:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5349:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5353:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "5349:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 617,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5349:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 608,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5322:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5322:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 619,
															"nodeType": "ExpressionStatement",
															"src": "5322:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 621,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 585,
																		"src": "5427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 622,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 593,
																		"src": "5434:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$380",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 620,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 802,
																	"src": "5407:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 623,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5407:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 624,
															"nodeType": "ExpressionStatement",
															"src": "5407:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "4513:566:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT.\n NOTE: If the token implements ERC-7674, this function will not modify any temporary allowance. This function\n only sets the \"standard\" allowance. Any temporary allowance will remain active, in addition to the value being\n set here."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "5093:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5113:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5106:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 584,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 583,
														"name": "IERC20",
														"nameLocations": [
															"5106:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "5106:6:6"
													},
													"referencedDeclaration": 380,
													"src": "5106:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "5128:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5120:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5120:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5145:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "5137:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5137:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5105:46:6"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:6"
									},
									"scope": 844,
									"src": "5084:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 670,
										"nodeType": "Block",
										"src": "5911:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 641,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 634,
																"src": "5925:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5928:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5925:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5933:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5925:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5943:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5925:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6011:39:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 655,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "6034:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 656,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 636,
																	"src": "6038:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 657,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 638,
																	"src": "6045:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 653,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 632,
																	"src": "6012:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6018:15:6",
																"memberName": "transferAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 180,
																"src": "6012:21:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6012:38:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 668,
													"nodeType": "IfStatement",
													"src": "6007:117:6",
													"trueBody": {
														"id": 667,
														"nodeType": "Block",
														"src": "6052:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 663,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 632,
																					"src": "6106:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 662,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6098:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 661,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6098:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 664,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6098:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 660,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6073:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6073:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 666,
																"nodeType": "RevertStatement",
																"src": "6066:47:6"
															}
														]
													}
												},
												"id": 669,
												"nodeType": "IfStatement",
												"src": "5921:203:6",
												"trueBody": {
													"id": 652,
													"nodeType": "Block",
													"src": "5946:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 647,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 632,
																		"src": "5973:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 648,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 634,
																		"src": "5980:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 649,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 636,
																		"src": "5984:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 646,
																	"name": "safeTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 425,
																	"src": "5960:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5960:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 651,
															"nodeType": "ExpressionStatement",
															"src": "5960:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "5470:333:6",
										"text": " @dev Performs an {ERC1363} transferAndCall, with a fallback to the simple {ERC20} transfer if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 671,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferAndCallRelaxed",
									"nameLocation": "5817:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5849:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5840:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 631,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 630,
														"name": "IERC1363",
														"nameLocations": [
															"5840:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "5840:8:6"
													},
													"referencedDeclaration": 229,
													"src": "5840:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5864:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5856:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5856:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5876:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5868:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 635,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5868:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5896:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "5883:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 637,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5883:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5839:62:6"
									},
									"returnParameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5911:0:6"
									},
									"scope": 844,
									"src": "5808:322:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 717,
										"nodeType": "Block",
										"src": "6649:239:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 686,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 679,
																"src": "6663:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 687,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6666:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "6663:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 688,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6671:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6663:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6681:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6663:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "6759:49:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 701,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 677,
																	"src": "6786:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 702,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 679,
																	"src": "6792:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 703,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "6796:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 704,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "6803:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 699,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "6760:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6766:19:6",
																"memberName": "transferFromAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 206,
																"src": "6760:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 705,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6760:48:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 715,
													"nodeType": "IfStatement",
													"src": "6755:127:6",
													"trueBody": {
														"id": 714,
														"nodeType": "Block",
														"src": "6810:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 710,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 675,
																					"src": "6864:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 709,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "6856:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 708,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "6856:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 711,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6856:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 707,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "6831:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6831:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 713,
																"nodeType": "RevertStatement",
																"src": "6824:47:6"
															}
														]
													}
												},
												"id": 716,
												"nodeType": "IfStatement",
												"src": "6659:223:6",
												"trueBody": {
													"id": 698,
													"nodeType": "Block",
													"src": "6684:65:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 692,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "6715:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 693,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 677,
																		"src": "6722:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 694,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 679,
																		"src": "6728:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 695,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "6732:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 691,
																	"name": "safeTransferFrom",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 452,
																	"src": "6698:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,address,uint256)"
																	}
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6698:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 697,
															"nodeType": "ExpressionStatement",
															"src": "6698:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "6136:341:6",
										"text": " @dev Performs an {ERC1363} transferFromAndCall, with a fallback to the simple {ERC20} transferFrom if the target\n has no code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n Reverts if the returned value is other than `true`."
									},
									"id": 718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFromAndCallRelaxed",
									"nameLocation": "6491:26:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6536:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6527:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 674,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 673,
														"name": "IERC1363",
														"nameLocations": [
															"6527:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "6527:8:6"
													},
													"referencedDeclaration": 229,
													"src": "6527:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6559:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6551:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6551:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6581:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6573:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6573:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6601:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6593:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6593:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6629:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "6616:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6616:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6517:122:6"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6649:0:6"
									},
									"scope": 844,
									"src": "6482:406:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 760,
										"nodeType": "Block",
										"src": "7655:218:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 731,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 724,
																"src": "7669:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7672:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7669:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7677:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7669:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 734,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7687:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7669:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"id": 749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7755:38:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 745,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "7777:2:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 746,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 726,
																	"src": "7781:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 747,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 728,
																	"src": "7788:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"expression": {
																	"id": 743,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 722,
																	"src": "7756:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC1363_$229",
																		"typeString": "contract IERC1363"
																	}
																},
																"id": 744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7762:14:6",
																"memberName": "approveAndCall",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 228,
																"src": "7756:20:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,uint256,bytes memory) external returns (bool)"
																}
															},
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7756:37:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 758,
													"nodeType": "IfStatement",
													"src": "7751:116:6",
													"trueBody": {
														"id": 757,
														"nodeType": "Block",
														"src": "7795:72:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 753,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 722,
																					"src": "7849:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_IERC1363_$229",
																						"typeString": "contract IERC1363"
																					}
																				],
																				"id": 752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "7841:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 751,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "7841:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 754,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7841:14:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 750,
																		"name": "SafeERC20FailedOperation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "7816:24:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																			"typeString": "function (address) pure returns (error)"
																		}
																	},
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7816:40:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 756,
																"nodeType": "RevertStatement",
																"src": "7809:47:6"
															}
														]
													}
												},
												"id": 759,
												"nodeType": "IfStatement",
												"src": "7665:202:6",
												"trueBody": {
													"id": 742,
													"nodeType": "Block",
													"src": "7690:55:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 737,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 722,
																		"src": "7717:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		}
																	},
																	{
																		"id": 738,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 724,
																		"src": "7724:2:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 739,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 726,
																		"src": "7728:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC1363_$229",
																			"typeString": "contract IERC1363"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 736,
																	"name": "forceApprove",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "7704:12:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (contract IERC20,address,uint256)"
																	}
																},
																"id": 740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7704:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 741,
															"nodeType": "ExpressionStatement",
															"src": "7704:30:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "6894:654:6",
										"text": " @dev Performs an {ERC1363} approveAndCall, with a fallback to the simple {ERC20} approve if the target has no\n code. This can be used to implement an {ERC721}-like safe transfer that rely on {ERC1363} checks when\n targeting contracts.\n NOTE: When the recipient address (`to`) has no code (i.e. is an EOA), this function behaves as {forceApprove}.\n Opposedly, when the recipient address (`to`) has code, this function only attempts to call {ERC1363-approveAndCall}\n once without retrying, and relies on the returned value to be true.\n Reverts if the returned value is other than `true`."
									},
									"id": 761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approveAndCallRelaxed",
									"nameLocation": "7562:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "7593:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7584:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC1363_$229",
													"typeString": "contract IERC1363"
												},
												"typeName": {
													"id": 721,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 720,
														"name": "IERC1363",
														"nameLocations": [
															"7584:8:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 229,
														"src": "7584:8:6"
													},
													"referencedDeclaration": 229,
													"src": "7584:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC1363_$229",
														"typeString": "contract IERC1363"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7608:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7600:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7600:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7620:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7612:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "7640:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "7627:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7627:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7583:62:6"
									},
									"returnParameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:6"
									},
									"scope": 844,
									"src": "7553:320:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 801,
										"nodeType": "Block",
										"src": "8440:650:6",
										"statements": [
											{
												"assignments": [
													771
												],
												"declarations": [
													{
														"constant": false,
														"id": 771,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "8458:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8450:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 770,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8450:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 772,
												"nodeType": "VariableDeclarationStatement",
												"src": "8450:18:6"
											},
											{
												"assignments": [
													774
												],
												"declarations": [
													{
														"constant": false,
														"id": 774,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "8486:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 801,
														"src": "8478:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 773,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8478:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 775,
												"nodeType": "VariableDeclarationStatement",
												"src": "8478:19:6"
											},
											{
												"AST": {
													"nativeSrc": "8532:396:6",
													"nodeType": "YulBlock",
													"src": "8532:396:6",
													"statements": [
														{
															"nativeSrc": "8546:75:6",
															"nodeType": "YulVariableDeclaration",
															"src": "8546:75:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "8566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8566:3:6"
																		},
																		"nativeSrc": "8566:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8566:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "8573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "8573:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8580:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8580:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8587:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8587:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8593:4:6",
																				"nodeType": "YulLiteral",
																				"src": "8593:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8583:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "8583:3:6"
																		},
																		"nativeSrc": "8583:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8583:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "8606:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "8606:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "8600:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "8600:5:6"
																		},
																		"nativeSrc": "8600:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "8600:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8613:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8613:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8616:4:6",
																		"nodeType": "YulLiteral",
																		"src": "8616:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "8561:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "8561:4:6"
																},
																"nativeSrc": "8561:60:6",
																"nodeType": "YulFunctionCall",
																"src": "8561:60:6"
															},
															"variables": [
																{
																	"name": "success",
																	"nativeSrc": "8550:7:6",
																	"nodeType": "YulTypedName",
																	"src": "8550:7:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8682:157:6",
																"nodeType": "YulBlock",
																"src": "8682:157:6",
																"statements": [
																	{
																		"nativeSrc": "8700:22:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "8700:22:6",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8717:4:6",
																					"nodeType": "YulLiteral",
																					"src": "8717:4:6",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "8711:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "8711:5:6"
																			},
																			"nativeSrc": "8711:11:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8711:11:6"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nativeSrc": "8704:3:6",
																				"nodeType": "YulTypedName",
																				"src": "8704:3:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8754:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8754:3:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8759:1:6",
																					"nodeType": "YulLiteral",
																					"src": "8759:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8762:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8762:14:6"
																					},
																					"nativeSrc": "8762:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8762:16:6"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nativeSrc": "8739:14:6",
																				"nodeType": "YulIdentifier",
																				"src": "8739:14:6"
																			},
																			"nativeSrc": "8739:40:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8739:40:6"
																		},
																		"nativeSrc": "8739:40:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:40:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nativeSrc": "8803:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "8803:3:6"
																				},
																				{
																					"arguments": [],
																					"functionName": {
																						"name": "returndatasize",
																						"nativeSrc": "8808:14:6",
																						"nodeType": "YulIdentifier",
																						"src": "8808:14:6"
																					},
																					"nativeSrc": "8808:16:6",
																					"nodeType": "YulFunctionCall",
																					"src": "8808:16:6"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8796:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "8796:6:6"
																			},
																			"nativeSrc": "8796:29:6",
																			"nodeType": "YulFunctionCall",
																			"src": "8796:29:6"
																		},
																		"nativeSrc": "8796:29:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "8796:29:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "success",
																		"nativeSrc": "8673:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "8673:7:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8666:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "8666:6:6"
																},
																"nativeSrc": "8666:15:6",
																"nodeType": "YulFunctionCall",
																"src": "8666:15:6"
															},
															"nativeSrc": "8663:176:6",
															"nodeType": "YulIf",
															"src": "8663:176:6"
														},
														{
															"nativeSrc": "8852:30:6",
															"nodeType": "YulAssignment",
															"src": "8852:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "8866:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "8866:14:6"
																},
																"nativeSrc": "8866:16:6",
																"nodeType": "YulFunctionCall",
																"src": "8866:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "8852:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "8852:10:6"
																}
															]
														},
														{
															"nativeSrc": "8895:23:6",
															"nodeType": "YulAssignment",
															"src": "8895:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8916:1:6",
																		"nodeType": "YulLiteral",
																		"src": "8916:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8910:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "8910:5:6"
																},
																"nativeSrc": "8910:8:6",
																"nodeType": "YulFunctionCall",
																"src": "8910:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "8895:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "8895:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8587:4:6",
														"valueSize": 1
													},
													{
														"declaration": 767,
														"isOffset": false,
														"isSlot": false,
														"src": "8606:4:6",
														"valueSize": 1
													},
													{
														"declaration": 771,
														"isOffset": false,
														"isSlot": false,
														"src": "8852:10:6",
														"valueSize": 1
													},
													{
														"declaration": 774,
														"isOffset": false,
														"isSlot": false,
														"src": "8895:11:6",
														"valueSize": 1
													},
													{
														"declaration": 765,
														"isOffset": false,
														"isSlot": false,
														"src": "8573:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 776,
												"nodeType": "InlineAssembly",
												"src": "8507:421:6"
											},
											{
												"condition": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 777,
															"name": "returnSize",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 771,
															"src": "8942:10:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8956:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8942:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 790,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 788,
															"name": "returnValue",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 774,
															"src": "8994:11:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "31",
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9009:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "8994:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 791,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "8942:68:6",
													"trueExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 782,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 765,
																			"src": "8968:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$380",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8960:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 780,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8960:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8960:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8975:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "8960:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8980:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "8960:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 786,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8990:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8960:31:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 800,
												"nodeType": "IfStatement",
												"src": "8938:146:6",
												"trueBody": {
													"id": 799,
													"nodeType": "Block",
													"src": "9012:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 795,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 765,
																				"src": "9066:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$380",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 794,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9058:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 793,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9058:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 796,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9058:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 792,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "9033:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9033:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 798,
															"nodeType": "RevertStatement",
															"src": "9026:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "7879:486:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturnBool} that reverts if call fails to meet the requirements."
									},
									"id": 802,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "8379:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8406:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8399:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 764,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 763,
														"name": "IERC20",
														"nameLocations": [
															"8399:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "8399:6:6"
													},
													"referencedDeclaration": 380,
													"src": "8399:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "8426:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 802,
												"src": "8413:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 766,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8413:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8398:33:6"
									},
									"returnParameters": {
										"id": 769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8440:0:6"
									},
									"scope": 844,
									"src": "8370:720:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "9681:391:6",
										"statements": [
											{
												"assignments": [
													814
												],
												"declarations": [
													{
														"constant": false,
														"id": 814,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "9696:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9691:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 813,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "9691:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 815,
												"nodeType": "VariableDeclarationStatement",
												"src": "9691:12:6"
											},
											{
												"assignments": [
													817
												],
												"declarations": [
													{
														"constant": false,
														"id": 817,
														"mutability": "mutable",
														"name": "returnSize",
														"nameLocation": "9721:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9713:18:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9713:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 818,
												"nodeType": "VariableDeclarationStatement",
												"src": "9713:18:6"
											},
											{
												"assignments": [
													820
												],
												"declarations": [
													{
														"constant": false,
														"id": 820,
														"mutability": "mutable",
														"name": "returnValue",
														"nameLocation": "9749:11:6",
														"nodeType": "VariableDeclaration",
														"scope": 842,
														"src": "9741:19:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 819,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9741:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 821,
												"nodeType": "VariableDeclarationStatement",
												"src": "9741:19:6"
											},
											{
												"AST": {
													"nativeSrc": "9795:174:6",
													"nodeType": "YulBlock",
													"src": "9795:174:6",
													"statements": [
														{
															"nativeSrc": "9809:71:6",
															"nodeType": "YulAssignment",
															"src": "9809:71:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "gas",
																			"nativeSrc": "9825:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9825:3:6"
																		},
																		"nativeSrc": "9825:5:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9825:5:6"
																	},
																	{
																		"name": "token",
																		"nativeSrc": "9832:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "9832:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9839:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9839:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9846:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9846:4:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9852:4:6",
																				"nodeType": "YulLiteral",
																				"src": "9852:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9842:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "9842:3:6"
																		},
																		"nativeSrc": "9842:15:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9842:15:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "9865:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "9865:4:6"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "9859:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "9859:5:6"
																		},
																		"nativeSrc": "9859:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "9859:11:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9872:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9875:4:6",
																		"nodeType": "YulLiteral",
																		"src": "9875:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "call",
																	"nativeSrc": "9820:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "9820:4:6"
																},
																"nativeSrc": "9820:60:6",
																"nodeType": "YulFunctionCall",
																"src": "9820:60:6"
															},
															"variableNames": [
																{
																	"name": "success",
																	"nativeSrc": "9809:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "9809:7:6"
																}
															]
														},
														{
															"nativeSrc": "9893:30:6",
															"nodeType": "YulAssignment",
															"src": "9893:30:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nativeSrc": "9907:14:6",
																	"nodeType": "YulIdentifier",
																	"src": "9907:14:6"
																},
																"nativeSrc": "9907:16:6",
																"nodeType": "YulFunctionCall",
																"src": "9907:16:6"
															},
															"variableNames": [
																{
																	"name": "returnSize",
																	"nativeSrc": "9893:10:6",
																	"nodeType": "YulIdentifier",
																	"src": "9893:10:6"
																}
															]
														},
														{
															"nativeSrc": "9936:23:6",
															"nodeType": "YulAssignment",
															"src": "9936:23:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9957:1:6",
																		"nodeType": "YulLiteral",
																		"src": "9957:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9951:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "9951:5:6"
																},
																"nativeSrc": "9951:8:6",
																"nodeType": "YulFunctionCall",
																"src": "9951:8:6"
															},
															"variableNames": [
																{
																	"name": "returnValue",
																	"nativeSrc": "9936:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "9936:11:6"
																}
															]
														}
													]
												},
												"evmVersion": "prague",
												"externalReferences": [
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9846:4:6",
														"valueSize": 1
													},
													{
														"declaration": 808,
														"isOffset": false,
														"isSlot": false,
														"src": "9865:4:6",
														"valueSize": 1
													},
													{
														"declaration": 817,
														"isOffset": false,
														"isSlot": false,
														"src": "9893:10:6",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "9936:11:6",
														"valueSize": 1
													},
													{
														"declaration": 814,
														"isOffset": false,
														"isSlot": false,
														"src": "9809:7:6",
														"valueSize": 1
													},
													{
														"declaration": 806,
														"isOffset": false,
														"isSlot": false,
														"src": "9832:5:6",
														"valueSize": 1
													}
												],
												"flags": [
													"memory-safe"
												],
												"id": 822,
												"nodeType": "InlineAssembly",
												"src": "9770:199:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 823,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 814,
														"src": "9985:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 824,
																		"name": "returnSize",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "9997:10:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 825,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10011:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "9997:15:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 835,
																		"name": "returnValue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 820,
																		"src": "10048:11:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 836,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10063:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "10048:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "9997:67:6",
																"trueExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 834,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"arguments": [
																					{
																						"id": 829,
																						"name": "token",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 806,
																						"src": "10023:5:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_contract$_IERC20_$380",
																							"typeString": "contract IERC20"
																						}
																					],
																					"id": 828,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "10015:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_address_$",
																						"typeString": "type(address)"
																					},
																					"typeName": {
																						"id": 827,
																						"name": "address",
																						"nodeType": "ElementaryTypeName",
																						"src": "10015:7:6",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10015:14:6",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 831,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "10030:4:6",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "10015:19:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 832,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "10035:6:6",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "10015:26:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10044:1:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "10015:30:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 839,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9996:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9985:80:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 812,
												"id": 841,
												"nodeType": "Return",
												"src": "9978:87:6"
											}
										]
									},
									"documentation": {
										"id": 803,
										"nodeType": "StructuredDocumentation",
										"src": "9096:491:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silently catches all reverts and returns a bool instead."
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "9601:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "9632:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9625:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$380",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 805,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 804,
														"name": "IERC20",
														"nameLocations": [
															"9625:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 380,
														"src": "9625:6:6"
													},
													"referencedDeclaration": 380,
													"src": "9625:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9652:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9639:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9639:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9624:33:6"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "9675:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 810,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9675:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9674:6:6"
									},
									"scope": 844,
									"src": "9592:480:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 845,
							"src": "698:9376:6",
							"usedErrors": [
								392,
								401
							],
							"usedEvents": []
						}
					],
					"src": "115:9960:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 847,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "Context",
							"nameLocation": "642:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "718:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 852,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 851,
												"id": 854,
												"nodeType": "Return",
												"src": "728:17:7"
											}
										]
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:7"
									},
									"returnParameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "709:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:7"
									},
									"scope": 874,
									"src": "656:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "825:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 861,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 862,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 860,
												"id": 863,
												"nodeType": "Return",
												"src": "835:15:7"
											}
										]
									},
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:7"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "809:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 858,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:7"
									},
									"scope": 874,
									"src": "758:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "935:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 870,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 869,
												"id": 871,
												"nodeType": "Return",
												"src": "945:8:7"
											}
										]
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:7"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "926:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:7"
									},
									"scope": 874,
									"src": "863:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 875,
							"src": "624:338:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							886
						]
					},
					"id": 887,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "141:280:8",
								"text": " @dev Interface of the ERC-165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[ERC].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 886,
							"linearizedBaseContracts": [
								886
							],
							"name": "IERC165",
							"nameLocation": "432:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "446:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[ERC section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 885,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "800:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "825:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "818:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 879,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "818:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "817:20:8"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 885,
												"src": "861:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 882,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "861:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "860:6:8"
									},
									"scope": 886,
									"src": "791:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 887,
							"src": "422:447:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:755:8"
				},
				"id": 8
			},
			"Staking.sol": {
				"ast": {
					"absolutePath": "Staking.sol",
					"exportedSymbols": {
						"AutoStaking": [
							1881
						],
						"Context": [
							874
						],
						"IERC1363": [
							229
						],
						"IERC20": [
							380
						],
						"Ownable": [
							147
						],
						"ReentrancyGuard": [
							302
						],
						"SafeERC20": [
							844
						]
					},
					"id": 1882,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 888,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 889,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 381,
							"src": "58:56:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 890,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 845,
							"src": "115:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 891,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 148,
							"src": "181:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 892,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1882,
							"sourceUnit": 303,
							"src": "234:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 894,
										"name": "Ownable",
										"nameLocations": [
											"442:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "442:7:9"
									},
									"id": 895,
									"nodeType": "InheritanceSpecifier",
									"src": "442:7:9"
								},
								{
									"baseName": {
										"id": 896,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"451:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 302,
										"src": "451:15:9"
									},
									"id": 897,
									"nodeType": "InheritanceSpecifier",
									"src": "451:15:9"
								}
							],
							"canonicalName": "AutoStaking",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 893,
								"nodeType": "StructuredDocumentation",
								"src": "298:119:9",
								"text": " @title AutoStaking\n @dev Contract for staking tokens with fixed lock periods and auto-compounding rewards."
							},
							"fullyImplemented": true,
							"id": 1881,
							"linearizedBaseContracts": [
								1881,
								302,
								147,
								874
							],
							"name": "AutoStaking",
							"nameLocation": "427:11:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 901,
									"libraryName": {
										"id": 898,
										"name": "SafeERC20",
										"nameLocations": [
											"479:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "479:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "473:27:9",
									"typeName": {
										"id": 900,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 899,
											"name": "IERC20",
											"nameLocations": [
												"493:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "493:6:9"
										},
										"referencedDeclaration": 380,
										"src": "493:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "72f702f3",
									"id": 904,
									"mutability": "immutable",
									"name": "stakingToken",
									"nameLocation": "553:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "529:36:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 903,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 902,
											"name": "IERC20",
											"nameLocations": [
												"529:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "529:6:9"
										},
										"referencedDeclaration": 380,
										"src": "529:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 907,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "585:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "571:25:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$380",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 906,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 905,
											"name": "IERC20",
											"nameLocations": [
												"571:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 380,
											"src": "571:6:9"
										},
										"referencedDeclaration": 380,
										"src": "571:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$380",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "e6a69ab8",
									"id": 910,
									"mutability": "constant",
									"name": "SECONDS_PER_YEAR",
									"nameLocation": "644:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "620:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 908,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "620:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "333635",
										"id": 909,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "663:8:9",
										"subdenomination": "days",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_31536000_by_1",
											"typeString": "int_const 31536000"
										},
										"value": "365"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "38bceaac",
									"id": 913,
									"mutability": "constant",
									"name": "AUTO_COMPOUND_FEE",
									"nameLocation": "701:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "677:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 911,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "677:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3530",
										"id": 912,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "721:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_50_by_1",
											"typeString": "int_const 50"
										},
										"value": "50"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "3d92f4e2",
									"id": 916,
									"mutability": "constant",
									"name": "MAX_APY",
									"nameLocation": "761:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "737:39:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 914,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "737:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 915,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "771:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4c8f2a78",
									"id": 924,
									"mutability": "mutable",
									"name": "lockPeriods",
									"nameLocation": "835:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "817:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 917,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "817:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 919,
										"length": {
											"hexValue": "33",
											"id": 918,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "825:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "817:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "3330",
												"id": 920,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "850:7:9",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_2592000_by_1",
													"typeString": "int_const 2592000"
												},
												"value": "30"
											},
											{
												"hexValue": "3630",
												"id": 921,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "859:7:9",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_5184000_by_1",
													"typeString": "int_const 5184000"
												},
												"value": "60"
											},
											{
												"hexValue": "3930",
												"id": 922,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "868:7:9",
												"subdenomination": "days",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_7776000_by_1",
													"typeString": "int_const 7776000"
												},
												"value": "90"
											}
										],
										"id": 923,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "849:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint24_$3_memory_ptr",
											"typeString": "uint24[3] memory"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6b494def",
									"id": 932,
									"mutability": "mutable",
									"name": "apyRates",
									"nameLocation": "900:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "882:46:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$3_storage",
										"typeString": "uint256[3]"
									},
									"typeName": {
										"baseType": {
											"id": 925,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "882:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 927,
										"length": {
											"hexValue": "33",
											"id": 926,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "890:1:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_3_by_1",
												"typeString": "int_const 3"
											},
											"value": "3"
										},
										"nodeType": "ArrayTypeName",
										"src": "882:10:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$3_storage_ptr",
											"typeString": "uint256[3]"
										}
									},
									"value": {
										"components": [
											{
												"hexValue": "353030",
												"id": 928,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "912:3:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_500_by_1",
													"typeString": "int_const 500"
												},
												"value": "500"
											},
											{
												"hexValue": "31303030",
												"id": 929,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "917:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1000_by_1",
													"typeString": "int_const 1000"
												},
												"value": "1000"
											},
											{
												"hexValue": "31353030",
												"id": 930,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "923:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1500_by_1",
													"typeString": "int_const 1500"
												},
												"value": "1500"
											}
										],
										"id": 931,
										"isConstant": false,
										"isInlineArray": true,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "TupleExpression",
										"src": "911:17:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint16_$3_memory_ptr",
											"typeString": "uint16[3] memory"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AutoStaking.StakeInfo",
									"id": 945,
									"members": [
										{
											"constant": false,
											"id": 934,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1005:6:9",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "997:14:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 933,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "997:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 936,
											"mutability": "mutable",
											"name": "stakeTime",
											"nameLocation": "1029:9:9",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "1021:17:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 935,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1021:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 938,
											"mutability": "mutable",
											"name": "unlockTime",
											"nameLocation": "1056:10:9",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "1048:18:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 937,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1048:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 940,
											"mutability": "mutable",
											"name": "claimed",
											"nameLocation": "1081:7:9",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "1076:12:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 939,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1076:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 942,
											"mutability": "mutable",
											"name": "autoStaking",
											"nameLocation": "1103:11:9",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "1098:16:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 941,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1098:4:9",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 944,
											"mutability": "mutable",
											"name": "compoundedAmount",
											"nameLocation": "1132:16:9",
											"nodeType": "VariableDeclaration",
											"scope": 945,
											"src": "1124:24:9",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 943,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1124:7:9",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeInfo",
									"nameLocation": "977:9:9",
									"nodeType": "StructDefinition",
									"scope": 1881,
									"src": "970:185:9",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "584b62a1",
									"id": 951,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1200:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "1161:45:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct AutoStaking.StakeInfo[])"
									},
									"typeName": {
										"id": 950,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 946,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1169:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1161:31:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct AutoStaking.StakeInfo[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 948,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 947,
													"name": "StakeInfo",
													"nameLocations": [
														"1180:9:9"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 945,
													"src": "1180:9:9"
												},
												"referencedDeclaration": 945,
												"src": "1180:9:9",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
													"typeString": "struct AutoStaking.StakeInfo"
												}
											},
											"id": 949,
											"nodeType": "ArrayTypeName",
											"src": "1180:11:9",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_ptr",
												"typeString": "struct AutoStaking.StakeInfo[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0630e463",
									"id": 955,
									"mutability": "mutable",
									"name": "pendingRewardWithdrawals",
									"nameLocation": "1247:24:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "1212:59:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 954,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1220:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1212:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 953,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1231:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 957,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "1313:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "1298:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 956,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1298:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a5c08ae",
									"id": 959,
									"mutability": "mutable",
									"name": "rewardPoolBalance",
									"nameLocation": "1345:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "1330:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 958,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1330:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b3f00674",
									"id": 961,
									"mutability": "mutable",
									"name": "feeReceiver",
									"nameLocation": "1383:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "1368:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 960,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1368:7:9",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "3df45cb339f96ae4bdb793efcb6e22100dd0dc4fd739a4ee2033fe67ea35af96",
									"id": 971,
									"name": "Staked",
									"nameLocation": "1421:6:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1444:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1428:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1458:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1450:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1450:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "1474:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1466:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1466:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"indexed": false,
												"mutability": "mutable",
												"name": "autoStake",
												"nameLocation": "1492:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "1487:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 968,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1487:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1427:75:9"
									},
									"src": "1415:88:9"
								},
								{
									"anonymous": false,
									"eventSelector": "987d620f307ff6b94d58743cb7a7509f24071586a77759b77c2d4e29f75a2f9a",
									"id": 979,
									"name": "Claimed",
									"nameLocation": "1514:7:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 973,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1538:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1522:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1522:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 975,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1552:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1544:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1544:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 977,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1568:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 979,
												"src": "1560:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1560:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1521:58:9"
									},
									"src": "1508:72:9"
								},
								{
									"anonymous": false,
									"eventSelector": "bd1ea9966f82ccb966523d3922a6e4ad4bf3ea70e9201bd7a106de847cc5e616",
									"id": 985,
									"name": "WithdrawnRewards",
									"nameLocation": "1591:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1624:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1608:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 980,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1641:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "1633:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 982,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1633:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1607:41:9"
									},
									"src": "1585:64:9"
								},
								{
									"anonymous": false,
									"eventSelector": "fa2d7b35e7cc82247c5ae7e8ae2dc078c2b144b76a6b1068887b3c8892c15da5",
									"id": 993,
									"name": "AutoStakeToggled",
									"nameLocation": "1660:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1693:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1677:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1677:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "1707:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1699:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "status",
												"nameLocation": "1724:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "1719:11:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 990,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1719:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1676:55:9"
									},
									"src": "1654:78:9"
								},
								{
									"anonymous": false,
									"eventSelector": "a5289ba11778999f4dfb9415023783188d42bbb5db0612cbfbe55999069612a0",
									"id": 997,
									"name": "RewardTokenUpdated",
									"nameLocation": "1743:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 996,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 995,
												"indexed": true,
												"mutability": "mutable",
												"name": "newRewardToken",
												"nameLocation": "1778:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 997,
												"src": "1762:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1762:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1761:32:9"
									},
									"src": "1737:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "27aae5db36d94179909d019ae0b1ac7c16d96d953148f63c0f6a0a9c8ead79ee",
									"id": 1001,
									"name": "FeeReceiverUpdated",
									"nameLocation": "1805:18:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 999,
												"indexed": true,
												"mutability": "mutable",
												"name": "newFeeReceiver",
												"nameLocation": "1840:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1001,
												"src": "1824:30:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1824:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:32:9"
									},
									"src": "1799:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "787a1fca55641ce34a438271930bbb9401df20db2b4f510d4f252227d85df43d",
									"id": 1007,
									"name": "APYUpdated",
									"nameLocation": "1867:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1003,
												"indexed": false,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "1886:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1878:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1002,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1005,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "1907:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "1899:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1899:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1877:37:9"
									},
									"src": "1861:54:9"
								},
								{
									"anonymous": false,
									"eventSelector": "d15dafc20a4e1ccff3e1b0a321ba0ee5c9b2aa1b9c7cae08fb5a324537536244",
									"id": 1013,
									"name": "RewardPoolFundsAdded",
									"nameLocation": "1926:20:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1009,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1963:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1947:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1008,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1947:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1011,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1979:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1013,
												"src": "1971:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1010,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1971:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1946:40:9"
									},
									"src": "1920:67:9"
								},
								{
									"anonymous": false,
									"eventSelector": "593662cbe53e88df3fef748665b8c3d3142e5d34dc1b24290f7e953537a00183",
									"id": 1021,
									"name": "AutoCompounded",
									"nameLocation": "1998:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2029:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2013:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1014,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2013:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1017,
												"indexed": false,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "2043:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2035:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1016,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1019,
												"indexed": false,
												"mutability": "mutable",
												"name": "compoundedAmount",
												"nameLocation": "2063:16:9",
												"nodeType": "VariableDeclaration",
												"scope": 1021,
												"src": "2055:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2012:68:9"
									},
									"src": "1992:89:9"
								},
								{
									"anonymous": false,
									"eventSelector": "752d7e161ff5146f80e3820893176eb40532811e5e20400dfdde57455213706a",
									"id": 1025,
									"name": "ContractPaused",
									"nameLocation": "2092:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"indexed": true,
												"mutability": "mutable",
												"name": "isPaused",
												"nameLocation": "2120:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "2107:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1022,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2107:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2106:23:9"
									},
									"src": "2086:44:9"
								},
								{
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "2197:81:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1028,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967270,
																	"src": "2215:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 1029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2218:6:9",
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"src": "2215:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1030,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2228:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2232:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2228:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2215:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c7920454f412063616e2063616c6c",
															"id": 1033,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2240:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
																"typeString": "literal_string \"Only EOA can call\""
															},
															"value": "Only EOA can call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_467f43f738be3a352f774df204caaab949f54ab885e556e6ff449cf2353822c2",
																"typeString": "literal_string \"Only EOA can call\""
															}
														],
														"id": 1027,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2207:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2207:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1035,
												"nodeType": "ExpressionStatement",
												"src": "2207:53:9"
											},
											{
												"id": 1036,
												"nodeType": "PlaceholderStatement",
												"src": "2270:1:9"
											}
										]
									},
									"id": 1038,
									"name": "onlyEOA",
									"nameLocation": "2187:7:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2194:2:9"
									},
									"src": "2178:100:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1047,
										"nodeType": "Block",
										"src": "2309:63:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2327:7:9",
															"subExpression": {
																"id": 1041,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "2328:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420706175736564",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2336:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
																"typeString": "literal_string \"Contract paused\""
															},
															"value": "Contract paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3050dffacb9368cabd9386d9e9f4fef5deb3cfb41011f6d6a59caa1f97c9cb15",
																"typeString": "literal_string \"Contract paused\""
															}
														],
														"id": 1040,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2319:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2319:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1045,
												"nodeType": "ExpressionStatement",
												"src": "2319:35:9"
											},
											{
												"id": 1046,
												"nodeType": "PlaceholderStatement",
												"src": "2364:1:9"
											}
										]
									},
									"id": 1048,
									"name": "whenNotPaused",
									"nameLocation": "2293:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:9"
									},
									"src": "2284:88:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 1050,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "2410:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1881,
									"src": "2398:18:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1049,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "2398:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "2584:371:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1071,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1066,
																"name": "_stakingTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "2602:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1069,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2634:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1068,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2626:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1067,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2626:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1070,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2626:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2602:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b696e6720746f6b656e",
															"id": 1072,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2638:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															},
															"value": "Invalid staking token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_23a32368947ee5c9e78682e10414e6a6dda58e22fc97a1d6dde1d15f53318f7c",
																"typeString": "literal_string \"Invalid staking token\""
															}
														],
														"id": 1065,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2594:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2594:68:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1074,
												"nodeType": "ExpressionStatement",
												"src": "2594:68:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1081,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1076,
																"name": "_rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2680:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2711:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1078,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2703:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1077,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2703:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1080,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2703:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2680:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c69642072657761726420746f6b656e",
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2715:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															},
															"value": "Invalid reward token"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ad21277b6fe9a4cacd677dfb2c51bdb368e3e76bab07fe43cc0014a3f239eecd",
																"typeString": "literal_string \"Invalid reward token\""
															}
														],
														"id": 1075,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2672:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2672:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1084,
												"nodeType": "ExpressionStatement",
												"src": "2672:66:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1091,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1086,
																"name": "_feeReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1056,
																"src": "2756:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2780:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1088,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2772:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1087,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2772:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2772:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2756:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420666565207265636569766572",
															"id": 1092,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2784:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																"typeString": "literal_string \"Invalid fee receiver\""
															},
															"value": "Invalid fee receiver"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9edddcf2b6467123b7431a8710b4ce6462c8d82507f0d17bc8bebeb74416f375",
																"typeString": "literal_string \"Invalid fee receiver\""
															}
														],
														"id": 1085,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2748:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1093,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2748:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1094,
												"nodeType": "ExpressionStatement",
												"src": "2748:59:9"
											},
											{
												"expression": {
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1095,
														"name": "stakingToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "2818:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1097,
																"name": "_stakingTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1052,
																"src": "2840:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1096,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2833:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2833:28:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2818:43:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1100,
												"nodeType": "ExpressionStatement",
												"src": "2818:43:9"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1101,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "2871:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1103,
																"name": "_rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2892:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1102,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "2885:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2885:27:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "2871:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2871:41:9"
											},
											{
												"expression": {
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1107,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "2922:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1108,
														"name": "_feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1056,
														"src": "2936:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2922:26:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1110,
												"nodeType": "ExpressionStatement",
												"src": "2922:26:9"
											}
										]
									},
									"id": 1112,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1059,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2554:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2558:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2554:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1061,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1058,
												"name": "Ownable",
												"nameLocations": [
													"2546:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "2546:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2546:19:9"
										},
										{
											"arguments": [],
											"id": 1063,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1062,
												"name": "ReentrancyGuard",
												"nameLocations": [
													"2566:15:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 302,
												"src": "2566:15:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2566:17:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1052,
												"mutability": "mutable",
												"name": "_stakingTokenAddress",
												"nameLocation": "2452:20:9",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2444:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1051,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2444:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "_rewardTokenAddress",
												"nameLocation": "2490:19:9",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2482:27:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2482:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"mutability": "mutable",
												"name": "_feeReceiver",
												"nameLocation": "2527:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "2519:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2519:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2434:111:9"
									},
									"returnParameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2584:0:9"
									},
									"scope": 1881,
									"src": "2423:532:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1192,
										"nodeType": "Block",
										"src": "3202:631:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "periodIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "3220:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1130,
																	"name": "lockPeriods",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "3234:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$3_storage",
																		"typeString": "uint256[3] storage ref"
																	}
																},
																"id": 1131,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3246:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "3234:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3220:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706572696f6420696e646578",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3254:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															},
															"value": "Invalid period index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															}
														],
														"id": 1128,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3212:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1135,
												"nodeType": "ExpressionStatement",
												"src": "3212:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1137,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "3295:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3304:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3295:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3307:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 1136,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3287:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3287:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1142,
												"nodeType": "ExpressionStatement",
												"src": "3287:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1146,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3362:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3366:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3362:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1150,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3382:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutoStaking_$1881",
																		"typeString": "contract AutoStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutoStaking_$1881",
																		"typeString": "contract AutoStaking"
																	}
																],
																"id": 1149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3374:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1148,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3374:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3374:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3389:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1143,
															"name": "stakingToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "3332:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1145,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3345:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "3332:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3332:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1154,
												"nodeType": "ExpressionStatement",
												"src": "3332:64:9"
											},
											{
												"assignments": [
													1156
												],
												"declarations": [
													{
														"constant": false,
														"id": 1156,
														"mutability": "mutable",
														"name": "unlockTime",
														"nameLocation": "3415:10:9",
														"nodeType": "VariableDeclaration",
														"scope": 1192,
														"src": "3407:18:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3407:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1163,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1157,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3428:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1158,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3434:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3428:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"baseExpression": {
															"id": 1159,
															"name": "lockPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "3446:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1161,
														"indexExpression": {
															"id": 1160,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "3458:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3446:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3428:42:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3407:63:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1170,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "3537:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 1171,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3568:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1172,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3574:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3568:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1173,
																	"name": "unlockTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1156,
																	"src": "3609:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 1174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3642:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"id": 1175,
																	"name": "autoStake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1119,
																	"src": "3674:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "30",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3715:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1169,
																"name": "StakeInfo",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "3505:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_StakeInfo_$945_storage_ptr_$",
																	"typeString": "type(struct AutoStaking.StakeInfo storage pointer)"
																}
															},
															"id": 1177,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3529:6:9",
																"3557:9:9",
																"3597:10:9",
																"3633:7:9",
																"3661:11:9",
																"3697:16:9"
															],
															"names": [
																"amount",
																"stakeTime",
																"unlockTime",
																"claimed",
																"autoStaking",
																"compoundedAmount"
															],
															"nodeType": "FunctionCall",
															"src": "3505:222:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 1164,
																"name": "stakes",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "3481:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																}
															},
															"id": 1167,
															"indexExpression": {
																"expression": {
																	"id": 1165,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3488:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3492:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3488:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3481:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
																"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
															}
														},
														"id": 1168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3500:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3481:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_ptr_$_t_struct$_StakeInfo_$945_storage_$returns$__$attached_to$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct AutoStaking.StakeInfo storage ref[] storage pointer,struct AutoStaking.StakeInfo storage ref)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3481:247:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "3481:247:9"
											},
											{
												"expression": {
													"id": 1182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1180,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 957,
														"src": "3739:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1181,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1115,
														"src": "3754:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3739:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1183,
												"nodeType": "ExpressionStatement",
												"src": "3739:21:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1185,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3783:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3787:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3783:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1115,
															"src": "3795:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1188,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1117,
															"src": "3803:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1189,
															"name": "autoStake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1119,
															"src": "3816:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1184,
														"name": "Staked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "3776:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,uint256,bool)"
														}
													},
													"id": 1190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3776:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1191,
												"nodeType": "EmitStatement",
												"src": "3771:55:9"
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "3027:58:9",
										"text": " @notice Stake tokens for a fixed period"
									},
									"functionSelector": "561b2463",
									"id": 1193,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1122,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1121,
												"name": "nonReentrant",
												"nameLocations": [
													"3167:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "3167:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3167:12:9"
										},
										{
											"id": 1124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1123,
												"name": "onlyEOA",
												"nameLocations": [
													"3180:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1038,
												"src": "3180:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3180:7:9"
										},
										{
											"id": 1126,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1125,
												"name": "whenNotPaused",
												"nameLocations": [
													"3188:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1048,
												"src": "3188:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3188:13:9"
										}
									],
									"name": "stake",
									"nameLocation": "3099:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3113:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3105:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3105:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "3129:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3121:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3121:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "autoStake",
												"nameLocation": "3147:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "3142:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1118,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3142:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3104:53:9"
									},
									"returnParameters": {
										"id": 1127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3202:0:9"
									},
									"scope": 1881,
									"src": "3090:743:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1297,
										"nodeType": "Block",
										"src": "3999:702:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1204,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1196,
																"src": "4017:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4036:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1206,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4028:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1205,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4028:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4028:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4017:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964206163636f756e74",
															"id": 1210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4040:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
																"typeString": "literal_string \"Invalid account\""
															},
															"value": "Invalid account"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_96004842ff601b6d8519c15dcff18308fcdd4e716146ba6a8ca79e8687927600",
																"typeString": "literal_string \"Invalid account\""
															}
														],
														"id": 1203,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4009:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4009:49:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1212,
												"nodeType": "ExpressionStatement",
												"src": "4009:49:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1219,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1214,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1198,
																"src": "4076:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1215,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "4089:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1217,
																	"indexExpression": {
																		"id": 1216,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1196,
																		"src": "4096:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4089:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4105:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "4089:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4076:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4113:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1213,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4068:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4068:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1222,
												"nodeType": "ExpressionStatement",
												"src": "4068:67:9"
											},
											{
												"assignments": [
													1225
												],
												"declarations": [
													{
														"constant": false,
														"id": 1225,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "4163:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "4146:21:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1224,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1223,
																"name": "StakeInfo",
																"nameLocations": [
																	"4146:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 945,
																"src": "4146:9:9"
															},
															"referencedDeclaration": 945,
															"src": "4146:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1231,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1226,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "4170:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1228,
														"indexExpression": {
															"id": 1227,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "4177:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4170:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1230,
													"indexExpression": {
														"id": 1229,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1198,
														"src": "4186:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4170:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$945_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4146:51:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "4215:13:9",
															"subExpression": {
																"expression": {
																	"id": 1233,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "4216:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																		"typeString": "struct AutoStaking.StakeInfo memory"
																	}
																},
																"id": 1234,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4221:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "4216:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4230:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1232,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4207:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4207:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1238,
												"nodeType": "ExpressionStatement",
												"src": "4207:41:9"
											},
											{
												"assignments": [
													1240
												],
												"declarations": [
													{
														"constant": false,
														"id": 1240,
														"mutability": "mutable",
														"name": "endTime",
														"nameLocation": "4267:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "4259:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4259:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1243,
												"initialValue": {
													"expression": {
														"id": 1241,
														"name": "info",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "4277:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
															"typeString": "struct AutoStaking.StakeInfo memory"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4282:10:9",
													"memberName": "unlockTime",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 938,
													"src": "4277:15:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4259:33:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1244,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4306:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4311:11:9",
														"memberName": "autoStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "4306:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1246,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4326:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1247,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4332:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4326:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1248,
															"name": "endTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1240,
															"src": "4344:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4326:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4306:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1257,
												"nodeType": "IfStatement",
												"src": "4302:101:9",
												"trueBody": {
													"id": 1256,
													"nodeType": "Block",
													"src": "4353:50:9",
													"statements": [
														{
															"expression": {
																"id": 1254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1251,
																	"name": "endTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1240,
																	"src": "4367:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 1252,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "4377:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 1253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4383:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "4377:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4367:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1255,
															"nodeType": "ExpressionStatement",
															"src": "4367:25:9"
														}
													]
												}
											},
											{
												"assignments": [
													1259
												],
												"declarations": [
													{
														"constant": false,
														"id": 1259,
														"mutability": "mutable",
														"name": "timeHeld",
														"nameLocation": "4421:8:9",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "4413:16:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1258,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4413:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1260,
														"name": "endTime",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "4432:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 1261,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4442:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1262,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4447:9:9",
														"memberName": "stakeTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 936,
														"src": "4442:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4432:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4413:43:9"
											},
											{
												"assignments": [
													1266
												],
												"declarations": [
													{
														"constant": false,
														"id": 1266,
														"mutability": "mutable",
														"name": "periodIndex",
														"nameLocation": "4474:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "4466:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1265,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4466:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1274,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1268,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "4503:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																		"typeString": "struct AutoStaking.StakeInfo memory"
																	}
																},
																"id": 1269,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4508:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "4503:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 1270,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "4521:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																		"typeString": "struct AutoStaking.StakeInfo memory"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4526:9:9",
																"memberName": "stakeTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 936,
																"src": "4521:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4503:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1267,
														"name": "getPeriodIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1333,
														"src": "4488:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4488:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4466:70:9"
											},
											{
												"assignments": [
													1276
												],
												"declarations": [
													{
														"constant": false,
														"id": 1276,
														"mutability": "mutable",
														"name": "principal",
														"nameLocation": "4554:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1297,
														"src": "4546:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1275,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4546:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1282,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1277,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4566:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1278,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4571:6:9",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 934,
														"src": "4566:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"expression": {
															"id": 1279,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "4580:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_memory_ptr",
																"typeString": "struct AutoStaking.StakeInfo memory"
															}
														},
														"id": 1280,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4585:16:9",
														"memberName": "compoundedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "4580:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4566:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4546:55:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1283,
																		"name": "principal",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1276,
																		"src": "4620:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"baseExpression": {
																			"id": 1284,
																			"name": "apyRates",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 932,
																			"src": "4632:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$3_storage",
																				"typeString": "uint256[3] storage ref"
																			}
																		},
																		"id": 1286,
																		"indexExpression": {
																			"id": 1285,
																			"name": "periodIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1266,
																			"src": "4641:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4632:21:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4620:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1288,
																	"name": "timeHeld",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1259,
																	"src": "4656:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4620:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1290,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4619:46:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130303030",
																	"id": 1291,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4669:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1292,
																	"name": "SECONDS_PER_YEAR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 910,
																	"src": "4677:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4669:24:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1294,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4668:26:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4619:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1202,
												"id": 1296,
												"nodeType": "Return",
												"src": "4612:82:9"
											}
										]
									},
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "3839:63:9",
										"text": " @notice Calculate accrued reward for a stake"
									},
									"functionSelector": "1852e8d9",
									"id": 1298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateReward",
									"nameLocation": "3916:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3940:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3932:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "3957:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3949:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3949:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:37:9"
									},
									"returnParameters": {
										"id": 1202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1298,
												"src": "3990:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1200,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3990:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3989:9:9"
									},
									"scope": 1881,
									"src": "3907:794:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1332,
										"nodeType": "Block",
										"src": "4843:205:9",
										"statements": [
											{
												"body": {
													"id": 1326,
													"nodeType": "Block",
													"src": "4902:97:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1317,
																	"name": "duration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1301,
																	"src": "4920:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"baseExpression": {
																		"id": 1318,
																		"name": "lockPeriods",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 924,
																		"src": "4932:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$3_storage",
																			"typeString": "uint256[3] storage ref"
																		}
																	},
																	"id": 1320,
																	"indexExpression": {
																		"id": 1319,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1307,
																		"src": "4944:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4932:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4920:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1325,
															"nodeType": "IfStatement",
															"src": "4916:73:9",
															"trueBody": {
																"id": 1324,
																"nodeType": "Block",
																"src": "4948:41:9",
																"statements": [
																	{
																		"expression": {
																			"id": 1322,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1307,
																			"src": "4973:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1305,
																		"id": 1323,
																		"nodeType": "Return",
																		"src": "4966:8:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1313,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1310,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1307,
														"src": "4873:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1311,
															"name": "lockPeriods",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 924,
															"src": "4877:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1312,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4889:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4877:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4873:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1327,
												"initializationExpression": {
													"assignments": [
														1307
													],
													"declarations": [
														{
															"constant": false,
															"id": 1307,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4866:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 1327,
															"src": "4858:9:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1306,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "4858:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1309,
													"initialValue": {
														"hexValue": "30",
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4870:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4858:13:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 1315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4897:3:9",
														"subExpression": {
															"id": 1314,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1307,
															"src": "4897:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1316,
													"nodeType": "ExpressionStatement",
													"src": "4897:3:9"
												},
												"nodeType": "ForStatement",
												"src": "4853:146:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "556e737570706f72746564206c6f636b20706572696f64",
															"id": 1329,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5015:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
																"typeString": "literal_string \"Unsupported lock period\""
															},
															"value": "Unsupported lock period"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_49611a432a1791b4e711ce3c7672dfa1a880405bd84232568a8302c5965a44b9",
																"typeString": "literal_string \"Unsupported lock period\""
															}
														],
														"id": 1328,
														"name": "revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967277,
															4294967277
														],
														"referencedDeclaration": 4294967277,
														"src": "5008:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory) pure"
														}
													},
													"id": 1330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5008:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1331,
												"nodeType": "ExpressionStatement",
												"src": "5008:33:9"
											}
										]
									},
									"documentation": {
										"id": 1299,
										"nodeType": "StructuredDocumentation",
										"src": "4707:57:9",
										"text": " @notice Get period index from duration"
									},
									"id": 1333,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPeriodIndex",
									"nameLocation": "4778:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1301,
												"mutability": "mutable",
												"name": "duration",
												"nameLocation": "4801:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "4793:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1300,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4793:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4792:18:9"
									},
									"returnParameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1333,
												"src": "4834:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4834:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4833:9:9"
									},
									"scope": 1881,
									"src": "4769:279:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1459,
										"nodeType": "Block",
										"src": "5204:1003:9",
										"statements": [
											{
												"assignments": [
													1346
												],
												"declarations": [
													{
														"constant": false,
														"id": 1346,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "5222:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1459,
														"src": "5214:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1345,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5214:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1349,
												"initialValue": {
													"expression": {
														"id": 1347,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5232:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5236:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5232:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5214:28:9"
											},
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "5270:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1459,
														"src": "5252:22:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1351,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1350,
																"name": "StakeInfo",
																"nameLocations": [
																	"5252:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 945,
																"src": "5252:9:9"
															},
															"referencedDeclaration": 945,
															"src": "5252:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1358,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1353,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "5277:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1355,
														"indexExpression": {
															"id": 1354,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "5284:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5277:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1357,
													"indexExpression": {
														"id": 1356,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1336,
														"src": "5293:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5277:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$945_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5252:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5322:13:9",
															"subExpression": {
																"expression": {
																	"id": 1360,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "5323:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1361,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5328:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "5323:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5337:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5314:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5314:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1365,
												"nodeType": "ExpressionStatement",
												"src": "5314:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1367,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5373:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1368,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5379:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5373:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1369,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "5392:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5397:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "5392:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5373:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374696c6c206c6f636b6564",
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5409:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															},
															"value": "Still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															}
														],
														"id": 1366,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5365:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5365:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1374,
												"nodeType": "ExpressionStatement",
												"src": "5365:59:9"
											},
											{
												"assignments": [
													1376
												],
												"declarations": [
													{
														"constant": false,
														"id": 1376,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5443:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1459,
														"src": "5435:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5435:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1381,
												"initialValue": {
													"arguments": [
														{
															"id": 1378,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "5468:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1379,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "5477:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1377,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "5452:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5452:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5435:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "rewardPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "5506:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1384,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1376,
																"src": "5527:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5506:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5535:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															},
															"value": "Insufficient reward pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															}
														],
														"id": 1382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5498:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5498:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1388,
												"nodeType": "ExpressionStatement",
												"src": "5498:64:9"
											},
											{
												"expression": {
													"id": 1393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1389,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5573:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1391,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5578:7:9",
														"memberName": "claimed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 940,
														"src": "5573:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5588:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5573:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1394,
												"nodeType": "ExpressionStatement",
												"src": "5573:19:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1395,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "5607:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1396,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5612:11:9",
														"memberName": "autoStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "5607:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1397,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1352,
																"src": "5627:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1398,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5632:16:9",
															"memberName": "compoundedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "5627:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5651:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5627:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5607:45:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1451,
													"nodeType": "Block",
													"src": "6040:109:9",
													"statements": [
														{
															"expression": {
																"id": 1445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1441,
																		"name": "pendingRewardWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "6054:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1443,
																	"indexExpression": {
																		"id": 1442,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "6079:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "6054:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1444,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "6091:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6054:43:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1446,
															"nodeType": "ExpressionStatement",
															"src": "6054:43:9"
														},
														{
															"expression": {
																"id": 1449,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1447,
																	"name": "rewardPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "6111:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1448,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "6132:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6111:27:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1450,
															"nodeType": "ExpressionStatement",
															"src": "6111:27:9"
														}
													]
												},
												"id": 1452,
												"nodeType": "IfStatement",
												"src": "5603:546:9",
												"trueBody": {
													"id": 1440,
													"nodeType": "Block",
													"src": "5654:380:9",
													"statements": [
														{
															"assignments": [
																1403
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1403,
																	"mutability": "mutable",
																	"name": "totalToTransfer",
																	"nameLocation": "5676:15:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1440,
																	"src": "5668:23:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1402,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5668:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1408,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1404,
																		"name": "info",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1352,
																		"src": "5694:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																			"typeString": "struct AutoStaking.StakeInfo storage pointer"
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5699:16:9",
																	"memberName": "compoundedAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 944,
																	"src": "5694:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1406,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1376,
																	"src": "5718:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5694:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5668:56:9"
														},
														{
															"assignments": [
																1410
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1410,
																	"mutability": "mutable",
																	"name": "fee",
																	"nameLocation": "5746:3:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1440,
																	"src": "5738:11:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1409,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5738:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1417,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1416,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1411,
																				"name": "totalToTransfer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1403,
																				"src": "5753:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1412,
																				"name": "AUTO_COMPOUND_FEE",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 913,
																				"src": "5771:17:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5753:35:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1414,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "5752:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "3130303030",
																	"id": 1415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5792:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10000_by_1",
																		"typeString": "int_const 10000"
																	},
																	"value": "10000"
																},
																"src": "5752:45:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5738:59:9"
														},
														{
															"assignments": [
																1419
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1419,
																	"mutability": "mutable",
																	"name": "userAmount",
																	"nameLocation": "5819:10:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 1440,
																	"src": "5811:18:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1418,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "5811:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1423,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1420,
																	"name": "totalToTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "5832:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1421,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "5850:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5832:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5811:42:9"
														},
														{
															"expression": {
																"id": 1428,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1424,
																		"name": "pendingRewardWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "5868:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1426,
																	"indexExpression": {
																		"id": 1425,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1346,
																		"src": "5893:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5868:33:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1427,
																	"name": "userAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1419,
																	"src": "5905:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5868:47:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1429,
															"nodeType": "ExpressionStatement",
															"src": "5868:47:9"
														},
														{
															"expression": {
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1430,
																		"name": "pendingRewardWithdrawals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 955,
																		"src": "5929:24:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1432,
																	"indexExpression": {
																		"id": 1431,
																		"name": "feeReceiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 961,
																		"src": "5954:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "5929:37:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1433,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "5970:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5929:44:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1435,
															"nodeType": "ExpressionStatement",
															"src": "5929:44:9"
														},
														{
															"expression": {
																"id": 1438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1436,
																	"name": "rewardPoolBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 959,
																	"src": "5987:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"id": 1437,
																	"name": "totalToTransfer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "6008:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5987:36:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1439,
															"nodeType": "ExpressionStatement",
															"src": "5987:36:9"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1454,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1346,
															"src": "6172:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1455,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1376,
															"src": "6181:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1456,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "6189:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1453,
														"name": "Claimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 979,
														"src": "6164:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6164:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "EmitStatement",
												"src": "6159:41:9"
											}
										]
									},
									"documentation": {
										"id": 1334,
										"nodeType": "StructuredDocumentation",
										"src": "5054:60:9",
										"text": " @notice Claim reward for a specific stake"
									},
									"functionSelector": "ae169a50",
									"id": 1460,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1339,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1338,
												"name": "nonReentrant",
												"nameLocations": [
													"5169:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "5169:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5169:12:9"
										},
										{
											"id": 1341,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1340,
												"name": "onlyEOA",
												"nameLocations": [
													"5182:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1038,
												"src": "5182:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5182:7:9"
										},
										{
											"id": 1343,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1342,
												"name": "whenNotPaused",
												"nameLocations": [
													"5190:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1048,
												"src": "5190:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5190:13:9"
										}
									],
									"name": "claimReward",
									"nameLocation": "5128:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "5148:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "5140:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5140:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5139:20:9"
									},
									"returnParameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5204:0:9"
									},
									"scope": 1881,
									"src": "5119:1088:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "6332:282:9",
										"statements": [
											{
												"assignments": [
													1469
												],
												"declarations": [
													{
														"constant": false,
														"id": 1469,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "6350:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1503,
														"src": "6342:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1468,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6342:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1474,
												"initialValue": {
													"baseExpression": {
														"id": 1470,
														"name": "pendingRewardWithdrawals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 955,
														"src": "6359:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1473,
													"indexExpression": {
														"expression": {
															"id": 1471,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6384:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6388:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "6384:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6359:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6342:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1478,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1476,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1469,
																"src": "6413:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1477,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6422:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6413:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320746f207769746864726177",
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6425:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																"typeString": "literal_string \"No rewards to withdraw\""
															},
															"value": "No rewards to withdraw"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68ddf80eeea1a0365fdf0e8017c8fdf1d04cd254baa3705621df7c55e5e6f29c",
																"typeString": "literal_string \"No rewards to withdraw\""
															}
														],
														"id": 1475,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6405:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6405:45:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1481,
												"nodeType": "ExpressionStatement",
												"src": "6405:45:9"
											},
											{
												"expression": {
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1482,
															"name": "pendingRewardWithdrawals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 955,
															"src": "6461:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1485,
														"indexExpression": {
															"expression": {
																"id": 1483,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6486:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1484,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6490:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6486:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "6461:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6500:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6461:40:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1488,
												"nodeType": "ExpressionStatement",
												"src": "6461:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1492,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6536:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6540:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6536:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6548:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1489,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "6511:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6523:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 425,
														"src": "6511:24:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6511:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "6511:44:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1498,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6588:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6592:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6588:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1500,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1469,
															"src": "6600:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1497,
														"name": "WithdrawnRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 985,
														"src": "6571:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6571:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "EmitStatement",
												"src": "6566:41:9"
											}
										]
									},
									"documentation": {
										"id": 1461,
										"nodeType": "StructuredDocumentation",
										"src": "6213:51:9",
										"text": " @notice Withdraw pending rewards"
									},
									"functionSelector": "c7b8981c",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1464,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1463,
												"name": "nonReentrant",
												"nameLocations": [
													"6305:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "6305:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6305:12:9"
										},
										{
											"id": 1466,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1465,
												"name": "whenNotPaused",
												"nameLocations": [
													"6318:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1048,
												"src": "6318:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6318:13:9"
										}
									],
									"name": "withdrawRewards",
									"nameLocation": "6278:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1462,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6293:2:9"
									},
									"returnParameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6332:0:9"
									},
									"scope": 1881,
									"src": "6269:345:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1558,
										"nodeType": "Block",
										"src": "6751:353:9",
										"statements": [
											{
												"assignments": [
													1513
												],
												"declarations": [
													{
														"constant": false,
														"id": 1513,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "6769:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6761:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1512,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6761:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1516,
												"initialValue": {
													"expression": {
														"id": 1514,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "6779:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "6783:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "6779:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6761:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1518,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1507,
																"src": "6807:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1519,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "6820:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1521,
																	"indexExpression": {
																		"id": 1520,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1513,
																		"src": "6827:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6820:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6836:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "6820:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6807:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6844:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1517,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6799:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6799:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1526,
												"nodeType": "ExpressionStatement",
												"src": "6799:67:9"
											},
											{
												"assignments": [
													1529
												],
												"declarations": [
													{
														"constant": false,
														"id": 1529,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "6895:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1558,
														"src": "6877:22:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1528,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1527,
																"name": "StakeInfo",
																"nameLocations": [
																	"6877:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 945,
																"src": "6877:9:9"
															},
															"referencedDeclaration": 945,
															"src": "6877:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1535,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1530,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "6902:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1532,
														"indexExpression": {
															"id": 1531,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "6909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "6902:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1534,
													"indexExpression": {
														"id": 1533,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "6918:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6902:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$945_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6877:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "6947:13:9",
															"subExpression": {
																"expression": {
																	"id": 1537,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "6948:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6953:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "6948:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6962:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1536,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6939:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6939:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "6939:41:9"
											},
											{
												"expression": {
													"id": 1549,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1543,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1529,
															"src": "6991:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1545,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6996:11:9",
														"memberName": "autoStaking",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 942,
														"src": "6991:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1548,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "7010:17:9",
														"subExpression": {
															"expression": {
																"id": 1546,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "7011:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1547,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7016:11:9",
															"memberName": "autoStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 942,
															"src": "7011:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6991:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1550,
												"nodeType": "ExpressionStatement",
												"src": "6991:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1552,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1513,
															"src": "7059:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1553,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1507,
															"src": "7068:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1554,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1529,
																"src": "7080:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7085:11:9",
															"memberName": "autoStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 942,
															"src": "7080:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1551,
														"name": "AutoStakeToggled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 993,
														"src": "7042:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7042:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1557,
												"nodeType": "EmitStatement",
												"src": "7037:60:9"
											}
										]
									},
									"documentation": {
										"id": 1505,
										"nodeType": "StructuredDocumentation",
										"src": "6620:58:9",
										"text": " @notice Toggle auto-staking for a stake"
									},
									"functionSelector": "95a29060",
									"id": 1559,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1510,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1509,
												"name": "whenNotPaused",
												"nameLocations": [
													"6737:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1048,
												"src": "6737:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6737:13:9"
										}
									],
									"name": "toggleAutoStake",
									"nameLocation": "6692:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "6716:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1559,
												"src": "6708:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6708:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6707:20:9"
									},
									"returnParameters": {
										"id": 1511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6751:0:9"
									},
									"scope": 1881,
									"src": "6683:421:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "7260:793:9",
										"statements": [
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "account",
														"nameLocation": "7278:7:9",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7270:15:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1571,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "7270:7:9",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"expression": {
														"id": 1573,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "7288:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7292:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "7288:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7270:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1577,
																"name": "stakeIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1562,
																"src": "7316:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 1578,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 951,
																		"src": "7329:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
																		}
																	},
																	"id": 1580,
																	"indexExpression": {
																		"id": 1579,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "7336:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7329:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
																		"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
																	}
																},
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7345:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "7329:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7316:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c6964207374616b6520696e646578",
															"id": 1583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7353:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															},
															"value": "Invalid stake index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1052a6d22b777769a6cc4c9627aa582bf852e3e95d151c74aa5d0528dd370070",
																"typeString": "literal_string \"Invalid stake index\""
															}
														],
														"id": 1576,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7308:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7308:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1585,
												"nodeType": "ExpressionStatement",
												"src": "7308:67:9"
											},
											{
												"assignments": [
													1588
												],
												"declarations": [
													{
														"constant": false,
														"id": 1588,
														"mutability": "mutable",
														"name": "info",
														"nameLocation": "7404:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7386:22:9",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														},
														"typeName": {
															"id": 1587,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1586,
																"name": "StakeInfo",
																"nameLocations": [
																	"7386:9:9"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 945,
																"src": "7386:9:9"
															},
															"referencedDeclaration": 945,
															"src": "7386:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1594,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1589,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 951,
															"src": "7411:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
																"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
															}
														},
														"id": 1591,
														"indexExpression": {
															"id": 1590,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "7418:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "7411:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
															"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
														}
													},
													"id": 1593,
													"indexExpression": {
														"id": 1592,
														"name": "stakeIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1562,
														"src": "7427:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "7411:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StakeInfo_$945_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7386:52:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "7456:13:9",
															"subExpression": {
																"expression": {
																	"id": 1596,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "7457:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1597,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7462:7:9",
																"memberName": "claimed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 940,
																"src": "7457:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c726561647920636c61696d6564",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7471:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															},
															"value": "Already claimed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d5f1075ee9cf123a11fed45e62459547c318d7703b4e3920694b01d6b8c6dcf",
																"typeString": "literal_string \"Already claimed\""
															}
														],
														"id": 1595,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7448:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7448:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "7448:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1603,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "7507:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7512:11:9",
															"memberName": "autoStaking",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 942,
															"src": "7507:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4175746f2d7374616b696e672064697361626c6564",
															"id": 1605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7525:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
																"typeString": "literal_string \"Auto-staking disabled\""
															},
															"value": "Auto-staking disabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_07cb34541f93c1b990a12638f6a38ebf22a712e2a7a4e9102da1ed0304a58ddf",
																"typeString": "literal_string \"Auto-staking disabled\""
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7499:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7499:50:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "7499:50:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1613,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1609,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "7567:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7573:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "7567:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 1611,
																	"name": "info",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1588,
																	"src": "7586:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																		"typeString": "struct AutoStaking.StakeInfo storage pointer"
																	}
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7591:10:9",
																"memberName": "unlockTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 938,
																"src": "7586:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7567:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374696c6c206c6f636b6564",
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7603:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															},
															"value": "Still locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9721afe91fe65d0a960f3c0ac2db6d3e7283f6511ca2c8b23ef7fa9beeea0583",
																"typeString": "literal_string \"Still locked\""
															}
														],
														"id": 1608,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7559:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7559:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1616,
												"nodeType": "ExpressionStatement",
												"src": "7559:59:9"
											},
											{
												"assignments": [
													1618
												],
												"declarations": [
													{
														"constant": false,
														"id": 1618,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "7637:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1669,
														"src": "7629:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1617,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7629:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"arguments": [
														{
															"id": 1620,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "7662:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1621,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "7671:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1619,
														"name": "calculateReward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1298,
														"src": "7646:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (address,uint256) view returns (uint256)"
														}
													},
													"id": 1622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7646:36:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7629:53:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1627,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1625,
																"name": "rewardPoolBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 959,
																"src": "7700:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1626,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1618,
																"src": "7721:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7700:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420706f6f6c",
															"id": 1628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7729:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															},
															"value": "Insufficient reward pool"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_277c4e573cccb91898f1250ac4cfd709ed85aa97be7b2a1970715fadf29be0d8",
																"typeString": "literal_string \"Insufficient reward pool\""
															}
														],
														"id": 1624,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7692:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7692:64:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1630,
												"nodeType": "ExpressionStatement",
												"src": "7692:64:9"
											},
											{
												"expression": {
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1631,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "7767:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7772:9:9",
														"memberName": "stakeTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 936,
														"src": "7767:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1634,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7784:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1635,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7790:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7784:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7767:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "7767:32:9"
											},
											{
												"expression": {
													"id": 1650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1638,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "7809:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1640,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7814:10:9",
														"memberName": "unlockTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 938,
														"src": "7809:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1649,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1641,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7827:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7833:9:9",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "7827:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1643,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "7846:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																				"typeString": "struct AutoStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 1644,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7851:10:9",
																		"memberName": "unlockTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 938,
																		"src": "7846:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"expression": {
																			"id": 1645,
																			"name": "info",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1588,
																			"src": "7864:4:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																				"typeString": "struct AutoStaking.StakeInfo storage pointer"
																			}
																		},
																		"id": 1646,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7869:9:9",
																		"memberName": "stakeTime",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 936,
																		"src": "7864:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7846:32:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1648,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "7845:34:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7827:52:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7809:70:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1651,
												"nodeType": "ExpressionStatement",
												"src": "7809:70:9"
											},
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1652,
															"name": "info",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1588,
															"src": "7904:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																"typeString": "struct AutoStaking.StakeInfo storage pointer"
															}
														},
														"id": 1654,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7909:16:9",
														"memberName": "compoundedAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 944,
														"src": "7904:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1655,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "7929:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7904:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "7904:31:9"
											},
											{
												"expression": {
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1658,
														"name": "rewardPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "7945:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1659,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1618,
														"src": "7966:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7945:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1661,
												"nodeType": "ExpressionStatement",
												"src": "7945:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1663,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "8003:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1664,
															"name": "stakeIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "8012:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 1665,
																"name": "info",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1588,
																"src": "8024:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
																	"typeString": "struct AutoStaking.StakeInfo storage pointer"
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8029:16:9",
															"memberName": "compoundedAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 944,
															"src": "8024:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1662,
														"name": "AutoCompounded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1021,
														"src": "7988:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7988:58:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "EmitStatement",
												"src": "7983:63:9"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "7110:57:9",
										"text": " @notice Compound reward into new stake"
									},
									"functionSelector": "4060e257",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1565,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1564,
												"name": "nonReentrant",
												"nameLocations": [
													"7225:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 267,
												"src": "7225:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7225:12:9"
										},
										{
											"id": 1567,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1566,
												"name": "onlyEOA",
												"nameLocations": [
													"7238:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1038,
												"src": "7238:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7238:7:9"
										},
										{
											"id": 1569,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1568,
												"name": "whenNotPaused",
												"nameLocations": [
													"7246:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1048,
												"src": "7246:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "7246:13:9"
										}
									],
									"name": "compoundReward",
									"nameLocation": "7181:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "stakeIndex",
												"nameLocation": "7204:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1670,
												"src": "7196:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7196:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7195:20:9"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7260:0:9"
									},
									"scope": 1881,
									"src": "7172:881:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1707,
										"nodeType": "Block",
										"src": "8178:217:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1679,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1673,
																"src": "8196:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8205:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8196:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f20616d6f756e74",
															"id": 1682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8208:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															},
															"value": "Zero amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_499f3f4b0ad3588aa1eb6e198be77bff643a4218ffbf2bef1370e58aadea5df4",
																"typeString": "literal_string \"Zero amount\""
															}
														],
														"id": 1678,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8188:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1683,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1684,
												"nodeType": "ExpressionStatement",
												"src": "8188:34:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1688,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8261:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8265:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8261:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1692,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8281:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AutoStaking_$1881",
																		"typeString": "contract AutoStaking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AutoStaking_$1881",
																		"typeString": "contract AutoStaking"
																	}
																],
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8273:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1690,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8273:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1693,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8273:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1694,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "8288:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1685,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 907,
															"src": "8232:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$380",
																"typeString": "contract IERC20"
															}
														},
														"id": 1687,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8244:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "8232:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$380_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$380_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1695,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8232:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1696,
												"nodeType": "ExpressionStatement",
												"src": "8232:63:9"
											},
											{
												"expression": {
													"id": 1699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1697,
														"name": "rewardPoolBalance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 959,
														"src": "8305:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1698,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1673,
														"src": "8326:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8305:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1700,
												"nodeType": "ExpressionStatement",
												"src": "8305:27:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1702,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8369:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8373:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8369:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1704,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1673,
															"src": "8381:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1701,
														"name": "RewardPoolFundsAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1013,
														"src": "8348:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8348:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1706,
												"nodeType": "EmitStatement",
												"src": "8343:45:9"
											}
										]
									},
									"documentation": {
										"id": 1671,
										"nodeType": "StructuredDocumentation",
										"src": "8059:51:9",
										"text": " @notice Add funds to reward pool"
									},
									"functionSelector": "bbd36b61",
									"id": 1708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1676,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1675,
												"name": "onlyOwner",
												"nameLocations": [
													"8168:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8168:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8168:9:9"
										}
									],
									"name": "addRewardPoolFunds",
									"nameLocation": "8124:18:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1673,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8151:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1708,
												"src": "8143:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8143:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8142:16:9"
									},
									"returnParameters": {
										"id": 1677,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8178:0:9"
									},
									"scope": 1881,
									"src": "8115:280:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1744,
										"nodeType": "Block",
										"src": "8533:233:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1722,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1719,
																"name": "periodIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1711,
																"src": "8551:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1720,
																	"name": "lockPeriods",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "8565:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$3_storage",
																		"typeString": "uint256[3] storage ref"
																	}
																},
																"id": 1721,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8577:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8565:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8551:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706572696f6420696e646578",
															"id": 1723,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8585:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															},
															"value": "Invalid period index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															}
														],
														"id": 1718,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8543:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8543:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1725,
												"nodeType": "ExpressionStatement",
												"src": "8543:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1727,
																"name": "newAPY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1713,
																"src": "8626:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1728,
																"name": "MAX_APY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 916,
																"src": "8636:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8626:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "41505920746f6f2068696768",
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8645:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
																"typeString": "literal_string \"APY too high\""
															},
															"value": "APY too high"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_64cab59e3a2e70d0e3fe81d92b4239db35d21d4b4d43534f15296b43965998d5",
																"typeString": "literal_string \"APY too high\""
															}
														],
														"id": 1726,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8618:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1731,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8618:42:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1732,
												"nodeType": "ExpressionStatement",
												"src": "8618:42:9"
											},
											{
												"expression": {
													"id": 1737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1733,
															"name": "apyRates",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 932,
															"src": "8683:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$3_storage",
																"typeString": "uint256[3] storage ref"
															}
														},
														"id": 1735,
														"indexExpression": {
															"id": 1734,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "8692:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8683:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1736,
														"name": "newAPY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "8707:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8683:30:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1738,
												"nodeType": "ExpressionStatement",
												"src": "8683:30:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1740,
															"name": "periodIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1711,
															"src": "8739:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1741,
															"name": "newAPY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1713,
															"src": "8752:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1739,
														"name": "APYUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1007,
														"src": "8728:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8728:31:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1743,
												"nodeType": "EmitStatement",
												"src": "8723:36:9"
											}
										]
									},
									"documentation": {
										"id": 1709,
										"nodeType": "StructuredDocumentation",
										"src": "8401:55:9",
										"text": " @notice Update APY rate for a period"
									},
									"functionSelector": "5acd2e4c",
									"id": 1745,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1716,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1715,
												"name": "onlyOwner",
												"nameLocations": [
													"8523:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8523:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8523:9:9"
										}
									],
									"name": "setAPY",
									"nameLocation": "8470:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"mutability": "mutable",
												"name": "periodIndex",
												"nameLocation": "8485:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "8477:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8477:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"mutability": "mutable",
												"name": "newAPY",
												"nameLocation": "8506:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "8498:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8498:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8476:37:9"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8533:0:9"
									},
									"scope": 1881,
									"src": "8461:305:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "8901:177:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1759,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1754,
																"name": "newRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "8919:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1757,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8945:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1756,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8937:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1755,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8937:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1758,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8937:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8919:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
															"id": 1760,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8949:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																"typeString": "literal_string \"Zero address not allowed\""
															},
															"value": "Zero address not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																"typeString": "literal_string \"Zero address not allowed\""
															}
														],
														"id": 1753,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8911:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1761,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8911:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1762,
												"nodeType": "ExpressionStatement",
												"src": "8911:65:9"
											},
											{
												"expression": {
													"id": 1767,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1763,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 907,
														"src": "8986:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1765,
																"name": "newRewardToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1748,
																"src": "9007:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1764,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "9000:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$380_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1766,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9000:22:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$380",
															"typeString": "contract IERC20"
														}
													},
													"src": "8986:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$380",
														"typeString": "contract IERC20"
													}
												},
												"id": 1768,
												"nodeType": "ExpressionStatement",
												"src": "8986:36:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1770,
															"name": "newRewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "9056:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1769,
														"name": "RewardTokenUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 997,
														"src": "9037:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9037:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1772,
												"nodeType": "EmitStatement",
												"src": "9032:39:9"
											}
										]
									},
									"documentation": {
										"id": 1746,
										"nodeType": "StructuredDocumentation",
										"src": "8772:54:9",
										"text": " @notice Update reward token address"
									},
									"functionSelector": "f8cf31cb",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1751,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1750,
												"name": "onlyOwner",
												"nameLocations": [
													"8891:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "8891:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8891:9:9"
										}
									],
									"name": "updateRewardToken",
									"nameLocation": "8840:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "newRewardToken",
												"nameLocation": "8866:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "8858:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8858:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8857:24:9"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8901:0:9"
									},
									"scope": 1881,
									"src": "8831:247:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1800,
										"nodeType": "Block",
										"src": "9213:169:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1783,
																"name": "newFeeReceiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "9231:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9257:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1785,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9249:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1784,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9249:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1787,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9249:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "9231:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5a65726f2061646472657373206e6f7420616c6c6f776564",
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9261:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																"typeString": "literal_string \"Zero address not allowed\""
															},
															"value": "Zero address not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d15a1b642cacf87a72fab94030672bbfc7860df6ebdb084f3df815612067f9d8",
																"typeString": "literal_string \"Zero address not allowed\""
															}
														],
														"id": 1782,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9223:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9223:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "ExpressionStatement",
												"src": "9223:65:9"
											},
											{
												"expression": {
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1792,
														"name": "feeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 961,
														"src": "9298:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1793,
														"name": "newFeeReceiver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1777,
														"src": "9312:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9298:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1795,
												"nodeType": "ExpressionStatement",
												"src": "9298:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1797,
															"name": "newFeeReceiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "9360:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1796,
														"name": "FeeReceiverUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1001,
														"src": "9341:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9341:34:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1799,
												"nodeType": "EmitStatement",
												"src": "9336:39:9"
											}
										]
									},
									"documentation": {
										"id": 1775,
										"nodeType": "StructuredDocumentation",
										"src": "9084:54:9",
										"text": " @notice Update fee receiver address"
									},
									"functionSelector": "c69bebe4",
									"id": 1801,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1780,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1779,
												"name": "onlyOwner",
												"nameLocations": [
													"9203:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9203:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9203:9:9"
										}
									],
									"name": "updateFeeReceiver",
									"nameLocation": "9152:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "newFeeReceiver",
												"nameLocation": "9178:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1801,
												"src": "9170:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1776,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9170:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9169:24:9"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9213:0:9"
									},
									"scope": 1881,
									"src": "9143:239:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "9483:70:9",
										"statements": [
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1807,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1050,
														"src": "9493:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "9502:7:9",
														"subExpression": {
															"id": 1808,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "9503:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "9493:16:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "9493:16:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1813,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1050,
															"src": "9539:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1812,
														"name": "ContractPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1025,
														"src": "9524:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
															"typeString": "function (bool)"
														}
													},
													"id": 1814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9524:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1815,
												"nodeType": "EmitStatement",
												"src": "9519:27:9"
											}
										]
									},
									"documentation": {
										"id": 1802,
										"nodeType": "StructuredDocumentation",
										"src": "9388:48:9",
										"text": " @notice Toggle contract pause"
									},
									"functionSelector": "c4ae3168",
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1805,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1804,
												"name": "onlyOwner",
												"nameLocations": [
													"9473:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9473:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "9473:9:9"
										}
									],
									"name": "togglePause",
									"nameLocation": "9450:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9461:2:9"
									},
									"returnParameters": {
										"id": 1806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9483:0:9"
									},
									"scope": 1881,
									"src": "9441:112:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1831,
										"nodeType": "Block",
										"src": "9705:36:9",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 1827,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "9722:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_$",
															"typeString": "mapping(address => struct AutoStaking.StakeInfo storage ref[] storage ref)"
														}
													},
													"id": 1829,
													"indexExpression": {
														"id": 1828,
														"name": "user",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1820,
														"src": "9729:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9722:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage",
														"typeString": "struct AutoStaking.StakeInfo storage ref[] storage ref"
													}
												},
												"functionReturnParameters": 1826,
												"id": 1830,
												"nodeType": "Return",
												"src": "9715:19:9"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "9559:59:9",
										"text": " @notice Get active stakes for an account"
									},
									"functionSelector": "1747e0b0",
									"id": 1832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getActiveStakes",
									"nameLocation": "9632:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "9656:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "9648:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9648:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9647:14:9"
									},
									"returnParameters": {
										"id": 1826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1832,
												"src": "9685:18:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct AutoStaking.StakeInfo[]"
												},
												"typeName": {
													"baseType": {
														"id": 1823,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 1822,
															"name": "StakeInfo",
															"nameLocations": [
																"9685:9:9"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 945,
															"src": "9685:9:9"
														},
														"referencedDeclaration": 945,
														"src": "9685:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeInfo_$945_storage_ptr",
															"typeString": "struct AutoStaking.StakeInfo"
														}
													},
													"id": 1824,
													"nodeType": "ArrayTypeName",
													"src": "9685:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_StakeInfo_$945_storage_$dyn_storage_ptr",
														"typeString": "struct AutoStaking.StakeInfo[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9684:20:9"
									},
									"scope": 1881,
									"src": "9623:118:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1840,
										"nodeType": "Block",
										"src": "9874:41:9",
										"statements": [
											{
												"expression": {
													"id": 1838,
													"name": "rewardPoolBalance",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 959,
													"src": "9891:17:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1837,
												"id": 1839,
												"nodeType": "Return",
												"src": "9884:24:9"
											}
										]
									},
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "9747:58:9",
										"text": " @notice Get current reward pool balance"
									},
									"functionSelector": "d854fb75",
									"id": 1841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewardPoolBalance",
									"nameLocation": "9819:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9839:2:9"
									},
									"returnParameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1841,
												"src": "9865:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9865:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9864:9:9"
									},
									"scope": 1881,
									"src": "9810:105:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1849,
										"nodeType": "Block",
										"src": "10035:35:9",
										"statements": [
											{
												"expression": {
													"id": 1847,
													"name": "feeReceiver",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 961,
													"src": "10052:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1846,
												"id": 1848,
												"nodeType": "Return",
												"src": "10045:18:9"
											}
										]
									},
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "9921:51:9",
										"text": " @notice Get fee receiver address"
									},
									"functionSelector": "e8a35392",
									"id": 1850,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFeeReceiver",
									"nameLocation": "9986:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10000:2:9"
									},
									"returnParameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1850,
												"src": "10026:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1844,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10026:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10025:9:9"
									},
									"scope": 1881,
									"src": "9977:93:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1870,
										"nodeType": "Block",
										"src": "10204:111:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1859,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "10222:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1860,
																	"name": "lockPeriods",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 924,
																	"src": "10230:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$3_storage",
																		"typeString": "uint256[3] storage ref"
																	}
																},
																"id": 1861,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "10242:6:9",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "10230:18:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10222:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420706572696f6420696e646578",
															"id": 1863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10250:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															},
															"value": "Invalid period index"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_75c79a087317217a2ee5c3eff41e10e28eb59064726a81c432ef60b28f54841c",
																"typeString": "literal_string \"Invalid period index\""
															}
														],
														"id": 1858,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10214:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10214:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1865,
												"nodeType": "ExpressionStatement",
												"src": "10214:59:9"
											},
											{
												"expression": {
													"baseExpression": {
														"id": 1866,
														"name": "lockPeriods",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 924,
														"src": "10290:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$3_storage",
															"typeString": "uint256[3] storage ref"
														}
													},
													"id": 1868,
													"indexExpression": {
														"id": 1867,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1853,
														"src": "10302:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "10290:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1857,
												"id": 1869,
												"nodeType": "Return",
												"src": "10283:25:9"
											}
										]
									},
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "10076:53:9",
										"text": " @notice Get lock period in seconds"
									},
									"functionSelector": "f55ad3ec",
									"id": 1871,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getLockPeriod",
									"nameLocation": "10143:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1853,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "10165:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "10157:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10157:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10156:15:9"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1871,
												"src": "10195:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10195:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10194:9:9"
									},
									"scope": 1881,
									"src": "10134:181:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "10429:31:9",
										"statements": [
											{
												"expression": {
													"hexValue": "3230305f303030",
													"id": 1877,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10446:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_200000_by_1",
														"typeString": "int_const 200000"
													},
													"value": "200_000"
												},
												"functionReturnParameters": 1876,
												"id": 1878,
												"nodeType": "Return",
												"src": "10439:14:9"
											}
										]
									},
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "10321:44:9",
										"text": " @notice Estimate mint gas"
									},
									"functionSelector": "794a62d3",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "estimateMintGas",
									"nameLocation": "10379:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10394:2:9"
									},
									"returnParameters": {
										"id": 1876,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1875,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "10420:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10420:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10419:9:9"
									},
									"scope": 1881,
									"src": "10370:90:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1882,
							"src": "418:10044:9",
							"usedErrors": [
								13,
								18,
								392
							],
							"usedEvents": [
								24,
								971,
								979,
								985,
								993,
								997,
								1001,
								1007,
								1013,
								1021,
								1025
							]
						}
					],
					"src": "32:10430:9"
				},
				"id": 9
			}
		}
	}
}